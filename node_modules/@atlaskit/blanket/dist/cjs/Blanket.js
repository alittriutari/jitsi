"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.BlanketWithoutAnalytics = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _analyticsNext = require("@atlaskit/analytics-next");

var _styled = _interopRequireDefault(require("./styled"));

var _version = require("./version.json");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var Blanket = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2.default)(Blanket, _React$Component);

  var _super = _createSuper(Blanket);

  function Blanket() {
    (0, _classCallCheck2.default)(this, Blanket);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(Blanket, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          canClickThrough = _this$props.canClickThrough,
          isTinted = _this$props.isTinted,
          onBlanketClicked = _this$props.onBlanketClicked;
      var onClick = canClickThrough ? undefined : onBlanketClicked;
      var containerProps = {
        canClickThrough: canClickThrough,
        isTinted: isTinted,
        onClick: onClick
      };
      return /*#__PURE__*/_react.default.createElement(_styled.default, containerProps);
    }
  }]);
  return Blanket;
}(_react.default.Component);

exports.BlanketWithoutAnalytics = Blanket;
(0, _defineProperty2.default)(Blanket, "defaultProps", {
  canClickThrough: false,
  isTinted: false,
  onBlanketClicked: function onBlanketClicked() {}
});
var createAndFireEventOnAtlaskit = (0, _analyticsNext.createAndFireEvent)('atlaskit');

var _default = (0, _analyticsNext.withAnalyticsContext)({
  componentName: 'blanket',
  packageName: _version.name,
  packageVersion: _version.version
})((0, _analyticsNext.withAnalyticsEvents)({
  onBlanketClicked: createAndFireEventOnAtlaskit({
    action: 'clicked',
    actionSubject: 'blanket',
    attributes: {
      componentName: 'blanket',
      packageName: _version.name,
      packageVersion: _version.version
    }
  })
})(Blanket));

exports.default = _default;