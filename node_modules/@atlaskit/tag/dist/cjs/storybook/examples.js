"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.removableTag = exports.simpleTag = exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _react = _interopRequireDefault(require("react"));

var _dom = require("@testing-library/dom");

var _src = _interopRequireWildcard(require("../../src"));

var _default = {
  title: 'Examples'
};
exports.default = _default;

var simpleTag = function simpleTag() {
  return /*#__PURE__*/_react.default.createElement(_src.SimpleTag, {
    text: "simple tag"
  });
};

exports.simpleTag = simpleTag;

var removableTag = function removableTag() {
  return /*#__PURE__*/_react.default.createElement(_src.default, {
    text: "removable tag",
    testId: "test-tag",
    isRemovable: true
  });
};

exports.removableTag = removableTag;
var interactionTasks = [{
  name: 'RemovableTag',
  description: 'Render a tag and then remove it',
  run: function () {
    var _run = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(_ref) {
      var container, button;
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              container = _ref.container;
              _context.next = 3;
              return (0, _dom.findByText)(container, 'removable tag', undefined, {
                timeout: 2000
              });

            case 3:
              button = (0, _dom.getByTestId)(container, 'close-button-test-tag');

              _dom.fireEvent.click(button);

            case 5:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    function run(_x) {
      return _run.apply(this, arguments);
    }

    return run;
  }()
}];
removableTag.story = {
  name: 'RemovableTag',
  parameters: {
    performance: {
      interactions: interactionTasks
    }
  }
};