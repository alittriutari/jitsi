/// <reference types="react" />
import { WithAnalyticsEventsProps } from '@atlaskit/analytics-next';
export interface RemovableTagProps extends SimpleTagProps, WithAnalyticsEventsProps {
    /** Text render as the aria-label for remove button. */
    removeButtonLabel?: string;
    /** Flag to indicate if a tag is removeable. */
    isRemovable?: boolean;
    /** Handler to be called before the tag is removed. If it does not return a
     truthy value, the tag will not be removed. */
    onBeforeRemoveAction?: () => boolean;
    /** Handler to be called after tag is removed. Called with the string 'Post
     Removal Hook'. */
    onAfterRemoveAction?: (text: string) => void;
}
import { SimpleTagProps } from '../shared/types';
declare const RemovableTag: import("react").MemoExoticComponent<import("react").ForwardRefExoticComponent<Pick<RemovableTagProps, "testId" | "href" | "color" | "text" | "appearance" | "elemBefore" | "isRemovable" | "linkComponent" | "removeButtonLabel" | "onBeforeRemoveAction" | "onAfterRemoveAction" | "createAnalyticsEvent"> & import("react").RefAttributes<any>>>;
export default RemovableTag;
