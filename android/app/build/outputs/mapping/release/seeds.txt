okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setQueryParameter(java.lang.String,java.lang.String)
com.facebook.react.modules.dialog.DialogModule: boolean mIsInForeground
com.reactnativecommunity.webview.RNCWebViewManager: void setJavaScriptEnabled(android.webkit.WebView,boolean)
org.webrtc.PeerConnectionDependencies: org.webrtc.SSLCertificateVerifier getSSLCertificateVerifier()
com.learnium.RNDeviceInfo.RNDeviceModule: void getSerialNumber(com.facebook.react.bridge.Promise)
com.dropbox.core.json.JsonReader$FileLoadException$IOError
org.webrtc.YuvConverter$ShaderCallbacks: YuvConverter$ShaderCallbacks()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setPagingEnabled(boolean)
okhttp3.ConnectionSpec: java.util.List tlsVersions()
org.jitsi.meet.sdk.AppInfoModule: AppInfoModule(com.facebook.react.bridge.ReactApplicationContext)
org.jitsi.meet.sdk.R$drawable: int abc_action_bar_item_background_material
org.webrtc.PeerConnection: boolean nativeRemoveIceCandidates(org.webrtc.IceCandidate[])
org.webrtc.GlRectDrawer$ShaderCallbacks: GlRectDrawer$ShaderCallbacks(org.webrtc.GlRectDrawer$1)
org.webrtc.HardwareVideoEncoder: org.webrtc.VideoEncoder$ScalingSettings getScalingSettings()
org.webrtc.BuiltinAudioDecoderFactoryFactory: BuiltinAudioDecoderFactoryFactory()
org.jitsi.meet.R$raw: int lang_mainnl
okio.RealBufferedSource$1: void close()
okio.RealBufferedSink: okio.BufferedSink writeUtf8CodePoint(int)
com.facebook.react.modules.vibration.VibrationModule: java.lang.String getName()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_START
org.webrtc.GlUtil: java.nio.FloatBuffer createFloatBuffer(float[])
com.facebook.react.bridge.ReadableNativeMap
org.jitsi.meet.sdk.R$attr: int buttonStyleSmall
org.jitsi.meet.sdk.R$attr: int listChoiceIndicatorSingleAnimated
okhttp3.ConnectionSpec: java.lang.String[] cipherSuites
org.jitsi.meet.sdk.RNConnectionService: java.lang.String NAME
org.webrtc.CameraCapturer$4: void onCameraError(java.lang.String)
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableTintMode
okhttp3.HttpUrl$Builder: java.lang.String host
org.jitsi.meet.sdk.R$attr: int background
com.dropbox.core.v2.files.UploadSessionFinishErrorException
org.webrtc.NativeLibraryLoader: boolean load(java.lang.String)
org.webrtc.SurfaceViewRenderer: SurfaceViewRenderer(android.content.Context,android.util.AttributeSet)
org.webrtc.RendererCommon$VideoLayoutMeasure: void setScalingType(org.webrtc.RendererCommon$ScalingType,org.webrtc.RendererCommon$ScalingType)
androidx.fragment.app.Fragment: int getNextAnim()
org.jitsi.meet.R$raw: int lang_mainhr
org.jitsi.meet.R$attr: int displayOptions
org.webrtc.JniHelper: byte[] getStringBytes(java.lang.String)
org.jitsi.meet.sdk.JitsiMeetUserInfo: java.net.URL avatar
org.jitsi.meet.sdk.R$styleable: int DrawerArrowToggle_spinBars
org.webrtc.audio.WebRtcAudioTrack: void logNativeOutputSampleRate(int)
okhttp3.internal.cache.DiskLruCache$Editor: boolean[] written
com.horcrux.svg.VirtualView: double canvasDiagonal
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: int MODULE_VERSION
org.jitsi.meet.sdk.R$dimen: int disabled_alpha_material_light
org.webrtc.EglRenderer: void setFpsReduction(float)
okio.Timeout: long deadlineNanoTime()
org.jitsi.meet.sdk.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
androidx.activity.ComponentActivity: ComponentActivity(int)
com.facebook.react.modules.blob.BlobModule: byte[] resolve(android.net.Uri)
okhttp3.internal.cache.DiskLruCache$Snapshot: okio.Source[] sources
com.horcrux.svg.R$drawable: int abc_btn_borderless_material
okhttp3.internal.ws.RealWebSocket: okhttp3.Request request()
okhttp3.internal.ws.RealWebSocket: boolean processNextFrame()
org.webrtc.PeerConnection$IceGatheringState
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mActivityEventListeners
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.Dynamic)
androidx.fragment.app.Fragment: boolean isResumed()
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
com.facebook.react.views.picker.ReactPickerManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.horcrux.svg.R$attr: int alphabeticModifiers
com.facebook.react.views.view.ReactViewGroup: void setOnInterceptTouchEventListener(com.facebook.react.touch.OnInterceptTouchEventListener)
com.facebook.react.uimanager.SimpleViewManager
com.horcrux.svg.RenderableViewManager$RadialGradientManager
org.jitsi.meet.sdk.R$attr: int windowFixedWidthMajor
org.jitsi.meet.sdk.DropboxModule: void onHostDestroy()
com.learnium.RNDeviceInfo.RNDeviceModule: void isPinOrFingerprintSet(com.facebook.react.bridge.Promise)
org.webrtc.PeerConnection$RTCConfiguration: boolean getSuspendBelowMinBitrate()
org.jitsi.meet.sdk.R$color: int abc_search_url_text_pressed
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: RNDeviceModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleType getJSIModuleType()
com.facebook.react.devsupport.BundleDownloader$BundleInfo: java.lang.String mUrl
com.horcrux.svg.R$styleable: int[] ActionMode
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.VideoEncoderFactory videoEncoderFactory
okhttp3.internal.ws.RealWebSocket: int sentPingCount
androidx.fragment.app.Fragment: void initLifecycle()
com.horcrux.svg.R$styleable: int SimpleDraweeView_fadeDuration
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Menu
com.horcrux.svg.R$color
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getLastModified()
com.facebook.drawee.view.GenericDraweeView
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$1
com.facebook.react.devsupport.FpsView: com.facebook.react.devsupport.FpsView$FPSMonitorRunnable mFPSMonitorRunnable
com.facebook.react.devsupport.DevSupportManagerImpl$9: void onOptionSelected()
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: java.lang.String token
org.webrtc.Camera1Session: android.content.Context applicationContext
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_startStringConvert
org.jitsi.meet.sdk.R$attr: int roundBottomLeft
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()
org.jitsi.meet.R$layout: int abc_popup_menu_header_item_layout
org.webrtc.AndroidVideoDecoder: java.lang.Exception shutdownException
com.facebook.react.modules.network.NetworkingModule: okhttp3.MultipartBody$Builder constructMultipartBody(com.facebook.react.bridge.ReadableArray,java.lang.String,int)
com.calendarevents.CalendarEvents: boolean removeEvent(java.lang.String,com.facebook.react.bridge.ReadableMap)
org.webrtc.EncodedImage$Builder: EncodedImage$Builder()
com.facebook.react.devsupport.DevServerHelper: void handleOnChangePollingResponse(boolean)
com.horcrux.svg.R$dimen: int abc_text_size_display_4_material
com.dropbox.core.v2.team.GroupsPollErrorException
com.horcrux.svg.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
okhttp3.internal.io.FileSystem$1: okio.Sink sink(java.io.File)
okhttp3.internal.http2.Http2Connection: int lastGoodStreamId
org.webrtc.VideoEncoder$ScalingSettings: java.lang.Integer high
org.jitsi.meet.sdk.R$raw: int node_modules_csstree_data_patch
com.horcrux.svg.TextView: void setBaselineShift(com.facebook.react.bridge.Dynamic)
co.apptailor.googlesignin.RNGoogleSigninModule: void rejectWithNullClientError(com.facebook.react.bridge.Promise)
org.webrtc.HardwareVideoEncoder: HardwareVideoEncoder(org.webrtc.MediaCodecWrapperFactory,java.lang.String,org.webrtc.VideoCodecMimeType,java.lang.Integer,java.lang.Integer,java.util.Map,int,int,org.webrtc.BitrateAdjuster,org.webrtc.EglBase14$Context)
org.jitsi.meet.sdk.R$dimen: int abc_action_bar_default_height_material
okhttp3.internal.huc.OkHttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)
androidx.fragment.app.FragmentActivity: boolean mStopped
com.horcrux.svg.R$id: int rn_redbox_stack
com.google.android.gms.internal.measurement.zzcd$zzj: int zzc
org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode: org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode[] values()
org.jitsi.meet.sdk.R$styleable: int StateListDrawable_android_variablePadding
com.horcrux.svg.VirtualView: com.horcrux.svg.SvgView getSvgView()
org.jitsi.meet.sdk.AppInfoModule
org.jitsi.meet.sdk.R$layout: int abc_screen_simple_overlay_action_mode
okio.InflaterSource: void close()
org.jitsi.meet.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setIgnoreErrFailedForThisURL(java.lang.String)
org.jitsi.meet.R$dimen: int compat_notification_large_icon_max_height
okhttp3.internal.cache2.Relay: boolean isClosed()
org.webrtc.EglRenderer: org.webrtc.EglRenderer$ErrorCallback errorCallback
com.facebook.react.bridge.BaseJavaModule: boolean hasConstants()
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
okhttp3.Challenge: java.nio.charset.Charset charset()
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$1: WebsocketJavaScriptExecutor$1(com.facebook.react.devsupport.WebsocketJavaScriptExecutor,com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback,java.util.concurrent.atomic.AtomicInteger,java.lang.String)
okhttp3.internal.connection.RouteSelector: java.util.List inetSocketAddresses
org.jitsi.meet.R$layout: int abc_screen_simple_overlay_action_mode
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzo
org.webrtc.MediaCodecWrapperFactory
org.webrtc.PeerConnection: void createAnswer(org.webrtc.SdpObserver,org.webrtc.MediaConstraints)
com.facebook.react.views.view.ReactViewGroup: int indexOfChildInAllChildren(android.view.View)
okio.BufferedSource: long indexOf(byte,long,long)
okhttp3.CacheControl: int maxAgeSeconds()
org.jitsi.meet.sdk.R$styleable: int SignInButton_scopeUris
com.horcrux.svg.R$layout: int notification_template_custom_big
com.oney.WebRTCModule.WebRTCModule: org.webrtc.MediaStream getStreamForReactTag(java.lang.String)
org.jitsi.meet.sdk.AudioModeModule: java.lang.String selectedDevice
org.webrtc.PeerConnection: void dispose()
org.jitsi.meet.R$layout: int launch_screen
org.jitsi.meet.R$anim: R$anim()
org.webrtc.VideoCodecMimeType: org.webrtc.VideoCodecMimeType[] values()
org.webrtc.NativeAndroidVideoTrackSource: NativeAndroidVideoTrackSource(long)
com.facebook.react.devsupport.DisabledDevSupportManager: void reloadJSFromServer(java.lang.String)
com.facebook.yoga.YogaNodeCloneFunction: com.facebook.yoga.YogaNode cloneNode(com.facebook.yoga.YogaNode,com.facebook.yoga.YogaNode,int)
org.jitsi.meet.R$color: int common_google_signin_btn_text_light_focused
org.webrtc.audio.WebRtcAudioEffects: boolean DEBUG
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importValues()
org.webrtc.audio.WebRtcAudioRecord: void logMainParameters()
org.webrtc.audio.JavaAudioDeviceModule$Builder: int audioFormat
org.webrtc.EglRenderer$FrameListenerAndParams: org.webrtc.RendererCommon$GlDrawer drawer
com.horcrux.svg.TextPathView: void setMethod(java.lang.String)
okhttp3.CacheControl
com.horcrux.svg.R$style: int Widget_AppCompat_SeekBar
com.horcrux.svg.R$style: int Widget_AppCompat_Button
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModePasteDrawable
org.jitsi.meet.R$styleable: int[] SwitchCompat
okio.ByteString: byte[] internalArray()
org.webrtc.IceCandidate: java.lang.String serverUrl
co.apptailor.googlesignin.RNGoogleSigninModule: java.lang.String MODULE_NAME
okhttp3.internal.http.RealInterceptorChain: okhttp3.EventListener eventListener
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSink sink
com.horcrux.svg.R$color: int ripple_material_light
org.webrtc.SurfaceTextureHelper$1: org.webrtc.SurfaceTextureHelper$FrameRefMonitor val$frameRefMonitor
org.jitsi.meet.R$attr: int buttonCompat
org.jitsi.meet.R$color: int abc_decor_view_status_guard
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
org.webrtc.FileVideoCapturer: void stopCapture()
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_placeholderImageScaleType
org.webrtc.ThreadUtils$4: java.lang.Runnable val$runner
okhttp3.internal.platform.AndroidPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.CertificatePinner: okhttp3.CertificatePinner DEFAULT
org.webrtc.PeerConnection$AdapterType: org.webrtc.PeerConnection$AdapterType[] $VALUES
org.jitsi.meet.R$string: int abc_menu_shift_shortcut_label
org.webrtc.Logging$1
org.jitsi.meet.R$styleable: int PopupWindowBackgroundState_state_above_anchor
org.webrtc.DtmfSender: boolean insertDtmf(java.lang.String,int,int)
com.google.android.gms.internal.measurement.zzcd$zzk: com.google.android.gms.internal.measurement.zzjp zzk
okhttp3.internal.tls.OkHostnameVerifier: okhttp3.internal.tls.OkHostnameVerifier INSTANCE
okhttp3.internal.cache.DiskLruCache$2: okhttp3.internal.cache.DiskLruCache this$0
com.facebook.react.devsupport.DevInternalSettings: void setJSDevModeEnabled(boolean)
com.horcrux.svg.R$attr: int actionModeCopyDrawable
com.horcrux.svg.R$color: int bright_foreground_material_dark
org.webrtc.AndroidVideoDecoder$FrameInfo: int rotation
com.horcrux.svg.RenderableView: void renderMarkers(android.graphics.Canvas,android.graphics.Paint,float)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getBaseOsSync()
com.horcrux.svg.R$color: int switch_thumb_disabled_material_dark
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibilityDependantOpacity()
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalTypeMap
com.facebook.react.bridge.ReactContext: void assertOnUiQueueThread()
org.webrtc.NetworkChangeDetector$ConnectionType: org.webrtc.NetworkChangeDetector$ConnectionType CONNECTION_5G
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String lastModifiedString
org.webrtc.CryptoOptions$Builder
org.jitsi.meet.sdk.R$string: int ongoing_notification_action_mute
org.webrtc.AndroidVideoDecoder: org.webrtc.VideoCodecStatus decode(org.webrtc.EncodedImage,org.webrtc.VideoDecoder$DecodeInfo)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getName()
org.webrtc.CameraCapturer: org.webrtc.CameraEnumerator cameraEnumerator
org.jitsi.meet.sdk.R$attr: int fontProviderFetchStrategy
com.google.android.gms.internal.measurement.zzbv$zza: boolean zzh
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.security.Permission getPermission()
okhttp3.internal.ws.RealWebSocket$2: void onFailure(okhttp3.Call,java.io.IOException)
org.jitsi.meet.sdk.R$styleable: int ActionBar_icon
org.jitsi.meet.R$styleable: int MenuView_android_itemTextAppearance
org.webrtc.NetworkMonitor: void setNetworkChangeDetectorFactory(org.webrtc.NetworkChangeDetectorFactory)
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.RedBoxDialog mRedBoxDialog
com.horcrux.svg.R$style: int Widget_AppCompat_Light_PopupMenu
com.facebook.react.views.view.ReactViewManager: java.lang.String HOTSPOT_UPDATE_KEY
com.facebook.react.devsupport.BundleDeltaClient$BundleDeltaNativeClient: android.util.Pair processDelta(okio.BufferedSource,java.io.File)
com.google.firebase.installations.FirebaseInstallationsRegistrar
org.jitsi.meet.sdk.BuildConfig: java.lang.String BUILD_TYPE
com.facebook.react.bridge.queue.MessageQueueThreadHandler
org.jitsi.meet.R$styleable: int Toolbar_titleMargins
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ListPopupWindow
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: android.os.Bundle getColorScheme()
com.horcrux.svg.R$attr: int textAppearanceListItemSmall
com.horcrux.svg.R$color: int material_blue_grey_950
org.jitsi.meet.R$anim: int btn_radio_to_off_mtrl_dot_group_animation
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
okio.Buffer: okio.Segment writableSegment(int)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
com.facebook.react.devsupport.DevSupportManagerImpl$24: void onProgress(java.lang.String,java.lang.Integer,java.lang.Integer)
org.webrtc.CameraCapturer: org.webrtc.SurfaceTextureHelper access$900(org.webrtc.CameraCapturer)
org.jitsi.meet.R$attr: int font
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit[] values()
androidx.appcompat.widget.SearchView: int getPreferredWidth()
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout readTimeout
org.jitsi.meet.sdk.AudioModeModule: int access$402(org.jitsi.meet.sdk.AudioModeModule,int)
okio.Buffer: java.lang.String readString(long,java.nio.charset.Charset)
okio.Segment: okio.Segment unsharedCopy()
com.horcrux.svg.R$drawable: int abc_spinner_mtrl_am_alpha
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.security.Principal getPeerPrincipal()
org.webrtc.HardwareVideoEncoder: org.webrtc.VideoCodecStatus updateBitrate()
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean sameConnection(okhttp3.Response,okhttp3.HttpUrl)
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
org.jitsi.meet.sdk.JitsiMeet: boolean isCrashReportingDisabled(android.content.Context)
timber.log.Timber$Tree: void e(java.lang.Throwable)
org.jitsi.meet.R$style: int Platform_V21_AppCompat
com.facebook.react.bridge.Inspector: com.facebook.jni.HybridData mHybridData
org.jitsi.meet.R$drawable: int notification_bg_normal_pressed
org.jitsi.meet.sdk.R$dimen: int hint_alpha_material_light
com.facebook.react.packagerconnection.RequestOnlyHandler: void onNotification(java.lang.Object)
org.jitsi.meet.R$id: int screen
org.jitsi.meet.sdk.R$style: R$style()
org.webrtc.audio.WebRtcAudioTrack: long nativeAudioTrack
com.facebook.react.devsupport.DevServerHelper$SymbolicationListener
org.webrtc.RefCountDelegate: RefCountDelegate(java.lang.Runnable)
org.webrtc.MediaStreamTrack: MediaStreamTrack(long)
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
org.webrtc.JNILogging: void logToInjectable(java.lang.String,java.lang.Integer,java.lang.String)
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.FecControllerFactoryFactoryInterface fecControllerFactoryFactory
com.horcrux.svg.R$drawable: int abc_seekbar_track_material
okhttp3.internal.ws.RealWebSocket: boolean close(int,java.lang.String,long)
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxFontSizeMultiplier(com.facebook.react.views.textinput.ReactEditText,float)
org.jitsi.meet.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_END
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
androidx.fragment.app.FragmentActivity: androidx.collection.SparseArrayCompat mPendingFragmentActivityResults
okhttp3.internal.cache.DiskLruCache: java.lang.Runnable cleanupRunnable
org.webrtc.MediaConstraints: MediaConstraints()
okio.Pipe$PipeSink: void close()
org.webrtc.EncodedImage: int getRotation()
org.jitsi.meet.R$styleable: int ActionBar_customNavigationLayout
org.jitsi.meet.R$attr: int colorPrimary
com.google.android.gms.common.internal.zzb: android.os.Parcelable$Creator CREATOR
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.google.android.gms.iid.zzaa
org.jitsi.meet.sdk.R$styleable: int[] MenuGroup
com.facebook.react.bridge.WritableNativeMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http2.Http2Connection: long unacknowledgedBytesRead
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Display1
okhttp3.internal.http2.Http2Connection$4: java.util.List val$requestHeaders
org.jitsi.meet.sdk.R$styleable: int[] AnimatedStateListDrawableItem
org.webrtc.H264Utils: java.lang.String H264_FMTP_LEVEL_ASYMMETRY_ALLOWED
org.webrtc.VideoCodecInfo: int payload
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
org.webrtc.audio.JavaAudioDeviceModule$1
com.dropbox.core.v2.sharing.RemoveFileMemberErrorException
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_GCM_SHA256
okhttp3.internal.connection.RealConnection$1
com.facebook.react.devsupport.interfaces.DevSupportManager: void showNewJSError(java.lang.String,com.facebook.react.bridge.ReadableArray,int)
org.webrtc.NetworkMonitorAutoDetect$WifiDirectManagerDelegate: NetworkMonitorAutoDetect$WifiDirectManagerDelegate(org.webrtc.NetworkChangeDetector$Observer,android.content.Context)
com.horcrux.svg.R$styleable: int MenuItem_tooltipText
org.webrtc.PeerConnection$RTCConfiguration
org.webrtc.EncodedImage: int rotation
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
okhttp3.internal.platform.AndroidPlatform: void logCloseableLeak(java.lang.String,java.lang.Object)
okio.Buffer$1: void close()
org.webrtc.CameraVideoCapturer$CameraStatistics$1
com.facebook.react.views.image.ReactImageManager: void setResizeMethod(com.facebook.react.views.image.ReactImageView,java.lang.String)
org.webrtc.Camera1Enumerator: boolean isBackFacing(java.lang.String)
org.webrtc.RtpSender: boolean nativeSetTrack(long,long)
com.dropbox.core.v2.fileproperties.ModifyTemplateErrorException
okhttp3.internal.http2.Http2Connection$PingRunnable: okhttp3.internal.http2.Http2Connection this$0
com.facebook.react.devsupport.FpsView: FpsView(com.facebook.react.bridge.ReactContext)
org.webrtc.voiceengine.WebRtcAudioTrack: int getBufferSizeInFrames()
org.jitsi.meet.sdk.WiFiStatsModule: java.lang.String NAME
androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)
org.jitsi.meet.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
okio.Pipe: okio.Source source()
org.jitsi.meet.R$style: int Base_Animation_AppCompat_Tooltip
org.jitsi.meet.sdk.AudioModeModule: int VIDEO_CALL
org.webrtc.MediaStreamTrack$MediaType: org.webrtc.MediaStreamTrack$MediaType[] $VALUES
org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStateCallback: void onWebRtcAudioRecordStart()
org.jitsi.meet.R$styleable: int GradientColor_android_gradientRadius
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorCallbackFuture: WebsocketJavaScriptExecutor$JSExecutorCallbackFuture(com.facebook.react.devsupport.WebsocketJavaScriptExecutor$1)
com.horcrux.svg.R$attr: int alertDialogButtonGroupStyle
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
org.jitsi.meet.sdk.R$attr: int editTextColor
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$1: java.lang.Object[] newArray(int)
com.horcrux.svg.RenderableViewManager: void runWhenViewIsAvailable(int,java.lang.Runnable)
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Caption
org.jitsi.meet.sdk.R$attr: int retryImage
com.facebook.react.fabric.ReactNativeConfig
okio.DeflaterSink: void write(okio.Buffer,long)
com.google.android.gms.internal.measurement.zzca$zza: java.lang.String zzd
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_RatingBar_Indicator
com.facebook.react.bridge.ReadableNativeArray: int size()
okhttp3.ResponseBody$BomAwareReader
org.webrtc.EglRenderer: boolean mirrorVertically
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onCatalystInstanceDestroy()
org.jitsi.meet.R$styleable: int AppCompatTextView_drawableTint
com.facebook.react.modules.blob.BlobModule: byte[] access$000(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
org.jitsi.meet.sdk.R$raw: int node_modules_entities_lib_maps_legacy
okhttp3.internal.http2.Http2Codec: void cancel()
okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorCallbackFuture
com.dropbox.core.v2.team.TeamFolderRenameErrorException
com.facebook.react.bridge.JavaJSExecutor: java.lang.String executeJSCall(java.lang.String,java.lang.String)
org.jitsi.meet.R$attr: int windowActionBar
org.webrtc.Logging: void enableTracing(java.lang.String,java.util.EnumSet)
org.webrtc.LibvpxVp8Decoder
com.facebook.react.bridge.ReactApplicationContext: ReactApplicationContext(android.content.Context)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
org.jitsi.meet.R$styleable: int AppCompatTheme_actionModeFindDrawable
org.jitsi.meet.sdk.R$color: int bright_foreground_material_dark
com.facebook.react.modules.image.ImageLoaderModule: void registerRequest(int,com.facebook.datasource.DataSource)
okhttp3.internal.cache.DiskLruCache$Entry: java.io.File[] dirtyFiles
org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger: void access$100(org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger)
com.facebook.react.devsupport.DevSupportManagerImpl$15: DevSupportManagerImpl$15(com.facebook.react.devsupport.DevSupportManagerImpl)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Object)
org.webrtc.Camera1Session: org.webrtc.Histogram camera1ResolutionHistogram
okhttp3.RealCall$1: void timedOut()
okhttp3.CacheControl$Builder
okhttp3.ConnectionPool: int connectionCount()
com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener: java.util.Map customCommandHandlers()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxy(java.net.Proxy)
com.horcrux.svg.RenderableViewManager$UseViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.jitsi.meet.sdk.OngoingConferenceTracker: java.lang.String getCurrentConference()
org.jitsi.meet.R$attr: int roundBottomStart
com.dropbox.core.v2.users.SpaceAllocation$Tag: com.dropbox.core.v2.users.SpaceAllocation$Tag[] values()
org.jitsi.meet.sdk.R$attr: int switchTextAppearance
com.horcrux.svg.R$dimen: int abc_dialog_corner_radius_material
org.jitsi.meet.R$styleable: int SignInButton_colorScheme
okhttp3.internal.ws.RealWebSocket$CancelRunnable: RealWebSocket$CancelRunnable(okhttp3.internal.ws.RealWebSocket)
org.webrtc.EglBase10Impl: java.lang.String TAG
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundBottomEnd
org.jitsi.meet.R$string: int state_busy_description
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign valueOf(java.lang.String)
com.horcrux.svg.R$drawable: int abc_text_select_handle_middle_mtrl_dark
org.jitsi.meet.sdk.R$color: int abc_color_highlight_material
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
org.webrtc.voiceengine.WebRtcAudioManager: int getLowLatencyInputFramesPerBuffer()
okhttp3.internal.Util: java.nio.charset.Charset ISO_8859_1
org.jitsi.meet.sdk.R$style: int Base_V21_Theme_AppCompat
com.facebook.react.devsupport.DevServerHelper: void downloadBundleFromURL(com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,java.io.File,java.lang.String,com.facebook.react.devsupport.BundleDownloader$BundleInfo,okhttp3.Request$Builder)
com.facebook.react.devsupport.RedBoxDialog$OpenStackFrameTask: okhttp3.MediaType JSON
okhttp3.internal.http2.Http2Connection$3: Http2Connection$3(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List)
org.jitsi.meet.sdk.R$raw: int lang_mainsl
okio.Buffer: long readAll(okio.Sink)
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_roundTopStart
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: com.facebook.react.common.futures.SimpleSettableFuture val$dataFuture
okhttp3.internal.Util: okhttp3.Headers toHeaders(java.util.List)
com.facebook.react.modules.intent.IntentModule: java.lang.String NAME
org.webrtc.VideoEncoder$Settings: VideoEncoder$Settings(int,int,int,int,int,int,boolean)
com.facebook.react.devsupport.DevServerHelper$8
org.jitsi.meet.R$attr: int tickMarkTintMode
com.calendarevents.CalendarEvents: com.facebook.react.bridge.WritableNativeArray findEventCalendars()
okio.GzipSink: okio.Timeout timeout()
org.webrtc.GlGenericDrawer: org.webrtc.GlShader currentShader
com.horcrux.svg.R$styleable: int SearchView_searchHintIcon
okio.Sink
org.webrtc.MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl: void setParameters(android.os.Bundle)
org.webrtc.Camera2Session$SessionState
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mResolve
okhttp3.internal.http2.Http2Reader$ContinuationSource: void readContinuationHeader()
org.jitsi.meet.sdk.AudioModeModule: boolean useConnectionService()
com.horcrux.svg.MaskView: void setY(com.facebook.react.bridge.Dynamic)
com.google.android.gms.internal.measurement.zzbv$zzb: int zzd
com.facebook.react.bridge.CatalystInstanceImpl$2: void run()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPosition(long,int,float)
org.webrtc.audio.WebRtcAudioManager: WebRtcAudioManager()
okhttp3.internal.http2.Http2Connection: java.util.Set currentPushRequests
com.facebook.yoga.YogaNodeType
com.learnium.RNDeviceInfo.RNDeviceModule: void getBootloader(com.facebook.react.bridge.Promise)
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()
org.jitsi.meet.R$styleable: int ActionBar_homeAsUpIndicator
org.webrtc.PeerConnection: java.util.List nativeGetTransceivers()
com.horcrux.svg.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
okhttp3.OkHttpClient: java.util.List interceptors()
com.facebook.react.modules.blob.BlobModule: byte[] resolve(java.lang.String,int,int)
okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)
org.jitsi.meet.R$drawable: int googleg_disabled_color_18
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.R$attr: int thumbTextPadding
org.webrtc.EglRenderer: int framesReceived
org.jitsi.meet.sdk.R$raw: int lang_languageset
org.webrtc.NV12Buffer: int width
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_STOP_LOADING
com.facebook.react.views.modal.ReactModalHostManager: java.util.Map getExportedCustomDirectEventTypeConstants()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
androidx.appcompat.widget.ActionBarContainer
com.facebook.react.views.viewpager.ReactViewPager: androidx.viewpager.widget.PagerAdapter getAdapter()
okhttp3.internal.cache.DiskLruCache$1: DiskLruCache$1(okhttp3.internal.cache.DiskLruCache)
org.jitsi.meet.R$attr: int listChoiceBackgroundIndicator
org.jitsi.meet.R$drawable: int abc_textfield_search_activated_mtrl_alpha
com.facebook.react.fabric.events.FabricEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.devsupport.RedBoxDialog: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
okhttp3.internal.http.HttpCodec: int DISCARD_STREAM_TIMEOUT_MILLIS
org.jitsi.meet.R$layout: int abc_alert_dialog_material
com.facebook.react.views.text.ReactTextView: void setSpanned(android.text.Spannable)
androidx.appcompat.widget.Toolbar
org.webrtc.CryptoOptions$SFrame: boolean getRequireFrameEncryption()
org.webrtc.RtpSender: void nativeSetStreams(long,java.util.List)
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$Builder setUseHardwareAcousticEchoCanceler(boolean)
org.jitsi.meet.R$attr: int ratingBarStyleIndicator
okhttp3.internal.http.StatusLine: int HTTP_PERM_REDIRECT
com.horcrux.svg.SvgView: int mTintColor
com.facebook.yoga.YogaNodeJNIBase: long measure(float,int,float,int)
com.facebook.react.devsupport.DevSupportManagerImpl$21: DevSupportManagerImpl$21(com.facebook.react.devsupport.DevSupportManagerImpl,com.facebook.react.packagerconnection.Responder)
com.facebook.react.devsupport.DevInternalSettings: java.lang.String PREFS_REMOTE_JS_DEBUG_KEY
org.webrtc.Camera1Session: android.hardware.Camera camera
org.jitsi.meet.sdk.log.JitsiMeetDefaultLogHandler
org.webrtc.NetworkMonitor: void stopMonitoring(long)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.http2.Http2Connection: boolean access$302(okhttp3.internal.http2.Http2Connection,boolean)
org.webrtc.Camera1Enumerator: Camera1Enumerator(boolean)
org.webrtc.RTCStats: RTCStats(long,java.lang.String,java.lang.String,java.util.Map)
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
com.horcrux.svg.R$style: int CalendarDatePickerDialog
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0
org.webrtc.SurfaceEglRenderer: void disableFpsReduction()
org.jitsi.meet.sdk.OngoingNotification: android.app.Notification buildOngoingConferenceNotification(boolean)
okhttp3.internal.connection.ConnectInterceptor
org.webrtc.Camera2Session$CameraStateCallback: Camera2Session$CameraStateCallback(org.webrtc.Camera2Session,org.webrtc.Camera2Session$1)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnContentSizeChange(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_START
org.jitsi.meet.sdk.AudioModeModule: void setUseConnectionService(boolean)
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
org.webrtc.EglRenderer: int framesDropped
okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)
com.horcrux.svg.Brush$BrushType: com.horcrux.svg.Brush$BrushType valueOf(java.lang.String)
org.webrtc.CameraVideoCapturer$CameraStatistics: void release()
org.webrtc.SurfaceViewRenderer: void onFrameResolutionChanged(int,int,int)
org.jitsi.meet.sdk.R$id: int scrollIndicatorDown
org.webrtc.voiceengine.WebRtcAudioTrack: void releaseAudioResources()
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] $VALUES
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ProgressBar
org.jitsi.meet.sdk.R$layout: int abc_action_menu_item_layout
org.jitsi.meet.sdk.R$attr: int fontProviderPackage
org.webrtc.voiceengine.WebRtcAudioTrack$ErrorCallback: void onWebRtcAudioTrackStartError(org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode,java.lang.String)
org.webrtc.PeerConnection$IceServer: java.lang.String password
org.jitsi.meet.R$attr: int titleTextStyle
com.facebook.react.views.textinput.ReactTextInputManager: android.text.InputFilter[] EMPTY_FILTERS
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ImageButton
org.webrtc.Camera2Session: boolean access$1602(org.webrtc.Camera2Session,boolean)
org.webrtc.PeerConnection: org.webrtc.PeerConnection$SignalingState nativeSignalingState()
com.facebook.react.bridge.JavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
org.webrtc.JniCommon
org.jitsi.meet.sdk.R$id: int chronometer
okhttp3.internal.cache.DiskLruCache$3: void remove()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mAppName
com.facebook.react.bridge.DynamicFromArray: void recycle()
org.jitsi.meet.R$styleable: int ColorStateListItem_android_color
okhttp3.OkHttpClient$Builder: okhttp3.CertificatePinner certificatePinner
com.horcrux.svg.TextView
okio.Buffer$1: Buffer$1(okio.Buffer)
org.jitsi.meet.R$id: int blocking
androidx.fragment.app.Fragment: void performStart()
okhttp3.internal.http1.Http1Codec: okio.BufferedSource source
okhttp3.Response$Builder: okhttp3.Headers$Builder headers
com.horcrux.svg.R$style: int Base_Animation_AppCompat_Tooltip
com.horcrux.svg.RenderableViewManager: void decomposeMatrix()
com.ocetnik.timer.BackgroundTimerModule: android.os.PowerManager$WakeLock access$000(com.ocetnik.timer.BackgroundTimerModule)
okio.Util: short reverseBytesShort(short)
okhttp3.internal.http2.Header: java.lang.String TARGET_SCHEME_UTF8
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: okhttp3.internal.http2.Http2Stream val$newStream
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorCallbackFuture: WebsocketJavaScriptExecutor$JSExecutorCallbackFuture()
okio.Buffer: long size()
com.horcrux.svg.R$styleable: int AppCompatTheme_colorControlHighlight
com.facebook.react.devsupport.DebugOverlayController$1: boolean val$fpsDebugViewVisible
org.webrtc.NetworkStatePredictorFactoryFactory: long createNativeNetworkStatePredictorFactory()
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasMeasureFunc(long,boolean)
org.webrtc.VideoEncoder: org.webrtc.VideoCodecStatus setRateAllocation(org.webrtc.VideoEncoder$BitrateAllocation,int)
org.jitsi.meet.sdk.log.JitsiMeetDefaultLogHandler: java.lang.String TAG
androidx.fragment.app.Fragment: void performDetach()
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ListMenuView
okio.BufferedSource: short readShort()
org.jitsi.meet.R$color: int background_material_light
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_drawableStart
org.jitsi.meet.sdk.R$dimen: int highlight_alpha_material_dark
org.jitsi.meet.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
org.jitsi.meet.R$id: int tag_accessibility_heading
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
org.webrtc.CryptoOptions: org.webrtc.CryptoOptions$SFrame sframe
com.facebook.react.devsupport.DevInternalSettings
com.horcrux.svg.VirtualView: android.graphics.RectF mClipBounds
com.facebook.react.modules.network.NetworkingModule: int CHUNK_TIMEOUT_NS
com.dropbox.core.v2.team.TeamFolderCreateErrorException
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(android.view.View)
org.webrtc.VideoFrameDrawer$YuvUploader: void release()
com.horcrux.svg.R$styleable: int MenuItem_android_visible
org.jitsi.meet.R$anim: int catalyst_fade_in
org.webrtc.RtpReceiver
org.jitsi.meet.R$id: int accessibility_custom_action_28
com.facebook.react.devsupport.DevSupportManagerImpl$27: DevSupportManagerImpl$27(com.facebook.react.devsupport.DevSupportManagerImpl,boolean)
com.horcrux.svg.R$id: int screen
org.webrtc.ThreadUtils$1CaughtException: java.lang.Exception e
org.webrtc.MediaConstraints$KeyValuePair: MediaConstraints$KeyValuePair(java.lang.String,java.lang.String)
okio.AsyncTimeout$1: okio.Sink val$sink
androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,java.lang.String,com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.sdk.R$dimen: int abc_select_dialog_padding_start_material
okio.BufferedSource: int read(byte[],int,int)
okio.RealBufferedSource: void readFully(okio.Buffer,long)
okhttp3.internal.ws.RealWebSocket: RealWebSocket(okhttp3.Request,okhttp3.WebSocketListener,java.util.Random,long)
com.calendarevents.CalendarEvents: void removeEvent(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.soloader.SysUtil$LollipopSysdeps: java.lang.String[] getSupportedAbis()
org.webrtc.WrappedNativeVideoEncoder: long createNativeVideoEncoder()
org.jitsi.meet.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
com.horcrux.svg.R$styleable: int MenuItem_android_menuCategory
org.webrtc.SurfaceEglRenderer
okhttp3.Headers: java.lang.String value(int)
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.PeerConnectionFactory$Options options
org.jitsi.meet.R$attr: int subtitleTextAppearance
okhttp3.internal.cache.DiskLruCache: java.lang.String DIRTY
org.jitsi.meet.R$raw: int lang_languagesfrca
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
okhttp3.internal.http1.Http1Codec$ChunkedSink
org.jitsi.meet.sdk.R$attr: int listPreferredItemHeightSmall
okhttp3.MediaType: boolean equals(java.lang.Object)
org.jitsi.meet.sdk.R$styleable: int[] ListPopupWindow
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_START
okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)
com.horcrux.svg.R$attr: int listPreferredItemHeightSmall
org.jitsi.meet.R$style: int Base_V7_Theme_AppCompat_Light
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ListView_Menu
androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)
com.horcrux.svg.RenderableViewManager$PatternManager: void setAlign(com.horcrux.svg.PatternView,java.lang.String)
okhttp3.internal.http.BridgeInterceptor: java.lang.String cookieHeader(java.util.List)
okhttp3.internal.connection.RealConnection: java.net.Socket rawSocket
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
okio.RealBufferedSink: okio.BufferedSink writeInt(int)
org.webrtc.HardwareVideoEncoder$BusyCount: void increment()
com.facebook.react.bridge.DynamicFromMap: java.lang.String asString()
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor networkInterceptor
com.facebook.react.devsupport.FpsView: void access$200(com.facebook.react.devsupport.FpsView,double,double,int,int)
org.webrtc.MediaCodecVideoDecoderFactory: org.webrtc.VideoDecoder createDecoder(org.webrtc.VideoCodecInfo)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
okhttp3.internal.http1.Http1Codec: void finishRequest()
okio.ForwardingTimeout
org.jitsi.meet.R$id: int search_button
com.facebook.react.views.picker.ReactPickerManager: void setSelected(com.facebook.react.views.picker.ReactPicker,int)
org.jitsi.meet.sdk.R$attr: int progressBarImage
com.horcrux.svg.R$styleable: int[] ActivityChooserView
androidx.fragment.app.Fragment: void onDestroyView()
org.webrtc.YuvConverter$ShaderCallbacks: float[] coeffs
org.jitsi.meet.sdk.R$raw: int lang_languagesmn
com.facebook.react.devsupport.DevSupportManagerImpl$15: com.facebook.react.devsupport.DevSupportManagerImpl this$0
org.webrtc.ThreadUtils$3: org.webrtc.ThreadUtils$1Result val$result
com.facebook.react.modules.blob.BlobModule: java.util.Map getConstants()
org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger: java.util.Timer timer
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueSpec
com.facebook.react.modules.datepicker.DatePickerDialogModule: DatePickerDialogModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.RealCall$AsyncCall
org.jitsi.meet.R$styleable: int LoadingImageView_circleCrop
com.facebook.react.devsupport.DevServerHelper$6
org.webrtc.Logging$Severity: org.webrtc.Logging$Severity valueOf(java.lang.String)
okhttp3.Cache$1: void trackConditionalCacheHit()
com.horcrux.svg.R$style: int Widget_AppCompat_SearchView_ActionBar
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientTransform(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_Button
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_DayNight
org.webrtc.RendererCommon$RendererEvents: void onFirstFrameRendered()
org.jitsi.meet.sdk.DropboxModule: java.lang.String appKey
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
org.webrtc.RefCountDelegate: java.util.concurrent.atomic.AtomicInteger refCount
com.google.android.gms.measurement.internal.zzn: android.os.Parcelable$Creator CREATOR
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: boolean equals(java.lang.Object)
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_TEXT
org.webrtc.Histogram: long handle
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType[] values()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_ListView_DropDown
org.jitsi.meet.sdk.AudioModeModule: java.lang.String TAG
com.google.android.gms.internal.measurement.zzbv$zza: com.google.android.gms.internal.measurement.zzjp zzj
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String)
com.facebook.react.views.view.ReactViewManager: int CMD_SET_PRESSED
com.facebook.react.devsupport.InspectorPackagerConnection: org.json.JSONObject makePageIdPayload(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
org.webrtc.Camera1Session$SessionState: org.webrtc.Camera1Session$SessionState STOPPED
okhttp3.Cache$CacheRequestImpl: okio.Sink cacheOut
okhttp3.RequestBody$1: okhttp3.MediaType contentType()
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: AnalyticsConnectorRegistrar()
okhttp3.Response: okhttp3.Response cacheResponse
org.webrtc.VideoFileRenderer: java.lang.String outputFileName
com.facebook.react.devsupport.DoubleTapReloadRecognizer: long DOUBLE_TAP_DELAY
okio.BufferedSource: java.lang.String readUtf8Line()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_START
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.WebViewConfig mWebViewConfig
com.facebook.react.devsupport.DoubleTapReloadRecognizer: boolean didDoubleTapR(int,android.view.View)
org.webrtc.VideoFileRenderer: void renderFrameOnRenderThread(org.webrtc.VideoFrame)
com.learnium.RNDeviceInfo.RNDeviceModule: void isAirplaneMode(com.facebook.react.bridge.Promise)
okio.ByteString: int lastIndexOf(okio.ByteString)
com.facebook.react.devsupport.interfaces.DevSupportManager: void setReloadOnJSChangeEnabled(boolean)
okio.Options: int[] trie
org.webrtc.Camera1Session: org.webrtc.CameraEnumerationAndroid$CaptureFormat captureFormat
org.jitsi.meet.sdk.R$string: int timer_description
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_14
okhttp3.internal.tls.DistinguishedNameParser: java.lang.String escapedAV()
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_RatingBar_Small
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
org.webrtc.PeerConnection$IceServer$Builder: org.webrtc.PeerConnection$IceServer$Builder setTlsEllipticCurves(java.util.List)
org.webrtc.voiceengine.WebRtcAudioRecord$AudioSamples: byte[] data
org.webrtc.PeerConnection: void nativeRemoveLocalStream(long)
org.jitsi.meet.sdk.R$color: int bright_foreground_inverse_material_light
org.jitsi.meet.sdk.R$raw: int lang_mainbg
androidx.fragment.app.Fragment: java.lang.Object getExitTransition()
org.jitsi.meet.sdk.BaseReactView: void onExternalAPIEvent(java.util.Map,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.devsupport.BundleDownloader: void downloadBundleFromURL(com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,java.io.File,java.lang.String,com.facebook.react.devsupport.BundleDownloader$BundleInfo,com.facebook.react.devsupport.BundleDeltaClient$ClientType)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
org.webrtc.PeerConnectionFactory: void nativePrintStackTracesOfRegisteredThreads()
okhttp3.internal.cache2.Relay: java.lang.Thread upstreamReader
org.jitsi.meet.R$mipmap: int ic_launcher_foreground
com.horcrux.svg.R$attr: int alpha
com.facebook.react.animated.NativeAnimatedModule: void dropAnimatedNode(int)
org.jitsi.meet.R$styleable: int DrawerArrowToggle_drawableSize
com.horcrux.svg.R$styleable: int Spinner_popupTheme
com.facebook.react.uimanager.BaseViewManager: void onAfterUpdateTransaction(android.view.View)
com.horcrux.svg.R$layout: int abc_action_bar_title_item
com.google.android.gms.internal.measurement.zzbv$zzd: com.google.android.gms.internal.measurement.zzjp zzj
com.facebook.react.devsupport.DevSupportManagerImpl: android.content.Context mApplicationContext
com.facebook.react.bridge.ReactMarker: ReactMarker()
org.webrtc.VideoFrameDrawer: float[] srcPoints
org.webrtc.audio.WebRtcAudioTrack: void reportWebRtcAudioTrackInitError(java.lang.String)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule
okhttp3.internal.http2.Http2Reader: void readConnectionPreface(okhttp3.internal.http2.Http2Reader$Handler)
com.horcrux.svg.VirtualView: void setOnLayout(boolean)
okhttp3.internal.http2.Http2Connection$5: int val$streamId
okhttp3.internal.platform.AndroidPlatform: java.lang.Object getStackTraceForCloseable(java.lang.String)
org.webrtc.DynamicBitrateAdjuster
com.horcrux.svg.R$id: int shortcut
com.google.android.gms.internal.measurement.zzcd$zzg: int zzah
org.webrtc.RTCStatsCollectorCallback: void onStatsDelivered(org.webrtc.RTCStatsReport)
com.dropbox.core.v2.team.TeamFolderActivateErrorException
okio.Base64: byte[] URL_MAP
com.facebook.react.modules.blob.BlobModule: long access$300(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
org.webrtc.Predicate: boolean test(java.lang.Object)
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedTemplate(java.lang.String)
org.webrtc.Logging$TraceLevel: Logging$TraceLevel(java.lang.String,int,int)
org.webrtc.audio.WebRtcAudioRecord: java.util.concurrent.ScheduledFuture future
okio.HashingSource: okio.HashingSource sha1(okio.Source)
org.jitsi.meet.R$styleable: int StateListDrawable_android_variablePadding
com.facebook.react.views.viewpager.ReactViewPagerManager: void receiveCommand(com.facebook.react.views.viewpager.ReactViewPager,int,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.cache.DiskLruCache$3: okhttp3.internal.cache.DiskLruCache$Snapshot removeSnapshot
okio.Options
org.jitsi.meet.sdk.R$color: int switch_thumb_material_light
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Http2Reader$ContinuationSource continuation
org.webrtc.PeerConnection$KeyType: org.webrtc.PeerConnection$KeyType[] values()
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzy
okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor: void proceed()
com.horcrux.svg.R$dimen: int abc_button_padding_horizontal_material
okhttp3.internal.http1.Http1Codec$ChunkedSink: boolean closed
org.webrtc.NativeCapturerObserver
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$PortPrunePolicy turnPortPrunePolicy
org.jitsi.meet.sdk.R$attr: int layout
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
org.webrtc.SurfaceTextureHelper: void setTextureSize(int,int)
com.dropbox.core.v2.team.GroupMembersAddErrorException
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
okhttp3.internal.http2.Hpack$Reader: int evictToRecoverBytes(int)
okhttp3.internal.http2.Http2Stream: okio.Timeout readTimeout()
org.webrtc.MediaCodecVideoDecoderFactory: boolean isH264HighProfileSupported(android.media.MediaCodecInfo)
org.jitsi.meet.R$id: int bottom
okhttp3.CookieJar$1
org.jitsi.meet.sdk.R$anim: int catalyst_fade_in
androidx.core.content.FileProvider: FileProvider()
okhttp3.Call: void enqueue(okhttp3.Callback)
org.webrtc.RtpParameters$Encoding: java.lang.Integer maxBitrateBps
com.facebook.react.bridge.JavaMethodWrapper: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_progressBarImageScaleType
com.horcrux.svg.RenderableViewManager$RectViewManager: void onAfterUpdateTransaction(android.view.View)
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
okhttp3.internal.ws.RealWebSocket: java.util.List ONLY_HTTP1
okhttp3.internal.http.CallServerInterceptor
com.horcrux.svg.EllipseView
com.google.android.gms.common.internal.SignInButtonConfig: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.Callback: void invoke(java.lang.Object[])
com.facebook.react.modules.network.NetworkingModule: void cancelAllRequests()
okhttp3.internal.connection.RealConnection: java.util.List allocations
com.google.android.gms.internal.measurement.zzbv$zza: int zzd
okhttp3.internal.http2.ErrorCode: ErrorCode(java.lang.String,int,int)
com.facebook.react.modules.core.Timing: boolean mSendIdleEvents
org.jitsi.meet.sdk.R$styleable: int SearchView_goIcon
org.jitsi.meet.R$attr: int windowMinWidthMinor
com.facebook.react.devsupport.BundleDeltaClient$ClientType: com.facebook.react.devsupport.BundleDeltaClient$ClientType[] $VALUES
com.facebook.react.bridge.JSBundleLoader$5: JSBundleLoader$5(java.lang.String,java.lang.String)
org.jitsi.meet.R$styleable: int SwitchCompat_thumbTintMode
org.jitsi.meet.sdk.JitsiMeetActivity: void onConferenceWillJoin(java.util.HashMap)
okhttp3.internal.http2.Http2Stream: boolean isOpen()
org.jitsi.meet.sdk.R$id: int fitXY
org.webrtc.VideoSource$AspectRatio: VideoSource$AspectRatio(int,int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
com.horcrux.svg.SymbolView
org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode: org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode AUDIO_TRACK_START_STATE_MISMATCH
org.webrtc.AndroidVideoDecoder: void releaseCodecOnOutputThread()
androidx.fragment.app.Fragment: java.lang.Object getReenterTransition()
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_fadeDuration
okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)
com.learnium.RNDeviceInfo.RNDeviceModule: void getInstallReferrer(com.facebook.react.bridge.Promise)
org.webrtc.SurfaceViewRenderer: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
okhttp3.OkHttpClient$1: int code(okhttp3.Response$Builder)
okhttp3.EventListener$2
okio.Buffer: okio.BufferedSink writeUtf8(java.lang.String)
org.jitsi.meet.sdk.incoming_call.IncomingCallInfo: java.lang.String getCallerName()
org.webrtc.audio.WebRtcAudioRecord: void nativeCacheDirectBufferAddress(long,java.nio.ByteBuffer)
org.webrtc.CameraCapturer$SwitchState: org.webrtc.CameraCapturer$SwitchState[] values()
org.jitsi.meet.sdk.R$id: int rn_redbox_reload_button
com.horcrux.svg.R$styleable: int AppCompatTheme_editTextStyle
com.facebook.react.devsupport.DevSupportManagerImpl$11: com.facebook.react.devsupport.DevSupportManagerImpl this$0
org.webrtc.EglRenderer: void setMirrorVertically(boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableArray getSystemAvailableFeaturesSync()
org.jitsi.meet.R$style: int Base_V7_Widget_AppCompat_Toolbar
org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: int hashCode()
org.jitsi.meet.sdk.R$attr: int goIcon
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: Http2Codec$StreamFinishingSource(okhttp3.internal.http2.Http2Codec,okio.Source)
org.webrtc.VideoFrameDrawer$YuvUploader: int[] yuvTextures
org.jitsi.meet.R$styleable: int MenuView_android_verticalDivider
org.jitsi.meet.sdk.AudioModeModule: java.lang.String access$302(org.jitsi.meet.sdk.AudioModeModule,java.lang.String)
org.jitsi.meet.R$styleable: int MenuGroup_android_visible
okhttp3.internal.http2.Settings: int getMaxConcurrentStreams(int)
okhttp3.internal.http2.Http2: java.lang.String frameLog(boolean,int,int,byte,byte)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionPercent(long,int,float)
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
okhttp3.internal.http2.Http2Connection$2: Http2Connection$2(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,long)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: java.net.URL serverURL
okio.HashingSource: okio.HashingSource sha256(okio.Source)
org.webrtc.PeerConnection$KeyType: org.webrtc.PeerConnection$KeyType RSA
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: android.os.Handler mHandler
com.facebook.react.views.view.ReactViewManager: void removeViewAt(android.view.ViewGroup,int)
okhttp3.internal.http1.Http1Codec: int STATE_OPEN_RESPONSE_BODY
com.facebook.react.animated.EventAnimationDriver: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
org.webrtc.EglBase14Impl: android.opengl.EGLContext createEglContext(android.opengl.EGLContext,android.opengl.EGLDisplay,android.opengl.EGLConfig,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: android.widget.OverScroller getOverScrollerFromParent()
org.webrtc.BaseBitrateAdjuster: int getAdjustedBitrateBps()
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getDate()
com.facebook.react.bridge.CatalystInstanceImpl$3: com.facebook.react.bridge.CatalystInstanceImpl this$0
org.jitsi.meet.sdk.R$styleable: int MenuItem_android_alphabeticShortcut
org.webrtc.VideoCodecMimeType: org.webrtc.VideoCodecMimeType valueOf(java.lang.String)
okhttp3.internal.huc.StreamedRequestBody: okio.Pipe pipe
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexShrink(long)
org.webrtc.LibvpxVp8Decoder: long nativeCreateDecoder()
com.google.gson.reflect.TypeToken: java.lang.reflect.Type type
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE_BACKUP
org.jitsi.meet.R$style: int SplashScreen_SplashTheme
org.webrtc.CameraCapturer$7: CameraCapturer$7(org.webrtc.CameraCapturer,org.webrtc.CameraVideoCapturer$CameraSwitchHandler)
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$BroadcastReceiver
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_retryImage
org.jitsi.meet.R$styleable: int ActionBar_progressBarPadding
com.facebook.react.devsupport.DevServerHelper$3: java.lang.Object doInBackground(java.lang.Object[])
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
org.jitsi.meet.sdk.PictureInPictureModule: void enterPictureInPicture()
okhttp3.internal.ws.WebSocketProtocol
okhttp3.internal.http2.Http2Connection: void writePingAndAwaitPong()
org.webrtc.Camera1Enumerator: org.webrtc.CameraVideoCapturer createCapturer(java.lang.String,org.webrtc.CameraVideoCapturer$CameraEventsHandler)
org.webrtc.VideoFrameDrawer: void drawFrame(org.webrtc.VideoFrame,org.webrtc.RendererCommon$GlDrawer,android.graphics.Matrix)
okhttp3.internal.ws.WebSocketWriter: WebSocketWriter(boolean,okio.BufferedSink,java.util.Random)
com.horcrux.svg.R$anim: int abc_slide_in_top
com.facebook.react.devsupport.DevInternalSettings: void setElementInspectorEnabled(boolean)
org.jitsi.meet.sdk.R$styleable: int AppCompatImageView_tint
org.jitsi.meet.sdk.WiFiStatsModule: WiFiStatsModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher mEventDispatcher
org.jitsi.meet.sdk.R$drawable: int abc_scrubber_control_off_mtrl_alpha
org.webrtc.IceCandidate: IceCandidate(java.lang.String,int,java.lang.String,java.lang.String,org.webrtc.PeerConnection$AdapterType)
com.google.android.gms.internal.measurement.zzbv$zzb
com.facebook.react.devsupport.DevSupportManagerImpl$29: DevSupportManagerImpl$29(com.facebook.react.devsupport.DevSupportManagerImpl)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_FLOAT
org.jitsi.meet.R$style: int Animation_AppCompat_DropDownUp
org.jitsi.meet.sdk.R$attr: int fontVariationSettings
org.jitsi.meet.R$attr: int buttonStyle
okhttp3.internal.ws.WebSocketWriter: okhttp3.internal.ws.WebSocketWriter$FrameSink frameSink
com.horcrux.svg.R$drawable: int notification_bg_normal_pressed
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_CLOSE
org.jitsi.meet.R$styleable: int FragmentContainerView_android_name
com.horcrux.svg.R$attr: int actionModeWebSearchDrawable
okio.SegmentedByteString: okio.ByteString hmacSha1(okio.ByteString)
org.jitsi.meet.sdk.JitsiMeetActivity: org.jitsi.meet.sdk.JitsiMeetConferenceOptions getConferenceOptions(android.content.Intent)
org.jitsi.meet.sdk.R$anim: int abc_tooltip_enter
org.jitsi.meet.R$styleable: int AppCompatTheme_buttonStyle
com.horcrux.svg.R$attr: int fontProviderQuery
org.webrtc.CameraCapturer$6: org.webrtc.CameraCapturer this$0
com.facebook.react.devsupport.DevSupportManagerImpl$28: boolean val$isFpsDebugEnabled
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
org.webrtc.RtpTransceiver$RtpTransceiverInit: RtpTransceiver$RtpTransceiverInit()
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: org.jitsi.meet.sdk.AudioModeModule module
org.webrtc.SurfaceViewRenderer: void surfaceDestroyed(android.view.SurfaceHolder)
org.webrtc.VideoFileRenderer: int outputFileHeight
com.oney.WebRTCModule.WebRTCModule: void mediaStreamCreateAsync(java.lang.String)
com.horcrux.svg.SvgView: void setTintColor(java.lang.Integer)
org.jitsi.meet.sdk.R$id: int actions
com.horcrux.svg.RenderableViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.modules.camera.ImageStoreManager: void access$200(java.io.Closeable)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientUnits(com.horcrux.svg.LinearGradientView,int)
com.facebook.react.bridge.BaseJavaModule
org.jitsi.meet.R$color: int abc_secondary_text_material_dark
org.webrtc.audio.WebRtcAudioRecord
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.AndroidPlatform$CloseGuard closeGuard
org.webrtc.MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl: android.media.MediaCodec mediaCodec
org.jitsi.meet.sdk.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.calendarevents.CalendarEvents: boolean haveCalendarReadWritePermissions()
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
org.jitsi.meet.sdk.R$styleable: int View_theme
org.jitsi.meet.sdk.R$drawable: int abc_ic_star_black_16dp
org.jitsi.meet.R$color: int notification_action_color_filter
com.calendarevents.CalendarEvents: void createAttendeesForEvent(android.content.ContentResolver,int,com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.R$raw: int lang_mainzhcn
org.jitsi.meet.R$layout: int abc_list_menu_item_radio
org.jitsi.meet.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
com.facebook.react.modules.camera.CameraRollManager: java.lang.String SELECTION_DATE_TAKEN
com.horcrux.svg.R$color: int accent_material_dark
org.webrtc.audio.WebRtcAudioManager: int getSampleRate(android.media.AudioManager)
com.dropbox.core.v2.filerequests.UpdateFileRequestErrorException
okhttp3.internal.cache2.Relay: int SOURCE_FILE
com.horcrux.svg.R$id: int fitBottomStart
com.horcrux.svg.R$styleable: int AppCompatTheme_editTextBackground
com.facebook.react.ReactRootView: com.facebook.react.ReactInstanceManager getReactInstanceManager()
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager access$000(com.facebook.react.modules.debug.DevSettingsModule)
org.jitsi.meet.sdk.BroadcastEvent$Type: org.jitsi.meet.sdk.BroadcastEvent$Type AUDIO_MUTED_CHANGED
com.horcrux.svg.R$style: int Widget_AppCompat_PopupWindow
com.facebook.react.bridge.CallbackImpl: com.facebook.react.bridge.JSInstance mJSInstance
okhttp3.internal.http2.Http2Connection$ReaderRunnable
org.webrtc.WebRtcClassLoader
org.jitsi.meet.sdk.R$attr: int drawableTint
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
org.webrtc.CameraCapturer: void initialize(org.webrtc.SurfaceTextureHelper,android.content.Context,org.webrtc.CapturerObserver)
okhttp3.internal.ws.WebSocketWriter$FrameSink: WebSocketWriter$FrameSink(okhttp3.internal.ws.WebSocketWriter)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadMessage(java.lang.String)
org.jitsi.meet.sdk.BroadcastAction
org.jitsi.meet.R$string: int abc_action_menu_overflow_description
com.ocetnik.timer.BackgroundTimerModule: android.os.PowerManager powerManager
okhttp3.internal.http1.Http1Codec$ChunkedSink: okio.ForwardingTimeout timeout
org.jitsi.meet.R$dimen: int abc_config_prefDialogWidth
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
okhttp3.internal.http.HttpDate$1: java.lang.Object initialValue()
org.jitsi.meet.sdk.R$string: int common_google_play_services_install_text
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String NAME
okio.Buffer: okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset)
com.facebook.react.modules.datepicker.DatePickerDialogModule: android.os.Bundle createFragmentArguments(com.facebook.react.bridge.ReadableMap)
org.webrtc.EncodedImage$Builder: java.lang.Runnable releaseCallback
okhttp3.internal.Util: void addSuppressedIfPossible(java.lang.Throwable,java.lang.Throwable)
okhttp3.internal.cache.DiskLruCache: void close()
org.jitsi.meet.R$attr: int textAppearanceLargePopupMenu
org.webrtc.audio.JavaAudioDeviceModule$AudioTrackErrorCallback: void onWebRtcAudioTrackError(java.lang.String)
com.facebook.react.views.switchview.ReactSwitchManager
okio.Util: int reverseBytesInt(int)
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Integer iceCheckIntervalWeakConnectivityMs
org.jitsi.meet.sdk.R$attr: int iconTintMode
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap translateHeaders(okhttp3.Headers)
com.facebook.react.devsupport.DevInternalSettings: boolean isJSDevModeEnabled()
com.horcrux.svg.R$styleable: int ActionMode_subtitleTextStyle
com.facebook.react.modules.core.Timing: void clearChoreographerIdleCallback()
org.webrtc.RtpTransceiver: org.webrtc.RtpReceiver nativeGetReceiver(long)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
okhttp3.internal.Util: java.nio.charset.Charset UTF_32_BE
org.webrtc.NetworkMonitor: void updateObserverActiveNetworkList(long)
org.jitsi.meet.R$id: int accessibility_custom_action_2
org.jitsi.meet.R$style: int Theme_AppCompat_Light_DarkActionBar
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
org.jitsi.meet.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
org.jitsi.meet.sdk.R$drawable: int common_google_signin_btn_text_light_normal_background
com.horcrux.svg.R$attr: int actionBarPopupTheme
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState valueOf(java.lang.String)
okhttp3.Response: okhttp3.Protocol protocol()
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.reflect.Type)
org.webrtc.MediaSource: org.webrtc.RefCountDelegate refCountDelegate
com.facebook.react.devsupport.JSDebuggerWebSocketClient: com.facebook.react.devsupport.JSDebuggerWebSocketClient$JSDebuggerCallback mConnectCallback
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$sourceURL
com.dropbox.core.v2.sharing.RelinquishFolderMembershipErrorException
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidth(long,float)
com.facebook.react.bridge.CxxCallbackImpl
com.facebook.react.bridge.JSBundleLoader$1: android.content.Context val$context
com.facebook.react.bridge.ActivityEventListener: void onNewIntent(android.content.Intent)
org.jitsi.meet.sdk.PictureInPictureModule: java.lang.String TAG
org.jitsi.meet.R$dimen: int notification_main_column_padding_top
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedMarker(java.lang.String)
com.facebook.react.bridge.WritableNativeArray: void pushInt(int)
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback: void onSuccess()
org.jitsi.meet.sdk.log.JitsiMeetDefaultLogHandler: java.lang.String getDefaultTag()
org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode: org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode valueOf(java.lang.String)
org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate: org.webrtc.NetworkChangeDetector$IPAddress[] getIPAddresses(android.net.LinkProperties)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String getString(java.lang.String)
com.horcrux.svg.RenderableViewManager$LineViewManager
com.horcrux.svg.R$dimen: int abc_text_size_display_3_material
com.google.android.gms.internal.measurement.zzcd$zzc: com.google.android.gms.internal.measurement.zzjp zzj
org.jitsi.meet.sdk.R$color: int common_google_signin_btn_tint
org.jitsi.meet.sdk.R$layout: int redbox_view
org.webrtc.ScreenCapturerAndroid: void startCapture(int,int,int)
com.horcrux.svg.R$id: int action_menu_divider
org.jitsi.meet.sdk.R$raw: int lang_languagesptbr
org.webrtc.RendererCommon$ScalingType
timber.log.Timber$Tree: void log(int,java.lang.String,java.lang.String,java.lang.Throwable)
com.google.android.gms.internal.measurement.zzhf$zza
org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger$LogVolumeTask: void run()
org.jitsi.meet.sdk.R$styleable: int[] FontFamily
org.webrtc.ThreadUtils$1: void run()
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Large
com.facebook.react.devsupport.HMRClient
org.webrtc.voiceengine.WebRtcAudioRecord: void access$900(org.webrtc.voiceengine.WebRtcAudioRecord,java.lang.String)
com.facebook.react.devsupport.BundleDownloader$1: com.facebook.react.devsupport.BundleDownloader this$0
org.webrtc.Camera2Session$CameraStateCallback
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getExitTransitionCallback()
com.facebook.react.bridge.WritableMap: com.facebook.react.bridge.WritableMap copy()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionBarTheme
com.horcrux.svg.R$styleable: int AppCompatTheme_panelMenuListTheme
org.jitsi.meet.sdk.BroadcastIntentHelper: android.content.Intent buildToggleScreenShareIntent()
org.jitsi.meet.sdk.R$raw: int lang_mainru
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
org.jitsi.meet.sdk.R$anim: int abc_shrink_fade_out_from_bottom
org.webrtc.CameraCapturer$4: void onCameraClosed()
com.facebook.imagepipeline.memory.NativeMemoryChunk: NativeMemoryChunk()
androidx.fragment.app.Fragment: void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
org.webrtc.RendererCommon$GlDrawer: void drawRgb(int,float[],int,int,int,int,int,int)
okio.ForwardingSink
com.horcrux.svg.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromList(java.util.List)
org.webrtc.EglBase$ConfigBuilder: org.webrtc.EglBase$ConfigBuilder setOpenGlesVersion(int)
com.facebook.react.bridge.MemoryPressureListener: void handleMemoryPressure(int)
okhttp3.internal.http2.Http2Stream$FramingSink: okio.Timeout timeout()
org.jitsi.meet.R$style: int Base_Widget_AppCompat_Toolbar
com.facebook.react.devsupport.DebugOverlayController: boolean access$200(android.content.Context)
com.facebook.react.bridge.WindowFocusChangeListener
org.jitsi.meet.sdk.ReactInstanceManagerHolder$1: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
org.jitsi.meet.sdk.R$string: int common_google_play_services_enable_title
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_GO_BACK
org.webrtc.NetworkMonitor: void notifyObserversOfConnectionTypeChange(org.webrtc.NetworkChangeDetector$ConnectionType)
com.facebook.react.devsupport.BundleDeltaClient$BundleDeltaJavaClient: byte[] mPreCode
com.dropbox.core.v2.files.DownloadZipErrorException
org.jitsi.meet.sdk.JitsiMeetActivity: java.lang.String JITSI_MEET_CONFERENCE_OPTIONS
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.util.List)
okio.ForwardingSink: void flush()
com.horcrux.svg.SvgView: void setMeetOrSlice(int)
org.jitsi.meet.sdk.R$layout: int abc_action_mode_close_item_material
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: int hashCode()
org.jitsi.meet.R$styleable: int ActionMode_height
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder allEnabledCipherSuites()
com.dropbox.core.v2.team.TeamFolderUpdateSyncSettingsErrorException
okhttp3.internal.http2.Http2Stream$FramingSink
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Menu
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: java.lang.ref.WeakReference mOuter
org.jitsi.meet.R$style: int Widget_AppCompat_ListView_DropDown
com.facebook.react.views.switchview.ReactSwitchManager: void setDisabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
okhttp3.internal.http2.Header: java.lang.String toString()
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
org.jitsi.meet.sdk.R$dimen
org.webrtc.LibvpxVp9Encoder
okhttp3.internal.http.HttpHeaders: boolean hasVaryAll(okhttp3.Response)
org.jitsi.meet.sdk.R$styleable: int SearchView_defaultQueryHint
okhttp3.internal.http2.Hpack$Reader: okio.ByteString readByteString()
org.webrtc.CameraCapturer: int openAttemptsRemaining
com.google.android.gms.internal.measurement.zzbv$zzf: com.google.android.gms.internal.measurement.zzid zzg
org.jitsi.meet.sdk.R$styleable: int FontFamilyFont_font
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
org.webrtc.EglBase10Impl$1FakeSurfaceHolder: void setSizeFromLayout()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.uimanager.ViewManager: java.util.Map getNativeProps()
org.webrtc.Camera2Session: org.webrtc.Camera2Session$SessionState access$202(org.webrtc.Camera2Session,org.webrtc.Camera2Session$SessionState)
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_3
com.horcrux.svg.R$styleable: int AppCompatTheme_listMenuViewStyle
org.webrtc.RtpSender: boolean nativeSetParameters(long,org.webrtc.RtpParameters)
org.jitsi.meet.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_backgroundImage
org.webrtc.voiceengine.WebRtcAudioEffects: boolean shouldEnableNs
org.jitsi.meet.R$attr: int fontProviderAuthority
com.facebook.react.devsupport.RedBoxDialog$OpenStackFrameTask: java.lang.Object doInBackground(java.lang.Object[])
org.webrtc.MediaStream: void dispose()
com.facebook.react.modules.websocket.WebSocketModule: void close(int,java.lang.String,int)
com.facebook.react.bridge.CatalystInstance: java.lang.String getSourceURL()
okhttp3.internal.connection.RouteSelector$Selection: RouteSelector$Selection(java.util.List)
com.horcrux.svg.R$styleable: int ActionBar_background
okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)
org.jitsi.meet.sdk.JitsiMeetActivityDelegate$1: JitsiMeetActivityDelegate$1(int,java.lang.String[],int[])
org.jitsi.meet.sdk.R$drawable: int abc_popup_background_mtrl_mult
org.webrtc.Logging: void e(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.facebook.react.devsupport.JSDevSupport: java.util.Map getConstants()
org.webrtc.RtpTransceiver$RtpTransceiverInit: java.util.List streamIds
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
org.jitsi.meet.R$attr: int alpha
com.facebook.react.bridge.JavaOnlyArray
com.facebook.react.devsupport.DisabledDevSupportManager: void setRemoteJSDebugEnabled(boolean)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation getUIImplementation()
com.facebook.react.devsupport.DevSupportManagerImpl$4
org.webrtc.JniHelper
androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
com.facebook.react.bridge.JavaOnlyMap: boolean equals(java.lang.Object)
com.facebook.react.modules.image.ImageLoaderModule: void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConditionalUserProperty(android.os.Bundle,long)
com.facebook.react.devsupport.StackTraceHelper: java.lang.String COLUMN_KEY
com.facebook.react.devsupport.interfaces.StackFrame: java.lang.String getFile()
okhttp3.MediaType: java.util.regex.Pattern PARAMETER
com.horcrux.svg.R$styleable: int ActionMode_background
com.horcrux.svg.VirtualView: com.facebook.react.uimanager.PointerEvents mPointerEvents
okhttp3.Interceptor
com.dropbox.core.DbxWebAuth$CsrfException
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int)
org.webrtc.EglBase$ConfigBuilder
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_drawableBottomCompat
com.facebook.react.bridge.WritableNativeMap: void putNull(java.lang.String)
okhttp3.internal.http.HttpHeaders: okio.ByteString TOKEN_DELIMITERS
org.jitsi.meet.sdk.R$layout: int abc_activity_chooser_view
com.google.android.gms.internal.measurement.zzcd$zzk: java.lang.String zzf
okhttp3.internal.cache.DiskLruCache$3: okhttp3.internal.cache.DiskLruCache this$0
org.jitsi.meet.sdk.R$string: int catalyst_reload_error
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PC
com.horcrux.svg.R$style: int Widget_AppCompat_ActionBar_TabText
org.webrtc.VideoDecoder$Settings
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
okhttp3.internal.connection.RealConnection: void startHttp2(int)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray fromJavaArgs(java.lang.Object[])
org.webrtc.PeerConnection$IceServer: PeerConnection$IceServer(java.lang.String,java.util.List,java.lang.String,java.lang.String,org.webrtc.PeerConnection$TlsCertPolicy,java.lang.String,java.util.List,java.util.List)
org.jitsi.meet.sdk.R$layout: int notification_action
com.google.android.gms.internal.measurement.zzcd$zzg: long zzak
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setOpacity(android.view.View,float)
okhttp3.Cookie$Builder: java.lang.String value
org.jitsi.meet.sdk.OngoingConferenceTracker: OngoingConferenceTracker()
com.facebook.react.views.image.ReactImageManager: void setHeaders(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.queue.NativeRunnable: NativeRunnable(com.facebook.jni.HybridData)
org.webrtc.ThreadUtils$BlockingOperation: void run()
com.horcrux.svg.R$styleable: int TextAppearance_android_textSize
com.facebook.react.views.progressbar.ProgressBarShadowNode: void setStyle(java.lang.String)
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.Runnable mInvokeDefaultBackPressRunnable
okhttp3.internal.connection.RealConnection: void onSettings(okhttp3.internal.http2.Http2Connection)
com.learnium.RNDeviceInfo.RNDeviceModule: float getFontScaleSync()
okhttp3.Cache: Cache(java.io.File,long)
com.horcrux.svg.R$attr: int buttonBarPositiveButtonStyle
org.jitsi.meet.sdk.R$drawable: int abc_btn_check_material_anim
com.facebook.jni.ThreadScopeSupport: void runStdFunction(long)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
okio.Buffer: okio.Buffer write(byte[],int,int)
org.jitsi.meet.sdk.R$id: int tag_unhandled_key_listeners
com.facebook.react.devsupport.DevServerHelper: void access$900(com.facebook.react.devsupport.DevServerHelper,boolean)
org.jitsi.meet.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
okhttp3.MultipartBody: java.util.List parts()
org.jitsi.meet.R$styleable: int[] AnimatedStateListDrawableCompat
com.facebook.react.bridge.ReactBridge: void staticInit()
okhttp3.OkHttpClient: boolean retryOnConnectionFailure
org.jitsi.meet.sdk.R$attr: int showDividers
com.horcrux.svg.R$style: int Base_V26_Theme_AppCompat
com.horcrux.svg.R$styleable: int SwitchCompat_android_textOff
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)
org.jitsi.meet.R$attr: int subtitleTextStyle
com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback: void onSuccess(java.io.File)
okhttp3.RealCall$AsyncCall: okhttp3.RealCall get()
com.facebook.react.devsupport.DebugOverlayController: boolean canHandleIntent(android.content.Context,android.content.Intent)
org.jitsi.meet.sdk.ConnectionService: void removeConnection(org.jitsi.meet.sdk.ConnectionService$ConnectionImpl)
okhttp3.RequestBody$2: int val$offset
com.facebook.react.views.view.ReactViewGroup: void setBackfaceVisibility(java.lang.String)
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
okhttp3.Response: okhttp3.Response priorResponse()
org.jitsi.meet.R$layout: int abc_list_menu_item_icon
org.jitsi.meet.GoogleServicesHelper
org.webrtc.AndroidVideoDecoder$1: void run()
okhttp3.internal.ws.RealWebSocket: java.util.concurrent.ScheduledExecutorService executor
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
com.horcrux.svg.R$string: int catalyst_settings
okhttp3.internal.Internal: Internal()
org.jitsi.meet.R$styleable: int Toolbar_navigationContentDescription
org.webrtc.RendererCommon: float[] getLayoutMatrix(boolean,float,float)
org.jitsi.meet.sdk.R$attr: int listPreferredItemHeight
okio.BufferedSink: okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset)
com.google.android.gms.internal.measurement.zzci$zzb: com.google.android.gms.internal.measurement.zzci$zzb zzk
com.facebook.react.views.view.ReactViewGroup: void setRemoveClippedSubviews(boolean)
org.jitsi.meet.sdk.R$string: int abc_menu_meta_shortcut_label
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
org.webrtc.EncodedImage$FrameType: org.webrtc.EncodedImage$FrameType valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVbWidth(com.horcrux.svg.MarkerView,float)
org.webrtc.VideoFrame$Buffer: void retain()
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$3: WebsocketJavaScriptExecutor$3(com.facebook.react.devsupport.WebsocketJavaScriptExecutor,com.facebook.react.devsupport.JSDebuggerWebSocketClient,com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback)
org.jitsi.meet.sdk.AndroidSettingsModule
okio.Buffer: okio.BufferedSink writeLong(long)
com.facebook.react.modules.clipboard.ClipboardModule: void setString(java.lang.String)
org.jitsi.meet.sdk.R$styleable: int TextAppearance_android_textSize
org.jitsi.meet.sdk.R$attr: int selectableItemBackgroundBorderless
org.webrtc.PeerConnection$AdapterType: org.webrtc.PeerConnection$AdapterType LOOPBACK
org.webrtc.audio.WebRtcAudioTrack: void access$500(long,int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
org.jitsi.meet.sdk.ParticipantInfo: java.lang.String role
org.jitsi.meet.sdk.R$string: int radiogroup_description
org.webrtc.CameraCapturer$SwitchState: org.webrtc.CameraCapturer$SwitchState valueOf(java.lang.String)
com.horcrux.svg.R$attr: int roundTopRight
org.webrtc.GlRectDrawer$ShaderCallbacks: GlRectDrawer$ShaderCallbacks()
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_CLEAR_CACHE
com.horcrux.svg.R$attr: int roundBottomStart
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder retryOnConnectionFailure(boolean)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String,long)
org.webrtc.NetworkChangeDetector$ConnectionType: org.webrtc.NetworkChangeDetector$ConnectionType CONNECTION_NONE
org.webrtc.VideoEncoder$CodecSpecificInfoVP9
org.webrtc.VideoSource$AspectRatio: int width
org.jitsi.meet.sdk.R$drawable: int abc_cab_background_top_material
org.webrtc.MediaCodecWrapper: void release()
org.jitsi.meet.sdk.R$string: int status_bar_notification_info_overflow
org.jitsi.meet.sdk.R$styleable: int MenuView_android_horizontalDivider
org.webrtc.RtpParameters: org.webrtc.RtpParameters$Rtcp getRtcp()
com.horcrux.svg.R$attr: int colorAccent
com.horcrux.svg.R$styleable: int AppCompatTheme_windowFixedHeightMajor
com.horcrux.svg.R$style: int DialogAnimationSlide
org.jitsi.meet.sdk.ParticipantsService: java.util.Map participantsInfoCallbackMap
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Small_Inverse
org.jitsi.meet.sdk.R$dimen: int notification_main_column_padding_top
com.facebook.react.devsupport.interfaces.PackagerStatusCallback: void onPackagerStatusFetched(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
okhttp3.Cache$2: java.util.Iterator delegate
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_dialogCornerRadius
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.facebook.react.devsupport.DisabledDevSupportManager: void setDevSupportEnabled(boolean)
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Display1
org.jitsi.meet.sdk.R$attr: int ratingBarStyleSmall
org.webrtc.Camera1Session: org.webrtc.CameraSession$Events access$100(org.webrtc.Camera1Session)
com.facebook.react.devsupport.interfaces.DevOptionHandler: void onOptionSelected()
org.jitsi.meet.sdk.JitsiMeetUserInfo: java.net.URL getAvatar()
com.horcrux.svg.R$integer: int status_bar_notification_info_maxnum
androidx.lifecycle.ReflectiveGenericLifecycleObserver
org.webrtc.HardwareVideoEncoder$1: org.webrtc.HardwareVideoEncoder this$0
okhttp3.ResponseBody$BomAwareReader: java.io.Reader delegate
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(java.lang.Object)
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Display4
org.webrtc.VideoFileRenderer: android.os.HandlerThread fileThread
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.webrtc.RtpParameters$DegradationPreference: org.webrtc.RtpParameters$DegradationPreference valueOf(java.lang.String)
com.facebook.react.devsupport.DevServerHelper$5
com.learnium.RNDeviceInfo.DeviceType: com.learnium.RNDeviceInfo.DeviceType[] values()
com.facebook.react.bridge.queue.NativeRunnable: com.facebook.jni.HybridData mHybridData
org.jitsi.meet.R$styleable: int MenuItem_android_numericShortcut
com.horcrux.svg.R$styleable: int MenuItem_android_numericShortcut
com.facebook.react.views.view.ReactViewGroup: android.view.ViewGroup$LayoutParams sDefaultLayoutParam
com.facebook.react.modules.datepicker.DatePickerDialogModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.datepicker.DatePickerDialogModule)
com.facebook.yoga.YogaNative: YogaNative()
org.jitsi.meet.R$drawable: int googleg_standard_color_18
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ListView_DropDown
org.jitsi.meet.R$styleable: int AppCompatTheme_actionMenuTextAppearance
org.webrtc.PeerConnection$BundlePolicy: org.webrtc.PeerConnection$BundlePolicy BALANCED
com.horcrux.svg.RenderableViewManager$PathViewManager: void onDropViewInstance(android.view.View)
okhttp3.internal.cache2.Relay: okio.Buffer upstreamBuffer
org.jitsi.meet.sdk.R$id: int on
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.Object mJSCallsPendingInitLock
org.webrtc.Camera1Session: void listenForBytebufferFrames()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_REACT_CONTEXT_END
org.webrtc.VideoFrameDrawer: int distance(float,float,float,float)
org.webrtc.NetworkMonitorAutoDetect: android.content.IntentFilter intentFilter
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
com.facebook.react.uimanager.UIManagerModule: void setLayoutAnimationEnabledExperimental(boolean)
com.horcrux.svg.ForeignObjectView: void setHeight(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap)
org.jitsi.meet.sdk.R$attr: int popupMenuStyle
com.horcrux.svg.R$style: int Theme_AppCompat_Light_NoActionBar
org.webrtc.WrappedNativeI420Buffer
com.facebook.react.devsupport.DevSupportManagerImpl$24$1
okhttp3.Protocol
org.jitsi.meet.R$dimen: int abc_action_bar_icon_vertical_padding_material
okio.SegmentedByteString: java.lang.String base64()
com.horcrux.svg.R$style: int Platform_V25_AppCompat
com.facebook.react.fabric.FabricUIManager
com.horcrux.svg.R$id: int focusCrop
okio.GzipSource: GzipSource(okio.Source)
org.jitsi.meet.R$drawable: int abc_ratingbar_indicator_material
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeArray getArray(int)
com.google.android.gms.internal.measurement.zzcd$zzb: long zze
com.facebook.react.modules.storage.AsyncStorageModule: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
org.webrtc.CryptoOptions$SFrame
com.google.android.gms.internal.measurement.zzcd$zzg: boolean zzad
org.jitsi.meet.R$styleable: int FontFamilyFont_android_ttcIndex
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void isDataCollectionEnabled(com.google.android.gms.internal.measurement.zzw)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createCachedBundleFromNetworkLoader(java.lang.String,java.lang.String)
com.facebook.react.devsupport.DevServerHelper$BundleType: java.lang.String typeID()
com.facebook.imagepipeline.nativecode.Bitmaps
org.webrtc.Camera1Session$SessionState: org.webrtc.Camera1Session$SessionState RUNNING
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.webrtc.VideoSource: void adaptOutputFormat(int,int,int,int,int)
org.webrtc.JavaI420Buffer: int strideU
com.facebook.react.modules.blob.BlobModule: void release(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState: android.os.Parcelable$Creator CREATOR
org.jitsi.meet.sdk.R$styleable: int TextAppearance_android_shadowDy
org.jitsi.meet.R$dimen: int abc_text_size_button_material
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason[] values()
org.jitsi.meet.R$raw: int lang_languagesca
org.webrtc.VideoEncoderFactory$VideoEncoderSelector: void onCurrentEncoder(org.webrtc.VideoCodecInfo)
org.webrtc.AndroidVideoDecoder: java.lang.Thread createOutputThread()
org.jitsi.meet.sdk.R$dimen: int abc_alert_dialog_button_dimen
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: java.lang.String mUrl
com.dropbox.core.v2.teampolicies.SharedFolderJoinPolicy: com.dropbox.core.v2.teampolicies.SharedFolderJoinPolicy[] values()
org.jitsi.meet.sdk.R$drawable: int abc_switch_track_mtrl_alpha
org.webrtc.VideoCodecMimeType: org.webrtc.VideoCodecMimeType VP8
org.jitsi.meet.sdk.R$color: int common_google_signin_btn_text_light
com.facebook.yoga.YogaNative: void jni_YGNodeRemoveChild(long,long)
org.webrtc.NetworkMonitor: void notifyObserversOfNetworkDisconnect(long)
okio.GzipSource: void consumeHeader()
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getJavaModules(com.facebook.react.bridge.JSInstance)
org.webrtc.VideoFrameDrawer: java.lang.String TAG
com.horcrux.svg.R$drawable: int notification_bg_normal
okhttp3.internal.http1.Http1Codec: boolean isClosed()
org.webrtc.SurfaceTextureHelper: org.webrtc.SurfaceTextureHelper$FrameRefMonitor access$100(org.webrtc.SurfaceTextureHelper)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String getName()
com.google.firebase.components.DependencyException
org.jitsi.meet.sdk.R$attr: int roundingBorderColor
com.facebook.react.devsupport.DevServerHelper$1$1: DevServerHelper$1$1(com.facebook.react.devsupport.DevServerHelper$1)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.Boolean noAcceptTypesSet(java.lang.String[])
okhttp3.Cache: int hitCount
org.jitsi.meet.R$styleable: int TextAppearance_android_textColorLink
org.jitsi.meet.R$attr: int customNavigationLayout
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Integer iceUnwritableMinChecks
org.jitsi.meet.sdk.R$id: int unchecked
org.webrtc.audio.WebRtcAudioManager: int DEFAULT_FRAME_PER_BUFFER
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule createAudioDeviceModule()
org.webrtc.TextureBufferImpl: org.webrtc.YuvConverter getYuvConverter()
org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackThread: org.webrtc.voiceengine.WebRtcAudioTrack this$0
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.OptionalMethod getAlpnSelectedProtocol
org.jitsi.meet.sdk.JitsiMeetView: void dispose()
org.jitsi.meet.R$attr: int contentInsetRight
com.horcrux.svg.R$style: int Widget_AppCompat_PopupMenu
com.facebook.react.bridge.Promise: void reject(java.lang.String)
com.horcrux.svg.ForeignObjectView: void setWidth(com.facebook.react.bridge.Dynamic)
com.learnium.RNDeviceInfo.RNDeviceModule: void initializeHeadphoneConnectionReceiver()
com.dropbox.core.v2.sharing.SetAccessInheritanceErrorException
org.jitsi.meet.R$dimen: int notification_top_pad
org.jitsi.meet.R$color: int error_color_material_light
com.calendarevents.CalendarEvents: java.lang.Integer calAccessConstantMatchingString(java.lang.String)
org.webrtc.EglRenderer: java.lang.Runnable logStatisticsRunnable
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem updateEventEmitterMountItem(int,java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
okhttp3.internal.connection.StreamAllocation: void cancel()
org.webrtc.AndroidVideoDecoder: int DEQUEUE_INPUT_TIMEOUT_US
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Integer getIceUnwritableTimeout()
okhttp3.internal.platform.AndroidPlatform
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.ReactContext)
com.reactnativecommunity.webview.RNCWebViewManager
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
okio.Timeout: long deadlineNanoTime
org.webrtc.BaseBitrateAdjuster: BaseBitrateAdjuster()
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Boolean getAllowCodecSwitching()
org.jitsi.meet.R$styleable: int AppCompatTextHelper_android_drawableLeft
org.webrtc.PeerConnection$IceServer$Builder: org.webrtc.PeerConnection$IceServer$Builder setUsername(java.lang.String)
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.facebook.react.bridge.JavaScriptExecutor: com.facebook.jni.HybridData mHybridData
org.webrtc.RtpParameters$HeaderExtension: RtpParameters$HeaderExtension(java.lang.String,int,boolean)
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Button_Borderless
com.horcrux.svg.R$styleable: int TextAppearance_android_shadowRadius
com.facebook.react.fabric.Binding: void stopSurface(int)
org.webrtc.audio.WebRtcAudioRecord: java.util.concurrent.atomic.AtomicReference audioSourceMatchesRecordingSessionRef
okhttp3.internal.huc.OkHttpURLConnection: java.util.Map getHeaderFields()
org.jitsi.meet.sdk.R$attr: int closeItemLayout
com.horcrux.svg.R$style: int Widget_AppCompat_SeekBar_Discrete
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_ENCODE_SET_URI
com.learnium.RNDeviceInfo.RNDeviceModule: void getSupported32BitAbis(com.facebook.react.bridge.Promise)
com.dropbox.core.v2.team.RevokeDeviceSessionBatchErrorException
androidx.fragment.app.Fragment: boolean mFromLayout
com.horcrux.svg.RenderableViewManager$RectViewManager: void setWidth(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
org.jitsi.meet.R$styleable: int ActionBar_contentInsetStart
okhttp3.Cache: int hitCount()
okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)
com.facebook.react.devsupport.DevSupportManagerImpl$7: void onOptionSelected()
okhttp3.internal.http2.ConnectionShutdownException
org.webrtc.VideoCodecInfo: java.lang.String H264_PROFILE_CONSTRAINED_HIGH
com.google.firebase.FirebaseTooManyRequestsException
com.facebook.react.views.viewpager.ReactViewPagerManager: android.view.View getChildAt(com.facebook.react.views.viewpager.ReactViewPager,int)
org.webrtc.PeerConnection$CandidateNetworkPolicy: PeerConnection$CandidateNetworkPolicy(java.lang.String,int)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableArray getSupported32BitAbisSync()
org.webrtc.DefaultVideoEncoderFactory: DefaultVideoEncoderFactory(org.webrtc.EglBase$Context,boolean,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$1000(com.learnium.RNDeviceInfo.RNDeviceModule)
okhttp3.internal.tls.CertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] mLocalTypeArray
org.jitsi.meet.sdk.R$attr: int editTextBackground
com.horcrux.svg.R$attr: int progressBarImageScaleType
com.facebook.react.devsupport.WebsocketJavaScriptExecutor: void loadApplicationScript(java.lang.String)
okhttp3.internal.cache.CacheStrategy$Factory: CacheStrategy$Factory(long,okhttp3.Request,okhttp3.Response)
org.jitsi.meet.sdk.BroadcastIntentHelper: android.content.Intent buildSetVideoMutedIntent(boolean)
org.jitsi.meet.sdk.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
org.jitsi.meet.R$drawable: int abc_btn_switch_to_on_mtrl_00012
co.apptailor.googlesignin.RNGoogleSigninButtonViewManager: void setDisabled(com.google.android.gms.common.SignInButton,boolean)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setDefaultUseCaches(boolean)
com.facebook.react.devsupport.interfaces.DevSupportManager: java.lang.String getLastErrorTitle()
org.jitsi.meet.sdk.R$color: int accent_material_light
org.jitsi.meet.R$styleable: int MenuItem_android_orderInCategory
org.jitsi.meet.sdk.R$color: int abc_tint_edittext
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_popupMenuStyle
com.horcrux.svg.R$styleable: int Toolbar_titleMarginStart
org.webrtc.audio.JavaAudioDeviceModule$AudioSamples: int getChannelCount()
com.google.android.gms.internal.measurement.zzbv$zza: int zzc
org.webrtc.voiceengine.WebRtcAudioEffects: boolean canUseAcousticEchoCanceler()
org.webrtc.audio.WebRtcAudioTrack: java.nio.ByteBuffer byteBuffer
org.webrtc.PeerConnection$SignalingState
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()
com.facebook.react.devsupport.DevSupportManagerImpl: java.util.LinkedHashMap mCustomDevOptions
okhttp3.Cache: void initialize()
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
org.jitsi.meet.sdk.R$color: R$color()
androidx.fragment.app.Fragment: java.lang.CharSequence getText(int)
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String TAG
com.facebook.react.views.art.ARTShapeShadowNode
okhttp3.Route: int hashCode()
com.facebook.react.devsupport.DevInternalSettings: com.facebook.react.packagerconnection.PackagerConnectionSettings getPackagerConnectionSettings()
com.facebook.react.devsupport.InspectorPackagerConnection: void access$300(com.facebook.react.devsupport.InspectorPackagerConnection,java.lang.String,java.lang.Object)
com.facebook.jni.HybridClassBase
org.webrtc.VideoEncoder$ScalingSettings: java.lang.String toString()
org.jitsi.meet.R$string: int common_google_play_services_enable_button
okhttp3.internal.connection.RealConnection: java.net.Socket socket
com.facebook.react.devsupport.DevSupportManagerImpl: java.lang.String getLastErrorTitle()
okhttp3.CipherSuite: java.util.List forJavaNames(java.lang.String[])
org.jitsi.meet.sdk.R$attr: int tint
okhttp3.HttpUrl: java.lang.String USERNAME_ENCODE_SET
com.horcrux.svg.RadialGradientView: void setCx(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.R$string: int scrollbar_description
com.facebook.react.devsupport.DevSupportManagerImpl$13: com.facebook.react.devsupport.DevSupportManagerImpl this$0
okhttp3.OkHttpClient$Builder: javax.net.SocketFactory socketFactory
okio.ByteString: void writeObject(java.io.ObjectOutputStream)
org.jitsi.meet.sdk.R$attr: int divider
org.jitsi.meet.R$dimen: int notification_action_text_size
com.facebook.proguard.annotations.DoNotStrip
org.webrtc.HardwareVideoEncoder: org.webrtc.EglBase14$Context sharedContext
com.horcrux.svg.SVGLength$UnitType
org.webrtc.NetworkMonitor: void nativeNotifyOfNetworkPreference(long,org.webrtc.NetworkChangeDetector$ConnectionType,int)
org.webrtc.TextureBufferImpl$2: void onRelease(org.webrtc.TextureBufferImpl)
org.webrtc.RtpParameters$Encoding: boolean active
org.webrtc.EglBase14Impl: java.lang.String TAG
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ProgressBar_Horizontal
okhttp3.internal.cache.CacheStrategy$Factory: long nowMillis
org.jitsi.meet.R$id: int accessibility_role
com.reactnativecommunity.webview.RNCWebViewModule: android.content.Intent getFileChooserIntent(java.lang.String[],boolean)
com.horcrux.svg.R$style: int CalendarDatePickerStyle
org.jitsi.meet.R$attr: int contentInsetEnd
org.webrtc.MediaStream
okhttp3.Challenge: java.util.Map authParams()
org.webrtc.CameraCapturer: android.content.Context applicationContext
okhttp3.internal.ws.WebSocketProtocol: WebSocketProtocol()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)
org.webrtc.H264Utils: java.lang.String H264_FMTP_PROFILE_LEVEL_ID
okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor: boolean proceed
org.webrtc.CameraEnumerationAndroid$CaptureFormat$FramerateRange: int min
com.horcrux.svg.R$attr: int listPreferredItemHeight
okhttp3.RealCall: java.lang.String toLoggableString()
com.reactnativecommunity.webview.RNCWebViewModule: int FILE_DOWNLOAD_PERMISSION_REQUEST
org.webrtc.audio.WebRtcAudioRecord: int CALLBACK_BUFFER_SIZE_MS
com.facebook.react.modules.storage.AsyncStorageModule: boolean ensureDatabase()
com.facebook.yoga.YogaPrintOptions
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext)
org.jitsi.meet.MainActivity: void onPictureInPictureModeChanged(boolean)
org.webrtc.NetworkMonitorAutoDetect: void connectionTypeChanged(org.webrtc.NetworkMonitorAutoDetect$NetworkState)
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: void close()
org.jitsi.meet.R$string: int catalyst_debug_nuclide_error
com.dropbox.core.v2.sharing.SharedFolderAccessErrorException
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$KeyType keyType
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View)
com.dropbox.core.v2.common.PathRootError$Tag: com.dropbox.core.v2.common.PathRootError$Tag valueOf(java.lang.String)
org.jitsi.meet.sdk.R$color: int primary_text_disabled_material_dark
okhttp3.internal.http2.Http2Writer: void goAway(int,okhttp3.internal.http2.ErrorCode,byte[])
org.jitsi.meet.R$attr: int dialogTheme
okhttp3.internal.http2.Hpack: int PREFIX_6_BITS
org.jitsi.meet.sdk.R$styleable: int[] SimpleDraweeView
com.facebook.react.views.modal.ReactModalHostView: android.view.View getContentView()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_START
org.jitsi.meet.R$string: int catalyst_sample_profiler_disable
com.facebook.react.devsupport.DevSupportManagerImpl$26
org.jitsi.meet.R$dimen: int tooltip_y_offset_non_touch
okhttp3.TlsVersion: okhttp3.TlsVersion[] $VALUES
com.facebook.react.devsupport.RedBoxDialog: android.widget.Button mReportButton
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
org.jitsi.meet.R$dimen: int abc_text_size_display_2_material
org.webrtc.JavaI420Buffer: int getWidth()
org.webrtc.CameraCapturer$7: void run()
okhttp3.internal.http2.Hpack$Writer: okio.Buffer out
org.webrtc.EglRenderer: boolean mirrorHorizontally
org.webrtc.Size: int hashCode()
org.webrtc.RtpParameters$Encoding: java.lang.Double getScaleResolutionDownBy()
org.jitsi.meet.sdk.R$layout: int abc_tooltip
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_STOP
org.webrtc.RtpReceiver: long nativeSetObserver(long,org.webrtc.RtpReceiver$Observer)
org.jitsi.meet.sdk.R$raw: int lang_languagessc
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.RequestBody)
okio.Pipe$PipeSource
org.webrtc.NetworkMonitor: org.webrtc.NetworkChangeDetector$ConnectionType getCurrentConnectionType()
com.horcrux.svg.R$id: int search_button
org.webrtc.voiceengine.WebRtcAudioTrack: int usageAttribute
com.facebook.react.bridge.WritableNativeMap: com.facebook.jni.HybridData initHybrid()
org.jitsi.meet.R$styleable: int DrawerArrowToggle_barLength
org.webrtc.voiceengine.WebRtcAudioRecord: org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordErrorCallback errorCallback
org.jitsi.meet.R$styleable: int DrawerArrowToggle_gapBetweenBars
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_listMenuViewStyle
okhttp3.internal.cache.CacheStrategy$Factory: boolean hasConditions(okhttp3.Request)
org.jitsi.meet.sdk.R$styleable: int ActionBar_homeLayout
com.google.android.gms.internal.measurement.zzbv$zzd: int zzc
org.webrtc.Camera1Session: void updateCameraParameters(android.hardware.Camera,android.hardware.Camera$Parameters,org.webrtc.CameraEnumerationAndroid$CaptureFormat,org.webrtc.Size,boolean)
org.jitsi.meet.R$dimen: int abc_dialog_min_width_major
org.jitsi.meet.R$string: int ongoing_notification_action_hang_up
com.oney.WebRTCModule.WebRTCModule: org.webrtc.MediaConstraints constraintsForOptions(com.facebook.react.bridge.ReadableMap)
org.webrtc.PeerConnection: boolean removeTrack(org.webrtc.RtpSender)
okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)
okhttp3.internal.cache2.Relay: long FILE_HEADER_SIZE
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody)
okhttp3.ConnectionPool: boolean $assertionsDisabled
okio.GzipSource
org.webrtc.voiceengine.WebRtcAudioRecord: int CALLBACK_BUFFER_SIZE_MS
org.jitsi.meet.R$style: int Widget_AppCompat_Light_ActionBar_TabView
com.facebook.react.bridge.MemoryPressureListener
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
org.webrtc.CameraEnumerationAndroid: CameraEnumerationAndroid()
com.horcrux.svg.R$id: int action_text
androidx.viewpager.widget.ViewPager: int getPageMargin()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setX(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
com.horcrux.svg.RenderableView: void setPropList(com.facebook.react.bridge.ReadableArray)
com.facebook.react.devsupport.interfaces.DevSupportManager: void setFpsDebugEnabled(boolean)
okhttp3.internal.huc.OkHttpURLConnection: int getResponseCode()
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
com.facebook.react.bridge.PromiseImpl: int ERROR_STACK_FRAME_LIMIT
org.jitsi.meet.R$styleable: int MenuItem_showAsAction
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginPercent(long,int,float)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenName(com.google.android.gms.internal.measurement.zzw)
com.facebook.react.views.viewpager.ReactViewPager: int getViewCountInAdapter()
org.webrtc.JniCommon: java.nio.ByteBuffer nativeAllocateByteBuffer(int)
okhttp3.RequestBody$1: long contentLength()
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV1
org.webrtc.TurnCustomizer: void nativeFreeTurnCustomizer(long)
okio.Sink: void close()
org.webrtc.EncodedImage$Builder: int rotation
okhttp3.Dispatcher: java.util.Deque runningSyncCalls
org.webrtc.PeerConnection$BundlePolicy: org.webrtc.PeerConnection$BundlePolicy MAXBUNDLE
com.dropbox.core.util.IOUtil$WriteException
com.google.firebase.crashlytics.internal.network.HttpMethod: com.google.firebase.crashlytics.internal.network.HttpMethod valueOf(java.lang.String)
org.jitsi.meet.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
com.facebook.react.uimanager.LayoutShadowNode: void setAlignSelf(java.lang.String)
org.jitsi.meet.sdk.R$styleable: int LinearLayoutCompat_android_orientation
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(com.facebook.react.views.modal.ReactModalHostView)
org.jitsi.meet.sdk.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2$1: void onSuccess(java.lang.String)
com.facebook.react.views.viewpager.ReactViewPagerManager: int COMMAND_SET_PAGE
okhttp3.ConnectionSpec$Builder: boolean supportsTlsExtensions
com.facebook.react.uimanager.LayoutShadowNode: void setPosition(java.lang.String)
com.horcrux.svg.RenderableView
org.jitsi.meet.sdk.R$dimen: int abc_button_inset_vertical_material
org.jitsi.meet.sdk.R$color: int material_grey_300
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
com.facebook.react.devsupport.BundleDeltaClient: android.util.Pair processDelta(okio.BufferedSource,java.io.File)
org.jitsi.meet.sdk.R$dimen: int abc_text_size_display_2_material
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: int mColumn
okhttp3.Cache: Cache(java.io.File,long,okhttp3.internal.io.FileSystem)
com.horcrux.svg.R$dimen: int hint_alpha_material_dark
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ListPopupWindow
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
okhttp3.internal.cache.DiskLruCache: void rebuildJournal()
org.jitsi.meet.sdk.R$styleable: int ColorStateListItem_android_color
org.jitsi.meet.sdk.BroadcastAction$Type: org.jitsi.meet.sdk.BroadcastAction$Type buildTypeFromAction(java.lang.String)
com.facebook.react.devsupport.FpsView: com.facebook.react.modules.debug.FpsDebugFrameCallback access$100(com.facebook.react.devsupport.FpsView)
org.jitsi.meet.R$raw: int lang_mainbg
org.webrtc.audio.WebRtcAudioRecord: org.webrtc.audio.JavaAudioDeviceModule$SamplesReadyCallback access$800(org.webrtc.audio.WebRtcAudioRecord)
org.jitsi.meet.R$dimen: int abc_text_size_subtitle_material_toolbar
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ERROR_NO_ACTIVITY
okhttp3.HttpUrl: java.lang.String encodedPath()
com.horcrux.svg.R$dimen: int abc_dialog_padding_top_material
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_LINE_NUMBER
org.webrtc.BitrateAdjuster: int getAdjustedBitrateBps()
org.jitsi.meet.sdk.net.NAT64AddrInfo: java.lang.String hexStringToIPv6String(java.lang.StringBuilder)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Writer writer
org.webrtc.PeerConnection$IceServer$Builder: org.webrtc.PeerConnection$IceServer$Builder setTlsAlpnProtocols(java.util.List)
okhttp3.OkHttpClient$Builder: void setInternalCache(okhttp3.internal.cache.InternalCache)
org.jitsi.meet.sdk.R$attr: int backgroundStacked
org.webrtc.Camera1Session$2: org.webrtc.Camera1Session this$0
org.webrtc.NetworkMonitorAutoDetect$NetworkState: int underlyingNetworkTypeForVpn
okhttp3.internal.huc.OkHttpsURLConnection: void setDefaultUseCaches(boolean)
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
org.webrtc.CameraCapturer: java.lang.String access$1300(org.webrtc.CameraCapturer)
com.facebook.react.views.view.ReactViewManager: void removeAllViews(android.view.ViewGroup)
org.jitsi.meet.sdk.R$color: int abc_tint_btn_checkable
org.jitsi.meet.R$styleable: int ActionMode_background
com.facebook.react.bridge.JavaOnlyMap: void putNull(java.lang.String)
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_2
com.facebook.react.packagerconnection.NotificationOnlyHandler: java.lang.String TAG
androidx.appcompat.widget.SearchView: int getInputType()
com.google.android.gms.internal.measurement.zzhv: int zzc
okhttp3.internal.huc.OkHttpsURLConnection: boolean getDefaultUseCaches()
org.jitsi.meet.sdk.R$attr: int showAsAction
org.webrtc.voiceengine.WebRtcAudioTrack: void access$700(org.webrtc.voiceengine.WebRtcAudioTrack,java.lang.String)
com.horcrux.svg.R$attr: int textAppearanceSearchResultSubtitle
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_END
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA256
org.jitsi.meet.R$attr: int roundBottomEnd
org.jitsi.meet.R$attr: int checkboxStyle
org.webrtc.DataChannel$State: org.webrtc.DataChannel$State CLOSING
org.webrtc.VideoDecoderFallback: org.webrtc.VideoDecoder fallback
org.jitsi.meet.sdk.R$layout: int notification_template_part_chronometer
com.horcrux.svg.R$style: int TextAppearance_Compat_Notification_Time
okio.GzipSink: okio.BufferedSink sink
com.facebook.react.devsupport.InspectorPackagerConnection: java.lang.String mPackageName
org.webrtc.EglRenderer$ErrorCallback
org.jitsi.meet.R$attr: int actionBarTabTextStyle
com.oney.WebRTCModule.WebRTCModule: void mediaStreamRemoveTrackAsync(java.lang.String,java.lang.String)
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_colorAccent
org.jitsi.meet.R$style: int ThemeOverlay_AppCompat_Dark
org.jitsi.meet.R$style: int Theme_AppCompat_DayNight_Dialog
okhttp3.internal.http2.Header: okio.ByteString TARGET_METHOD
org.webrtc.PeerConnection: void setAudioPlayout(boolean)
org.webrtc.HardwareVideoEncoder: int VIDEO_ControlRateConstant
com.facebook.react.devsupport.RedBoxDialog$3: com.facebook.react.devsupport.RedBoxDialog this$0
org.jitsi.meet.R$styleable: int MenuItem_actionProviderClass
com.facebook.yoga.YogaNative: void jni_YGNodeSetIsReferenceBaseline(long,boolean)
org.jitsi.meet.sdk.JavaScriptSandboxModule: void evaluate(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec RESTRICTED_TLS
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2: boolean access$202(com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2,boolean)
org.jitsi.meet.R$string: R$string()
okhttp3.Headers: Headers(okhttp3.Headers$Builder)
org.jitsi.meet.R$id: int search_mag_icon
org.webrtc.EglBase10Impl: javax.microedition.khronos.egl.EGLSurface eglSurface
com.horcrux.svg.RenderableView: void render(android.graphics.Canvas,android.graphics.Paint,float)
org.jitsi.meet.R$string: int combobox_description
okhttp3.internal.http.HttpCodec: okhttp3.Response$Builder readResponseHeaders(boolean)
okhttp3.OkHttpClient$Builder: int callTimeout
org.webrtc.voiceengine.WebRtcAudioManager: void setBlacklistDeviceForOpenSLESUsage(boolean)
org.webrtc.VideoFileRenderer: java.io.FileOutputStream videoOutFile
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.Class serverProviderClass
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setHasScrollEvent(boolean)
org.jitsi.meet.sdk.AndroidSettingsModule: java.lang.String getName()
org.jitsi.meet.R$raw: int lang_mainoc
com.horcrux.svg.R$string: int abc_activitychooserview_choose_application
org.jitsi.meet.sdk.R$attr: int measureWithLargestChild
okio.SegmentedByteString: okio.ByteString sha256()
com.google.android.gms.internal.measurement.zzcd$zze: com.google.android.gms.internal.measurement.zzid zzi
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ProgressBar
org.jitsi.meet.R$attr: int editTextStyle
okhttp3.internal.ws.RealWebSocket: void connect(okhttp3.OkHttpClient)
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: boolean access$400(com.facebook.react.devsupport.InspectorPackagerConnection$Connection)
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
com.facebook.react.devsupport.BundleDownloader: int FILES_CHANGED_COUNT_NOT_BUILT_BY_BUNDLER
org.jitsi.meet.sdk.ConnectionService: void onCreateOutgoingConnectionFailed(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)
com.facebook.react.uimanager.events.RCTEventEmitter
org.jitsi.meet.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String toHumanReadableAscii(java.lang.String)
androidx.fragment.app.Fragment: android.view.View requireView()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_android_windowAnimationStyle
com.horcrux.svg.R$color: int foreground_material_dark
org.webrtc.voiceengine.WebRtcAudioUtils: boolean isAutomaticGainControlSupported()
com.facebook.react.bridge.ReactContext: boolean isOnUiQueueThread()
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setInjectedJavaScriptForMainFrameOnly(boolean)
okhttp3.internal.platform.Platform: boolean isConscryptPreferred()
okhttp3.internal.connection.RouteSelector: boolean hasNext()
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric$2: org.jitsi.meet.sdk.AudioDeviceHandlerGeneric this$0
org.webrtc.voiceengine.WebRtcAudioRecord: byte[] emptyBytes
okio.BufferedSource: long indexOf(okio.ByteString)
org.jitsi.meet.sdk.R$attr: int paddingTopNoTitle
org.webrtc.NetworkChangeDetector$NetworkInformation: org.webrtc.NetworkChangeDetector$ConnectionType getConnectionType()
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String val$sourceURL
okhttp3.internal.huc.OkHttpURLConnection: java.util.Map getRequestProperties()
org.jitsi.meet.sdk.R$attr: int subMenuArrow
com.google.android.gms.internal.measurement.zzcd$zzg: int zzc
org.webrtc.GlTextureFrameBuffer: int getTextureId()
org.webrtc.AudioSource: long getNativeAudioSource()
com.facebook.react.devsupport.interfaces.DevSupportManager: boolean hasUpToDateJSBundleInCache()
org.jitsi.meet.sdk.R$attr: int defaultQueryHint
com.horcrux.svg.R$drawable: int tooltip_frame_light
okhttp3.internal.Util: java.nio.charset.Charset UTF_32_LE
org.jitsi.meet.R$attr: int tooltipForegroundColor
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_actualImageResource
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double)
org.jitsi.meet.R$styleable: int TextAppearance_android_textColor
org.webrtc.JavaI420Buffer: int getStrideY()
org.jitsi.meet.sdk.R$layout: int abc_search_dropdown_item_icons_2line
okio.Okio: java.util.logging.Logger logger
okhttp3.Cache$Entry: boolean matches(okhttp3.Request,okhttp3.Response)
com.facebook.react.devsupport.DebugOverlayController: android.widget.FrameLayout access$002(com.facebook.react.devsupport.DebugOverlayController,android.widget.FrameLayout)
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
org.webrtc.CameraCapturer: org.webrtc.CameraVideoCapturer$CameraEventsHandler access$1000(org.webrtc.CameraCapturer)
okhttp3.internal.tls.BasicTrustRootIndex: BasicTrustRootIndex(java.security.cert.X509Certificate[])
androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
org.jitsi.meet.sdk.R$dimen: int abc_floating_window_z
okio.Buffer: long indexOf(okio.ByteString,long)
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
org.webrtc.voiceengine.WebRtcAudioRecord$AudioSamples: int getAudioFormat()
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundingBorderWidth
com.horcrux.svg.CircleView: void setCx(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray deepClone(com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.R$styleable: int AppCompatTheme_listPopupWindowStyle
org.webrtc.NetworkMonitorAutoDetect$SimpleNetworkCallback: void onLinkPropertiesChanged(android.net.Network,android.net.LinkProperties)
com.dropbox.core.v2.team.GroupSelectorErrorException
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
okhttp3.internal.huc.BufferedRequestBody: long contentLength()
org.jitsi.meet.R$color: int primary_dark_material_dark
com.kevinresol.react_native_default_preference.RNDefaultPreferenceModule: void setName(java.lang.String,com.facebook.react.bridge.Promise)
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action: org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action MUTE
com.facebook.react.devsupport.JSDebuggerWebSocketClient: java.util.concurrent.atomic.AtomicInteger mRequestID
okhttp3.RealCall: boolean isExecuted()
okhttp3.internal.Internal: java.net.Socket deduplicate(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)
okio.BufferedSink: okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset)
org.webrtc.CapturerObserver: void onCapturerStopped()
com.horcrux.svg.R$dimen: int compat_notification_large_icon_max_height
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity requireActivity()
com.facebook.react.views.scroll.ReactScrollView: void setSnapToStart(boolean)
org.webrtc.HardwareVideoEncoder$YuvFormat: HardwareVideoEncoder$YuvFormat(java.lang.String,int,org.webrtc.HardwareVideoEncoder$1)
okhttp3.internal.http2.Header: Header(okio.ByteString,okio.ByteString)
androidx.fragment.app.Fragment: androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
com.horcrux.svg.R$styleable: int[] RecycleListView
okhttp3.Cache$CacheRequestImpl: okio.Sink body()
org.webrtc.PeerConnectionDependencies$Builder: org.webrtc.PeerConnectionDependencies$Builder setSSLCertificateVerifier(org.webrtc.SSLCertificateVerifier)
org.webrtc.RTCStatsReport: org.webrtc.RTCStatsReport create(long,java.util.Map)
org.webrtc.audio.JavaAudioDeviceModule$AudioSamples: JavaAudioDeviceModule$AudioSamples(int,int,int,byte[])
okhttp3.internal.huc.OkHttpsURLConnection
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowOffset(com.facebook.react.bridge.ReadableMap)
okio.Timeout$1
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableTopCompat
org.webrtc.Camera2Capturer: void printStackTrace()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection build()
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: java.lang.String access$200()
com.horcrux.svg.R$style: int Widget_AppCompat_CompoundButton_Switch
org.jitsi.meet.R$raw: int lang_languagesar
org.jitsi.meet.sdk.R$styleable: int ActionMenuItemView_android_minWidth
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
org.webrtc.Camera1Capturer: Camera1Capturer(java.lang.String,org.webrtc.CameraVideoCapturer$CameraEventsHandler,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setEndFillColor(int)
okhttp3.Cache: void trackResponse(okhttp3.internal.cache.CacheStrategy)
okio.Buffer: okio.BufferedSink write(okio.ByteString)
org.jitsi.meet.sdk.BroadcastAction$Type: org.jitsi.meet.sdk.BroadcastAction$Type RETRIEVE_PARTICIPANTS_INFO
com.facebook.react.devsupport.DoubleTapReloadRecognizer$1: DoubleTapReloadRecognizer$1(com.facebook.react.devsupport.DoubleTapReloadRecognizer)
org.webrtc.NV21Buffer: byte[] data
org.webrtc.MediaCodecUtils: java.lang.Integer selectColorFormat(int[],android.media.MediaCodecInfo$CodecCapabilities)
org.webrtc.SurfaceTextureHelper: void returnTextureFrame()
com.facebook.react.modules.camera.CameraRollManager: java.lang.String ERROR_UNABLE_TO_LOAD_PERMISSION
org.webrtc.CameraCapturer: org.webrtc.CameraSession access$702(org.webrtc.CameraCapturer,org.webrtc.CameraSession)
com.horcrux.svg.R$attr: int subtitleTextStyle
com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback: void onFailure(com.facebook.react.devsupport.JSCHeapCapture$CaptureException)
com.facebook.react.bridge.DynamicFromObject: boolean isNull()
okhttp3.internal.http1.Http1Codec$AbstractSource: void endOfInput(boolean,java.io.IOException)
org.jitsi.meet.sdk.R$styleable: int MenuView_android_headerBackground
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getSourceURL()
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.facebook.react.devsupport.DevSupportManagerImpl
org.webrtc.ScreenCapturerAndroid: org.webrtc.SurfaceTextureHelper surfaceTextureHelper
org.jitsi.meet.R$xml: int rn_dev_preferences
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_roundBottomEnd
org.webrtc.BaseBitrateAdjuster
com.horcrux.svg.SvgView: android.graphics.Canvas mCanvas
org.webrtc.EglBase14Impl$Context
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mJSQueueThread
com.facebook.common.time.AwakeTimeSinceBootClock
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer access$200(com.facebook.react.animated.NativeAnimatedModule)
org.webrtc.VideoCodecStatus: org.webrtc.VideoCodecStatus REQUEST_SLI
org.webrtc.Camera1Session$1: void onError(int,android.hardware.Camera)
org.webrtc.MediaConstraints$KeyValuePair: java.lang.String toString()
okhttp3.internal.http2.Hpack$Reader: void adjustDynamicTableByteCount()
com.facebook.react.devsupport.WebsocketJavaScriptExecutor: int CONNECT_RETRY_COUNT
org.jitsi.meet.R$drawable: int btn_radio_off_mtrl
okhttp3.internal.http2.Http2Codec: java.util.List HTTP_2_SKIPPED_REQUEST_HEADERS
org.webrtc.voiceengine.WebRtcAudioManager: boolean getStereoOutput()
org.webrtc.PeerConnection$CandidateNetworkPolicy: org.webrtc.PeerConnection$CandidateNetworkPolicy[] $VALUES
org.jitsi.meet.R$attr: int contentInsetEndWithActions
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap mLocalMap
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
okhttp3.EventListener$2: EventListener$2(okhttp3.EventListener)
com.facebook.react.devsupport.RedBoxDialog$StackAdapter$FrameViewHolder: android.widget.TextView access$1000(com.facebook.react.devsupport.RedBoxDialog$StackAdapter$FrameViewHolder)
org.webrtc.MediaCodecUtils: boolean isSoftwareOnlyQOrHigher(android.media.MediaCodecInfo)
org.webrtc.SurfaceEglRenderer: void setFpsReduction(float)
com.facebook.react.devsupport.RedBoxDialog$1: void onReportError(android.text.SpannedString)
org.webrtc.VideoSource: java.lang.Object videoProcessorLock
org.webrtc.PeerConnectionFactory$Builder: PeerConnectionFactory$Builder()
org.webrtc.WrappedNativeI420Buffer: java.nio.ByteBuffer getDataV()
org.jitsi.meet.R$styleable: int[] LinearLayoutCompat_Layout
com.facebook.react.bridge.JavaScriptContextHolder: long mContext
org.webrtc.NetworkMonitor: org.webrtc.NetworkChangeDetector createNetworkChangeDetector(android.content.Context)
org.jitsi.meet.R$layout: int abc_list_menu_item_layout
okio.Pipe$PipeSink: okio.Pipe this$0
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newUIBackgroundTreadSpec(java.lang.String)
okio.Buffer: long read(okio.Buffer,long)
org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode: org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode[] $VALUES
com.google.android.gms.internal.measurement.zzcd$zze: float zzg
com.facebook.common.time.RealtimeSinceBootClock
com.facebook.react.modules.camera.ImageEditingManager: java.lang.String getFileExtensionForType(java.lang.String)
okhttp3.RequestBody$3: okhttp3.MediaType val$contentType
org.jitsi.meet.sdk.ConnectionService: com.facebook.react.bridge.Promise unregisterStartCallPromise(java.lang.String)
org.jitsi.meet.R$styleable: int[] MenuItem
org.webrtc.PeerConnectionFactory: long nativeGetNativePeerConnectionFactory(long)
org.webrtc.DynamicBitrateAdjuster: DynamicBitrateAdjuster()
com.facebook.react.devsupport.DevSupportManagerImpl$12: com.facebook.react.devsupport.DevSupportManagerImpl this$0
org.jitsi.meet.R$string: int abc_action_bar_home_description
org.jitsi.meet.R$dimen: int tooltip_horizontal_padding
org.webrtc.PeerConnection$Observer: void onIceGatheringChange(org.webrtc.PeerConnection$IceGatheringState)
okio.HashingSource: okio.HashingSource md5(okio.Source)
com.horcrux.svg.R$styleable: int ViewBackgroundHelper_backgroundTint
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: java.lang.Boolean access$802(org.jitsi.meet.sdk.JitsiMeetConferenceOptions,java.lang.Boolean)
org.jitsi.meet.sdk.R$color: int error_color_material_dark
okhttp3.internal.http.HttpHeaders: java.lang.String readQuotedString(okio.Buffer)
com.horcrux.svg.R$attr: int actionModeBackground
okhttp3.internal.http.BridgeInterceptor: okhttp3.CookieJar cookieJar
org.webrtc.VideoCodecInfo: java.lang.String H264_FMTP_PACKETIZATION_MODE
org.jitsi.meet.sdk.WiFiStatsModule: int SIGNAL_LEVEL_SCALE
okhttp3.internal.http1.Http1Codec$AbstractSource: okio.ForwardingTimeout timeout
org.jitsi.meet.R$drawable: int abc_list_selector_background_transition_holo_dark
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setY(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.VirtualView: boolean mOnLayout
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.bridge.WritableMap access$300(okhttp3.Headers)
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_BUSY
org.webrtc.audio.WebRtcAudioTrack: void setNativeAudioTrack(long)
com.facebook.react.views.art.ARTSurfaceViewManager: java.lang.Class getShadowNodeClass()
org.webrtc.PeerConnection$AdapterType: org.webrtc.PeerConnection$AdapterType valueOf(java.lang.String)
org.jitsi.meet.sdk.R$raw: int lang_languageszhtw
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ListView_DropDown
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignSelf(long,int)
okhttp3.internal.cache.DiskLruCache$Entry: void writeLengths(okio.BufferedSink)
org.webrtc.Metrics: void add(java.lang.String,org.webrtc.Metrics$HistogramInfo)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.horcrux.svg.R$styleable: int Toolbar_contentInsetLeft
com.facebook.react.bridge.ReadableMap: int getInt(java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCx(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)
com.calendarevents.CalendarEvents: com.facebook.react.bridge.WritableNativeArray findReminderByEventId(java.lang.String,long)
okhttp3.internal.http2.Header: int hpackSize
org.webrtc.audio.WebRtcAudioTrack: org.webrtc.audio.JavaAudioDeviceModule$AudioTrackErrorCallback errorCallback
org.webrtc.HardwareVideoEncoder: java.nio.ByteBuffer configBuffer
org.webrtc.EncodedImage$Builder: org.webrtc.EncodedImage$Builder setEncodedWidth(int)
com.horcrux.svg.R$id: int async
com.horcrux.svg.R$attr: int seekBarStyle
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Body2
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableArray getSupportedAbisSync()
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ActionBar
com.facebook.react.bridge.ReactContext: void resetPerfStats()
org.webrtc.PeerConnection: boolean nativeOldGetStats(org.webrtc.StatsObserver,long)
org.jitsi.meet.R$styleable: int SimpleDraweeView_roundTopRight
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxHeight(long)
org.webrtc.PeerConnection: boolean addIceCandidate(org.webrtc.IceCandidate)
com.horcrux.svg.R$drawable: int abc_btn_radio_material
org.webrtc.VideoProcessor$FrameAdaptationParameters
com.facebook.react.devsupport.DevSupportManagerImpl: android.util.Pair access$800(com.facebook.react.devsupport.DevSupportManagerImpl,android.util.Pair)
com.facebook.react.animated.NativeAnimatedModule: void setNodesManager(com.facebook.react.animated.NativeAnimatedNodesManager)
org.webrtc.audio.JavaAudioDeviceModule
org.webrtc.RtpReceiver: long nativeRtpReceiver
com.facebook.react.devsupport.DebugOverlayController: android.view.WindowManager access$300(com.facebook.react.devsupport.DebugOverlayController)
com.facebook.react.views.textinput.ReactTextInputManager: void checkPasswordType(com.facebook.react.views.textinput.ReactEditText)
com.oney.WebRTCModule.WebRTCModule: void mediaStreamTrackReleaseAsync(java.lang.String)
org.jitsi.meet.sdk.R$raw: int lang_languages
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl create(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
org.jitsi.meet.R$raw: int lang_languages
okhttp3.internal.proxy.NullProxySelector: void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)
org.jitsi.meet.sdk.R$raw: int lang_mainesus
com.horcrux.svg.R$dimen: int abc_progress_bar_height_material
org.jitsi.meet.sdk.ConnectionService: java.util.HashMap startCallPromises
com.horcrux.svg.VirtualView: void setResponsible(boolean)
okhttp3.Protocol: okhttp3.Protocol get(java.lang.String)
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_PopupMenu
com.horcrux.svg.R$attr: int popupMenuStyle
okio.Pipe$PipeSink: void write(okio.Buffer,long)
org.jitsi.meet.sdk.JitsiMeetActivityDelegate
org.webrtc.voiceengine.WebRtcAudioEffects: boolean isAcousticEchoCancelerExcludedByUUID()
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
org.jitsi.meet.R$drawable: int abc_list_focused_holo
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean equals(java.lang.Object)
com.horcrux.svg.R$style: int Base_DialogWindowTitleBackground_AppCompat
com.horcrux.svg.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
okhttp3.internal.http2.Http2Stream: Http2Stream(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers)
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String)
okhttp3.Cache$CacheRequestImpl$1: okhttp3.internal.cache.DiskLruCache$Editor val$editor
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeMemcpy(long,long,int)
com.horcrux.svg.R$id: int action_divider
org.jitsi.meet.R$style: int Widget_AppCompat_ProgressBar_Horizontal
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.bridge.JavaOnlyMap: boolean hasKey(java.lang.String)
com.dropbox.core.v2.team.RevokeLinkedAppBatchErrorException
org.jitsi.meet.R$anim: int abc_fade_out
com.horcrux.svg.R$attr: int colorBackgroundFloating
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableRightCompat
org.jitsi.meet.sdk.R$drawable: int btn_checkbox_checked_mtrl
org.webrtc.RendererCommon$VideoLayoutMeasure: void setVisibleFraction(float,float)
org.webrtc.ThreadUtils: boolean joinUninterruptibly(java.lang.Thread,long)
com.facebook.react.uimanager.ViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.fabric.Binding: com.facebook.jni.HybridData initHybrid()
androidx.drawerlayout.widget.DrawerLayout: float getDrawerElevation()
org.webrtc.Camera2Session$CaptureSessionCallback: void chooseFocusMode(android.hardware.camera2.CaptureRequest$Builder)
okhttp3.internal.http2.Http2Connection: void writeData(int,boolean,okio.Buffer,long)
org.webrtc.NativeLibrary
org.webrtc.HardwareVideoDecoderFactory: org.webrtc.VideoDecoder createDecoder(org.webrtc.VideoCodecInfo)
com.facebook.react.devsupport.FpsView
org.webrtc.voiceengine.WebRtcAudioUtils: boolean isAcousticEchoCancelerSupported()
okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)
okhttp3.internal.http2.Hpack$Writer: int smallestHeaderTableSizeSetting
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_roundingBorderColor
com.facebook.react.devsupport.DisabledDevSupportManager: java.lang.String getLastErrorTitle()
com.horcrux.svg.R$id: int center
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
org.jitsi.meet.sdk.R$styleable: int GradientColor_android_startColor
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken getArray(java.lang.reflect.Type)
com.facebook.react.devsupport.DevSupportManagerImpl$24$2: java.lang.Exception val$cause
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLiveRegion(android.view.View,java.lang.String)
org.jitsi.meet.R$color: int primary_text_disabled_material_light
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Integer iceCheckMinInterval
org.jitsi.meet.sdk.R$attr: int theme
com.horcrux.svg.RenderableViewManager$PatternManager: void setY(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
okhttp3.Response: int code()
org.webrtc.NV21Buffer
org.webrtc.PeerConnection$PortPrunePolicy: org.webrtc.PeerConnection$PortPrunePolicy[] values()
com.google.android.gms.internal.measurement.zzbv$zze: com.google.android.gms.internal.measurement.zzjp zzk
okio.Pipe$PipeSink: okio.Timeout timeout
com.horcrux.svg.RenderableView: android.graphics.Paint$Cap strokeLinecap
com.corbt.keepawake.KCKeepAwake: void deactivate()
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(boolean)
com.horcrux.svg.R$drawable: int abc_text_select_handle_left_mtrl_light
com.horcrux.svg.R$attr: int closeIcon
org.webrtc.EglBase: int EGL_OPENGL_ES2_BIT
okhttp3.internal.http2.Http2: byte TYPE_HEADERS
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean recover(java.io.IOException,okhttp3.internal.connection.StreamAllocation,boolean,okhttp3.Request)
okio.Segment: boolean owner
com.horcrux.svg.R$styleable: int ActionBar_backgroundStacked
org.jitsi.meet.R$dimen: int abc_text_size_large_material
com.facebook.react.animated.NativeAnimatedModule: void initialize()
com.horcrux.svg.R$attr: int paddingEnd
org.jitsi.meet.R$integer: int abc_config_activityDefaultDur
org.webrtc.VideoFrame$TextureBuffer: android.graphics.Matrix getTransformMatrix()
com.facebook.react.modules.blob.FileReaderModule: void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.SimpleViewManager: SimpleViewManager()
com.horcrux.svg.RenderableView: com.facebook.react.bridge.ReadableArray stroke
okio.AsyncTimeout: okio.AsyncTimeout next
org.jitsi.meet.sdk.log.JitsiMeetLogger: void w(java.lang.String,java.lang.Object[])
org.jitsi.meet.sdk.AudioModeModule$2: void run()
com.horcrux.svg.R$layout: int abc_activity_chooser_view_list_item
com.facebook.yoga.YogaPrintOptions: com.facebook.yoga.YogaPrintOptions valueOf(java.lang.String)
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_TextView_SpinnerItem
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mAppId
com.horcrux.svg.R$attr: int iconifiedByDefault
com.facebook.react.views.view.ReactViewGroup: int mAllChildrenCount
okhttp3.internal.Util$2: Util$2(java.lang.String,boolean)
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ButtonBar
org.jitsi.meet.R$id: int accessibility_custom_action_15
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
org.jitsi.meet.sdk.R$attr: int colorAccent
com.facebook.react.devsupport.BundleDeltaClient: java.lang.String mRevisionId
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetWidth(long)
okio.AsyncTimeout: boolean cancelScheduledTimeout(okio.AsyncTimeout)
org.webrtc.NetworkMonitorAutoDetect: java.lang.String getWifiSSID(org.webrtc.NetworkMonitorAutoDetect$NetworkState)
okhttp3.internal.huc.DelegatingHttpsURLConnection: int getContentLength()
okhttp3.internal.http1.Http1Codec: long headerLimit
com.facebook.react.bridge.queue.MessageQueueThread: void resetPerfStats()
com.google.android.gms.internal.measurement.zzbv$zzc: com.google.android.gms.internal.measurement.zzbv$zzf zzd
okio.ForwardingTimeout: okio.Timeout delegate()
org.jitsi.meet.R$attr: int popupWindowStyle
org.jitsi.meet.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
com.facebook.react.views.art.ARTRenderableViewManager: com.facebook.react.views.art.ARTRenderableViewManager createARTGroupViewManager()
org.jitsi.meet.sdk.R$dimen: int abc_text_size_title_material
com.horcrux.svg.R$style: int Theme_FullScreenDialogAnimatedFade
com.horcrux.svg.R$color: int primary_material_dark
org.jitsi.meet.sdk.R$attr: int gapBetweenBars
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceInitialized()
com.horcrux.svg.R$string: int abc_search_hint
okhttp3.Response$Builder: Response$Builder()
com.facebook.react.bridge.ReactMarker$MarkerListener: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
org.webrtc.CryptoOptions$Builder: boolean enableAes128Sha1_32CryptoCipher
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
com.facebook.react.devsupport.BundleDownloader$BundleInfo: int mFilesChangedCount
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long)
org.jitsi.meet.sdk.R$styleable: int SwitchCompat_thumbTintMode
com.kevinresol.react_native_default_preference.RNDefaultPreferenceModule: void getName(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.JavaOnlyMap: double getDouble(java.lang.String)
org.jitsi.meet.MainActivity: boolean configurationByRestrictions
com.facebook.react.bridge.JavaOnlyArray: java.util.ArrayList toArrayList()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_ActionButton
org.jitsi.meet.R$styleable: int MenuItem_android_id
com.facebook.react.devsupport.DevSupportManagerImpl: android.app.AlertDialog access$1502(com.facebook.react.devsupport.DevSupportManagerImpl,android.app.AlertDialog)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry access$500(com.facebook.react.bridge.CatalystInstanceImpl)
org.jitsi.meet.sdk.R$anim: int btn_checkbox_to_unchecked_check_path_merged_animation
org.jitsi.meet.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
okhttp3.MultipartBody: java.lang.String boundary()
com.horcrux.svg.VirtualView: void setClientRect(android.graphics.RectF)
org.webrtc.Camera2Session: int height
org.webrtc.EglBase10Impl$1FakeSurfaceHolder: android.graphics.Canvas lockCanvas(android.graphics.Rect)
com.facebook.react.modules.core.Timing: void onHostResume()
org.jitsi.meet.sdk.R$styleable: int Toolbar_titleMarginBottom
com.horcrux.svg.R$layout: int abc_popup_menu_item_layout
com.horcrux.svg.R$attr: int ratingBarStyleIndicator
com.facebook.react.views.text.ReactTextView: void setBackgroundColor(int)
org.webrtc.YuvHelper: void nativeABGRToI420(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int)
org.jitsi.meet.sdk.BroadcastEvent: org.jitsi.meet.sdk.BroadcastEvent$Type getType()
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Integer screencastMinBitrate
org.jitsi.meet.R$id: int beginning
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_TYPE_HEADER_NAME
org.jitsi.meet.sdk.BroadcastEvent$Type: java.lang.String access$200(org.jitsi.meet.sdk.BroadcastEvent$Type)
com.facebook.react.bridge.Promise: void resolve(java.lang.Object)
org.webrtc.GlShader: int program
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: SwipeRefreshLayoutManager()
com.horcrux.svg.RadialGradientView: void setGradientTransform(com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.sdk.R$layout: int notification_template_part_time
org.webrtc.PeerConnection$RTCConfiguration: java.lang.String getTurnLoggingId()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setEnabled(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.facebook.react.devsupport.DevSupportManagerImpl: java.io.File downloadBundleResourceFromUrlSync(java.lang.String,java.io.File)
org.webrtc.RtpParameters$Encoding: double getBitratePriority()
org.webrtc.GlShader: int getUniformLocation(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void getTotalDiskCapacityOld(com.facebook.react.bridge.Promise)
org.jitsi.meet.R$style: int ClockTimePickerStyle
org.jitsi.meet.R$dimen: R$dimen()
com.facebook.react.devsupport.DisabledDevSupportManager: void setReloadOnJSChangeEnabled(boolean)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.facebook.react.devsupport.JSDevSupport$DevSupportCallback: void onFailure(int,java.lang.Exception)
org.jitsi.meet.R$attr: int backgroundImage
com.dropbox.core.BadRequestException
okhttp3.internal.tls.DistinguishedNameParser: char getEscaped()
org.webrtc.NetworkMonitorAutoDetect: void onReceive(android.content.Context,android.content.Intent)
org.jitsi.meet.sdk.R$drawable: int notification_bg_normal_pressed
okio.GzipSink: void writeHeader()
okio.AsyncTimeout$2: long read(okio.Buffer,long)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addNetworkInterceptor(okhttp3.Interceptor)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactHorizontalScrollView)
org.jitsi.meet.sdk.R$layout: int abc_popup_menu_item_layout
org.jitsi.meet.sdk.R$style: int ThemeOverlay_AppCompat_DayNight
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
org.webrtc.DynamicBitrateAdjuster: void setTargets(int,int)
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date lastModified
com.facebook.react.devsupport.DevSupportManagerImpl: DevSupportManagerImpl(android.content.Context,com.facebook.react.devsupport.ReactInstanceManagerDevHelper,java.lang.String,boolean,int)
org.webrtc.audio.WebRtcAudioTrack: android.media.AudioTrack createAudioTrackOnOreoOrHigher(int,int,int,android.media.AudioAttributes)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
com.facebook.react.uimanager.BaseViewManager: void setViewStates(android.view.View,com.facebook.react.bridge.ReadableArray)
okio.Buffer: okio.ByteString hmacSha256(okio.ByteString)
com.horcrux.svg.MaskView: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.devsupport.DisabledDevSupportManager: void hideRedboxDialog()
org.jitsi.meet.R$id: int text
org.webrtc.voiceengine.WebRtcAudioTrack: org.webrtc.voiceengine.WebRtcAudioTrack$WebRtcAudioTrackErrorCallback errorCallbackOld
com.horcrux.svg.R$styleable: int Toolbar_subtitle
com.horcrux.svg.R$color: int abc_hint_foreground_material_light
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int OPEN_DRAWER
com.google.android.gms.measurement.AppMeasurement: void beginAdUnitExposure(java.lang.String)
com.facebook.react.modules.camera.CameraRollManager: void putBasicNodeInfo(android.database.Cursor,com.facebook.react.bridge.WritableMap,int,int,int)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mExpiredEventParams
com.google.firebase.FirebaseNetworkException
org.jitsi.meet.sdk.R$dimen: int hint_pressed_alpha_material_light
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
com.horcrux.svg.TextView: void setRotate(com.facebook.react.bridge.Dynamic)
org.webrtc.RTCStats: org.webrtc.RTCStats create(long,java.lang.String,java.lang.String,java.util.Map)
androidx.activity.ComponentActivity: ComponentActivity()
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ARG_MAXDATE
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_progressBarAutoRotateInterval
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: ReactQueueConfigurationSpec$Builder()
org.jitsi.meet.sdk.R$style: int ThemeOverlay_AppCompat_Light
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getTypeSync()
com.horcrux.svg.R$attr: int roundTopLeft
okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)
com.learnium.RNDeviceInfo.RNDeviceModule: java.util.Map getConstants()
org.jitsi.meet.R$integer: int status_bar_notification_info_maxnum
org.jitsi.meet.sdk.R$id: int search_button
org.jitsi.meet.sdk.AudioModeModule$2
com.horcrux.svg.R$styleable: int ActionBar_contentInsetRight
com.facebook.react.devsupport.DevSupportManagerImpl$30: com.facebook.react.devsupport.DevSupportManagerImpl this$0
okhttp3.OkUrlFactory: java.net.HttpURLConnection open(java.net.URL)
org.jitsi.meet.R$styleable: int AppCompatTheme_android_windowAnimationStyle
okio.Buffer: okio.Buffer readFrom(java.io.InputStream)
org.jitsi.meet.R$raw: int lang_languagessl
com.horcrux.svg.R$id: int radio
org.jitsi.meet.R$styleable: int Toolbar_contentInsetLeft
org.webrtc.SSLCertificateVerifier: boolean verify(byte[])
org.jitsi.meet.sdk.R$drawable: int abc_ic_menu_overflow_material
org.webrtc.PeerConnection$IceServer: org.webrtc.PeerConnection$TlsCertPolicy getTlsCertPolicy()
org.jitsi.meet.R$styleable: int[] AnimatedStateListDrawableTransition
com.learnium.RNDeviceInfo.RNDeviceModule: void getFingerprint(com.facebook.react.bridge.Promise)
org.jitsi.meet.R$styleable: int Toolbar_contentInsetStart
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
com.horcrux.svg.SvgViewManager: void setMinX(com.horcrux.svg.SvgView,float)
com.facebook.react.devsupport.DisabledDevSupportManager: void setHotModuleReplacementEnabled(boolean)
com.calendarevents.CalendarEvents: com.facebook.react.bridge.WritableNativeMap serializeEventCalendar(android.database.Cursor)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.facebook.react.bridge.Arguments: Arguments()
com.horcrux.svg.SvgView: java.lang.String mAlign
org.webrtc.HardwareVideoEncoderFactory: int getForcedKeyFrameIntervalMs(org.webrtc.VideoCodecMimeType,java.lang.String)
co.apptailor.googlesignin.RNGoogleSigninModule: void handleSignOutOrRevokeAccessTask(com.google.android.gms.tasks.Task,com.facebook.react.bridge.Promise)
org.jitsi.meet.R$color: int highlighted_text_material_dark
com.horcrux.svg.RenderableViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.RealCall$AsyncCall: boolean $assertionsDisabled
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$UriHandler mNetworkingUriHandler
com.facebook.react.bridge.ReactContext: boolean hasCurrentActivity()
okhttp3.internal.http1.Http1Codec$AbstractSource: Http1Codec$AbstractSource(okhttp3.internal.http1.Http1Codec,okhttp3.internal.http1.Http1Codec$1)
okhttp3.internal.connection.RealConnection: void connectSocket(int,int,okhttp3.Call,okhttp3.EventListener)
com.horcrux.svg.R$dimen: int highlight_alpha_material_light
com.horcrux.svg.R$string: int abc_menu_sym_shortcut_label
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter
okhttp3.internal.JavaNetHeaders
org.webrtc.TimestampAligner: TimestampAligner()
org.webrtc.RtpParameters$Encoding: java.lang.String getRid()
com.facebook.react.uimanager.SimpleViewManager: void updateExtraData(android.view.View,java.lang.Object)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_FALLBACK_SCSV
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256
com.facebook.react.bridge.ReactBridge: long sLoadEndTime
org.webrtc.PeerConnection: boolean nativeAddLocalStream(long)
com.horcrux.svg.R$attr: int actionModeFindDrawable
com.horcrux.svg.R$style: int Base_V21_Theme_AppCompat
org.webrtc.PeerConnection: org.webrtc.PeerConnection$IceConnectionState nativeIceConnectionState()
okhttp3.internal.huc.OkHttpURLConnection: int getReadTimeout()
com.horcrux.svg.RNSVGRenderableManager: boolean isPointInStroke(int,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.SvgView: float mMinX
com.horcrux.svg.VirtualView: boolean mCTMInvertible
com.horcrux.svg.R$attr: int trackTint
org.jitsi.meet.R$attr: int colorControlHighlight
org.webrtc.RtpSender: long nativeRtpSender
org.jitsi.meet.sdk.AudioModeModule$1: org.jitsi.meet.sdk.AudioModeModule this$0
org.jitsi.meet.R$attr: int textAppearancePopupMenuHeader
com.facebook.react.devsupport.JSException: java.lang.String getStack()
org.jitsi.meet.R$styleable: int AppCompatTheme_actionBarSize
okhttp3.OkHttpClient: boolean followRedirects()
org.jitsi.meet.R$styleable: int ActionBar_subtitle
com.facebook.jni.CpuCapabilitiesJni
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
org.jitsi.meet.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
org.jitsi.meet.sdk.R$attr: int buttonBarNeutralButtonStyle
com.dropbox.core.v2.files.DownloadErrorException
com.facebook.react.devsupport.DevSupportManagerImpl$7: com.facebook.react.devsupport.DevSupportManagerImpl this$0
com.horcrux.svg.R$attr: int alertDialogStyle
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_PopupMenu
com.horcrux.svg.RenderableViewManager: com.horcrux.svg.VirtualView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.gms.internal.measurement.zzcd$zzi: com.google.android.gms.internal.measurement.zzid zzf
org.webrtc.voiceengine.WebRtcAudioRecord: void access$100(boolean)
com.facebook.drawee.view.SimpleDraweeView: void setImageResource(int)
com.facebook.react.bridge.ReactContext: void onHostDestroy()
com.facebook.react.devsupport.DevSupportManagerImpl: void hideDevOptionsDialog()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextTransform(java.lang.String)
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
org.jitsi.meet.sdk.R$dimen: int compat_notification_large_icon_max_height
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] publicSuffixExceptionListBytes
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundAsCircle
com.horcrux.svg.R$attr: int font
okio.ByteString: int lastIndexOf(byte[])
com.facebook.react.views.scroll.ReactScrollView: void setDecelerationRate(float)
org.webrtc.DataChannel$State: org.webrtc.DataChannel$State CLOSED
org.jitsi.meet.R$id: int rn_redbox_stack
com.facebook.react.modules.camera.CameraRollManager: void putLocationInfo(android.database.Cursor,com.facebook.react.bridge.WritableMap,int,int)
com.horcrux.svg.R$style: int Widget_AppCompat_Button_Colored
com.reactnativecommunity.webview.RNCWebViewManager: void setThirdPartyCookiesEnabled(android.webkit.WebView,boolean)
okio.RealBufferedSink: okio.BufferedSink write(byte[])
okhttp3.internal.io.FileSystem: okio.Source source(java.io.File)
com.facebook.react.modules.core.Timing: java.util.concurrent.atomic.AtomicBoolean isPaused
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: void run()
com.facebook.react.uimanager.UIManagerModule: void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener)
org.webrtc.voiceengine.WebRtcAudioUtils: void logAudioDeviceInfo(java.lang.String,android.media.AudioManager)
com.oney.WebRTCModule.WebRTCModule: void getDisplayMedia(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setMethod(com.horcrux.svg.TextPathView,java.lang.String)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setTintColor(int)
com.facebook.react.devsupport.DevLoadingViewController$3: void run()
com.facebook.react.bridge.DynamicFromObject: DynamicFromObject(java.lang.Object)
com.horcrux.svg.R$layout
org.jitsi.meet.sdk.R$styleable: int[] SwipeRefreshLayout
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableItem_android_drawable
org.webrtc.PeerConnection$IceServer
org.jitsi.meet.sdk.R$raw: int lang_languagessl
com.horcrux.svg.R$dimen: int compat_button_padding_horizontal_material
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.reflect.Method method
com.google.android.gms.internal.measurement.zzca$zzc
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importTypeArray()
org.jitsi.meet.sdk.R$drawable: int abc_btn_check_to_on_mtrl_000
org.webrtc.NetworkMonitor: boolean isOnline()
org.jitsi.meet.sdk.R$id: int action_bar
com.learnium.RNDeviceInfo.RNDeviceModule: void getCodename(com.facebook.react.bridge.Promise)
org.jitsi.meet.R$styleable: int SearchView_defaultQueryHint
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetFlexBasis(long)
androidx.lifecycle.SavedStateHandleController$OnRecreation
okio.Buffer: java.io.InputStream inputStream()
com.oney.WebRTCModule.RTCVideoViewManager: void setMirror(com.oney.WebRTCModule.WebRTCView,boolean)
com.facebook.react.uimanager.BaseViewManager: void setRotation(android.view.View,float)
com.facebook.react.bridge.ReadableMapKeySetIterator
org.webrtc.SurfaceTextureHelper: void setOnFrameAvailableListener(android.graphics.SurfaceTexture,android.graphics.SurfaceTexture$OnFrameAvailableListener,android.os.Handler)
com.facebook.react.packagerconnection.NotificationOnlyHandler: NotificationOnlyHandler()
org.webrtc.VideoEncoder$Settings: int numberOfCores
org.webrtc.RtpReceiver: long nativeObserver
com.dropbox.core.v2.sharing.ListSharedLinksErrorException
org.jitsi.meet.R$id: R$id()
com.facebook.react.views.textinput.ReactTextInputManager: int KEYBOARD_TYPE_FLAGS
org.webrtc.EglBase10Impl: void detachCurrent()
com.facebook.react.bridge.BaseJavaModule: boolean canOverrideExistingModule()
okio.RealBufferedSource: int read(byte[],int,int)
okhttp3.Cache$CacheResponseBody$1: Cache$CacheResponseBody$1(okhttp3.Cache$CacheResponseBody,okio.Source,okhttp3.internal.cache.DiskLruCache$Snapshot)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedQueryParameter(java.lang.String,java.lang.String)
com.horcrux.svg.R$string: int state_on_description
org.webrtc.CameraCapturer: org.webrtc.CameraSession access$700(org.webrtc.CameraCapturer)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerWidth(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
org.jitsi.meet.sdk.R$styleable: int MenuItem_android_id
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString)
okio.RealBufferedSource: long indexOfElement(okio.ByteString)
org.webrtc.CameraCapturer$8: org.webrtc.CameraCapturer this$0
org.jitsi.meet.R$drawable: int abc_textfield_default_mtrl_alpha
okhttp3.OkUrlFactory
org.jitsi.meet.sdk.R$id: int adjust_height
com.facebook.react.views.textinput.ReactEditText: void setReturnKeyType(java.lang.String)
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.JSInstance mJSInstance
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String REACT_CLASS
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
org.webrtc.DataChannel: long bufferedAmount()
org.jitsi.meet.R$id: int scrollIndicatorDown
org.jitsi.meet.R$style: int Base_V26_Theme_AppCompat
okhttp3.internal.http2.Http2: byte FLAG_END_PUSH_PROMISE
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
org.jitsi.meet.sdk.R$string: int spinbutton_description
okhttp3.OkUrlFactory: okhttp3.OkUrlFactory clone()
com.horcrux.svg.R$color: int abc_tint_spinner
org.jitsi.meet.R$styleable: int AppCompatTextView_drawableTopCompat
com.facebook.react.bridge.CatalystInstanceImpl: void destroy()
com.facebook.react.modules.blob.BlobModule: void removeWebSocketHandler(int)
org.jitsi.meet.R$attr: int indeterminateProgressStyle
com.horcrux.svg.RenderableViewManager$PathViewManager: void onAfterUpdateTransaction(android.view.View)
org.jitsi.meet.sdk.R$string: int common_google_play_services_update_title
com.facebook.react.bridge.InvalidIteratorException: InvalidIteratorException(java.lang.String)
com.horcrux.svg.R$dimen: int abc_text_size_medium_material
org.webrtc.voiceengine.WebRtcAudioUtils: boolean runningOnEmulator()
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()
org.webrtc.WrappedNativeI420Buffer: int getStrideY()
org.jitsi.meet.sdk.ReactInstanceManagerHolder$1: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.FormBody: int size()
com.facebook.react.devsupport.DevLoadingViewController$2: com.facebook.react.devsupport.DevLoadingViewController this$0
com.horcrux.svg.R$id: int custom
org.jitsi.meet.sdk.R$color: int material_grey_850
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
com.facebook.react.views.text.ReactTextView: void setBorderStyle(java.lang.String)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskRetry(int,com.facebook.react.bridge.Promise)
okhttp3.internal.cache.DiskLruCache$Editor: okio.Source newSource(int)
org.jitsi.meet.sdk.R$attr: int paddingEnd
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
okhttp3.Response$Builder: okhttp3.Protocol protocol
org.webrtc.Priority: int HIGH
org.webrtc.PeerConnection$Observer: void onSignalingChange(org.webrtc.PeerConnection$SignalingState)
okhttp3.WebSocketListener: void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)
okhttp3.internal.cache2.Relay: okio.Buffer buffer
com.facebook.react.bridge.CatalystInstanceImpl: java.util.ArrayList mJSCallsPendingInit
com.horcrux.svg.R$drawable: int notification_action_background
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
org.jitsi.meet.R$style: int Theme_ReactNative_AppCompat_Light
org.webrtc.NativeAndroidVideoTrackSource: void nativeAdaptOutputFormat(long,int,int,java.lang.Integer,int,int,java.lang.Integer,java.lang.Integer)
org.webrtc.NetworkChangeDetector$Observer: void onConnectionTypeChanged(org.webrtc.NetworkChangeDetector$ConnectionType)
org.jitsi.meet.sdk.R$styleable: int[] AnimatedStateListDrawableTransition
com.horcrux.svg.R$drawable: int abc_tab_indicator_material
org.jitsi.meet.sdk.JitsiMeetActivity: JitsiMeetActivity()
com.rnimmersive.RNImmersiveModule: int UI_FLAG_IMMERSIVE
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_placeholderImage
com.facebook.react.modules.blob.BlobModule: void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String)
org.jitsi.meet.R$attr: int actionBarSplitStyle
org.webrtc.EglRenderer$EglSurfaceCreation: EglRenderer$EglSurfaceCreation(org.webrtc.EglRenderer)
org.webrtc.Camera1Enumerator: int getCameraIndex(java.lang.String)
org.jitsi.meet.sdk.ReactInstanceManagerHolder: java.util.List access$000(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod[] values()
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_roundAsCircle
com.reactnativecommunity.webview.RNCWebViewManager: void setMessagingModuleName(android.webkit.WebView,java.lang.String)
com.facebook.react.devsupport.DevServerHelper$1: com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener val$commandListener
com.reactnativecommunity.netinfo.NetInfoModule: void onCatalystInstanceDestroy()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RELOAD
com.facebook.react.modules.network.NetworkingModule: void applyCustomBuilder(okhttp3.OkHttpClient$Builder)
org.jitsi.meet.sdk.R$styleable: int Spinner_android_prompt
okhttp3.internal.http2.Http2Reader$ContinuationSource: int left
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzid zzf
org.webrtc.voiceengine.WebRtcAudioTrack: java.nio.ByteBuffer access$200(org.webrtc.voiceengine.WebRtcAudioTrack)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getSystemManufacturerSync()
okhttp3.Response: okhttp3.Handshake handshake()
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
okhttp3.Request$Builder: Request$Builder()
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
com.horcrux.svg.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
com.horcrux.svg.ImageView: void setWidth(com.facebook.react.bridge.Dynamic)
okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)
org.webrtc.audio.JavaAudioDeviceModule: android.content.Context context
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinHeight(long)
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallback
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_CHECKED
okhttp3.JavaNetCookieJar: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
okhttp3.internal.platform.Jdk9Platform
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_imageButtonStyle
com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatusProvider
com.google.android.gms.measurement.AppMeasurement: com.google.android.gms.measurement.AppMeasurement getInstance(android.content.Context)
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_DISMISSED
org.jitsi.meet.sdk.R$attr: int actualImageResource
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: boolean completed
org.webrtc.CameraVideoCapturer$CameraStatistics: void addFrame()
org.webrtc.Camera2Session$CaptureSessionCallback: void chooseStabilizationMode(android.hardware.camera2.CaptureRequest$Builder)
okhttp3.RealCall: okhttp3.EventListener access$000(okhttp3.RealCall)
org.webrtc.NativeAndroidVideoTrackSource: void adaptOutputFormat(org.webrtc.VideoSource$AspectRatio,java.lang.Integer,org.webrtc.VideoSource$AspectRatio,java.lang.Integer,java.lang.Integer)
okhttp3.internal.http.HttpHeaders: int parseSeconds(java.lang.String,int)
org.webrtc.Camera1Session: java.lang.String TAG
org.jitsi.meet.R$attr: int colorControlNormal
okio.DeflaterSink: java.util.zip.Deflater deflater
org.jitsi.meet.R$raw: int lang_mainfi
okio.Okio: okio.Sink sink(java.io.OutputStream,okio.Timeout)
com.facebook.react.views.image.ReactImageManager: void setBorderColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
okhttp3.Call$Factory
com.facebook.react.modules.network.NetworkingModule: void readWithProgress(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody)
org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackThread: boolean keepAlive
androidx.viewpager.widget.ViewPager: void setAdapter(androidx.viewpager.widget.PagerAdapter)
org.webrtc.PeerConnectionFactory$ThreadInfo
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_END
okio.Buffer: byte getByte(long)
org.jitsi.meet.R$string: int abc_menu_sym_shortcut_label
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher()
com.facebook.react.modules.core.Timing: Timing(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
com.facebook.react.bridge.ReactContext: ReactContext(android.content.Context)
org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode: org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode[] $VALUES
org.jitsi.meet.R$attr: int listPreferredItemHeightLarge
okio.ByteString: okio.ByteString toAsciiLowercase()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_SearchView
okhttp3.internal.huc.OutputStreamRequestBody$1: void flush()
org.webrtc.VideoCodecType
com.facebook.imagepipeline.request.ImageRequestBuilder$BuilderException
org.webrtc.PeerConnection$RTCConfiguration: int iceCandidatePoolSize
com.facebook.react.devsupport.DevServerHelper$2: java.lang.Void doInBackground(java.lang.Void[])
org.jitsi.meet.R$style: int Widget_AppCompat_ActionBar_TabBar
okhttp3.Address: okhttp3.CertificatePinner certificatePinner
com.zmxv.RNSound.RNSoundModule: void play(java.lang.Double,com.facebook.react.bridge.Callback)
org.jitsi.meet.R$dimen: int abc_cascading_menus_min_smallest_width
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.JavaJSExecutor)
com.horcrux.svg.R$style: int Widget_AppCompat_Spinner
org.jitsi.meet.sdk.R$color: int background_floating_material_light
com.facebook.react.devsupport.BundleDownloader$2: java.io.File val$outputFile
com.facebook.react.bridge.UiThreadUtil: boolean isOnUiThread()
org.jitsi.meet.R$string: int abc_menu_enter_shortcut_label
org.webrtc.audio.WebRtcAudioManager: int getMinInputFrameSize(int,int)
com.google.android.gms.internal.measurement.zzhv: com.google.android.gms.internal.measurement.zzkq zzb
org.webrtc.CameraEnumerationAndroid$CaptureFormat: int frameSize()
com.horcrux.svg.R$styleable: int AppCompatTheme_panelBackground
org.jitsi.meet.sdk.R$dimen: int abc_action_bar_default_padding_start_material
com.calendarevents.CalendarEvents: com.facebook.react.bridge.WritableNativeArray serializeAttendeeCalendar(android.database.Cursor)
com.facebook.react.animated.NativeAnimatedModule: java.util.ArrayList mOperations
com.reactnativecommunity.webview.RNCWebViewModule
timber.log.Timber$Tree: void v(java.lang.Throwable)
org.jitsi.meet.R$styleable: int AppCompatTheme_actionBarTabStyle
okio.ByteString: boolean endsWith(byte[])
com.horcrux.svg.R$drawable: int abc_edit_text_material
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient)
okhttp3.EventListener: void responseBodyEnd(okhttp3.Call,long)
org.webrtc.SurfaceTextureHelper: org.webrtc.VideoSink listener
okhttp3.internal.http2.Http2Connection$6
org.webrtc.EglRenderer$EglSurfaceCreation: void setSurface(java.lang.Object)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: void run()
okhttp3.internal.ws.WebSocketReader: byte[] maskKey
org.jitsi.meet.sdk.R$styleable: int MenuGroup_android_menuCategory
com.facebook.react.devsupport.DevSupportManagerImpl: java.lang.String getDownloadedJSBundleFile()
okhttp3.internal.http2.Http2Connection: void updateConnectionFlowControl(long)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: RenderableViewManager$LinearGradientManager()
org.jitsi.meet.sdk.R$raw: int lang_mainit
androidx.fragment.app.Fragment: void registerForContextMenu(android.view.View)
com.facebook.react.views.textinput.ReactEditText: void setFontSize(float)
org.jitsi.meet.R$attr: int textAppearanceSearchResultTitle
org.webrtc.RtpReceiver: org.webrtc.RtpParameters nativeGetParameters(long)
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule mModule
org.webrtc.HardwareVideoEncoder$BusyCount: java.lang.Object countLock
okhttp3.Request: java.util.List headers(java.lang.String)
org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode: org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode AUDIO_RECORD_START_EXCEPTION
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference: java.lang.Object callStackTrace
com.horcrux.svg.R$style: int Platform_V25_AppCompat_Light
com.facebook.react.views.view.ReactViewGroup: void addViewWithSubviewClippingEnabled(android.view.View,int,android.view.ViewGroup$LayoutParams)
okhttp3.internal.cache.DiskLruCache: boolean $assertionsDisabled
org.webrtc.VideoFrameDrawer: int renderHeight
com.horcrux.svg.VirtualView: com.horcrux.svg.GlyphContext glyphContext
org.webrtc.VideoEncoder$Settings: boolean automaticResizeOn
org.jitsi.meet.R$layout: int abc_cascading_menu_item_layout
okio.RealBufferedSource: long readLong()
org.webrtc.CalledByNativeUnchecked: java.lang.String value()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ListView
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec viewManagerSpec(javax.inject.Provider)
com.horcrux.svg.RenderableViewManager$RectViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
org.webrtc.PeerConnection$RTCConfiguration: boolean getEnableCpuOveruseDetection()
com.reactnativecommunity.webview.RNCWebViewManager: void dispatchEvent(android.webkit.WebView,com.facebook.react.uimanager.events.Event)
org.webrtc.HardwareVideoEncoder: org.webrtc.ThreadUtils$ThreadChecker outputThreadChecker
com.horcrux.svg.R$layout: int support_simple_spinner_dropdown_item
okhttp3.internal.http2.Http2Writer: void data(boolean,int,okio.Buffer,int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
com.horcrux.svg.LineView
okhttp3.internal.huc.OutputStreamRequestBody$1
okhttp3.internal.http.RequestLine
okhttp3.Cache$CacheResponseBody: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot
org.jitsi.meet.sdk.R$style: int Theme
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.modules.debug.interfaces.DeveloperSettings getDevSettings()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_END
org.jitsi.meet.sdk.R$styleable: int Fragment_android_id
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasis(long,float)
com.facebook.react.bridge.WritableNativeMap: com.facebook.react.bridge.WritableMap copy()
org.jitsi.meet.R$style: int Widget_AppCompat_SeekBar
org.jitsi.meet.sdk.R$layout: int abc_activity_chooser_view_list_item
com.facebook.react.bridge.ReactContext: void removeActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
okhttp3.Headers: java.lang.String toString()
com.facebook.react.devsupport.DevSupportManagerImpl$3: com.facebook.react.devsupport.DevSupportManagerImpl this$0
okio.GzipSource: byte FHCRC
org.jitsi.meet.sdk.R$styleable: int FontFamily_fontProviderFetchStrategy
org.webrtc.DtmfSender: boolean canInsertDtmf()
com.horcrux.svg.R$dimen: int notification_small_icon_background_padding
com.horcrux.svg.R$attr: int actionLayout
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator
okhttp3.internal.http2.Http2Codec: java.util.List HTTP_2_SKIPPED_RESPONSE_HEADERS
com.facebook.react.modules.permissions.PermissionsModule: com.facebook.react.modules.core.PermissionAwareActivity getPermissionAwareActivity()
com.horcrux.svg.R$bool: int abc_action_bar_embed_tabs
org.jitsi.meet.sdk.R$style: int Base_AlertDialog_AppCompat
org.webrtc.CameraEnumerationAndroid$2: CameraEnumerationAndroid$2(int,int)
org.webrtc.audio.WebRtcAudioTrack: android.media.AudioAttributes audioAttributes
com.horcrux.svg.R$attr: int commitIcon
org.jitsi.meet.sdk.R$styleable: int AppCompatImageView_srcCompat
com.facebook.react.bridge.JavaMethodWrapper$7
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
org.webrtc.SurfaceTextureHelper$1: java.lang.Object call()
androidx.appcompat.widget.LinearLayoutCompat
okio.Segment: okio.Segment sharedCopy()
com.horcrux.svg.R$attr: int windowNoTitle
com.horcrux.svg.R$color: int switch_thumb_normal_material_dark
org.jitsi.meet.sdk.R$attr: int closeIcon
org.jitsi.meet.sdk.LogBridgeModule: void error(java.lang.String)
org.jitsi.meet.sdk.AudioModeModule: java.lang.String DEVICE_SPEAKER
org.webrtc.voiceengine.WebRtcAudioRecord: java.nio.ByteBuffer byteBuffer
com.google.android.gms.internal.measurement.zzca$zzc: java.lang.String zze
okio.AsyncTimeout: long IDLE_TIMEOUT_NANOS
org.webrtc.EglBase14
okhttp3.internal.cache.DiskLruCache$Editor: void commit()
org.webrtc.MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl: android.view.Surface createInputSurface()
com.horcrux.svg.R$attr: int switchStyle
com.facebook.react.bridge.CxxModuleWrapperBase: com.facebook.jni.HybridData mHybridData
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
org.jitsi.meet.R$id: int SYM
org.webrtc.PeerConnection$Observer: void onConnectionChange(org.webrtc.PeerConnection$PeerConnectionState)
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
org.webrtc.WrappedNativeI420Buffer: java.nio.ByteBuffer dataY
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long cpuTime
okhttp3.HttpUrl: java.lang.String fragment
com.facebook.yoga.YogaNodeJNIBase: int mLayoutDirection
okio.Buffer: okio.BufferedSink write(byte[],int,int)
com.horcrux.svg.R$string: int catalyst_reload
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
okio.Util: Util()
org.jitsi.meet.R$id: int shortcut
com.facebook.soloader.Api18TraceUtils
okio.BufferedSink: okio.BufferedSink writeInt(int)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okio.ByteString: int indexOf(okio.ByteString,int)
com.facebook.react.bridge.ModuleHolder: void destroy()
org.webrtc.NetworkMonitorAutoDetect$WifiDirectManagerDelegate: void onWifiP2pGroupChange(android.net.wifi.p2p.WifiP2pGroup)
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action: org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action HANGUP
com.horcrux.svg.R$attr: int showDividers
com.google.android.gms.measurement.internal.zzar: android.os.Parcelable$Creator CREATOR
okio.Timeout: boolean hasDeadline
okio.Buffer$UnsafeCursor: int end
com.facebook.react.bridge.ReadableNativeMap: int mJniCallCounter
okio.RealBufferedSink: okio.Timeout timeout()
com.dropbox.core.DbxException
com.horcrux.svg.R$color: int secondary_text_default_material_dark
org.webrtc.EglBase$ConfigBuilder: org.webrtc.EglBase$ConfigBuilder setIsRecordable(boolean)
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
org.jitsi.meet.sdk.R$color: int primary_text_default_material_dark
org.jitsi.meet.R$raw: int lang_languagespl
org.jitsi.meet.R$raw: int lang_languagestr
com.google.android.gms.internal.measurement.zzcd$zzg: long zzh
com.google.android.gms.internal.measurement.zzbv$zzb: int zzc
com.google.android.gms.internal.measurement.zzca$zzb
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
org.jitsi.meet.sdk.R$raw: int node_modules_entities_lib_maps_entities
com.horcrux.svg.R$styleable: int MenuItem_android_id
com.facebook.react.modules.permissions.PermissionsModule: void checkPermission(java.lang.String,com.facebook.react.bridge.Promise)
org.webrtc.MediaCodecUtils: int[] getTextureColorFormats()
com.horcrux.svg.R$styleable: int SearchView_android_maxWidth
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
com.facebook.react.bridge.Inspector$Page: int mId
okhttp3.ConnectionPool$1: void run()
com.facebook.react.views.modal.ReactModalHostManager: ReactModalHostManager()
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
okhttp3.internal.http2.Huffman: int encodedLength(okio.ByteString)
com.horcrux.svg.VirtualView: void setClipRule(int)
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.NetworkControllerFactoryFactory networkControllerFactoryFactory
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundTopStart
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_USER_INFO
org.jitsi.meet.sdk.BroadcastAction$Type: org.jitsi.meet.sdk.BroadcastAction$Type OPEN_CHAT
okhttp3.internal.platform.JdkWithJettyBootPlatform: okhttp3.internal.platform.Platform buildIfSupported()
androidx.appcompat.view.menu.ActionMenuItemView
okhttp3.internal.http.RealResponseBody: java.lang.String contentTypeString
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_27
com.horcrux.svg.R$attr: int listLayout
com.facebook.react.views.image.ReactImageManager: java.lang.Object mCallerContext
org.jitsi.meet.sdk.OngoingNotification: int NOTIFICATION_ID
org.jitsi.meet.sdk.R$styleable: int MenuItem_android_menuCategory
com.facebook.react.views.image.ReactImageManager: java.lang.String REACT_CLASS
org.jitsi.meet.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mTouchExplorationEnabled
org.jitsi.meet.MainActivity: android.content.BroadcastReceiver broadcastReceiver
com.reactnativecommunity.webview.RNCWebViewManager: void setMixedContentMode(android.webkit.WebView,java.lang.String)
org.jitsi.meet.sdk.R$id: int react_test_id
com.facebook.react.devsupport.DevServerHelper$1: java.lang.Object doInBackground(java.lang.Object[])
org.webrtc.DtmfSender: DtmfSender(long)
com.dropbox.core.AccessErrorException
com.horcrux.svg.R$dimen: int tooltip_y_offset_non_touch
com.facebook.react.views.scroll.ReactScrollView
okhttp3.OkHttpClient: okhttp3.Dns dns
androidx.appcompat.widget.AlertDialogLayout
org.jitsi.meet.R$attr: int failureImageScaleType
com.facebook.react.views.view.ReactViewGroup: void addInArray(android.view.View,int)
org.jitsi.meet.sdk.R$attr: int autoSizePresetSizes
okhttp3.internal.http.HttpDate$1: java.text.DateFormat initialValue()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
com.horcrux.svg.R$drawable: int abc_switch_track_mtrl_alpha
com.facebook.react.bridge.ModuleSpec
org.webrtc.WrappedNativeI420Buffer: int getStrideV()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_windowActionBar
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture: void captureHeap(java.lang.String)
org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackThread
com.oney.WebRTCModule.WebRTCView: void setScalingType(org.webrtc.RendererCommon$ScalingType)
org.jitsi.meet.BuildConfig: java.lang.String VERSION_NAME
org.jitsi.meet.R$styleable: int StateListDrawable_android_enterFadeDuration
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.FormBody: java.lang.String value(int)
okio.Buffer: int read(java.nio.ByteBuffer)
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
okio.Okio$3: Okio$3()
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_viewAspectRatio
com.oney.WebRTCModule.WebRTCView: org.webrtc.VideoTrack getVideoTrack()
okio.ByteString: okio.ByteString sha1()
org.jitsi.meet.R$attr: int overlapAnchor
com.facebook.react.modules.timepicker.TimePickerDialogModule: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
org.webrtc.MediaStream: java.util.List videoTracks
org.webrtc.VideoEncoderFactory: org.webrtc.VideoCodecInfo[] getSupportedCodecs()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
org.webrtc.NetworkMonitorAutoDetect: boolean isReceiverRegisteredForTesting()
okhttp3.OkUrlFactory$1: okhttp3.OkUrlFactory this$0
com.ocetnik.timer.BackgroundTimerModule: void sendEvent(com.facebook.react.bridge.ReactContext,java.lang.String)
org.webrtc.HardwareVideoEncoder: boolean shouldForceKeyFrame(long)
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Spinner_DropDown
com.google.android.gms.internal.measurement.zzci$zzb: int zzc
com.facebook.react.bridge.Dynamic: void recycle()
com.facebook.react.bridge.WritableNativeArray
org.webrtc.VideoCodecInfo: java.lang.String H264_LEVEL_3_1
org.webrtc.PeerConnection$IceConnectionState: PeerConnection$IceConnectionState(java.lang.String,int)
okio.Okio: okio.BufferedSink buffer(okio.Sink)
org.webrtc.Camera1Capturer: void printStackTrace()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void rstStream(int,okhttp3.internal.http2.ErrorCode)
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
com.horcrux.svg.VirtualView: void clearCache()
okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)
com.facebook.react.modules.core.ReactChoreographer$CallbackType: com.facebook.react.modules.core.ReactChoreographer$CallbackType valueOf(java.lang.String)
org.jitsi.meet.sdk.AudioModeModule$AudioDeviceHandlerInterface
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetBorder(long,int)
com.facebook.react.bridge.Inspector: Inspector(com.facebook.jni.HybridData)
com.facebook.react.views.textinput.ReactTextInputManager: void setOnSelectionChange(com.facebook.react.views.textinput.ReactEditText,boolean)
org.jitsi.meet.sdk.R$styleable: int[] PopupWindow
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Large
com.facebook.react.devsupport.BundleDownloader: java.lang.String TAG
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: ReadableNativeMap$ReadableNativeMapKeySetIterator(com.facebook.react.bridge.ReadableNativeMap)
org.jitsi.meet.R$string: int progressbar_description
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.facebook.react.devsupport.DevServerHelper$3: DevServerHelper$3(com.facebook.react.devsupport.DevServerHelper)
org.webrtc.ScreenCapturerAndroid: void createVirtualDisplay()
org.jitsi.meet.sdk.R$styleable: int Toolbar_contentInsetLeft
com.facebook.react.views.view.ReactViewManager: void setBorderWidth(com.facebook.react.views.view.ReactViewGroup,int,float)
okhttp3.Dispatcher: void setMaxRequests(int)
okhttp3.internal.ws.WebSocketWriter: boolean writerClosed
okhttp3.internal.Util: okio.ByteString UTF_8_BOM
org.jitsi.meet.R$dimen: int abc_list_item_padding_horizontal_material
org.jitsi.meet.sdk.R$attr: int dividerVertical
com.facebook.react.devsupport.RedBoxDialog$1
org.jitsi.meet.R$style: int Theme_AppCompat_Light
com.facebook.react.devsupport.DevSupportManagerImpl: void access$1600(com.facebook.react.devsupport.DevSupportManagerImpl)
org.webrtc.PeerConnectionFactory$Options: int getNetworkIgnoreMask()
org.webrtc.CameraSession$Events: void onCameraDisconnected(org.webrtc.CameraSession)
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Boolean combinedAudioVideoBwe
org.jitsi.meet.sdk.R$attr: int paddingBottomNoButtons
org.jitsi.meet.R$drawable: int ic_notification
org.webrtc.MediaStreamTrack$MediaType: org.webrtc.MediaStreamTrack$MediaType[] values()
com.facebook.react.devsupport.DevSupportManagerImpl$6: DevSupportManagerImpl$6(com.facebook.react.devsupport.DevSupportManagerImpl)
okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)
org.jitsi.meet.R$raw: int lang_languagesaf
org.jitsi.meet.R$dimen: int abc_action_bar_overflow_padding_end_material
com.facebook.react.devsupport.InspectorPackagerConnection: com.facebook.react.devsupport.InspectorPackagerConnection$Connection mConnection
org.jitsi.meet.R$raw: int lang_mainvi
org.jitsi.meet.sdk.R$styleable: int StateListDrawable_android_exitFadeDuration
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
org.jitsi.meet.MainActivity: boolean extraInitialize()
com.learnium.RNDeviceInfo.RNDeviceModule: double mLastBatteryLevel
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_Light_Dialog
org.webrtc.audio.WebRtcAudioEffects: boolean effectTypeIsVoIP(java.util.UUID)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
org.webrtc.EglBase10Impl: javax.microedition.khronos.egl.EGLContext eglContext
okhttp3.Cache$Entry: okhttp3.Headers varyHeaders
com.facebook.react.uimanager.LayoutShadowNode: void setPositionValues(int,com.facebook.react.bridge.Dynamic)
okhttp3.internal.cache.DiskLruCache$Entry
com.facebook.react.modules.core.Timing: java.util.PriorityQueue access$300(com.facebook.react.modules.core.Timing)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.devsupport.DevServerHelper$3: com.facebook.react.devsupport.DevServerHelper this$0
org.webrtc.Logging: Logging()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String getName()
okhttp3.Response$Builder: okhttp3.Response cacheResponse
com.horcrux.svg.R$color: int background_material_light
org.webrtc.SurfaceTextureHelper$2: void onRetain(org.webrtc.TextureBufferImpl)
org.webrtc.PeerConnectionFactory: long nativeCreateVideoTrack(long,java.lang.String,long)
com.horcrux.svg.VirtualView: void saveDefinition()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: java.lang.ref.WeakReference mOuter
okhttp3.MultipartBody$Builder: MultipartBody$Builder(java.lang.String)
org.webrtc.PeerConnection$TlsCertPolicy: PeerConnection$TlsCertPolicy(java.lang.String,int)
com.facebook.react.devsupport.DevServerHelper$7: com.facebook.react.devsupport.DevServerHelper this$0
org.jitsi.meet.R$id: int radio
org.jitsi.meet.sdk.R$color: int abc_primary_text_disable_only_material_light
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_drawableTopCompat
org.webrtc.Camera1Capturer: void startCapture(int,int,int)
org.jitsi.meet.R$styleable: int FontFamilyFont_font
androidx.drawerlayout.widget.DrawerLayout: void setScrimColor(int)
com.facebook.react.devsupport.DevServerHelper: void downloadBundleFromURL(com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,java.io.File,java.lang.String,com.facebook.react.devsupport.BundleDownloader$BundleInfo)
org.webrtc.EncodedImage$FrameType: org.webrtc.EncodedImage$FrameType EmptyFrame
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: org.jitsi.meet.sdk.JitsiMeetConferenceOptions build()
org.jitsi.meet.R$id: int fitCenter
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache this$0
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.webrtc.Logging$TraceLevel: org.webrtc.Logging$TraceLevel TRACE_WARNING
okhttp3.internal.cache.InternalCache: okhttp3.Response get(okhttp3.Request)
org.jitsi.meet.R$attr: int fontProviderQuery
org.jitsi.meet.R$styleable: int AppCompatTheme_borderlessButtonStyle
com.horcrux.svg.R$id: int titleDividerNoCustom
org.jitsi.meet.R$id: int group_divider
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData initHybrid()
okhttp3.Protocol: okhttp3.Protocol QUIC
org.jitsi.meet.R$attr: int actionModeCloseDrawable
com.horcrux.svg.R$dimen: int abc_action_button_min_width_overflow_material
org.jitsi.meet.sdk.R$string: int abc_action_bar_home_description
okio.HashingSource: HashingSource(okio.Source,okio.ByteString,java.lang.String)
org.jitsi.meet.sdk.R$layout: int abc_dialog_title_material
okhttp3.internal.io.FileSystem: boolean exists(java.io.File)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView
org.webrtc.RtpParameters$Codec: java.lang.String name
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSink sink
org.jitsi.meet.R$raw: int node_modules_entities_lib_maps_entities
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.util.List)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
org.webrtc.RtcCertificatePem: org.webrtc.RtcCertificatePem generateCertificate()
com.horcrux.svg.R$styleable: int GradientColor_android_gradientRadius
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager
org.jitsi.meet.R$color: int secondary_text_disabled_material_light
org.webrtc.WrappedNativeVideoEncoder: java.lang.String getImplementationName()
org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode: org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode AUDIO_RECORD_START_STATE_MISMATCH
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: void send(org.json.JSONObject)
okhttp3.internal.http2.Http2: int INITIAL_MAX_FRAME_SIZE
androidx.fragment.app.Fragment: android.animation.Animator getAnimator()
org.webrtc.MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl: MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl(android.media.MediaCodec)
com.facebook.react.views.view.ReactViewManager: ReactViewManager()
com.horcrux.svg.VirtualView: double M_SQRT1_2l
okio.AsyncTimeout: long IDLE_TIMEOUT_MILLIS
okhttp3.internal.http2.Http2Stream$FramingSource
org.jitsi.meet.R$id: int tag_accessibility_actions
okhttp3.internal.http2.Http2Reader$ContinuationSource: int length
org.jitsi.meet.R$layout: int redbox_item_frame
org.webrtc.AndroidVideoDecoder: int stride
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyFromByteArray(long,byte[],int,int)
com.ocetnik.timer.BackgroundTimerModule: void setTimeout(int,double)
org.jitsi.meet.sdk.R$style: int Base_Theme_AppCompat_Dialog_Alert
okhttp3.Challenge: Challenge(java.lang.String,java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void removeRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
org.jitsi.meet.R$styleable: int SimpleDraweeView_roundBottomRight
okio.RealBufferedSource: long readAll(okio.Sink)
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
org.webrtc.CameraVideoCapturer$CameraStatistics: org.webrtc.SurfaceTextureHelper access$300(org.webrtc.CameraVideoCapturer$CameraStatistics)
org.jitsi.meet.sdk.R$attr: R$attr()
org.webrtc.EncodedImage$1
com.horcrux.svg.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
com.facebook.react.uimanager.BaseViewManager: void setBorderTopLeftRadius(android.view.View,float)
com.facebook.react.devsupport.BundleDownloader$1
com.reactnativecommunity.webview.RNCWebViewManager: boolean mAllowsFullscreenVideo
okhttp3.internal.connection.RouteSelector: java.util.List postponedRoutes
com.horcrux.svg.R$attr: int overlayImage
org.webrtc.GlRectDrawer: void release()
okhttp3.HttpUrl: java.lang.String scheme
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken getParameterized(java.lang.reflect.Type,java.lang.reflect.Type[])
com.facebook.react.devsupport.BundleDeltaClient$BundleDeltaNativeClient: com.facebook.react.bridge.NativeDeltaClient nativeClient
org.webrtc.voiceengine.WebRtcAudioManager: int inputChannels
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
com.facebook.react.views.scroll.ReactScrollViewManager
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode fromHttp2(int)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray asArray()
com.facebook.drawee.view.DraweeView: void setController(com.facebook.drawee.interfaces.DraweeController)
org.jitsi.meet.sdk.R$styleable: int SwitchCompat_trackTintMode
org.webrtc.audio.WebRtcAudioRecord$AudioRecordThread: boolean keepAlive
com.learnium.RNDeviceInfo.RNDeviceModule: void getPowerState(com.facebook.react.bridge.Promise)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState valueOf(java.lang.String)
org.webrtc.Predicate$3: org.webrtc.Predicate this$0
org.jitsi.meet.BuildConfig
com.horcrux.svg.R$attr: int actionModeCloseDrawable
org.jitsi.meet.sdk.net.NAT64AddrInfoModule: java.lang.String HOST
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void beginAdUnitExposure(java.lang.String,long)
okio.ByteString: java.lang.String base64Url()
org.jitsi.meet.R$string: int catalyst_report_button
okhttp3.internal.http.HttpDate
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink newJournalWriter()
com.learnium.RNDeviceInfo.RNDeviceModule: void getSystemManufacturer(com.facebook.react.bridge.Promise)
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_roundTopEnd
com.learnium.RNDeviceInfo.DeviceType: com.learnium.RNDeviceInfo.DeviceType valueOf(java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec
org.webrtc.TimestampAligner: long nativeRtcTimeNanos()
org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger$LogVolumeTask: int maxVoiceCallVolume
org.jitsi.meet.sdk.OngoingNotification: void createOngoingConferenceNotificationChannel()
okhttp3.Dispatcher: void setMaxRequestsPerHost(int)
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$IceTransportsType getIceTransportsType()
org.jitsi.meet.sdk.BroadcastEvent$Type: org.jitsi.meet.sdk.BroadcastEvent$Type CHAT_TOGGLED
org.jitsi.meet.sdk.R$dimen: int notification_content_margin_start
com.facebook.react.devsupport.JSDebuggerWebSocketClient: void connect(java.lang.String,com.facebook.react.devsupport.JSDebuggerWebSocketClient$JSDebuggerCallback)
com.horcrux.svg.R$layout: int abc_screen_simple
org.webrtc.CameraCapturer: int access$1710(org.webrtc.CameraCapturer)
okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)
org.webrtc.StatsObserver
com.google.android.gms.measurement.AppMeasurementReceiver: AppMeasurementReceiver()
okhttp3.Cookie$Builder: okhttp3.Cookie build()
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: okhttp3.internal.http2.Http2Codec this$0
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.Object getContent()
com.horcrux.svg.SvgView$Events: com.horcrux.svg.SvgView$Events[] $VALUES
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder setColorScheme(android.os.Bundle)
com.dropbox.core.v2.sharing.CreateSharedLinkWithSettingsErrorException
com.horcrux.svg.R$color: int button_material_light
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHref(com.horcrux.svg.UseView,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
org.webrtc.NetworkMonitor: void addObserver(org.webrtc.NetworkMonitor$NetworkObserver)
org.webrtc.EncodedImage: void retain()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initForTests(java.util.Map)
com.facebook.react.bridge.FallbackJSBundleLoader
org.webrtc.AndroidVideoDecoder: java.lang.Object renderedTextureMetadataLock
com.facebook.react.modules.i18nmanager.I18nManagerModule: com.facebook.react.modules.i18nmanager.I18nUtil sharedI18nUtilInstance
com.facebook.react.uimanager.UIManagerModule: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http2.Http2Stream$StreamTimeout: void exitAndThrowIfTimedOut()
com.facebook.react.devsupport.DevSupportManagerImpl$23: void onFailure(java.lang.Throwable)
com.dropbox.core.v2.files.PreviewErrorException
com.facebook.react.bridge.Inspector$Page: java.lang.String mVM
org.webrtc.PeerConnection$IceServer: java.util.List getTlsAlpnProtocols()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.jitsi.meet.sdk.R$drawable: int abc_btn_switch_to_on_mtrl_00001
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_FILE
org.webrtc.audio.WebRtcAudioTrack
org.webrtc.NetworkControllerFactoryFactory: long createNativeNetworkControllerFactory()
org.webrtc.CameraCapturer$2: void onFrameCaptured(org.webrtc.CameraSession,org.webrtc.VideoFrame)
com.horcrux.svg.R$styleable: int AppCompatTheme_windowNoTitle
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_radioButtonStyle
org.jitsi.meet.sdk.R$drawable: int common_full_open_on_phone
com.facebook.react.devsupport.DevLoadingViewController: void hide()
org.jitsi.meet.sdk.R$raw: int lang_mainko
com.horcrux.svg.VirtualView
org.jitsi.meet.sdk.R$style: int Platform_V21_AppCompat
org.webrtc.RtpParameters$Encoding: java.lang.Integer minBitrateBps
com.horcrux.svg.RenderableViewManager: void setResponsible(com.horcrux.svg.VirtualView,boolean)
okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)
okhttp3.Cache: int writeAbortCount()
org.webrtc.SurfaceEglRenderer: java.lang.Object layoutLock
com.facebook.react.devsupport.DevSupportManagerImpl$17
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner
org.webrtc.GlGenericDrawer$ShaderType
com.facebook.react.views.viewpager.ReactViewPagerManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.CxxCallbackImpl: void invoke(java.lang.Object[])
com.facebook.react.devsupport.DevServerHelper$PackagerCustomCommandProvider
com.horcrux.svg.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
com.facebook.yoga.YogaNodeType: com.facebook.yoga.YogaNodeType[] values()
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_PROGRESS
org.jitsi.meet.R$id: int accessibility_custom_action_20
org.jitsi.meet.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
org.jitsi.meet.sdk.R$style: int ClockTimePickerDialog
com.facebook.react.devsupport.DisabledDevSupportManager: void showNewJSError(java.lang.String,com.facebook.react.bridge.ReadableArray,int)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: RenderableViewManager$TextPathViewManager()
okio.RealBufferedSink$1: void write(int)
okhttp3.internal.http2.Hpack$Reader: void readHeaders()
org.jitsi.meet.sdk.R$dimen: int abc_disabled_alpha_material_light
okhttp3.Dispatcher: boolean promoteAndExecute()
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler
com.facebook.react.devsupport.HMRClient: void disable()
okhttp3.Route: okhttp3.Address address
com.dropbox.core.v2.team.GroupMemberSetAccessTypeErrorException
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder callTimeout(java.time.Duration)
okhttp3.Response$Builder: okhttp3.Handshake handshake
org.webrtc.MediaCodecWrapper: void flush()
org.webrtc.Empty
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_START
com.horcrux.svg.VirtualView: void clip(android.graphics.Canvas,android.graphics.Paint)
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_roundBottomLeft
org.webrtc.VideoTrack: VideoTrack(long)
com.facebook.react.views.slider.ReactSliderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.slider.ReactSlider)
com.facebook.react.modules.appstate.AppStateModule: void onWindowFocusChange(boolean)
org.jitsi.meet.sdk.R$raw: int lang_mainfrca
okio.Buffer: int REPLACEMENT_CHARACTER
okhttp3.Interceptor$Chain
org.webrtc.Camera1Capturer: void changeCaptureFormat(int,int,int)
org.webrtc.Metrics$HistogramInfo: int min
org.webrtc.CameraCapturer$3: void run()
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Class getShadowNodeClass()
com.horcrux.svg.RenderableViewManager$DefsViewManager
org.jitsi.meet.R$styleable: int[] StateListDrawableItem
com.horcrux.svg.R$attr: int toolbarStyle
org.jitsi.meet.sdk.R$dimen: int abc_text_size_caption_material
org.webrtc.PeerConnection$RTCConfiguration: int getIceCandidatePoolSize()
com.horcrux.svg.R$attr: int iconTintMode
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_roundingBorderWidth
org.webrtc.voiceengine.WebRtcAudioManager: void setStereoOutput(boolean)
okhttp3.Route: java.net.Proxy proxy
org.jitsi.meet.R$styleable: int MenuItem_android_checkable
com.facebook.react.devsupport.DevSupportManagerImpl$JSExceptionLogger
org.webrtc.voiceengine.WebRtcAudioRecord: boolean access$300()
com.facebook.react.views.picker.ReactPickerManager
com.google.android.gms.internal.measurement.zzbv$zze: boolean zzh
org.webrtc.VideoCapturer: void changeCaptureFormat(int,int,int)
org.jitsi.meet.sdk.R$attr: int panelMenuListTheme
com.horcrux.svg.SvgPackage: java.util.List createJSModules()
okhttp3.internal.tls.OkHostnameVerifier: int ALT_IPA_NAME
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV2
com.horcrux.svg.TextPathView: void setSide(java.lang.String)
org.jitsi.meet.sdk.R$attr: int windowFixedWidthMinor
androidx.fragment.app.FragmentActivity: boolean mRequestedPermissionsFromFragment
com.horcrux.svg.R$attr: int singleChoiceItemLayout
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Display2
okhttp3.internal.platform.AndroidPlatform: java.lang.Class sslParametersClass
org.webrtc.CalledByNative: java.lang.String value()
androidx.fragment.app.Fragment: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque pongQueue
com.horcrux.svg.R$string: int catalyst_debug_chrome_stop
com.facebook.react.devsupport.DevLoadingViewController
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
org.jitsi.meet.R$drawable: int abc_tab_indicator_material
com.facebook.react.modules.core.Timing: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
com.horcrux.svg.R$styleable: int AppCompatTheme_imageButtonStyle
org.webrtc.MediaCodecWrapper: int dequeueOutputBuffer(android.media.MediaCodec$BufferInfo,long)
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec MODERN_TLS
com.facebook.react.bridge.ReactModuleWithSpec
org.webrtc.DataChannel
org.jitsi.meet.sdk.R$attr: int actualImageScaleType
org.jitsi.meet.sdk.R$attr: int drawerArrowStyle
org.jitsi.meet.R$id: int accessibility_label
org.jitsi.meet.sdk.R$drawable: int images_btn_google_signin_dark_normal
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void getDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float)
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric$3
org.jitsi.meet.sdk.R$styleable: int[] ActionMenuView
com.facebook.react.bridge.NativeModule$NativeMethod: void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.R$styleable: int SwitchCompat_thumbTextPadding
okhttp3.internal.http2.Http2Reader$Handler: void headers(boolean,int,int,java.util.List)
org.webrtc.PeerConnectionFactory$Options: boolean getDisableNetworkMonitor()
org.jitsi.meet.R$id: int line1
org.jitsi.meet.R$string: int catalyst_copy_button
com.google.android.gms.internal.measurement.zzcd$zzc: long zzf
com.facebook.react.devsupport.DevServerHelper: void enqueueOnChangeEndpointLongPolling()
org.webrtc.VideoFrameDrawer$YuvUploader
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
org.webrtc.GlGenericDrawer: java.lang.String TEXTURE_MATRIX_NAME
org.webrtc.voiceengine.WebRtcAudioRecord: void nativeDataIsRecorded(int,long)
org.jitsi.meet.sdk.R$id: int accessibility_action_clickable_span
org.jitsi.meet.sdk.R$styleable: int[] ColorStateListItem
okhttp3.internal.http2.Http2Reader$ContinuationSource: short padding
com.facebook.react.devsupport.DisabledDevSupportManager: boolean getDevSupportEnabled()
org.webrtc.VideoFrameDrawer: org.webrtc.VideoFrame$Buffer prepareBufferForViewportSize(org.webrtc.VideoFrame$Buffer,int,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBackgroundColor(int)
org.jitsi.meet.sdk.ListenerUtils$1: ListenerUtils$1(java.lang.Object,java.util.Map,java.lang.String,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection getConnection()
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_SearchResult
com.facebook.react.modules.datepicker.DatePickerDialogFragment: DatePickerDialogFragment()
org.webrtc.voiceengine.WebRtcAudioUtils: boolean isDefaultSampleRateOverridden()
com.facebook.react.views.view.ReactViewManager: void setTransform(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.R$string: int catalyst_sample_profiler_enable
okhttp3.internal.Util: java.lang.String[] intersect(java.util.Comparator,java.lang.String[],java.lang.String[])
com.horcrux.svg.R$style: int Platform_AppCompat
org.webrtc.Camera1Capturer: boolean captureToTexture
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_EMAIL_ADDRESS
com.facebook.react.bridge.ReactContext: void handleException(java.lang.Exception)
com.horcrux.svg.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
org.webrtc.VideoEncoder$ScalingSettings: org.webrtc.VideoEncoder$ScalingSettings OFF
org.jitsi.meet.R$style: int Base_Widget_AppCompat_Button_Colored
org.jitsi.meet.sdk.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
okhttp3.internal.connection.RouteSelector: java.lang.String getHostString(java.net.InetSocketAddress)
okhttp3.CacheControl: java.lang.String headerValue()
com.facebook.react.views.scroll.ReactScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
com.facebook.react.bridge.JavaMethodWrapper$10: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
org.jitsi.meet.sdk.ReactInstanceManagerHolder
okhttp3.EventListener$Factory: okhttp3.EventListener create(okhttp3.Call)
org.jitsi.meet.R$styleable: int AppCompatTheme_actionBarDivider
com.facebook.react.devsupport.interfaces.DevSupportManager: void addCustomDevOption(java.lang.String,com.facebook.react.devsupport.interfaces.DevOptionHandler)
com.facebook.react.devsupport.BundleDownloader: okhttp3.Call access$000(com.facebook.react.devsupport.BundleDownloader)
org.jitsi.meet.sdk.R$attr: int titleMargin
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.horcrux.svg.RenderableViewManager$GroupViewManager
okhttp3.OkHttpClient$1: java.io.IOException timeoutExit(okhttp3.Call,java.io.IOException)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REACT_CONTEXT_THREAD_END
org.jitsi.meet.R$layout: int abc_action_menu_item_layout
okhttp3.internal.connection.RouteSelector: int nextProxyIndex
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$AdapterType getNetworkPreference()
org.webrtc.Histogram: void nativeAddSample(long,int)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderRadius(com.facebook.react.views.text.ReactTextView,int,float)
com.horcrux.svg.R$styleable: int[] FontFamily
org.webrtc.CameraCapturer$2: CameraCapturer$2(org.webrtc.CameraCapturer)
com.horcrux.svg.R$styleable: int AppCompatImageView_tint
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
org.webrtc.VideoEncoder$ScalingSettings: VideoEncoder$ScalingSettings(boolean,int,int)
org.webrtc.NV21Buffer: int height
okhttp3.internal.cache.InternalCache: void remove(okhttp3.Request)
org.jitsi.meet.sdk.R$id: int top
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEUTRAL
org.jitsi.meet.sdk.R$drawable: int common_google_signin_btn_text_light
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
androidx.appcompat.widget.ScrollingTabContainerView
timber.log.Timber$Tree: java.lang.String getStackTraceString(java.lang.Throwable)
com.facebook.react.devsupport.RedBoxDialog$3
com.horcrux.svg.R$styleable: int Toolbar_contentInsetRight
org.jitsi.meet.R$dimen: int disabled_alpha_material_dark
okhttp3.MultipartBody$Part: okhttp3.Headers headers()
org.webrtc.EglRenderer$2
org.jitsi.meet.sdk.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
org.jitsi.meet.R$dimen: int abc_text_size_menu_material
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDirection(long)
org.webrtc.AndroidVideoDecoder: int DEQUEUE_OUTPUT_BUFFER_TIMEOUT_US
org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate: NetworkMonitorAutoDetect$ConnectivityManagerDelegate()
org.webrtc.MediaConstraints: java.util.List optional
org.webrtc.DataChannel$Init: int getId()
org.jitsi.meet.R$attr: int popupMenuStyle
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundingBorderPadding
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Inverse
org.jitsi.meet.sdk.R$style: int CalendarDatePickerStyle
com.horcrux.svg.R$drawable: int abc_control_background_material
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long)
org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordSamplesReadyCallback: void onWebRtcAudioRecordSamplesReady(org.webrtc.voiceengine.WebRtcAudioRecord$AudioSamples)
org.webrtc.MediaSource: MediaSource(long)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.squareup.duktape.Duktape: long createContext()
okhttp3.internal.http2.Http2Writer: void writeContinuationFrames(int,long)
org.webrtc.Camera2Enumerator: org.webrtc.CameraVideoCapturer createCapturer(java.lang.String,org.webrtc.CameraVideoCapturer$CameraEventsHandler)
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.devsupport.InspectorPackagerConnection access$202(com.facebook.react.devsupport.DevServerHelper,com.facebook.react.devsupport.InspectorPackagerConnection)
org.jitsi.meet.sdk.R$integer: int status_bar_notification_info_maxnum
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight
com.facebook.react.modules.network.NetworkingModule: okhttp3.RequestBody wrapRequestBodyWithProgressEmitter(okhttp3.RequestBody,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int)
org.webrtc.EglBase10Impl: javax.microedition.khronos.egl.EGLDisplay eglDisplay
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$CandidateNetworkPolicy candidateNetworkPolicy
com.facebook.react.devsupport.DevSupportManagerImpl$23: com.facebook.react.common.futures.SimpleSettableFuture val$future
org.webrtc.SoftwareVideoEncoderFactory: org.webrtc.VideoCodecInfo[] supportedCodecs()
com.facebook.react.devsupport.DevSupportManagerImpl: java.lang.String JS_BUNDLE_FILE_NAME
org.jitsi.meet.R$styleable: int ColorStateListItem_alpha
okhttp3.Cache$1: okhttp3.internal.cache.CacheRequest put(okhttp3.Response)
com.facebook.react.bridge.NativeModule
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
org.webrtc.EglBase10Impl$1FakeSurfaceHolder: android.view.Surface getSurface()
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressCircleDiameter()
okhttp3.internal.Util$2: java.lang.Thread newThread(java.lang.Runnable)
com.horcrux.svg.R$attr: int roundTopEnd
com.reactnativecommunity.webview.RNCWebViewManager: RNCWebViewManager(com.reactnativecommunity.webview.WebViewConfig)
okhttp3.internal.connection.RealConnection: okhttp3.Route route()
okhttp3.CipherSuite: okhttp3.CipherSuite init(java.lang.String,int)
com.dropbox.core.v2.sharing.ListFileMembersErrorException
okio.Buffer: int read(byte[])
org.jitsi.meet.sdk.JitsiMeetActivity: void finish()
org.webrtc.HardwareVideoEncoderFactory: java.lang.String TAG
com.horcrux.svg.R$style: int Widget_Compat_NotificationActionText
org.jitsi.meet.R$styleable: int AppCompatTheme_actionButtonStyle
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_roundedCornerRadius
com.horcrux.svg.R$styleable: int Toolbar_subtitleTextAppearance
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ProgressBar
org.jitsi.meet.sdk.R$id: int expanded_menu
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
org.webrtc.AndroidVideoDecoder: boolean isSupportedColorFormat(int)
okio.Buffer: okio.Buffer writeHexadecimalUnsignedLong(long)
com.facebook.react.devsupport.InspectorPackagerConnection$Connection$2
okio.HashingSink: okio.HashingSink sha1(okio.Sink)
org.webrtc.CandidatePairChangeEvent: org.webrtc.IceCandidate remote
org.jitsi.meet.R$style: int Widget_AppCompat_Button_Borderless
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel valueOf(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void handleMemoryPressure(int)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
org.webrtc.VideoCodecStatus: org.webrtc.VideoCodecStatus ERROR
org.webrtc.SurfaceEglRenderer: java.lang.String TAG
org.jitsi.meet.R$layout: int abc_screen_simple
org.jitsi.meet.R$styleable: int Fragment_android_tag
org.jitsi.meet.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
org.webrtc.voiceengine.WebRtcAudioManager: void storeAudioParameters()
org.webrtc.RendererCommon$VideoLayoutMeasure: float visibleFractionMatchOrientation
com.reactnativecommunity.webview.RNCWebViewManager: android.webkit.WebView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setVbHeight(com.horcrux.svg.MarkerView,float)
org.jitsi.meet.R$color: int primary_text_disabled_material_dark
com.facebook.react.devsupport.DevInternalSettings: boolean isHotModuleReplacementEnabled()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
org.jitsi.meet.sdk.R$style: int Base_Theme_AppCompat_Dialog
com.facebook.react.modules.storage.AsyncStorageModule: boolean mShuttingDown
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$200(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
okhttp3.Handshake: boolean equals(java.lang.Object)
org.webrtc.EncodedImage$FrameType
org.jitsi.meet.sdk.R$string: int abc_searchview_description_voice
com.horcrux.svg.R$styleable: int TextAppearance_android_textStyle
org.webrtc.PeerConnection$IceServer: java.lang.String getUsername()
org.jitsi.meet.sdk.JitsiMeet: void setDefaultConferenceOptions(org.jitsi.meet.sdk.JitsiMeetConferenceOptions)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.touch.OnInterceptTouchEventListener mOnInterceptTouchEventListener
com.horcrux.svg.RenderableView: void initBounds()
org.webrtc.RtcCertificatePem: org.webrtc.RtcCertificatePem generateCertificate(org.webrtc.PeerConnection$KeyType)
androidx.fragment.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_12
org.jitsi.meet.R$styleable: int AppCompatTheme_colorPrimaryDark
com.horcrux.svg.SvgViewManager: android.util.SparseArray mTagToRunnable
com.oney.WebRTCModule.WebRTCModule: void peerConnectionClose(int)
com.facebook.yoga.YogaNative: void jni_YGNodeCalculateLayout(long,float,float,long[],com.facebook.yoga.YogaNodeJNIBase[])
com.horcrux.svg.R$style: int Base_V7_Widget_AppCompat_EditText
com.facebook.react.uimanager.ViewManager: android.view.View createView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.touch.JSResponderHandler)
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_failureImageScaleType
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setAnimationProgress(float)
com.facebook.react.views.view.ReactViewGroup: void setOpacityIfPossible(float)
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService: org.jitsi.meet.sdk.AudioModeModule module
com.horcrux.svg.R$layout: int abc_screen_content_include
com.horcrux.svg.RenderableViewManager$LineViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.internal.io.FileSystem$1: okio.Sink appendingSink(java.io.File)
org.jitsi.meet.sdk.JitsiMeetActivity: void onConferenceTerminated(java.util.HashMap)
okhttp3.internal.cache.DiskLruCache$Entry: long sequenceNumber
com.horcrux.svg.R$drawable: int abc_item_background_holo_light
org.webrtc.FileVideoCapturer$VideoReaderY4M
org.webrtc.SessionDescription$Type: org.webrtc.SessionDescription$Type[] values()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionModeFindDrawable
com.facebook.react.bridge.CatalystInstanceImpl: void decrementPendingJSCalls()
com.horcrux.svg.R$styleable: int LinearLayoutCompat_android_orientation
org.jitsi.meet.R$dimen: int notification_top_pad_large_text
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation access$200(com.facebook.react.uimanager.UIManagerModule)
okhttp3.OkHttpClient$Builder: java.util.List interceptors
org.jitsi.meet.sdk.ConnectionService: void unregisterPhoneAccount(android.telecom.PhoneAccountHandle)
org.webrtc.YuvHelper: void copyPlane(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int)
com.horcrux.svg.R$drawable: int abc_ratingbar_indicator_material
org.jitsi.meet.sdk.R$attr: int windowActionBar
okhttp3.internal.cache.DiskLruCache$3: DiskLruCache$3(okhttp3.internal.cache.DiskLruCache)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY2(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueSpec
okhttp3.internal.connection.RealConnection: okhttp3.Route route
com.horcrux.svg.R$string: int catalyst_copy_button
okhttp3.CipherSuite$1: int compare(java.lang.String,java.lang.String)
okio.BufferedSource: long indexOf(okio.ByteString,long)
com.facebook.react.devsupport.MultipartStreamReader: java.util.Map parseHeaders(okio.Buffer)
com.facebook.react.views.viewpager.ReactViewPagerManager: void removeViewAt(com.facebook.react.views.viewpager.ReactViewPager,int)
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_BINARY
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzae,long)
okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.internal.platform.ConscryptPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
androidx.fragment.app.Fragment: void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
org.webrtc.CameraEnumerationAndroid$1: int MIN_FPS_THRESHOLD
org.webrtc.FileVideoCapturer$VideoReaderY4M: java.lang.String Y4M_FRAME_DELIMETER
com.facebook.react.devsupport.DevInternalSettings: java.lang.String PREFS_START_SAMPLING_PROFILER_ON_INIT
com.horcrux.svg.R$dimen: int abc_action_bar_default_padding_start_material
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setOverflow(java.lang.String)
com.facebook.react.devsupport.DevSupportManagerImpl$1: com.facebook.react.devsupport.DevSupportManagerImpl this$0
com.horcrux.svg.R$id: int scrollView
org.webrtc.HardwareVideoEncoder: org.webrtc.MediaCodecWrapper codec
okhttp3.WebSocket$Factory
okio.Buffer$UnsafeCursor: long offset
com.facebook.react.bridge.JavaMethodWrapper$4
okhttp3.CacheControl: int maxStaleSeconds
org.jitsi.meet.sdk.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
org.webrtc.MediaCodecUtils: java.lang.String[] SOFTWARE_IMPLEMENTATION_PREFIXES
org.jitsi.meet.sdk.log.JitsiMeetBaseLogHandler: void log(int,java.lang.String,java.lang.String,java.lang.Throwable)
org.webrtc.WrappedNativeVideoDecoder: org.webrtc.VideoCodecStatus release()
org.webrtc.MediaCodecVideoDecoderFactory: org.webrtc.Predicate codecAllowedPredicate
okhttp3.internal.Util: void closeQuietly(java.net.Socket)
org.webrtc.VideoCapturer: void dispose()
org.webrtc.voiceengine.WebRtcAudioManager: boolean proAudio
com.facebook.react.modules.core.DeviceEventManagerModule: void emitNewIntentReceived(android.net.Uri)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: JitsiMeetConferenceOptions(android.os.Parcel)
okhttp3.Address: boolean equalsNonHost(okhttp3.Address)
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_NATIVE_STACK
org.jitsi.meet.sdk.R$styleable: int FontFamily_fontProviderAuthority
com.horcrux.svg.R$styleable: int TextAppearance_android_shadowColor
okhttp3.internal.http2.Http2: byte TYPE_DATA
org.jitsi.meet.sdk.R$styleable: int ViewBackgroundHelper_backgroundTintMode
org.jitsi.meet.sdk.R$dimen: int abc_config_prefDialogWidth
org.jitsi.meet.R$id: int accessibility_states
org.webrtc.ThreadUtils: void invokeAtFrontUninterruptibly(android.os.Handler,java.lang.Runnable)
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()
org.webrtc.PeerConnectionFactory$Builder: PeerConnectionFactory$Builder(org.webrtc.PeerConnectionFactory$1)
okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(java.security.cert.X509Certificate[])
org.jitsi.meet.sdk.R$styleable: int SearchView_android_focusable
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToEnd(boolean)
com.horcrux.svg.RenderableView: float fillOpacity
com.horcrux.svg.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
org.jitsi.meet.R$id: int ALT
com.facebook.react.bridge.JSIModule
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$BundlePolicy getBundlePolicy()
org.jitsi.meet.sdk.ReactInstanceManagerHolder: void initReactInstanceManager(android.app.Activity)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_dropDownListViewStyle
org.webrtc.VideoFrameDrawer: void drawFrame(org.webrtc.VideoFrame,org.webrtc.RendererCommon$GlDrawer)
com.horcrux.svg.R$styleable: int ViewStubCompat_android_inflatedId
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Boolean getEnableDtlsSrtp()
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarSplitStyle
okhttp3.Interceptor$Chain: int writeTimeoutMillis()
com.facebook.react.bridge.AssertionException: AssertionException(java.lang.String)
com.facebook.react.fabric.Binding: void startSurfaceWithConstraints(int,java.lang.String,com.facebook.react.bridge.NativeMap,float,float,float,float)
com.facebook.jni.CpuCapabilitiesJni: boolean nativeDeviceSupportsX86()
org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode: JavaAudioDeviceModule$AudioRecordStartErrorCode(java.lang.String,int)
org.jitsi.meet.sdk.JitsiMeetViewListener
org.webrtc.PeerConnection$IceTransportsType: org.webrtc.PeerConnection$IceTransportsType[] values()
org.webrtc.CryptoOptions$Builder: boolean enableGcmCryptoSuites
org.jitsi.meet.sdk.ParticipantsService: org.jitsi.meet.sdk.ParticipantsService getInstance()
androidx.fragment.app.FragmentActivity: boolean mStartedIntentSenderFromFragment
com.facebook.react.bridge.JSApplicationCausedNativeException: JSApplicationCausedNativeException(java.lang.String,java.lang.Throwable)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INADEQUATE_SECURITY
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit)
org.webrtc.voiceengine.WebRtcAudioManager: boolean hardwareNS
com.facebook.react.packagerconnection.RequestOnlyHandler: RequestOnlyHandler()
com.facebook.react.devsupport.DevServerHelper: void isPackagerRunning(com.facebook.react.devsupport.interfaces.PackagerStatusCallback)
org.jitsi.meet.R$color: int button_material_light
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
okio.AsyncTimeout: void scheduleTimeout(okio.AsyncTimeout,long,boolean)
com.facebook.react.devsupport.MultipartStreamReader: java.lang.String CRLF
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])
com.facebook.react.bridge.WritableNativeArray: void pushNativeArray(com.facebook.react.bridge.WritableNativeArray)
okio.Okio: okio.Sink appendingSink(java.io.File)
com.facebook.react.devsupport.DevLoadingViewController$1: DevLoadingViewController$1(com.facebook.react.devsupport.DevLoadingViewController,java.lang.String)
com.horcrux.svg.R$id: int action_mode_bar
com.horcrux.svg.RenderableView: void mergeProperties(com.horcrux.svg.RenderableView)
okhttp3.Response$Builder
org.jitsi.meet.sdk.BroadcastEvent$Type: org.jitsi.meet.sdk.BroadcastEvent$Type VIDEO_MUTED_CHANGED
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String getName()
okio.RealBufferedSink: okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset)
org.jitsi.meet.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
org.jitsi.meet.sdk.R$dimen: int tooltip_corner_radius
com.horcrux.svg.R$drawable: int abc_btn_switch_to_on_mtrl_00012
okhttp3.internal.http1.Http1Codec$ChunkedSource: void readChunkSize()
org.jitsi.meet.R$attr: int arrowShaftLength
org.jitsi.meet.sdk.R$styleable: int[] Toolbar
org.jitsi.meet.sdk.BroadcastIntentHelper: android.content.Intent buildSendEndpointTextMessageIntent(java.lang.String,java.lang.String)
com.horcrux.svg.R$styleable: int[] AppCompatSeekBar
androidx.fragment.app.FragmentActivity: void supportInvalidateOptionsMenu()
org.webrtc.NetworkChangeDetector$NetworkInformation: NetworkChangeDetector$NetworkInformation(java.lang.String,org.webrtc.NetworkChangeDetector$ConnectionType,org.webrtc.NetworkChangeDetector$ConnectionType,long,org.webrtc.NetworkChangeDetector$IPAddress[])
org.jitsi.meet.sdk.R$style: int SplashScreen_SplashAnimation
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Tooltip
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_retryImageScaleType
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getDisplaySync()
com.horcrux.svg.R$styleable: int CompoundButton_android_button
com.horcrux.svg.R$color: int tooltip_background_light
okhttp3.internal.cache.DiskLruCache: void flush()
com.horcrux.svg.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
okhttp3.internal.cache.CacheInterceptor$1: okio.BufferedSink val$cacheBody
org.jitsi.meet.sdk.BroadcastEvent$Type: org.jitsi.meet.sdk.BroadcastEvent$Type buildTypeFromAction(java.lang.String)
org.webrtc.RtpReceiver: org.webrtc.MediaStreamTrack track()
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore
org.jitsi.meet.R$string: int abc_menu_alt_shortcut_label
org.jitsi.meet.sdk.JitsiMeetActivity$2
com.facebook.react.devsupport.JSDebuggerWebSocketClient: void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)
org.jitsi.meet.R$dimen: int abc_text_size_medium_material
com.google.android.gms.internal.measurement.zzca$zza: boolean zze
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
com.horcrux.svg.R$dimen: int abc_text_size_title_material_toolbar
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String REACT_CLASS
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_autoSizePresetSizes
org.jitsi.meet.sdk.R$attr: int actionBarSize
org.jitsi.meet.R$style: int Widget_AppCompat_SearchView
org.webrtc.TextureBufferImpl$RefCountMonitor: void onRelease(org.webrtc.TextureBufferImpl)
org.jitsi.meet.sdk.R$style: int SpinnerDatePickerStyle
org.jitsi.meet.R$style: int Theme_AppCompat_Empty
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE
okhttp3.internal.http.HttpDate: java.lang.ThreadLocal STANDARD_DATE_FORMAT
org.webrtc.Camera1Session: void startCapturing()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.lang.String getName()
okhttp3.CacheControl$Builder: okhttp3.CacheControl build()
org.jitsi.meet.sdk.R$attr: int progressBarStyle
okhttp3.FormBody: java.lang.String encodedValue(int)
org.jitsi.meet.R$attr: int roundTopStart
okhttp3.internal.ws.RealWebSocket: boolean pong(okio.ByteString)
org.jitsi.meet.R$string: int abc_searchview_description_search
org.jitsi.meet.R$id: int auto
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService: org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$BroadcastReceiver broadcastReceiver
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String getName()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: JSCJavaScriptExecutorFactory(java.lang.String,java.lang.String)
org.webrtc.DataChannel$Buffer
com.facebook.react.devsupport.DevServerHelper$10$1: DevServerHelper$10$1(com.facebook.react.devsupport.DevServerHelper$10)
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
org.jitsi.meet.sdk.log.JitsiMeetLogger: void w(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.facebook.react.bridge.PerformanceCounter: java.util.Map getPerformanceCounters()
org.jitsi.meet.sdk.R$dimen: int compat_notification_large_icon_max_width
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List)
org.webrtc.NV12Buffer: int stride
com.oney.WebRTCModule.WebRTCModule: void mediaStreamRemoveTrack(java.lang.String,java.lang.String)
timber.log.Timber$Tree: void log(int,java.lang.Throwable)
org.webrtc.ThreadUtils$2
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.horcrux.svg.R$style: int Theme_AppCompat_NoActionBar
com.horcrux.svg.R$styleable: int RecycleListView_paddingBottomNoButtons
com.facebook.react.modules.sound.SoundManagerModule: SoundManagerModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.animated.NativeAnimatedModule: java.util.ArrayList mPreOperations
org.webrtc.NV21Buffer: org.webrtc.VideoFrame$Buffer cropAndScale(int,int,int,int,int,int)
com.horcrux.svg.RenderableView: int CAP_ROUND
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: AppMeasurementDynamiteService()
org.webrtc.Camera1Session$1: org.webrtc.Camera1Session this$0
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
org.jitsi.meet.sdk.log.JitsiMeetDefaultLogHandler: JitsiMeetDefaultLogHandler()
com.facebook.react.devsupport.DevSupportManagerFactory: DevSupportManagerFactory()
com.facebook.yoga.YogaBaselineFunction
okio.ForwardingSource: java.lang.String toString()
androidx.fragment.app.Fragment: int getStateAfterAnimating()
okhttp3.Interceptor$Chain: okhttp3.Connection connection()
okio.Buffer: okio.Buffer writeInt(int)
org.jitsi.meet.R$id: int accessibility_custom_action_21
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_drawableRight
org.jitsi.meet.sdk.R$drawable: int abc_list_pressed_holo_light
okhttp3.internal.Util: java.util.List immutableList(java.util.List)
com.horcrux.svg.R$attr: int colorSwitchThumbNormal
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
com.facebook.react.devsupport.DevServerHelper$BundleType
org.webrtc.NetworkMonitor$1: org.webrtc.NetworkChangeDetector create(org.webrtc.NetworkChangeDetector$Observer,android.content.Context)
okio.Buffer: long indexOfElement(okio.ByteString,long)
okhttp3.ConnectionSpec$Builder: java.lang.String[] tlsVersions
com.horcrux.svg.R$attr: int titleMargins
org.jitsi.meet.sdk.AndroidSettingsModule: java.lang.String NAME
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.facebook.react.modules.core.Timing: void createTimer(int,int,double,boolean)
com.facebook.react.modules.network.NetworkingModule: void removeUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
org.webrtc.DtmfSender: int duration()
org.jitsi.meet.sdk.ParticipantsService$ParticipantsInfoCallback
org.jitsi.meet.R$styleable: int MenuItem_android_visible
com.zmxv.RNSound.RNSoundModule: void setSystemVolume(java.lang.Float)
com.horcrux.svg.R$attr: int collapseContentDescription
com.facebook.react.devsupport.RedBoxDialog: com.facebook.react.devsupport.interfaces.DevSupportManager access$600(com.facebook.react.devsupport.RedBoxDialog)
okhttp3.internal.http2.Http2Writer: void windowUpdate(int,long)
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.R$styleable: int MenuItem_alphabeticModifiers
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
okhttp3.internal.ws.WebSocketWriter$FrameSink: okio.Timeout timeout()
com.facebook.react.modules.blob.BlobModule: void addWebSocketHandler(int)
com.horcrux.svg.RenderableViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.internal.cache.FaultHidingSink: void onException(java.io.IOException)
okhttp3.internal.http2.Http2Writer: void synStream(boolean,int,int,java.util.List)
org.jitsi.meet.R$styleable: int AppCompatTheme_dividerHorizontal
org.webrtc.MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl: android.media.MediaFormat getOutputFormat()
org.jitsi.meet.R$styleable: int MenuItem_contentDescription
okhttp3.WebSocket: boolean close(int,java.lang.String)
com.facebook.react.views.text.ReactTextViewManager: java.lang.Class getShadowNodeClass()
org.webrtc.MediaCodecUtils: java.lang.String NVIDIA_PREFIX
androidx.fragment.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
androidx.fragment.app.FragmentActivity: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
org.jitsi.meet.sdk.BroadcastEvent$Type: java.lang.String VIDEO_MUTED_CHANGED_NAME
org.webrtc.PeerConnectionFactory$Options
org.webrtc.HardwareVideoEncoder
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory
org.webrtc.EglBase10Impl$Context
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.horcrux.svg.R$dimen: int abc_action_bar_overflow_padding_start_material
org.webrtc.JavaI420Buffer: org.webrtc.RefCountDelegate refCountDelegate
okio.BufferedSink: okio.BufferedSink emit()
org.webrtc.voiceengine.WebRtcAudioRecord$AudioSamples
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode
androidx.fragment.app.Fragment: boolean isVisible()
okio.Buffer: java.lang.Object clone()
org.webrtc.DataChannel: void nativeUnregisterObserver(long)
org.webrtc.CryptoOptions$Srtp: boolean getEnableGcmCryptoSuites()
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void onAfterUpdateTransaction(android.view.View)
com.horcrux.svg.R$attr: int lineHeight
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents mPointerEvents
com.facebook.react.views.scroll.ReactScrollView: void setBackgroundColor(int)
org.jitsi.meet.sdk.R$id: int action_bar_activity_content
org.jitsi.meet.R$string: int abc_activitychooserview_choose_application
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadPong(okio.ByteString)
okhttp3.internal.huc.OkHttpURLConnection: void setFixedLengthStreamingMode(int)
com.squareup.duktape.DuktapeException: java.util.regex.Pattern STACK_TRACE_PATTERN
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.facebook.react.modules.datepicker.DatePickerMode: com.facebook.react.modules.datepicker.DatePickerMode valueOf(java.lang.String)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers)
org.jitsi.meet.sdk.BaseReactView
org.webrtc.DataChannel: long nativeBufferedAmount()
org.jitsi.meet.sdk.R$attr: int arrowHeadLength
org.webrtc.PeerConnection$Observer: void onSelectedCandidatePairChanged(org.webrtc.CandidatePairChangeEvent)
org.webrtc.ThreadUtils$ThreadChecker
org.webrtc.RendererCommon$RendererEvents: void onFrameResolutionChanged(int,int,int)
org.webrtc.CameraEnumerationAndroid$ClosestComparator: int diff(java.lang.Object)
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mSourceURL
com.horcrux.svg.RenderableViewManager$ImageViewManager
org.webrtc.voiceengine.WebRtcAudioEffects: void enable(int)
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
org.jitsi.meet.R$styleable: int Toolbar_logo
com.facebook.jni.HybridClassBase: HybridClassBase()
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String HTML_ENCODING
org.jitsi.meet.R$style: int Base_Theme_AppCompat
com.facebook.react.bridge.JavaScriptModuleRegistry: JavaScriptModuleRegistry()
okio.Buffer: void flush()
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_1
com.facebook.react.packagerconnection.RequestOnlyHandler: void onRequest(java.lang.Object,com.facebook.react.packagerconnection.Responder)
com.facebook.react.views.view.ReactViewManager: void nextFocusForward(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.devsupport.DevServerHelper: java.lang.String getDevServerBundleURL(java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: void setMaximumValue(com.facebook.react.views.slider.ReactSlider,double)
com.facebook.react.devsupport.RedBoxDialog: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.horcrux.svg.SvgViewManager: void onDropViewInstance(android.view.View)
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_CLASS
okio.HashingSink: HashingSink(okio.Sink,okio.ByteString,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.devsupport.WebsocketJavaScriptExecutor: WebsocketJavaScriptExecutor()
org.webrtc.Camera1Session$2
com.facebook.react.ReactRootView: int getWidthMeasureSpec()
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] $VALUES
org.webrtc.NetworkChangeDetector$ConnectionType: org.webrtc.NetworkChangeDetector$ConnectionType[] $VALUES
okio.GzipSource: okio.BufferedSource source
okhttp3.internal.huc.OkHttpsURLConnection: void setDoOutput(boolean)
com.horcrux.svg.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
okio.BufferedSource: byte[] readByteArray()
kotlin.io.FileAlreadyExistsException
org.webrtc.VideoDecoder$Settings: int width
com.facebook.react.bridge.UIManager: void updateRootLayoutSpecs(int,int,int)
androidx.fragment.app.Fragment: boolean mRemoving
org.jitsi.meet.R$styleable: int[] ViewStubCompat
com.facebook.react.modules.debug.DevSettingsModule: void setProfilingEnabled(boolean)
okio.RealBufferedSink$1: void flush()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)
org.jitsi.meet.sdk.R$style: int Base_V7_Theme_AppCompat_Dialog
org.jitsi.meet.sdk.ReactInstanceManagerHolder: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.zmxv.RNSound.RNSoundModule: void getCurrentTime(java.lang.Double,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.BaseViewManager: void setBorderTopRightRadius(android.view.View,float)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: RenderableViewManager$EllipseViewManager()
com.facebook.react.devsupport.InspectorPackagerConnection$1: void onDisconnect()
com.horcrux.svg.R$dimen: int notification_right_side_padding_top
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType valueOf(java.lang.String)
org.jitsi.meet.R$attr: int color
org.jitsi.meet.sdk.R$drawable: int images_jitsilogo_square
org.webrtc.RtpParameters: java.lang.String transactionId
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable: FpsView$FPSMonitorRunnable(com.facebook.react.devsupport.FpsView,com.facebook.react.devsupport.FpsView$1)
org.jitsi.meet.sdk.R$raw: int lang_languagesar
com.facebook.react.bridge.JSIModulePackage: java.util.List getJSIModules(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.bridge.JavaScriptContextHolder)
org.jitsi.meet.sdk.R$attr: int roundTopLeft
com.facebook.react.views.view.ReactViewGroup: int mLayoutDirection
org.jitsi.meet.R$styleable: int AppCompatTheme_colorControlHighlight
org.jitsi.meet.R$drawable: int abc_list_divider_mtrl_alpha
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: ReactUnimplementedViewManager()
androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
org.webrtc.PeerConnection: void nativeSetAudioPlayout(boolean)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ackSettings()
okhttp3.internal.platform.AndroidPlatform: boolean isCleartextTrafficPermitted(java.lang.String)
com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType: com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType JS
com.google.gson.reflect.TypeToken: boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.bridge.ReactContext mCurrentContext
com.facebook.react.devsupport.DevServerHelper: void closeInspectorConnection()
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)
org.jitsi.meet.sdk.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
org.webrtc.IceCandidate: org.webrtc.PeerConnection$AdapterType adapterType
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_colorPrimary
com.facebook.yoga.YogaNodeCloneFunction
org.webrtc.IceCandidate: java.lang.String toString()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] values()
org.webrtc.voiceengine.WebRtcAudioTrack: android.media.AudioTrack createAudioTrackOnLowerThanLollipop(int,int,int)
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight_DarkActionBar
com.horcrux.svg.R$styleable: int[] ActionBar
okhttp3.internal.cache.DiskLruCache$Entry: java.lang.String key
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
org.jitsi.meet.sdk.R$styleable: int AppCompatTextHelper_android_drawableBottom
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDataDetectorType(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void forceRTL(boolean)
com.horcrux.svg.RenderableViewManager$ImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.devsupport.DevLoadingViewController$3
org.jitsi.meet.sdk.R$styleable: int GradientColor_android_centerColor
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
okhttp3.MediaType: MediaType(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org.webrtc.RtpParameters: org.webrtc.RtpParameters$DegradationPreference getDegradationPreference()
org.jitsi.meet.R$attr: int showDividers
org.webrtc.BitrateAdjuster: void setTargets(int,int)
org.jitsi.meet.sdk.JitsiMeetView
com.facebook.react.devsupport.DevSupportManagerImpl$13: DevSupportManagerImpl$13(com.facebook.react.devsupport.DevSupportManagerImpl)
com.facebook.react.devsupport.RedBoxDialog: android.view.View mLineSeparator
com.facebook.react.jscexecutor.JSCExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.devsupport.RedBoxDialog: com.facebook.react.devsupport.RedBoxHandler$ReportCompletedListener access$700(com.facebook.react.devsupport.RedBoxDialog)
com.google.firebase.components.DependencyCycleException
okio.ByteString: int decodeHexDigit(char)
com.dropbox.core.v2.team.TeamFolderListContinueErrorException
okhttp3.internal.http2.Http2Codec: okhttp3.internal.http2.Http2Connection connection
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_FORMDATA
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzw)
okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline[] values()
okio.ByteString: ByteString(byte[])
org.jitsi.meet.sdk.R$string: int abc_prepend_shortcut_label
okhttp3.Route: java.net.Proxy proxy()
org.jitsi.meet.sdk.R$id: int buttonPanel
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_failureImage
org.jitsi.meet.R$attr: int alphabeticModifiers
org.webrtc.VideoFileRenderer: int frameCount
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_Dialog_MinWidth
com.horcrux.svg.MarkerView: void setMarkerUnits(java.lang.String)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void headers(boolean,int,int,java.util.List)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5: int[] $SwitchMap$com$facebook$react$bridge$queue$MessageQueueThreadSpec$ThreadType
okhttp3.internal.http2.Http2Connection$4
okhttp3.internal.huc.OkHttpURLConnection: java.security.Permission getPermission()
okhttp3.internal.http1.Http1Codec$FixedLengthSink: void close()
org.jitsi.meet.R$styleable: int ActionBar_height
okhttp3.internal.ws.WebSocketWriter$FrameSink: int formatOpcode
org.jitsi.meet.sdk.R$attr: int windowFixedHeightMinor
com.horcrux.svg.R$string: int abc_activity_chooser_view_see_all
org.webrtc.JavaI420Buffer: void retain()
com.facebook.react.devsupport.interfaces.DevSupportManager: void showNewJavaError(java.lang.String,java.lang.Throwable)
com.facebook.react.modules.dialog.DialogModule: void onHostResume()
okhttp3.internal.http2.Http2Connection: void awaitPong()
org.jitsi.meet.sdk.R$style: int Widget_Compat_NotificationActionContainer
com.dropbox.core.v2.team.GroupsListContinueErrorException
org.webrtc.JniCommon: void nativeFreeByteBuffer(java.nio.ByteBuffer)
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_roundingBorderPadding
org.jitsi.meet.R$attr: int switchStyle
org.jitsi.meet.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
com.horcrux.svg.RNSVGRenderableManager: int EOF
com.horcrux.svg.R$color: int highlighted_text_material_dark
org.jitsi.meet.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarStyle
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.PushObserver pushObserver
org.webrtc.RtpParameters$DegradationPreference: RtpParameters$DegradationPreference(java.lang.String,int)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.ReadableMap: java.util.Iterator getEntryIterator()
org.jitsi.meet.sdk.AudioModeModule: java.lang.String access$100(org.jitsi.meet.sdk.AudioModeModule)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzw)
com.facebook.jni.HybridData: com.facebook.jni.HybridData$Destructor mDestructor
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mNativeModulesQueueThread
androidx.fragment.app.Fragment: boolean isHidden()
com.horcrux.svg.TextProperties$FontVariantLigatures: com.horcrux.svg.TextProperties$FontVariantLigatures[] values()
com.horcrux.svg.R$id: int scrollIndicatorUp
org.jitsi.meet.R$dimen: int tooltip_precise_anchor_threshold
org.jitsi.meet.sdk.R$attr: int thumbTextPadding
org.jitsi.meet.sdk.R$styleable: int Toolbar_contentInsetEnd
com.dropbox.core.v2.paper.ListUsersCursorErrorException
org.webrtc.NetworkMonitorAutoDetect: long INVALID_NET_ID
okhttp3.CertificatePinner: CertificatePinner(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)
com.horcrux.svg.R$id: int centerInside
org.webrtc.audio.WebRtcAudioRecord: int DEFAULT_AUDIO_FORMAT
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String BLANK_URL
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getPhoneNumberSync()
com.horcrux.svg.R$drawable: int abc_scrubber_control_off_mtrl_alpha
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay valueOf(java.lang.String)
org.webrtc.PeerConnection$IceConnectionState: org.webrtc.PeerConnection$IceConnectionState NEW
org.jitsi.meet.R$string: int imagebutton_description
org.jitsi.meet.sdk.DropboxModule: com.facebook.react.bridge.Promise promise
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
org.webrtc.RtpTransceiver: RtpTransceiver(long)
com.facebook.react.bridge.JSCJavaScriptExecutorFactory
okio.SegmentedByteString
com.horcrux.svg.MarkerView: void setMinY(float)
com.horcrux.svg.R$attr: int listItemLayout
org.webrtc.audio.LowLatencyAudioBufferManager: int bufferIncreaseCounter
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorCallbackFuture: java.util.concurrent.Semaphore mSemaphore
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
com.facebook.react.devsupport.DevSupportManagerImpl$5: com.facebook.react.devsupport.interfaces.StackFrame[] val$stack
okhttp3.Address
org.jitsi.meet.R$style: int Base_V7_Theme_AppCompat
org.jitsi.meet.R$string: int abc_capital_on
com.facebook.react.fabric.events.FabricEventEmitter
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType mThreadType
androidx.fragment.app.FragmentActivity: void onPause()
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Inverse
okhttp3.internal.cache.DiskLruCache$3: java.util.Iterator delegate
okhttp3.OkUrlFactory: okhttp3.OkUrlFactory setClient(okhttp3.OkHttpClient)
com.squareup.duktape.Duktape: java.lang.Object call(long,long,java.lang.Object,java.lang.Object[])
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
okhttp3.Cookie$Builder: boolean httpOnly
org.jitsi.meet.sdk.R$drawable: int abc_list_longpressed_holo
okhttp3.Cache$CacheRequestImpl: okio.Sink body
org.webrtc.SurfaceViewRenderer: void removeFrameListener(org.webrtc.EglRenderer$FrameListener)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: ReactProgressBarViewManager()
org.jitsi.meet.sdk.R$styleable: int SwitchCompat_showText
okhttp3.internal.huc.OkHttpsURLConnection: java.io.InputStream getInputStream()
org.webrtc.Logging$Severity
org.jitsi.meet.sdk.BroadcastAction: java.util.HashMap buildDataFromBundle(android.os.Bundle)
com.horcrux.svg.R$attr: int drawableSize
com.facebook.react.devsupport.DevSupportManagerImpl: void handleReloadJS()
org.jitsi.meet.sdk.BroadcastEvent: BroadcastEvent(java.lang.String,com.facebook.react.bridge.ReadableMap)
org.jitsi.meet.sdk.R$raw: int node_modules_csstree_package
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder
org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger$LogVolumeTask: WebRtcAudioManager$VolumeLogger$LogVolumeTask(org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger,int,int)
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.DynamicFromMap create(com.facebook.react.bridge.ReadableMap,java.lang.String)
org.jitsi.meet.R$dimen: int abc_button_padding_vertical_material
okhttp3.internal.http2.Settings: int set
org.jitsi.meet.R$styleable: int FragmentContainerView_android_tag
org.jitsi.meet.R$styleable: int SignInButton_buttonSize
org.jitsi.meet.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setIfModifiedSince(long)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean access$502(com.learnium.RNDeviceInfo.RNDeviceModule,boolean)
com.facebook.react.modules.blob.FileReaderModule: com.facebook.react.modules.blob.BlobModule getBlobModule()
okio.Buffer: okio.Buffer writeShortLe(int)
com.facebook.react.bridge.ReadableMap
okhttp3.MultipartBody$Part: okhttp3.RequestBody body
org.jitsi.meet.sdk.R$styleable: int LinearLayoutCompat_dividerPadding
com.facebook.react.devsupport.DevServerHelper$1$4: DevServerHelper$1$4(com.facebook.react.devsupport.DevServerHelper$1)
org.jitsi.meet.R$string: int abc_menu_space_shortcut_label
org.webrtc.audio.WebRtcAudioTrack: int CALLBACK_BUFFER_SIZE_MS
com.facebook.react.bridge.CatalystInstanceImpl$3: void run()
okhttp3.internal.http2.Http2Connection$3: int val$streamId
com.facebook.react.bridge.ReadableNativeArray: boolean isNull(int)
org.jitsi.meet.sdk.R$color: int tooltip_background_light
com.google.android.gms.internal.measurement.zzcd$zza: com.google.android.gms.internal.measurement.zzcd$zzi zze
org.webrtc.VideoEncoder$CodecSpecificInfo: VideoEncoder$CodecSpecificInfo()
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.RedBoxHandler access$1000(com.facebook.react.devsupport.DevSupportManagerImpl)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_MD5
com.facebook.react.views.art.ARTSurfaceViewManager: void updateExtraData(android.view.View,java.lang.Object)
okhttp3.internal.cache2.Relay$RelaySource: okio.Timeout timeout
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_buttonBarStyle
com.facebook.react.bridge.JavaOnlyArray: java.lang.String getString(int)
org.jitsi.meet.sdk.R$color: int catalyst_redbox_background
org.jitsi.meet.sdk.JitsiMeetActivity$1: void onReceive(android.content.Context,android.content.Intent)
org.jitsi.meet.sdk.R$attr: int colorPrimaryDark
org.jitsi.meet.sdk.R$style: int Platform_Widget_AppCompat_Spinner
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit)
org.jitsi.meet.sdk.R$raw: int lang_languagesbg
okhttp3.internal.tls.BasicCertificateChainCleaner: int MAX_SIGNERS
okio.Buffer: java.lang.String readUtf8Line()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)
com.horcrux.svg.RenderableView: int VECTOR_EFFECT_DEFAULT
okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)
org.webrtc.MediaCodecUtils: int COLOR_QCOM_FORMATYUV420PackedSemiPlanar32m
org.webrtc.CameraCapturer: int MAX_OPEN_CAMERA_ATTEMPTS
com.google.android.gms.auth.api.signin.RevocationBoundService: RevocationBoundService()
com.horcrux.svg.R$styleable: int AppCompatTheme_panelMenuListWidth
com.horcrux.svg.Brush$BrushType: com.horcrux.svg.Brush$BrushType[] values()
okhttp3.internal.http2.Http2Reader: Http2Reader(okio.BufferedSource,boolean)
org.webrtc.TurnCustomizer: long getNativeTurnCustomizer()
org.webrtc.voiceengine.BuildInfo: java.lang.String getBuildRelease()
okio.DeflaterSink: java.lang.String toString()
okio.Buffer: okio.ByteString sha1()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String getName()
okhttp3.HttpUrl: java.lang.String url
org.webrtc.voiceengine.BuildInfo: java.lang.String getBrand()
org.jitsi.meet.sdk.R$attr: int progressBarAutoRotateInterval
com.facebook.react.modules.image.ImageLoaderModule: void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
androidx.fragment.app.FragmentActivity: int mNextCandidateRequestIndex
okio.Pipe: long maxBufferSize
org.webrtc.HardwareVideoEncoder: java.lang.Exception shutdownException
com.facebook.react.module.model.ReactModuleInfo
org.jitsi.meet.sdk.R$styleable: int DrawerArrowToggle_drawableSize
okhttp3.CipherSuite: CipherSuite(java.lang.String)
org.webrtc.PeerConnection$IceServer: java.lang.String uri
org.jitsi.meet.R$dimen: int abc_text_size_small_material
com.horcrux.svg.RenderableViewManager$TextViewManager: void setFont(com.horcrux.svg.TextView,com.facebook.react.bridge.ReadableMap)
org.jitsi.meet.R$id: int tag_transition_group
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_POSITIVE
okhttp3.internal.huc.OkHttpsURLConnection: java.security.cert.Certificate[] getServerCertificates()
com.facebook.react.modules.websocket.WebSocketModule: void send(java.lang.String,int)
org.jitsi.meet.R$string: int menuitem_description
org.jitsi.meet.sdk.R$styleable: int ViewStubCompat_android_id
com.facebook.react.views.view.ReactViewManager: void setBackfaceVisibility(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
org.jitsi.meet.R$dimen: int abc_action_bar_content_inset_with_nav
org.jitsi.meet.sdk.R$color: int material_blue_grey_800
com.facebook.react.uimanager.BaseViewManager: void setViewState(android.view.View,com.facebook.react.bridge.ReadableMap)
okhttp3.RealCall$AsyncCall: RealCall$AsyncCall(okhttp3.RealCall,okhttp3.Callback)
org.webrtc.GlRectDrawer$ShaderCallbacks: void onPrepareShader(org.webrtc.GlShader,float[],int,int,int,int)
org.jitsi.meet.sdk.R$styleable: int Toolbar_subtitleTextAppearance
org.webrtc.EglBase14Impl: int surfaceWidth()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_ActionBar_TabText
okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)
com.horcrux.svg.R$attr: int buttonIconDimen
com.horcrux.svg.RenderableViewManager$TSpanViewManager: void setContent(com.horcrux.svg.TSpanView,java.lang.String)
org.jitsi.meet.R$dimen: int abc_control_padding_material
com.facebook.react.modules.fresco.FrescoModule: void onHostDestroy()
com.facebook.react.bridge.NoSuchKeyException: NoSuchKeyException(java.lang.String)
org.jitsi.meet.sdk.LocaleDetector: java.util.Map getConstants()
okhttp3.internal.http2.Http2: java.io.IOException ioException(java.lang.String,java.lang.Object[])
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
org.jitsi.meet.sdk.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
org.jitsi.meet.R$attr: int splitTrack
okhttp3.Protocol: java.lang.String toString()
okhttp3.internal.http2.Header: okio.ByteString value
org.jitsi.meet.sdk.JitsiMeetUserInfo: JitsiMeetUserInfo(android.os.Bundle)
okhttp3.internal.http2.Http2Connection$5: okhttp3.internal.http2.Http2Connection this$0
com.facebook.react.devsupport.DevSupportManagerImpl: boolean mIsReceiverRegistered
org.jitsi.meet.sdk.R$styleable: int[] FontFamilyFont
okio.AsyncTimeout: long timeoutAt
okhttp3.internal.ws.WebSocketReader: void processNextFrame()
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
org.jitsi.meet.R$string: int ongoing_notification_text
okio.RealBufferedSink: okio.BufferedSink writeUtf8(java.lang.String)
okio.AsyncTimeout$2: okio.AsyncTimeout this$0
com.horcrux.svg.VirtualView: int mClipRule
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)
com.facebook.react.views.slider.ReactSlider: void setValue(double)
org.webrtc.ThreadUtils$3: java.util.concurrent.CountDownLatch val$barrier
okhttp3.internal.cache.CacheInterceptor$1: okio.Timeout timeout()
org.jitsi.meet.sdk.R$drawable: int common_google_signin_btn_text_disabled
org.jitsi.meet.R$attr: int panelMenuListTheme
com.horcrux.svg.R$color: int error_color_material_light
org.webrtc.VideoProcessor
okhttp3.internal.http2.Http2: byte TYPE_WINDOW_UPDATE
okio.Buffer$2: int available()
com.horcrux.svg.R$style: int Widget_AppCompat_ActionBar_TabView
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Timeout timeout()
okhttp3.internal.ws.RealWebSocket$Streams: boolean client
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
org.webrtc.TextureBufferImpl: TextureBufferImpl(int,int,org.webrtc.VideoFrame$TextureBuffer$Type,int,android.graphics.Matrix,android.os.Handler,org.webrtc.YuvConverter,org.webrtc.TextureBufferImpl$RefCountMonitor)
org.jitsi.meet.R$string: int catalyst_perf_monitor_stop
okhttp3.MultipartBody: byte[] COLONSPACE
com.facebook.react.modules.permissions.PermissionsModule: void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_START
org.webrtc.FramerateBitrateAdjuster
org.jitsi.meet.R$dimen: int abc_action_bar_stacked_max_height
org.webrtc.PeerConnection$PortPrunePolicy: org.webrtc.PeerConnection$PortPrunePolicy KEEP_FIRST_READY
com.horcrux.svg.R$dimen: int abc_dialog_min_width_major
com.facebook.react.devsupport.DevServerHelper$7
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String TAG
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.facebook.react.bridge.CatalystInstanceImpl: void registerSegment(int,java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: void access$200(com.facebook.react.modules.websocket.WebSocketModule,int,java.lang.String)
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getHeaderField(java.lang.String)
org.webrtc.audio.WebRtcAudioTrack: java.lang.String TAG
com.facebook.react.devsupport.DevSupportManagerImpl$1
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
org.jitsi.meet.sdk.JitsiMeetActivity$2: int[] $SwitchMap$org$jitsi$meet$sdk$BroadcastEvent$Type
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout)
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.facebook.react.bridge.ReactContext: void destroy()
com.facebook.react.views.view.ReactViewGroup: void setOverflow(java.lang.String)
com.facebook.react.modules.camera.ImageEditingManager: java.io.File access$300(android.content.Context,java.lang.String)
okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)
org.jitsi.meet.sdk.R$styleable: int[] DrawerArrowToggle
com.horcrux.svg.R$style: int Base_Widget_AppCompat_SearchView
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper getFragmentManagerHelper()
org.jitsi.meet.sdk.ConnectionService: void abortConnections()
com.facebook.react.bridge.ReadableMap: boolean getBoolean(java.lang.String)
okhttp3.Cache$2: java.lang.String nextUrl
androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1
okhttp3.Cache$2: java.lang.String next()
org.jitsi.meet.R$anim: int abc_shrink_fade_out_from_bottom
org.webrtc.JavaI420Buffer: org.webrtc.JavaI420Buffer allocate(int,int)
okhttp3.Headers: okhttp3.Headers of(java.lang.String[])
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.art.ARTRenderableViewManager: com.facebook.react.views.art.ARTRenderableViewManager createARTTextViewManager()
org.webrtc.voiceengine.WebRtcAudioTrack: void setAudioTrackUsageAttribute(int)
com.facebook.react.views.switchview.ReactSwitchManager: void setValue(com.facebook.react.views.switchview.ReactSwitch,boolean)
org.jitsi.meet.sdk.R$string: int abc_shareactionprovider_share_with_application
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.horcrux.svg.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.facebook.react.bridge.CatalystInstanceImpl: void access$000(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
okhttp3.internal.http2.Settings: int MAX_FRAME_SIZE
com.facebook.react.views.image.ReactImageView: void setBorderRadius(float)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] publicSuffixListBytes
org.webrtc.BitrateAdjuster: void reportEncodedFrame(int)
com.facebook.react.bridge.JavaJSExecutor: void close()
org.webrtc.CameraCapturer: java.lang.Object access$400(org.webrtc.CameraCapturer)
org.jitsi.meet.R$attr: int searchHintIcon
com.facebook.react.views.image.ReactImageManager: void setOverlayColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
org.webrtc.RendererCommon$GlDrawer: void drawOes(int,float[],int,int,int,int,int,int)
com.oney.WebRTCModule.WebRTCView: void setObjectFit(java.lang.String)
com.dropbox.core.v2.team.RevokeLinkedAppErrorException
okhttp3.internal.http2.Http2Connection$1: void execute()
com.facebook.react.views.viewpager.ReactViewPagerManager: int getChildCount(android.view.ViewGroup)
okhttp3.CipherSuite$1: CipherSuite$1()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setMeetOrSlice(com.horcrux.svg.ImageView,int)
org.jitsi.meet.R$attr: int arrowHeadLength
org.webrtc.voiceengine.WebRtcAudioTrack: int BITS_PER_SAMPLE
okhttp3.internal.http1.Http1Codec$ChunkedSource: okhttp3.HttpUrl url
org.webrtc.RtpParameters$Encoding: java.lang.Double scaleResolutionDownBy
okhttp3.internal.Util: okio.ByteString UTF_32_LE_BOM
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.VideoDecoderFactory videoDecoderFactory
org.webrtc.PeerConnection: org.webrtc.RtpTransceiver nativeAddTransceiverWithTrack(long,org.webrtc.RtpTransceiver$RtpTransceiverInit)
com.dropbox.core.v2.fileproperties.InvalidPropertyGroupErrorException
com.facebook.react.views.art.ARTSurfaceViewShadowNode: void setBackgroundColor(java.lang.Integer)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode COMPRESSION_ERROR
com.horcrux.svg.R$color: int accent_material_light
org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordThread: WebRtcAudioRecord$AudioRecordThread(org.webrtc.voiceengine.WebRtcAudioRecord,java.lang.String)
org.jitsi.meet.sdk.R$id: int action_bar_subtitle
okhttp3.internal.ws.RealWebSocket: void awaitTermination(int,java.util.concurrent.TimeUnit)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostDestroy()
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation
okio.HashingSource: long read(okio.Buffer,long)
org.webrtc.CameraCapturer: void access$000(org.webrtc.CameraCapturer)
org.webrtc.AndroidVideoDecoder$DecodedTextureMetadata: java.lang.Integer decodeTimeMs
androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)
okio.Okio: okio.Source source(java.io.InputStream,okio.Timeout)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
okhttp3.Request: okhttp3.Request$Builder newBuilder()
org.jitsi.meet.sdk.R$raw: int lang_languageszhcn
org.jitsi.meet.sdk.R$id: int centerInside
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
org.jitsi.meet.sdk.R$attr: int listLayout
com.facebook.react.devsupport.DevInternalSettings: com.facebook.react.packagerconnection.PackagerConnectionSettings mPackagerConnectionSettings
com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding[] values()
org.jitsi.meet.R$anim: int btn_checkbox_to_unchecked_check_path_merged_animation
com.facebook.react.devsupport.DevSupportManagerImpl$4: java.lang.String val$message
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPadding(long,int)
org.webrtc.HardwareVideoEncoderFactory: int QCOM_VP8_KEY_FRAME_INTERVAL_ANDROID_M_MS
org.jitsi.meet.R$drawable: int common_full_open_on_phone
okhttp3.internal.http.HttpHeaders: boolean varyMatches(okhttp3.Response,okhttp3.Headers,okhttp3.Request)
okhttp3.internal.http.HttpDate: java.text.DateFormat[] BROWSER_COMPATIBLE_DATE_FORMATS
com.facebook.react.devsupport.DisabledDevSupportManager: void reloadSettings()
com.facebook.react.views.scroll.ReactScrollView: boolean getRemoveClippedSubviews()
org.jitsi.meet.sdk.R$styleable: int DrawerArrowToggle_arrowHeadLength
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(java.util.Map)
org.webrtc.Camera1Capturer: boolean isScreencast()
com.horcrux.svg.R$style: int Widget_AppCompat_ListPopupWindow
androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)
org.webrtc.audio.WebRtcAudioRecord: void access$700(org.webrtc.audio.WebRtcAudioRecord,long,int)
org.webrtc.voiceengine.WebRtcAudioManager: void dispose()
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarTheme
com.facebook.react.bridge.JavaModuleWrapper: java.util.List getMethodDescriptors()
org.jitsi.meet.sdk.ConnectionService: void onCreateIncomingConnectionFailed(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
org.webrtc.EglBase10
org.jitsi.meet.R$id: int line3
org.jitsi.meet.sdk.R$color: int androidx_core_ripple_material_light
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForFalse(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
okhttp3.internal.http1.Http1Codec$FixedLengthSink: okio.ForwardingTimeout timeout
org.jitsi.meet.sdk.R$id: int icon_only
okio.Base64: byte[] decode(java.lang.String)
okio.Base64: java.lang.String encode(byte[],byte[])
org.webrtc.voiceengine.WebRtcAudioManager: org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger volumeLogger
com.facebook.react.modules.appregistry.AppRegistry
okhttp3.internal.NamedRunnable: void execute()
com.horcrux.svg.R$style: int Base_Widget_AppCompat_PopupMenu
okhttp3.internal.huc.OkHttpsURLConnection: void setReadTimeout(int)
com.facebook.react.devsupport.DevSupportManagerImpl$16: com.facebook.react.devsupport.DevSupportManagerImpl this$0
com.facebook.react.uimanager.UIManagerModule: void clearJSResponder()
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.OptionalMethod setUseSessionTickets
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$SamplesReadyCallback samplesReadyCallback
org.jitsi.meet.sdk.JitsiMeetUncaughtExceptionHandler
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA
com.facebook.react.devsupport.DevServerHelper: java.lang.String createPackagerStatusURL(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.EventListener: void callFailed(okhttp3.Call,java.io.IOException)
org.webrtc.H264Utils: org.webrtc.VideoCodecInfo DEFAULT_H264_BASELINE_PROFILE_CODEC
org.jitsi.meet.sdk.net.NAT64AddrInfoModule: org.jitsi.meet.sdk.net.NAT64AddrInfo info
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean getAllowUserInteraction()
org.webrtc.EncodedImage$Builder: org.webrtc.EncodedImage createEncodedImage()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_SEED_CBC_SHA
org.webrtc.PeerConnection$IceConnectionState: org.webrtc.PeerConnection$IceConnectionState FAILED
org.webrtc.NetworkChangeDetector$ConnectionType: org.webrtc.NetworkChangeDetector$ConnectionType[] values()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_ActivityChooserView
com.facebook.react.devsupport.JSCHeapCapture$CaptureException: JSCHeapCapture$CaptureException(java.lang.String,java.lang.Throwable)
com.squareup.duktape.DuktapeException: java.lang.StackTraceElement toStackTraceElement(java.lang.String)
com.horcrux.svg.VirtualView: android.graphics.Path getClipPath(android.graphics.Canvas,android.graphics.Paint)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.google.android.gms.internal.measurement.zzhv$zzd: com.google.android.gms.internal.measurement.zzho zzc
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Dialog
kotlin.KotlinNullPointerException
com.facebook.react.modules.blob.BlobModule: void remove(java.lang.String)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionBarSplitStyle
com.facebook.react.ReactRootView: android.os.Bundle getAppProperties()
com.facebook.react.devsupport.BundleDownloader$BundleInfo: java.lang.String getDeltaClient()
org.jitsi.meet.sdk.R$raw: int lang_languagesaf
org.jitsi.meet.R$attr: int actualImageUri
org.jitsi.meet.R$attr: int isLightTheme
org.webrtc.SurfaceViewRenderer: int surfaceHeight
com.facebook.react.ReactRootView
com.horcrux.svg.R$styleable: int SearchView_goIcon
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric$1: org.jitsi.meet.sdk.AudioDeviceHandlerGeneric this$0
com.facebook.react.bridge.CatalystInstance: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
com.horcrux.svg.R$attr: int actionBarStyle
okio.SegmentedByteString: okio.ByteString substring(int,int)
com.dropbox.core.v2.team.FeaturesGetValuesBatchErrorException
okhttp3.MultipartBody$Part
org.webrtc.EglBase10Impl: void makeCurrent()
com.facebook.react.bridge.CxxCallbackImpl: com.facebook.jni.HybridData mHybridData
org.webrtc.voiceengine.WebRtcAudioUtils: java.lang.String streamTypeToString(int)
com.horcrux.svg.R$attr: int progressBarStyle
org.webrtc.PeerConnectionFactory$InitializationOptions$Builder: org.webrtc.Loggable loggable
org.webrtc.VideoFileRenderer: android.os.HandlerThread renderThread
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver)
org.jitsi.meet.R$attr: int buttonBarPositiveButtonStyle
org.webrtc.NetworkMonitor$1
org.webrtc.audio.WebRtcAudioManager: int getInputBufferSize(android.content.Context,android.media.AudioManager,int,int)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: int MAX_SQL_KEYS
com.facebook.react.bridge.JavaMethodWrapper$5: JavaMethodWrapper$5()
org.webrtc.FileVideoCapturer$VideoReaderY4M: java.lang.String TAG
okio.ByteString: okio.ByteString of(byte[])
org.jitsi.meet.R$attr: int drawableTopCompat
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTimedOutEventParams
org.jitsi.meet.R$styleable: int AppCompatTheme_actionMenuTextColor
com.horcrux.svg.R$anim: int catalyst_slide_down
org.webrtc.EncodedImage$Builder: long captureTimeNs
com.horcrux.svg.R$string: int catalyst_debug_error
okio.Buffer: long size
org.webrtc.NetworkMonitor: void init(android.content.Context)
com.facebook.react.modules.statusbar.StatusBarModule
okhttp3.internal.ws.WebSocketWriter$FrameSink: boolean isFirstFrame
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2
com.google.android.gms.internal.measurement.zzcd$zzk
org.webrtc.TextureBufferImpl$1: java.lang.Runnable val$releaseCallback
com.horcrux.svg.R$id: int action_mode_bar_stub
okhttp3.Cache$Entry: okhttp3.Response response(okhttp3.internal.cache.DiskLruCache$Snapshot)
okhttp3.Cache$CacheRequestImpl: boolean done
com.facebook.react.views.view.ReactViewManager: java.lang.String REACT_CLASS
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
com.oney.WebRTCModule.WebRTCModule: java.util.List createIceServers(com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.camera.CameraRollManager: java.lang.String[] access$200()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])
com.facebook.react.devsupport.WebsocketJavaScriptExecutor: long CONNECT_TIMEOUT_MS
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
org.webrtc.Camera2Capturer: void switchCamera(org.webrtc.CameraVideoCapturer$CameraSwitchHandler,java.lang.String)
org.jitsi.meet.sdk.R$dimen: int notification_action_icon_size
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_drawableStartCompat
org.webrtc.EglBase: int EGL_RECORDABLE_ANDROID
okio.BufferedSource: int read(byte[])
org.jitsi.meet.R$styleable: int AppCompatTheme_searchViewStyle
okhttp3.internal.http2.Http2Connection$1: int val$streamId
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_roundTopRight
org.webrtc.RtpReceiver: void setFrameDecryptor(org.webrtc.FrameDecryptor)
org.jitsi.meet.R$string: int timer_description
org.jitsi.meet.sdk.JitsiMeetViewListener: void onConferenceWillJoin(java.util.Map)
org.webrtc.Camera2Session: org.webrtc.Histogram camera2StopTimeMsHistogram
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
org.webrtc.voiceengine.WebRtcAudioManager: boolean blacklistDeviceForAAudioUsage
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
org.jitsi.meet.sdk.BaseReactView: java.lang.Object getListener()
com.facebook.react.views.scroll.ReactScrollView: void setSendMomentumEvents(boolean)
org.jitsi.meet.R$attr: int contentInsetLeft
org.webrtc.SessionDescription: java.lang.String getDescription()
com.facebook.react.uimanager.BaseViewManager: void setElevation(android.view.View,float)
org.webrtc.NetworkMonitor
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
org.webrtc.PeerConnectionFactory$InitializationOptions: org.webrtc.Logging$Severity loggableSeverity
okhttp3.internal.cache2.Relay: java.io.RandomAccessFile file
com.facebook.react.bridge.DynamicFromObject: boolean asBoolean()
okhttp3.internal.ws.WebSocketWriter: okio.Sink newMessageSink(int,long)
com.google.android.gms.internal.measurement.zzhf$zza: zzhf$zza()
okhttp3.internal.ws.RealWebSocket$2: okhttp3.Request val$request
com.horcrux.svg.TSpanView
org.jitsi.meet.R$styleable: int Toolbar_menu
org.jitsi.meet.sdk.AudioModeModule$5: boolean val$use
org.jitsi.meet.sdk.R$styleable: int FontFamilyFont_fontVariationSettings
org.webrtc.Camera2Session$CaptureSessionCallback: void onConfigureFailed(android.hardware.camera2.CameraCaptureSession)
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
org.jitsi.meet.sdk.R$attr: int actionModePasteDrawable
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzw
org.jitsi.meet.sdk.R$style: int Theme_ReactNative_AppCompat_Light_NoActionBar_FullScreen
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService$1: AudioDeviceHandlerConnectionService$1(org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService,android.telecom.CallAudioState)
com.facebook.react.devsupport.DebugOverlayController: boolean permissionCheck(android.content.Context)
com.horcrux.svg.R$styleable: int AppCompatTheme_android_windowAnimationStyle
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: void onMessage(okhttp3.WebSocket,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: int IME_ACTION_ID
com.facebook.react.views.image.ReactImageManager: ReactImageManager()
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.io.InputStream getErrorStream()
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem updatePropsMountItem(int,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setOpacity(android.view.View,float)
org.jitsi.meet.sdk.R$anim: int catalyst_slide_down
com.horcrux.svg.R$attr: int ratingBarStyle
com.horcrux.svg.R$string: int catalyst_debug_nuclide_error
okhttp3.MultipartBody: java.util.List parts
org.jitsi.meet.R$style: int Base_Widget_AppCompat_SearchView
org.jitsi.meet.R$styleable: int SimpleDraweeView_overlayImage
androidx.fragment.app.Fragment: boolean isInBackStack()
com.horcrux.svg.R$string: int catalyst_hot_reloading_stop
androidx.fragment.app.Fragment: void performMultiWindowModeChanged(boolean)
com.facebook.react.bridge.NativeDeltaClient
com.facebook.react.uimanager.UIManagerModule: void onHostPause()
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mCallerContext
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ProgressBar
org.jitsi.meet.sdk.R$styleable: int Spinner_android_dropDownWidth
okhttp3.internal.huc.OkHttpsURLConnection: long getExpiration()
okhttp3.internal.http.CallServerInterceptor$CountingSink: long successfulCount
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_PopupMenu_Overflow
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxyAuthenticator(okhttp3.Authenticator)
org.webrtc.Predicate: org.webrtc.Predicate negate()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzw)
com.horcrux.svg.R$dimen: int abc_switch_padding
com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture: com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture[] values()
org.webrtc.audio.AudioDeviceModule
okhttp3.internal.huc.OutputStreamRequestBody: boolean closed
okhttp3.Cache
okhttp3.Cookie$Builder: boolean hostOnly
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean canceled
org.jitsi.meet.R$dimen: int abc_panel_menu_list_width
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_TextView
com.facebook.react.modules.image.ImageLoaderModule: java.lang.Object mEnqueuedRequestMonitor
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.horcrux.svg.RenderableViewManager$MaskManager: RenderableViewManager$MaskManager()
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState getLifecycleState()
okhttp3.Cache$1: void remove(okhttp3.Request)
androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
okhttp3.internal.Util: java.lang.reflect.Method addSuppressedExceptionMethod
org.jitsi.meet.R$styleable: int SimpleDraweeView_retryImage
org.webrtc.Camera1Enumerator: boolean captureToTexture
org.webrtc.RtpSender: RtpSender(long)
com.facebook.react.devsupport.DevServerHelper: android.os.Handler access$1000(com.facebook.react.devsupport.DevServerHelper)
com.google.android.gms.auth.api.signin.GoogleSignInOptions: android.os.Parcelable$Creator CREATOR
com.facebook.react.modules.core.ExceptionsManagerModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyToByteArray(long,byte[],int,int)
org.webrtc.DefaultVideoEncoderFactory: org.webrtc.VideoCodecInfo[] getSupportedCodecs()
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMinY(com.horcrux.svg.MarkerView,float)
okhttp3.internal.http2.Hpack$Reader: int headerTableSizeSetting
okhttp3.internal.http2.Settings: int INITIAL_WINDOW_SIZE
okhttp3.WebSocket$Factory: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)
org.webrtc.PeerConnection: org.webrtc.RtcCertificatePem nativeGetCertificate()
org.webrtc.VideoEncoder: org.webrtc.VideoCodecStatus encode(org.webrtc.VideoFrame,org.webrtc.VideoEncoder$EncodeInfo)
okio.ByteString: int compareTo(okio.ByteString)
org.jitsi.meet.R$raw: int lang_mainsc
org.jitsi.meet.sdk.R$id: int search_mag_icon
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite
okhttp3.internal.http2.Http2Connection$2: okhttp3.internal.http2.Http2Connection this$0
okhttp3.Headers: int size()
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow[] values()
okio.ForwardingSink: void close()
com.google.android.gms.auth.TokenData: android.os.Parcelable$Creator CREATOR
org.webrtc.voiceengine.WebRtcAudioEffects: boolean isNoiseSuppressorExcludedByUUID()
com.facebook.react.bridge.NativeModuleRegistry: java.util.Collection getCxxModules()
org.webrtc.CameraVideoCapturer$CameraStatistics: java.lang.Runnable cameraObserver
okhttp3.internal.http2.Http2Reader$ContinuationSource: okio.Timeout timeout()
com.facebook.react.views.view.ReactViewGroup: void setBorderWidth(int,float)
com.horcrux.svg.R$attr: int contentInsetRight
com.horcrux.svg.R$attr: int thickness
com.horcrux.svg.RenderableViewManager$PathViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mWebSocketConnections
com.facebook.react.modules.toast.ToastModule: java.util.Map getConstants()
okhttp3.internal.http2.Header: Header(okio.ByteString,java.lang.String)
androidx.fragment.app.Fragment: boolean mHidden
org.jitsi.meet.R$drawable: int btn_checkbox_checked_mtrl
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_START
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode PROTOCOL_ERROR
com.horcrux.svg.R$color: int bright_foreground_inverse_material_dark
com.horcrux.svg.R$dimen: int notification_action_icon_size
com.horcrux.svg.SvgView: boolean isResponsible()
okio.RealBufferedSink$1: java.lang.String toString()
org.webrtc.Camera2Session: org.webrtc.CameraSession$CreateSessionCallback callback
org.jitsi.meet.R$attr: int windowNoTitle
com.oney.WebRTCModule.WebRTCModule: void peerConnectionAddICECandidate(com.facebook.react.bridge.ReadableMap,int,com.facebook.react.bridge.Callback)
com.facebook.react.views.view.ReactViewGroup: void dispatchProvideStructure(android.view.ViewStructure)
com.facebook.react.views.text.ReactTextView: void setEllipsizeLocation(android.text.TextUtils$TruncateAt)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
com.horcrux.svg.R$styleable: int AlertDialog_android_layout
org.jitsi.meet.sdk.BroadcastAction$Type: org.jitsi.meet.sdk.BroadcastAction$Type[] values()
org.webrtc.VideoFileRenderer: org.webrtc.EglBase access$002(org.webrtc.VideoFileRenderer,org.webrtc.EglBase)
org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordErrorCallback: void onWebRtcAudioRecordError(java.lang.String)
org.webrtc.Camera2Enumerator: double NANO_SECONDS_PER_SECOND
okhttp3.internal.http2.Http2: byte TYPE_PUSH_PROMISE
com.facebook.react.modules.camera.CameraRollManager: void putEdges(android.content.ContentResolver,android.database.Cursor,com.facebook.react.bridge.WritableMap,int)
com.horcrux.svg.SvgView: java.util.Map mDefinedClipPaths
com.facebook.react.views.viewpager.ReactViewPagerManager: void receiveCommand(com.facebook.react.views.viewpager.ReactViewPager,java.lang.String,com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.sdk.R$attr: int contentInsetStartWithNavigation
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake
org.webrtc.VideoFrame$TextureBuffer$Type: org.webrtc.VideoFrame$TextureBuffer$Type[] values()
com.horcrux.svg.SvgView: void onSizeChanged(int,int,int,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendTouchExplorationChangeEvent(boolean)
okhttp3.internal.http2.PushObserver: void onReset(int,okhttp3.internal.http2.ErrorCode)
org.jitsi.meet.R$id: int centerCrop
com.calendarevents.CalendarEvents: void requestCalendarPermissions(com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
okhttp3.internal.http2.Http2Stream$StreamTimeout
okhttp3.internal.cache.DiskLruCache: java.util.concurrent.Executor executor
org.jitsi.meet.sdk.R$drawable: int common_google_signin_btn_icon_dark_normal_background
org.jitsi.meet.R$styleable: int AppCompatTextHelper_android_drawableBottom
org.jitsi.meet.sdk.R$styleable: int Toolbar_logoDescription
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
org.webrtc.DataChannel$Init: boolean getNegotiated()
org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate: android.net.ConnectivityManager connectivityManager
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Button_Colored
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
okhttp3.internal.cache.CacheInterceptor$1
org.jitsi.meet.R$style: int Base_V7_Theme_AppCompat_Dialog
org.webrtc.audio.WebRtcAudioRecord: void access$900(org.webrtc.audio.WebRtcAudioRecord,java.lang.String)
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_SeekBar
com.horcrux.svg.R$attr: int isLightTheme
com.facebook.react.bridge.ReactContext$1: ReactContext$1(com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.LifecycleEventListener)
org.webrtc.AndroidVideoDecoder: int width
okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)
com.google.android.gms.internal.measurement.zzbv$zzf: boolean zzf
org.webrtc.CameraVideoCapturer
com.facebook.react.devsupport.DevSupportManagerImpl: void registerErrorCustomizer(com.facebook.react.devsupport.interfaces.ErrorCustomizer)
org.jitsi.meet.sdk.R$drawable: int notification_action_background
okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)
org.jitsi.meet.sdk.JitsiMeetFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
org.webrtc.PeerConnection$IceServer$Builder
org.jitsi.meet.sdk.ExternalAPIModule: java.util.Map getConstants()
org.jitsi.meet.sdk.R$dimen: int abc_text_size_display_4_material
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_roundingBorderColor
com.facebook.react.bridge.ModuleHolder: boolean hasInstance()
org.webrtc.CameraCapturer: int framerate
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath
org.jitsi.meet.sdk.R$styleable: int[] AppCompatSeekBar
org.webrtc.audio.JavaAudioDeviceModule: int outputSampleRate
org.webrtc.CameraEnumerationAndroid$CaptureFormat: int width
org.jitsi.meet.R$xml: R$xml()
org.jitsi.meet.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
org.webrtc.YuvHelper: void ABGRToI420(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int)
org.webrtc.audio.WebRtcAudioRecord: long AUDIO_RECORD_THREAD_JOIN_TIMEOUT_MS
androidx.fragment.app.FragmentActivity: void onStop()
com.horcrux.svg.RadialGradientView: void setFy(com.facebook.react.bridge.Dynamic)
okhttp3.internal.http2.Http2Stream$FramingSource: long maxByteCount
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBERED
org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode: JavaAudioDeviceModule$AudioTrackStartErrorCode(java.lang.String,int)
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$BundlePolicy bundlePolicy
org.jitsi.meet.sdk.R$id: int action_mode_close_button
com.facebook.react.views.view.ReactViewGroup: void setBackground(android.graphics.drawable.Drawable)
org.jitsi.meet.R$styleable: int AppCompatTheme_buttonStyleSmall
okhttp3.internal.ws.RealWebSocket$Message: okio.ByteString data
org.webrtc.CallSessionFileRotatingLogSink: long nativeSink
org.jitsi.meet.sdk.BroadcastEvent$Type: org.jitsi.meet.sdk.BroadcastEvent$Type PARTICIPANTS_INFO_RETRIEVED
org.jitsi.meet.R$layout: int fps_view
org.webrtc.voiceengine.WebRtcAudioUtils: int DEFAULT_SAMPLE_RATE_HZ
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Null
androidx.fragment.app.Fragment: boolean mDeferStart
org.jitsi.meet.R$attr: int theme
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap asMap()
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable: com.facebook.react.devsupport.FpsView this$0
org.jitsi.meet.sdk.R$id: int search_go_btn
okhttp3.Cache: okhttp3.Response get(okhttp3.Request)
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
com.horcrux.svg.R$dimen: int disabled_alpha_material_dark
com.facebook.react.devsupport.BundleDeltaClient$BundleDeltaJavaClient
com.facebook.react.bridge.ActivityEventListener
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.modules.network.NetworkingModule: void setCustomClientBuilder(com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder)
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ExecutorService pushExecutor
org.jitsi.meet.sdk.R$layout: int abc_screen_toolbar
okhttp3.internal.URLFilter
org.jitsi.meet.sdk.R$id: int tag_accessibility_clickable_spans
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)
androidx.appcompat.widget.DialogTitle
okhttp3.internal.Util: java.lang.String[] concat(java.lang.String[],java.lang.String)
org.jitsi.meet.sdk.R$style: int Base_Theme_AppCompat_CompactMenu
com.horcrux.svg.VirtualView: int hitTest(float[])
org.jitsi.meet.R$id: int list_item
org.webrtc.Logging: java.util.logging.Logger createFallbackLogger()
org.jitsi.meet.R$style: int Widget_AppCompat_ListMenuView
org.webrtc.VideoCodecType: int VIDEO_CODEC_MULTIPLEX
com.facebook.react.views.view.ReactViewGroup: void updateSubviewClipStatus(android.graphics.Rect,int,int)
org.webrtc.voiceengine.WebRtcAudioRecord: WebRtcAudioRecord(long)
com.horcrux.svg.UseView: void setHref(java.lang.String)
okhttp3.internal.cache2.FileOperator: FileOperator(java.nio.channels.FileChannel)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setHeaders(com.facebook.react.bridge.ReadableMap)
org.jitsi.meet.sdk.R$style: int Platform_AppCompat
org.webrtc.voiceengine.WebRtcAudioRecord$AudioSamples: int getSampleRate()
com.horcrux.svg.VirtualView: void setClipPath(java.lang.String)
org.jitsi.meet.R$styleable: int ViewBackgroundHelper_backgroundTint
org.webrtc.NetworkMonitorAutoDetect: void registerReceiver()
org.jitsi.meet.sdk.BroadcastEvent: java.util.HashMap data
org.webrtc.Camera2Session: boolean firstFrameReported
com.facebook.react.devsupport.JSDebuggerWebSocketClient: void onMessage(okhttp3.WebSocket,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$2
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getCodenameSync()
org.jitsi.meet.R$attr: int swipeRefreshLayoutProgressSpinnerBackgroundColor
org.jitsi.meet.R$styleable: int SimpleDraweeView_placeholderImageScaleType
okhttp3.OkHttpClient: OkHttpClient(okhttp3.OkHttpClient$Builder)
org.jitsi.meet.sdk.R$color: int background_material_dark
okhttp3.internal.http.RealInterceptorChain
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
okhttp3.internal.io.FileSystem
okio.Pipe: boolean sinkClosed
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_SearchView_ActionBar
org.jitsi.meet.BuildConfig: java.lang.String BUILD_TYPE
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: StackTraceHelper$StackFrameImpl(java.lang.String,java.lang.String,int,int,com.facebook.react.devsupport.StackTraceHelper$1)
com.horcrux.svg.RenderableViewManager: void setPointerEvents(com.horcrux.svg.VirtualView,java.lang.String)
org.webrtc.ScreenCapturerAndroid: ScreenCapturerAndroid(android.content.Intent,android.media.projection.MediaProjection$Callback)
com.facebook.react.devsupport.ReactInstanceManagerDevHelper: void toggleElementInspector()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] $VALUES
org.webrtc.Camera1Session: boolean access$502(org.webrtc.Camera1Session,boolean)
org.jitsi.meet.sdk.log.JitsiMeetLogger: void w(java.lang.Throwable)
okhttp3.internal.http1.Http1Codec: int STATE_READ_RESPONSE_HEADERS
com.horcrux.svg.R$layout: int abc_action_bar_up_container
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.facebook.react.devsupport.DevSupportManagerImpl$2: void onShake()
com.horcrux.svg.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
com.horcrux.svg.RenderableViewManager$PatternManager: void setX(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
org.jitsi.meet.R$string: int abc_menu_meta_shortcut_label
com.horcrux.svg.R$attr: int suggestionRowLayout
com.horcrux.svg.R$dimen: int abc_action_bar_stacked_tab_max_width
com.facebook.react.modules.network.NetworkingModule: void addRequest(int)
com.horcrux.svg.R$attr: int actionDropDownStyle
com.facebook.react.bridge.ReactApplicationContext
com.horcrux.svg.R$dimen: int abc_search_view_preferred_height
org.jitsi.meet.R$style: int Theme
com.horcrux.svg.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Response networkResponse
org.jitsi.meet.sdk.R$string: int catalyst_hot_reloading_auto_enable
org.webrtc.YuvHelper: void nativeI420Copy(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int)
okhttp3.internal.http2.Http2Connection$1: okhttp3.internal.http2.Http2Connection this$0
org.jitsi.meet.sdk.R$raw: int node_modules_csstree_node_modules_mdndata_css_syntaxes
com.facebook.react.devsupport.DevServerHelper$BundleType: com.facebook.react.devsupport.DevServerHelper$BundleType MAP
org.webrtc.PeerConnection$IceServer: java.util.List getTlsEllipticCurves()
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_Dialog
okio.Okio: Okio()
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.internal.cache.InternalCache: okhttp3.internal.cache.CacheRequest put(okhttp3.Response)
okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: void getTotalMemory(com.facebook.react.bridge.Promise)
com.horcrux.svg.VirtualView: android.graphics.Path mPath
org.jitsi.meet.sdk.JitsiMeetActivity: void onDestroy()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderStyle(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.horcrux.svg.R$styleable: int PopupWindow_overlapAnchor
org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode: org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode[] $VALUES
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])
com.horcrux.svg.R$styleable: int Toolbar_android_minHeight
org.webrtc.ScreenCapturerAndroid: android.media.projection.MediaProjection access$300(org.webrtc.ScreenCapturerAndroid)
okhttp3.internal.http2.Http2Connection$5: okio.Buffer val$buffer
org.jitsi.meet.R$attr: int scopeUris
okhttp3.OkHttpClient$Builder: boolean retryOnConnectionFailure
com.calendarevents.CalendarEvents: java.lang.Integer availabilityConstantMatchingString(java.lang.String)
okhttp3.internal.huc.OutputStreamRequestBody$1: long val$expectedContentLength
org.jitsi.meet.GoogleServicesHelper: void initialize(org.jitsi.meet.sdk.JitsiMeetActivity)
com.facebook.react.views.checkbox.ReactCheckBoxManager: void setTintColors(com.facebook.react.views.checkbox.ReactCheckBox,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.image.ReactImageManager: void setDefaultSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
org.webrtc.Camera2Session: java.lang.String TAG
com.facebook.react.devsupport.InspectorPackagerConnection: void access$000(com.facebook.react.devsupport.InspectorPackagerConnection,java.lang.String,java.lang.String)
org.webrtc.AndroidVideoDecoder: int MEDIA_CODEC_RELEASE_TIMEOUT_MS
org.webrtc.EglBase10Impl: org.webrtc.EglBase$Context getEglBaseContext()
org.jitsi.meet.sdk.R$dimen: int abc_dialog_min_width_minor
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants loadApplicationScript_endStringConvert
okhttp3.internal.cache2.FileOperator: void write(long,okio.Buffer,long)
androidx.fragment.app.Fragment: boolean shouldShowRequestPermissionRationale(java.lang.String)
org.jitsi.meet.sdk.R$id: int focusCrop
com.horcrux.svg.R$styleable: int AppCompatTheme_dialogCornerRadius
org.jitsi.meet.sdk.DropboxModule: void authorize(com.facebook.react.bridge.Promise)
okhttp3.internal.http2.Http2Connection$Listener$1: Http2Connection$Listener$1()
org.webrtc.NetworkMonitorAutoDetect: org.webrtc.NetworkChangeDetector$Observer observer
org.jitsi.meet.sdk.R$id: int rn_frame_file
com.google.firebase.FirebaseException: FirebaseException()
org.jitsi.meet.sdk.R$string: int abc_menu_alt_shortcut_label
com.reactnativecommunity.webview.RNCWebViewModule: boolean startPhotoPickerIntent(android.webkit.ValueCallback,java.lang.String[],boolean)
com.facebook.react.views.art.ARTSurfaceViewManager: com.facebook.react.views.art.ARTSurfaceView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
org.jitsi.meet.sdk.R$attr: int titleMarginStart
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment
okhttp3.internal.cache2.Relay$RelaySource: long read(okio.Buffer,long)
okhttp3.internal.cache.DiskLruCache: boolean journalRebuildRequired()
com.facebook.react.bridge.Arguments
org.webrtc.EglRenderer: void clearImage(float,float,float,float)
org.webrtc.EglBase: int[] CONFIG_PLAIN
com.horcrux.svg.R$dimen: int abc_button_inset_vertical_material
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_fadeDuration
com.horcrux.svg.R$styleable: int MenuView_preserveIconSpacing
org.jitsi.meet.sdk.R$styleable: int FragmentContainerView_android_name
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean)
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonStyleSmall
com.facebook.react.bridge.CatalystInstanceImpl: boolean mDestroyed
org.webrtc.audio.WebRtcAudioRecord: boolean isNoiseSuppressorSupported()
org.jitsi.meet.sdk.BroadcastAction: java.util.HashMap data
com.horcrux.svg.R$styleable: int AppCompatTheme_windowFixedWidthMinor
com.horcrux.svg.SvgView: void setAlign(java.lang.String)
okhttp3.FormBody: java.lang.String name(int)
com.google.android.gms.internal.measurement.zzci$zzb: boolean zzf
org.webrtc.ScreenCapturerAndroid: org.webrtc.CapturerObserver access$100(org.webrtc.ScreenCapturerAndroid)
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_DayNight_NoActionBar
org.webrtc.PeerConnection: boolean setBitrate(java.lang.Integer,java.lang.Integer,java.lang.Integer)
okhttp3.internal.Util: boolean isAndroidGetsocknameError(java.lang.AssertionError)
com.learnium.RNDeviceInfo.RNDeviceModule: void getUserAgent(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
org.webrtc.VideoDecoderFallback
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundTopStart
com.facebook.react.uimanager.ViewGroupManager: boolean shouldPromoteGrandchildren()
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(okio.Buffer)
org.webrtc.voiceengine.WebRtcAudioEffects
org.jitsi.meet.sdk.R$color: int common_google_signin_btn_text_dark_pressed
org.jitsi.meet.sdk.R$style: int TextAppearance_Compat_Notification_Info
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: java.lang.Boolean videoMuted
com.facebook.react.modules.core.Timing: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
org.jitsi.meet.R$attr: int contentInsetStartWithNavigation
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: CatalystInstanceImpl$1$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1$1)
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptBeforeContentLoaded(android.webkit.WebView,java.lang.String)
com.facebook.react.devsupport.DevSupportManagerImpl: android.content.Context access$1200(com.facebook.react.devsupport.DevSupportManagerImpl)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
okio.ByteString: boolean startsWith(okio.ByteString)
org.jitsi.meet.R$styleable: int LinearLayoutCompat_android_baselineAligned
com.facebook.react.devsupport.DevSupportManagerImpl$5: int val$errorCookie
com.horcrux.svg.RenderableViewManager: void setRenderableView(int,com.horcrux.svg.RenderableView)
com.horcrux.svg.SvgView: void invalidate()
org.jitsi.meet.sdk.OngoingConferenceTracker$OngoingConferenceListener: void onCurrentConferenceChanged(java.lang.String)
org.webrtc.voiceengine.WebRtcAudioManager: boolean isAcousticEchoCancelerSupported()
com.facebook.react.views.modal.ReactModalHostView: void setAnimationType(java.lang.String)
org.webrtc.VideoEncoderFactory$VideoEncoderSelector
com.zmxv.RNSound.RNSoundModule: void reset(java.lang.Double)
com.facebook.react.views.slider.ReactSlider: void setStep(double)
org.webrtc.RtpParameters$Encoding: java.lang.Long getSsrc()
okhttp3.internal.http2.Http2Connection$Listener: void onSettings(okhttp3.internal.http2.Http2Connection)
okhttp3.internal.connection.RealConnection: int allocationLimit
org.jitsi.meet.sdk.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
org.webrtc.DtmfSender: void dispose()
org.webrtc.EglBase10Impl: int surfaceHeight()
org.jitsi.meet.sdk.R$styleable: int StateListDrawableItem_android_drawable
org.webrtc.Logging$TraceLevel: org.webrtc.Logging$TraceLevel TRACE_DEBUG
com.facebook.react.devsupport.BundleDownloader$2: BundleDownloader$2(com.facebook.react.devsupport.BundleDownloader,okhttp3.Response,java.lang.String,java.io.File,com.facebook.react.devsupport.BundleDownloader$BundleInfo,com.facebook.react.devsupport.BundleDeltaClient$ClientType,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener)
com.facebook.react.bridge.JavaMethodWrapper$10: com.facebook.react.bridge.Promise extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okhttp3.CertificatePinner$Pin: int hashCode()
org.jitsi.meet.sdk.R$style: int Platform_ThemeOverlay_AppCompat_Light
com.facebook.react.views.progressbar.ReactProgressBarViewManager
org.webrtc.VideoFrame$I420Buffer: java.nio.ByteBuffer getDataU()
org.jitsi.meet.R$drawable: int abc_text_select_handle_right_mtrl_dark
okhttp3.FormBody$Builder: java.util.List names
org.jitsi.meet.R$anim: int abc_grow_fade_in_from_bottom
com.facebook.react.devsupport.DevSupportManagerImpl: java.lang.String EMOJI_HUNDRED_POINTS_SYMBOL
org.jitsi.meet.R$styleable: int View_paddingEnd
com.facebook.react.devsupport.DevInternalSettings: DevInternalSettings(android.content.Context,com.facebook.react.devsupport.DevInternalSettings$Listener,boolean)
com.kevinresol.react_native_default_preference.RNDefaultPreferenceModule: void getMultiple(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.google.android.gms.measurement.AppMeasurementService
org.jitsi.meet.R$attr: int actionOverflowButtonStyle
com.facebook.react.bridge.Arguments$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.zmxv.RNSound.RNSoundModule: void setSpeed(java.lang.Double,java.lang.Float)
org.webrtc.Camera2Session: int fpsUnitFactor
org.jitsi.meet.sdk.AudioModeModule$AudioDeviceHandlerInterface: void stop()
com.horcrux.svg.R$color: int button_material_dark
com.horcrux.svg.R$styleable: int SwitchCompat_android_textOn
okio.ForwardingSink: okio.Timeout timeout()
org.webrtc.RtpTransceiver: boolean setDirection(org.webrtc.RtpTransceiver$RtpTransceiverDirection)
org.jitsi.meet.R$id: int actions
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1$1 this$3
com.facebook.react.views.view.ReactViewGroup: boolean getRemoveClippedSubviews()
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()
org.jitsi.meet.sdk.incoming_call.IncomingCallView
com.google.firebase.FirebaseException
org.jitsi.meet.R$attr: int queryHint
com.facebook.react.bridge.CatalystInstanceImpl$1: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderRadius(float)
org.jitsi.meet.sdk.R$styleable: int MenuItem_android_icon
org.webrtc.Histogram: org.webrtc.Histogram createEnumeration(java.lang.String,int)
com.facebook.react.devsupport.InspectorPackagerConnection: void connect()
org.jitsi.meet.sdk.log.JitsiMeetLogger
com.facebook.react.bridge.LifecycleEventListener: void onHostPause()
com.facebook.react.views.drawer.ReactDrawerLayoutManager
org.webrtc.VideoFrame$Buffer: int getHeight()
org.jitsi.meet.R$layout: int abc_dialog_title_material
okio.Options: Options(okio.ByteString[],int[])
okio.HashingSink
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String getHeaderFieldKey(int)
com.facebook.react.bridge.GuardedRunnable
org.jitsi.meet.R$style: int Base_Widget_AppCompat_Spinner
okhttp3.internal.cache.DiskLruCache
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
com.facebook.react.uimanager.UIManagerModule: void dismissPopupMenu()
org.jitsi.meet.sdk.R$styleable: int AppCompatSeekBar_android_thumb
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: HeadlessJsTaskSupportModule(com.facebook.react.bridge.ReactApplicationContext)
org.jitsi.meet.sdk.R$color: int common_google_signin_btn_text_light_pressed
com.facebook.react.views.modal.ReactModalHostView: void setHardwareAccelerated(boolean)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mJSMessageQueueThread
org.jitsi.meet.sdk.OngoingNotification: java.lang.String CHANNEL_ID
org.jitsi.meet.sdk.R$dimen: int tooltip_y_offset_non_touch
com.dropbox.core.v2.files.SearchErrorException
org.webrtc.EglRenderer: void disableFpsReduction()
org.webrtc.EglRenderer: void clearImage()
org.jitsi.meet.R$color: int bright_foreground_inverse_material_dark
org.jitsi.meet.R$id: int CTRL
okhttp3.internal.http2.Http2Connection: void shutdown(okhttp3.internal.http2.ErrorCode)
okhttp3.internal.connection.ConnectInterceptor: ConnectInterceptor(okhttp3.OkHttpClient)
com.facebook.react.devsupport.DevSupportManagerImpl: void toggleElementInspector()
com.horcrux.svg.R$styleable: int AppCompatTheme_alertDialogCenterButtons
org.webrtc.PeerConnectionFactory: org.webrtc.PeerConnectionFactory access$200(android.content.Context,org.webrtc.PeerConnectionFactory$Options,long,long,long,org.webrtc.VideoEncoderFactory,org.webrtc.VideoDecoderFactory,long,long,long,long,long)
org.webrtc.MediaStream: java.lang.String nativeGetId(long)
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
org.webrtc.VideoEncoderFallback: org.webrtc.VideoEncoder fallback
org.webrtc.VideoFrame: void retain()
com.horcrux.svg.R$styleable: int GradientColor_android_endColor
org.jitsi.meet.R$style: int Widget_AppCompat_ActionButton
com.horcrux.svg.R$styleable: int Toolbar_menu
com.facebook.react.bridge.ReactContext: void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
okhttp3.internal.http2.Http2Connection: void pushExecutorExecute(okhttp3.internal.NamedRunnable)
org.jitsi.meet.R$attr: int backgroundTintMode
org.jitsi.meet.sdk.R$id: int line1
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType NUMBER
org.jitsi.meet.sdk.WiFiStatsModule: java.net.InetAddress toInetAddress(int)
com.horcrux.svg.R$styleable: int AppCompatTheme_dividerHorizontal
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpegWithExifOrientation(java.io.InputStream,java.io.OutputStream,int,int,int)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.dropbox.core.v2.users.GetAccountErrorException
org.jitsi.meet.R$styleable: int Toolbar_subtitle
org.jitsi.meet.sdk.R$style: int Base_V7_Theme_AppCompat_Light
org.jitsi.meet.R$style: int Widget_AppCompat_RatingBar_Indicator
com.facebook.react.modules.websocket.WebSocketModule: void notifyWebSocketFailed(int,java.lang.String)
okhttp3.Interceptor$Chain: int readTimeoutMillis()
okhttp3.internal.huc.OkHttpURLConnection: java.io.InputStream getInputStream()
okhttp3.internal.ws.RealWebSocket$Close: long cancelAfterCloseMillis
com.horcrux.svg.R$string: int menuitem_description
org.webrtc.PeerConnectionFactory$InitializationOptions$Builder: PeerConnectionFactory$InitializationOptions$Builder(android.content.Context)
org.webrtc.TimestampAligner: void dispose()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.oney.WebRTCModule.WebRTCView: void setVideoTrack(org.webrtc.VideoTrack)
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
com.rnimmersive.RNImmersiveModule: void setImmersive(boolean,com.facebook.react.bridge.Promise)
okhttp3.internal.http1.Http1Codec$FixedLengthSource
com.horcrux.svg.RenderableView: android.graphics.Path$FillType fillRule
okhttp3.internal.http2.Http2Codec: java.lang.String TE
okhttp3.internal.http2.Settings: int get(int)
org.webrtc.audio.WebRtcAudioRecord$AudioRecordThread: WebRtcAudioRecord$AudioRecordThread(org.webrtc.audio.WebRtcAudioRecord,java.lang.String)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pushObserver(okhttp3.internal.http2.PushObserver)
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()
org.webrtc.EglRenderer: void addFrameListener(org.webrtc.EglRenderer$FrameListener,float,org.webrtc.RendererCommon$GlDrawer,boolean)
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat
org.jitsi.meet.sdk.R$attr: int contentDescription
okhttp3.Response: okhttp3.Response$Builder newBuilder()
com.facebook.react.bridge.NativeArrayInterface: java.lang.String toString()
com.facebook.react.devsupport.JSDebuggerWebSocketClient: void triggerRequestFailure(int,java.lang.Throwable)
org.webrtc.Size: boolean equals(java.lang.Object)
okhttp3.internal.huc.OkHttpURLConnection: boolean usingProxy()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
org.webrtc.ScreenCapturerAndroid: void dispose()
org.webrtc.NetworkMonitorAutoDetect: org.webrtc.NetworkChangeDetector$ConnectionType getConnectionType(boolean,int,int)
androidx.fragment.app.FragmentActivity: void supportPostponeEnterTransition()
com.horcrux.svg.UseView
com.horcrux.svg.R$anim: int abc_tooltip_enter
com.google.android.gms.internal.measurement.zzca$zzb: com.google.android.gms.internal.measurement.zzid zzi
org.webrtc.NativeLibrary: java.lang.String access$000()
com.google.android.gms.internal.measurement.zzbv$zze: int zzd
org.jitsi.meet.sdk.R$attr: int progressBarImageScaleType
org.jitsi.meet.sdk.ConnectionService$ConnectionImpl: void onDisconnect()
okhttp3.internal.cache.DiskLruCache$Editor
org.jitsi.meet.R$styleable: int[] StateListDrawable
com.horcrux.svg.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
com.facebook.react.bridge.ModuleHolder: boolean isTurboModule()
org.webrtc.MediaStream: boolean addTrack(org.webrtc.AudioTrack)
org.jitsi.meet.sdk.ParticipantsService: void init(android.content.Context)
com.facebook.react.bridge.JavaOnlyArray: boolean getBoolean(int)
com.dropbox.core.v2.team.TeamFolderListErrorException
okhttp3.Authenticator$1: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
org.webrtc.RtpParameters$Encoding: java.lang.Integer getMaxFramerate()
com.facebook.react.bridge.NativeMap: NativeMap(com.facebook.jni.HybridData)
okhttp3.internal.connection.StreamAllocation: java.net.Socket releaseAndAcquire(okhttp3.internal.connection.RealConnection)
org.jitsi.meet.sdk.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
com.horcrux.svg.R$styleable: int Toolbar_contentInsetStartWithNavigation
org.webrtc.EglRenderer: java.lang.Object handlerLock
org.jitsi.meet.sdk.R$attr: int actionProviderClass
okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)
org.webrtc.NetworkMonitorAutoDetect$NetworkState: int getNetworkSubType()
org.jitsi.meet.sdk.R$id: int titleDividerNoCustom
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory)
com.google.android.gms.internal.measurement.zzcd$zzi: com.google.android.gms.internal.measurement.zzcd$zzi zzg
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem updateLayoutMountItem(int,int,int,int,int,int)
okio.Buffer$UnsafeCursor
okhttp3.internal.Util: int indexOf(java.util.Comparator,java.lang.String[],java.lang.String)
com.google.android.datatransport.runtime.synchronization.SynchronizationException
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionBarTabTextStyle
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Request request
com.ocetnik.timer.BackgroundTimerModule: com.facebook.react.bridge.ReactContext reactContext
com.calendarevents.CalendarEvents: void openEventInCalendar(int)
okhttp3.internal.ws.RealWebSocket: boolean writeOneFrame()
okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.learnium.RNDeviceInfo.RNDeviceModule: void getHardware(com.facebook.react.bridge.Promise)
org.jitsi.meet.R$raw: int lang_mainsk
org.jitsi.meet.sdk.R$styleable: int MenuItem_numericModifiers
com.facebook.react.uimanager.UIManagerModule: void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.R$dimen: int abc_text_size_display_1_material
okhttp3.internal.io.FileSystem: void deleteContents(java.io.File)
org.jitsi.meet.R$styleable: int AppCompatImageView_android_src
com.facebook.react.bridge.JSIModule: void initialize()
org.jitsi.meet.sdk.R$styleable: int Fragment_android_tag
org.webrtc.RtpParameters: java.lang.String getTransactionId()
org.webrtc.RtpSender: org.webrtc.MediaStreamTrack track()
org.webrtc.ScreenCapturerAndroid: void changeCaptureFormat(int,int,int)
com.facebook.react.bridge.JavaScriptExecutor
org.jitsi.meet.sdk.R$styleable: int[] View
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.Callback
androidx.fragment.app.FragmentActivity: void onDestroy()
okhttp3.internal.http2.Http2Stream$FramingSource: boolean closed
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
org.jitsi.meet.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
org.jitsi.meet.R$layout: int abc_alert_dialog_title_material
com.facebook.react.devsupport.DevSupportManagerImpl$4: DevSupportManagerImpl$4(com.facebook.react.devsupport.DevSupportManagerImpl,int,com.facebook.react.bridge.ReadableArray,java.lang.String)
org.webrtc.EncodedImage$FrameType: org.webrtc.EncodedImage$FrameType VideoFrameKey
org.jitsi.meet.sdk.ListenerUtils: void access$000(java.lang.Object,java.util.Map,java.lang.String,com.facebook.react.bridge.ReadableMap)
org.webrtc.audio.WebRtcAudioManager: int getOutputBufferSize(android.content.Context,android.media.AudioManager,int,int)
okio.ByteString: okio.ByteString sha256()
com.horcrux.svg.R$attr: int subtitleTextAppearance
com.horcrux.svg.R$style: int Widget_AppCompat_SearchView
com.facebook.react.bridge.NativeMap: com.facebook.jni.HybridData mHybridData
com.facebook.react.devsupport.DevSupportManagerImpl: java.lang.String EXOPACKAGE_LOCATION_FORMAT
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_START
com.facebook.react.modules.network.NetworkingModule: void sendRequestInternal(java.lang.String,java.lang.String,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,int,boolean)
com.google.gson.reflect.TypeToken: int hashCode()
org.jitsi.meet.sdk.R$styleable: int ActionBar_contentInsetStartWithNavigation
org.jitsi.meet.R$style: int Widget_Compat_NotificationActionText
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2$1
androidx.fragment.app.Fragment: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
org.webrtc.NetworkChangeDetector$NetworkInformation: org.webrtc.NetworkChangeDetector$ConnectionType getUnderlyingConnectionTypeForVpn()
okhttp3.Response$Builder: long receivedResponseAtMillis
org.webrtc.audio.WebRtcAudioRecord: java.util.concurrent.atomic.AtomicInteger nextSchedulerId
org.webrtc.VideoEncoder$Callback
org.jitsi.meet.R$styleable: int AlertDialog_listItemLayout
org.jitsi.meet.R$string: int rn_tab_description
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_placeholderImage
androidx.fragment.app.Fragment: java.lang.Runnable mPostponedDurationRunnable
okio.AsyncTimeout$1: okio.Timeout timeout()
okhttp3.internal.tls.DistinguishedNameParser: int getByte(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mName
com.horcrux.svg.R$attr: int maxButtonHeight
org.webrtc.audio.WebRtcAudioTrack: int getInitialBufferSizeInFrames()
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.PeerConnectionFactory$Builder setAudioDecoderFactoryFactory(org.webrtc.AudioDecoderFactoryFactory)
com.facebook.react.devsupport.DevServerHelper: java.lang.String getSourceMapUrl(java.lang.String)
org.webrtc.RtpParameters$HeaderExtension: boolean getEncrypted()
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind valueOf(java.lang.String)
org.webrtc.CameraEnumerationAndroid$1: int diff(java.lang.Object)
org.jitsi.meet.R$attr: int placeholderImage
com.google.android.gms.internal.measurement.zzcd$zzd: long zze
com.horcrux.svg.R$styleable: int AppCompatTheme_activityChooserViewStyle
com.horcrux.svg.Brush$BrushUnits: com.horcrux.svg.Brush$BrushUnits[] values()
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.facebook.jni.IteratorHelper: java.lang.Object mElement
org.webrtc.TextureBufferImpl: int getHeight()
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap(java.lang.Object[])
okhttp3.OkUrlFactory: void setUrlFilter(okhttp3.internal.URLFilter)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setNumberOfLines(int)
com.facebook.react.bridge.JSCJavaScriptExecutor: java.lang.String getName()
org.webrtc.CandidatePairChangeEvent: java.lang.String reason
com.facebook.react.devsupport.BundleDownloader: java.lang.String formatBundleUrl(java.lang.String,com.facebook.react.devsupport.BundleDeltaClient$ClientType)
okhttp3.internal.ws.RealWebSocket: long queueSize()
com.calendarevents.CalendarEvents: void findAllEvents(com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants VM_INIT
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getCommandsMap()
org.jitsi.meet.R$drawable: int abc_spinner_textfield_background_material
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
com.facebook.react.bridge.JavaOnlyMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
okhttp3.HttpUrl: int port()
org.jitsi.meet.sdk.R$dimen: int abc_progress_bar_height_material
com.horcrux.svg.R$id: int fitCenter
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
okhttp3.Call: okhttp3.Request request()
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.devsupport.BundleDownloader mBundleDownloader
com.horcrux.svg.R$attr: int autoSizeTextType
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: ReactContext$ExceptionHandlerWrapper(com.facebook.react.bridge.ReactContext)
com.horcrux.svg.RenderableViewManager: void setStrokeLinecap(com.horcrux.svg.RenderableView,int)
com.google.android.gms.internal.measurement.zzbv$zzb: boolean zzj
org.jitsi.meet.sdk.R$string: int link_description
com.facebook.react.uimanager.ViewManager: void onDropViewInstance(android.view.View)
com.learnium.RNDeviceInfo.RNDeviceModule: long getBlockSize(android.os.StatFs,java.lang.Boolean)
okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)
com.horcrux.svg.R$drawable: int abc_list_pressed_holo_light
org.jitsi.meet.R$string: int abc_prepend_shortcut_label
okhttp3.internal.cache2.Relay$RelaySource: okio.Timeout timeout()
com.facebook.react.modules.camera.ImageEditingManager: ImageEditingManager(com.facebook.react.bridge.ReactApplicationContext)
androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.facebook.imagepipeline.nativecode.NativeBlurFilter: NativeBlurFilter()
org.webrtc.NativeLibrary: NativeLibrary()
com.facebook.react.devsupport.DevServerHelper$5: java.lang.Object doInBackground(java.lang.Object[])
com.horcrux.svg.R$id: int actions
org.webrtc.PeerConnection$IceGatheringState: org.webrtc.PeerConnection$IceGatheringState[] values()
com.horcrux.svg.R$id: int alertTitle
com.facebook.react.views.art.ARTShapeShadowNode: void setShapePath(com.facebook.react.bridge.ReadableArray)
org.webrtc.audio.JavaAudioDeviceModule$Builder: boolean useStereoOutput
com.facebook.react.modules.debug.DevSettingsModule: DevSettingsModule(com.facebook.react.devsupport.interfaces.DevSupportManager)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setInstanceIdProvider(com.google.android.gms.internal.measurement.zzac)
okio.Timeout: Timeout()
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
org.jitsi.meet.sdk.R$styleable: int GradientColor_android_startX
com.facebook.react.modules.vibration.VibrationModule: void vibrate(int)
org.jitsi.meet.sdk.R$dimen: int abc_list_item_height_large_material
org.jitsi.meet.sdk.ReactInstanceManagerHolder: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
okio.GzipSource: java.util.zip.Inflater inflater
org.jitsi.meet.R$attr: int buttonBarButtonStyle
okhttp3.Headers: boolean equals(java.lang.Object)
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Widget_Button
org.webrtc.audio.JavaAudioDeviceModule$SamplesReadyCallback: void onWebRtcAudioRecordSamplesReady(org.webrtc.audio.JavaAudioDeviceModule$AudioSamples)
okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)
okhttp3.ConnectionPool: java.net.Socket deduplicate(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)
okhttp3.Dispatcher: void finished(okhttp3.RealCall)
org.jitsi.meet.R$styleable: int SimpleDraweeView_backgroundImage
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
okhttp3.Response: long receivedResponseAtMillis()
okhttp3.Request
org.jitsi.meet.R$styleable: int AppCompatTheme_actionBarItemBackground
org.jitsi.meet.R$styleable: int SearchView_android_maxWidth
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetOverflow(long)
com.horcrux.svg.R$attr: int textAppearanceLargePopupMenu
org.webrtc.Camera1Session: long access$600(org.webrtc.Camera1Session)
org.jitsi.meet.sdk.R$attr: int failureImageScaleType
org.jitsi.meet.sdk.R$id: int checkbox
org.jitsi.meet.sdk.R$string: int common_open_on_phone
com.facebook.react.devsupport.DevInternalSettings: android.content.SharedPreferences mPreferences
org.jitsi.meet.sdk.R$styleable: int SignInButton_colorScheme
okhttp3.internal.connection.StreamAllocation: boolean released
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_SHA
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)
okio.Buffer$2: int read(byte[],int,int)
org.webrtc.MediaStreamTrack: void checkMediaStreamTrackExists()
com.facebook.react.devsupport.RedBoxDialog: com.facebook.react.devsupport.RedBoxHandler mRedBoxHandler
com.horcrux.svg.R$color: int switch_thumb_normal_material_light
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexDirection(long)
org.webrtc.PeerConnection: org.webrtc.RtpTransceiver addTransceiver(org.webrtc.MediaStreamTrack)
org.jitsi.meet.sdk.R$attr: int ttcIndex
okhttp3.MultipartBody: okhttp3.MediaType contentType()
org.jitsi.meet.R$id: int submit_area
okio.RealBufferedSource: long indexOfElement(okio.ByteString,long)
org.webrtc.MediaCodecUtils: boolean isHardwareAcceleratedQOrHigher(android.media.MediaCodecInfo)
org.webrtc.voiceengine.WebRtcAudioManager: java.lang.String TAG
org.webrtc.EglRenderer: void init(org.webrtc.EglBase$Context,int[],org.webrtc.RendererCommon$GlDrawer)
okhttp3.internal.http.StatusLine: StatusLine(okhttp3.Protocol,int,java.lang.String)
org.webrtc.EglRenderer: void releaseEglSurface(java.lang.Runnable)
com.facebook.react.devsupport.RedBoxDialog$2: void onClick(android.view.View)
org.webrtc.NativeAndroidVideoTrackSource: void nativeSetIsScreencast(long,boolean)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] buildArgumentExtractors(java.lang.Class[])
com.horcrux.svg.SvgView: java.util.Map mDefinedBrushes
org.webrtc.GlGenericDrawer$ShaderCallbacks
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableMap asMap()
okhttp3.internal.http2.Settings: int DEFAULT_INITIAL_WINDOW_SIZE
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(android.view.View)
org.jitsi.meet.R$style: int Theme_AppCompat_Light_Dialog_Alert
org.jitsi.meet.sdk.R$attr: int checkedTextViewStyle
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.horcrux.svg.R$attr: int panelMenuListWidth
com.horcrux.svg.R$attr: int windowMinWidthMinor
com.horcrux.svg.RenderableView: float strokeMiterlimit
com.horcrux.svg.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
com.facebook.react.bridge.ReadableNativeArray: int jniPassCounter
org.webrtc.DtmfSender: boolean nativeCanInsertDtmf(long)
com.facebook.yoga.YogaNative: long jni_YGNodeNewWithConfig(long)
okhttp3.OkHttpClient: int connectTimeout
org.webrtc.audio.WebRtcAudioRecord: WebRtcAudioRecord(android.content.Context,android.media.AudioManager)
org.webrtc.HardwareVideoEncoderFactory
org.jitsi.meet.sdk.R$style: int AlertDialog_AppCompat
com.facebook.react.devsupport.InspectorPackagerConnection$1: InspectorPackagerConnection$1(com.facebook.react.devsupport.InspectorPackagerConnection,java.lang.String)
org.jitsi.meet.sdk.JitsiMeetUserInfo: android.os.Bundle asBundle()
org.webrtc.YuvConverter$ShaderCallbacks: void onPrepareShader(org.webrtc.GlShader,float[],int,int,int,int)
org.jitsi.meet.sdk.R$attr: int alpha
org.webrtc.Camera2Session: void reportError(java.lang.String)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: android.os.Bundle getFeatureFlags()
com.facebook.react.bridge.UnexpectedNativeTypeException: UnexpectedNativeTypeException(java.lang.String)
okhttp3.MultipartBody: void writeTo(okio.BufferedSink)
okhttp3.internal.http2.Http2Reader$Handler: void windowUpdate(int,long)
org.webrtc.EglBase14Impl: int surfaceHeight()
okhttp3.MediaType: java.lang.String toString()
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.horcrux.svg.R$anim: int catalyst_slide_up
com.horcrux.svg.R$drawable: int abc_btn_check_material
okhttp3.HttpUrl: java.lang.String scheme()
okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)
com.facebook.react.modules.blob.FileReaderModule: java.lang.String NAME
org.jitsi.meet.sdk.R$attr: int maxButtonHeight
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getDeviceSync()
org.webrtc.PeerConnection$PeerConnectionState: org.webrtc.PeerConnection$PeerConnectionState CONNECTED
com.facebook.react.animated.NativeAnimatedModule: void stopAnimation(int)
okhttp3.internal.http1.Http1Codec$AbstractSource
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
androidx.fragment.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
org.jitsi.meet.sdk.R$color: int material_deep_teal_200
com.facebook.react.modules.clipboard.ClipboardModule: void getString(com.facebook.react.bridge.Promise)
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Widget_Button
org.webrtc.NetworkMonitorAutoDetect$NetworkState: int subtype
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
okio.AsyncTimeout$2
com.reactnativecommunity.webview.RNCWebViewModule: android.app.DownloadManager$Request access$000(com.reactnativecommunity.webview.RNCWebViewModule)
com.facebook.react.bridge.ReactContext: android.view.LayoutInflater mInflater
org.webrtc.CameraCapturer: org.webrtc.CameraVideoCapturer$CameraSwitchHandler access$1202(org.webrtc.CameraCapturer,org.webrtc.CameraVideoCapturer$CameraSwitchHandler)
com.horcrux.svg.R$id: int search_badge
com.facebook.drawee.view.DraweeView: void setImageURI(android.net.Uri)
com.facebook.react.modules.websocket.WebSocketModule: void ping(int)
com.horcrux.svg.R$styleable: int Toolbar_logoDescription
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean getDoOutput()
org.jitsi.meet.MainActivity: void initialize()
com.horcrux.svg.R$styleable: int SimpleDraweeView_retryImageScaleType
com.facebook.react.bridge.BaseJavaModule: void invalidate()
org.jitsi.meet.sdk.BroadcastEvent$Type: org.jitsi.meet.sdk.BroadcastEvent$Type[] $VALUES
org.webrtc.PeerConnection$IceServer: org.webrtc.PeerConnection$IceServer$Builder builder(java.util.List)
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$AudioTrackErrorCallback audioTrackErrorCallback
okhttp3.internal.ws.WebSocketReader: int opcode
okhttp3.internal.http.RealInterceptorChain: okhttp3.EventListener eventListener()
com.facebook.react.devsupport.DevLoadingViewController: DevLoadingViewController(android.content.Context,com.facebook.react.devsupport.ReactInstanceManagerDevHelper)
com.horcrux.svg.R$styleable: int CompoundButton_buttonCompat
org.jitsi.meet.R$raw: int lang_mainsl
okhttp3.Response: Response(okhttp3.Response$Builder)
okhttp3.ResponseBody$1
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDefaultEventParameters(android.os.Bundle)
com.facebook.react.modules.sound.SoundManagerModule: java.lang.String getName()
org.jitsi.meet.R$id: int showTitle
org.webrtc.MediaSource: void checkMediaSourceExists()
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
org.jitsi.meet.R$styleable: int AppCompatTextView_textAllCaps
org.jitsi.meet.R$styleable: int SearchView_submitBackground
org.webrtc.ContextUtils: java.lang.String TAG
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: java.lang.Boolean videoMuted
com.facebook.react.bridge.ReactContext: boolean hasCatalystInstance()
org.webrtc.voiceengine.WebRtcAudioUtils: void setWebRtcBasedAutomaticGainControl(boolean)
com.facebook.react.modules.blob.BlobModule: void sendOverSocket(com.facebook.react.bridge.ReadableMap,int)
com.facebook.react.bridge.ReadableNativeMap: int getInt(java.lang.String)
org.jitsi.meet.sdk.R$drawable: int abc_dialog_material_background
org.jitsi.meet.sdk.R$anim: int fragment_fade_enter
org.webrtc.MediaSource$State: org.webrtc.MediaSource$State MUTED
org.jitsi.meet.R$id: int accessibility_custom_action_5
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_23
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
com.facebook.react.views.image.ReactImageView: void setDefaultSource(java.lang.String)
org.jitsi.meet.sdk.R$attr: int fontProviderQuery
com.horcrux.svg.R$styleable: int AppCompatTheme_dialogTheme
com.facebook.react.bridge.JavaModuleWrapper: void findMethods()
org.webrtc.NetworkMonitorAutoDetect$NetworkState: int type
com.dropbox.core.v2.files.SaveUrlErrorException
org.jitsi.meet.R$styleable: int AppCompatSeekBar_tickMarkTintMode
com.facebook.react.bridge.ReactMarker: void addListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
com.facebook.react.bridge.JavaOnlyMap$1: java.util.Iterator mIterator
org.jitsi.meet.sdk.R$id: int customPanel
okhttp3.Dns$1: java.util.List lookup(java.lang.String)
org.webrtc.PeerConnection$IceGatheringState: org.webrtc.PeerConnection$IceGatheringState COMPLETE
okhttp3.internal.connection.RouteDatabase
org.jitsi.meet.sdk.JitsiMeetActivityDelegate: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
org.webrtc.PeerConnection$IceServer$Builder: java.lang.String username
okhttp3.internal.http.HttpHeaders: boolean skipWhitespaceAndCommas(okio.Buffer)
com.horcrux.svg.MaskView
okhttp3.internal.huc.BufferedRequestBody: BufferedRequestBody(long)
org.webrtc.VideoFrame$Buffer: org.webrtc.VideoFrame$I420Buffer toI420()
com.horcrux.svg.R$string: int catalyst_perf_monitor_stop
org.webrtc.CameraCapturer$SwitchState: org.webrtc.CameraCapturer$SwitchState[] $VALUES
androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable: int mTotal4PlusFrameStutters
okhttp3.Dispatcher: int getMaxRequestsPerHost()
org.webrtc.PeerConnection$RtcpMuxPolicy: org.webrtc.PeerConnection$RtcpMuxPolicy REQUIRE
org.jitsi.meet.R$raw: int lang_languagesnl
com.horcrux.svg.R$id: int progress_circular
org.jitsi.meet.sdk.R$dimen: int notification_media_narrow_margin
org.jitsi.meet.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2: Http2Connection$ReaderRunnable$2(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[])
org.webrtc.RtpParameters$DegradationPreference
com.facebook.react.views.viewpager.ReactViewPagerManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.R$styleable: int AppCompatTheme_activityChooserViewStyle
org.webrtc.Camera1Enumerator: android.hardware.Camera$CameraInfo getCameraInfo(int)
com.facebook.react.devsupport.DevLoadingViewController: android.widget.TextView access$100(com.facebook.react.devsupport.DevLoadingViewController)
com.horcrux.svg.RenderableViewManager$LineViewManager: void onAfterUpdateTransaction(android.view.View)
okio.Util: long reverseBytesLong(long)
okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.calendarevents.CalendarEvents: void syncCalendar(android.content.ContentResolver,java.lang.String)
okio.RealBufferedSource: java.lang.String toString()
okhttp3.EventListener: void callStart(okhttp3.Call)
org.webrtc.DataChannel$Init: int id
org.webrtc.VideoFileRenderer$1: VideoFileRenderer$1(org.webrtc.VideoFileRenderer,org.webrtc.EglBase$Context)
org.webrtc.EglBase14Impl: android.opengl.EGLSurface eglSurface
org.webrtc.RtpParameters$Codec: int getPayloadType()
okio.BufferedSource: okio.ByteString readByteString()
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
okhttp3.internal.connection.StreamAllocation: okhttp3.Call call
org.webrtc.audio.WebRtcAudioTrack: boolean stopPlayout()
com.horcrux.svg.TextView: void setPositionY(com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.lang.String getName()
okio.SegmentedByteString: int indexOf(byte[],int)
org.jitsi.meet.R$id: int accessibility_custom_action_8
org.webrtc.PeerConnection: java.util.List senders
org.webrtc.voiceengine.WebRtcAudioEffects: boolean DEBUG
org.jitsi.meet.sdk.R$anim: int fragment_open_enter
okhttp3.internal.ws.WebSocketProtocol: long PAYLOAD_SHORT_MAX
com.horcrux.svg.R$styleable: int TextAppearance_android_textColor
org.jitsi.meet.sdk.JitsiMeet
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMeetOrSlice(com.horcrux.svg.MarkerView,int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
okhttp3.internal.cache2.FileOperator: java.nio.channels.FileChannel fileChannel
org.webrtc.PeerConnectionFactory: boolean nativeStartAecDump(long,int,int)
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_roundBottomLeft
com.facebook.react.bridge.JavaOnlyMap: boolean isNull(java.lang.String)
org.jitsi.meet.R$color: int abc_tint_switch_track
org.jitsi.meet.sdk.R$styleable: int LinearLayoutCompat_showDividers
org.webrtc.PeerConnection$IceServer$Builder: java.util.List urls
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(java.lang.String)
okio.Pipe
org.webrtc.VideoCodecStatus: org.webrtc.VideoCodecStatus ERR_SIZE
org.jitsi.meet.GoogleServicesHelper: GoogleServicesHelper()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
com.horcrux.svg.SvgView: boolean interceptsTouchEvent(float,float)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long)
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String,java.lang.Class)
org.webrtc.Logging: org.webrtc.Logging$Severity loggableSeverity
org.jitsi.meet.R$styleable: int ActionBar_titleTextStyle
org.webrtc.WrappedNativeVideoDecoder: WrappedNativeVideoDecoder()
okhttp3.CacheControl$Builder: CacheControl$Builder()
org.jitsi.meet.R$attr: int drawableStartCompat
org.webrtc.TextureBufferImpl$2
org.jitsi.meet.sdk.R$styleable: int[] AppCompatImageView
com.facebook.react.devsupport.DevServerHelper: void symbolicateStackTrace(java.lang.Iterable,com.facebook.react.devsupport.DevServerHelper$SymbolicationListener)
com.dropbox.core.v2.files.RelocationErrorException
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStateCallback audioRecordStateCallback
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.modules.core.ReactChoreographer mReactChoreographer
org.jitsi.meet.sdk.R$drawable: int abc_btn_default_mtrl_shape
org.jitsi.meet.R$color: int material_grey_800
org.jitsi.meet.R$style: int Widget_AppCompat_Light_PopupMenu
okhttp3.internal.cache.DiskLruCache$1: okhttp3.internal.cache.DiskLruCache this$0
com.facebook.react.devsupport.DevServerHelper$8: DevServerHelper$8(com.facebook.react.devsupport.DevServerHelper,com.facebook.react.devsupport.interfaces.PackagerStatusCallback)
org.webrtc.MediaStream: void addNativeAudioTrack(long)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
okhttp3.Credentials: Credentials()
com.horcrux.svg.RenderableViewManager$RectViewManager: RenderableViewManager$RectViewManager()
com.facebook.yoga.YogaNative: void jni_YGNodeSetHasBaselineFunc(long,boolean)
org.jitsi.meet.sdk.R$styleable: int FontFamilyFont_android_fontVariationSettings
org.webrtc.Metrics: java.util.Map map
org.webrtc.FileVideoCapturer$VideoReaderY4M: org.webrtc.VideoFrame getNextFrame()
org.webrtc.PeerConnection$IceServer$Builder: org.webrtc.PeerConnection$IceServer$Builder setPassword(java.lang.String)
com.horcrux.svg.R$color: int abc_hint_foreground_material_dark
com.horcrux.svg.R$styleable: int MenuItem_android_checked
okhttp3.ResponseBody$BomAwareReader: okio.BufferedSource source
com.facebook.react.uimanager.BaseViewManager: void setNativeId(android.view.View,java.lang.String)
com.facebook.react.devsupport.RedBoxDialog$OpenStackFrameTask: java.lang.Void doInBackground(com.facebook.react.devsupport.interfaces.StackFrame[])
com.facebook.react.modules.network.NetworkingModule: java.util.List mRequestBodyHandlers
com.facebook.react.modules.debug.AnimationsDebugModule: void startRecordingFps()
org.webrtc.MediaCodecVideoDecoderFactory: org.webrtc.EglBase$Context sharedContext
org.jitsi.meet.sdk.R$attr: int actionDropDownStyle
org.webrtc.VideoFileRenderer: android.os.Handler renderThreadHandler
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.Class)
okhttp3.CacheControl: CacheControl(okhttp3.CacheControl$Builder)
com.facebook.yoga.YogaAlign
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedViewConstants()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_SHA
okhttp3.internal.ws.RealWebSocket$PingRunnable: RealWebSocket$PingRunnable(okhttp3.internal.ws.RealWebSocket)
com.facebook.react.bridge.ReactContext: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
org.jitsi.meet.sdk.R$styleable: int StateListDrawable_android_constantSize
org.jitsi.meet.sdk.R$raw: int lang_mainfr
com.google.android.gms.auth.UserRecoverableNotifiedException
com.horcrux.svg.R$styleable: int View_paddingStart
com.facebook.react.devsupport.DevServerHelper$3: java.lang.Void doInBackground(java.lang.Void[])
org.webrtc.audio.JavaAudioDeviceModule$AudioTrackErrorCallback
okhttp3.internal.http.StatusLine: java.lang.String toString()
org.jitsi.meet.sdk.R$drawable: int abc_btn_radio_to_on_mtrl_000
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_Light_ActionBar
com.facebook.imagepipeline.common.TooManyBitmapsException
com.horcrux.svg.R$styleable: int ActionBar_divider
org.webrtc.PeerConnectionFactory: void access$100()
org.jitsi.meet.sdk.WiFiStatsModule$1: WiFiStatsModule$1(org.jitsi.meet.sdk.WiFiStatsModule,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.Arguments$2
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_REENCODE_SET
org.webrtc.NetworkMonitorAutoDetect$NetworkState: boolean connected
org.jitsi.meet.R$styleable: int[] PopupWindowBackgroundState
com.horcrux.svg.R$attr: int listPreferredItemHeightLarge
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_roundAsCircle
okhttp3.internal.connection.RouteException: java.io.IOException firstException
com.facebook.react.views.image.ReactImageView: void setFadeDuration(int)
com.horcrux.svg.RenderableView: com.horcrux.svg.SVGLength strokeWidth
com.facebook.react.devsupport.DevSupportManagerImpl: void handleCaptureHeap(com.facebook.react.packagerconnection.Responder)
org.webrtc.voiceengine.WebRtcAudioEffects: java.util.UUID AOSP_NOISE_SUPPRESSOR
org.webrtc.EglRenderer$EglSurfaceCreation: EglRenderer$EglSurfaceCreation(org.webrtc.EglRenderer,org.webrtc.EglRenderer$1)
com.facebook.react.bridge.CatalystInstanceImpl: long getJavaScriptContext()
org.webrtc.VideoFrame$Buffer
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleWithBorderFilter(android.graphics.Bitmap,int,int,boolean)
org.jitsi.meet.sdk.R$drawable: int common_google_signin_btn_icon_dark
org.webrtc.Predicate$3: Predicate$3(org.webrtc.Predicate)
org.jitsi.meet.R$id: int forever
org.jitsi.meet.sdk.R$style: int SpinnerDatePickerDialog
com.oney.WebRTCModule.WebRTCModule: void peerConnectionSetLocalDescriptionAsync(com.facebook.react.bridge.ReadableMap,int,com.facebook.react.bridge.Callback)
org.webrtc.CameraCapturer$2
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPositionType(long,int)
okhttp3.internal.ws.WebSocketWriter: boolean activeWriter
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: java.lang.reflect.Method checkServerTrusted
org.jitsi.meet.R$attr: int tooltipText
androidx.fragment.app.FragmentActivity: void supportFinishAfterTransition()
com.horcrux.svg.RenderableViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.webrtc.audio.JavaAudioDeviceModule: long nativeCreateAudioDeviceModule(android.content.Context,android.media.AudioManager,org.webrtc.audio.WebRtcAudioRecord,org.webrtc.audio.WebRtcAudioTrack,int,int,boolean,boolean)
org.webrtc.RtpParameters$DegradationPreference: org.webrtc.RtpParameters$DegradationPreference fromNativeIndex(int)
org.jitsi.meet.sdk.WiFiStatsModule: java.lang.String getName()
com.facebook.react.devsupport.InspectorPackagerConnection$Connection$2: java.lang.Object doInBackground(java.lang.Object[])
com.horcrux.svg.R$attr: int navigationIcon
com.facebook.react.modules.permissions.PermissionsModule: android.util.SparseArray mCallbacks
org.webrtc.PeerConnectionDependencies: org.webrtc.PeerConnection$Observer observer
com.oney.WebRTCModule.WebRTCModule: void dataChannelSend(int,int,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.devsupport.DevServerHelper: java.lang.String getWebsocketProxyURL()
com.facebook.react.bridge.OnBatchCompleteListener
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: int getColumn()
com.horcrux.svg.R$style: int Base_V21_Theme_AppCompat_Light
org.jitsi.meet.R$attr: int contentInsetStart
org.jitsi.meet.R$drawable: int tooltip_frame_dark
okhttp3.Response: okhttp3.Request request
okhttp3.internal.http.HttpHeaders: okhttp3.Headers varyHeaders(okhttp3.Response)
org.jitsi.meet.sdk.R$attr: int windowFixedHeightMajor
org.webrtc.audio.WebRtcAudioTrack: int BUFFERS_PER_SECOND
org.webrtc.EncodedImage: int encodedHeight
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit)
com.facebook.react.devsupport.BundleDeltaClient: android.util.Pair processDelta(okhttp3.Headers,okio.BufferedSource,java.io.File)
com.facebook.react.devsupport.DevInternalSettings: java.lang.String PREFS_HOT_MODULE_REPLACEMENT_KEY
com.facebook.react.views.text.ReactVirtualTextViewManager: ReactVirtualTextViewManager()
okhttp3.JavaNetCookieJar
org.jitsi.meet.sdk.ExternalAPIModule
com.facebook.react.modules.dialog.DialogModule: java.lang.String FRAGMENT_TAG
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.learnium.RNDeviceInfo.RNDeviceModule: void getFirstInstallTime(com.facebook.react.bridge.Promise)
org.jitsi.meet.sdk.R$style: int Base_Theme_AppCompat_Light
com.dropbox.core.v2.paper.ListDocsCursorErrorException
org.jitsi.meet.sdk.R$attr: int voiceIcon
okhttp3.internal.ws.RealWebSocket$CancelRunnable: void run()
com.horcrux.svg.R$styleable: int AppCompatTheme_radioButtonStyle
okhttp3.internal.cache.DiskLruCache: boolean mostRecentTrimFailed
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: MessageQueueThreadImpl$2(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
org.jitsi.meet.sdk.BaseReactView: void onWindowFocusChanged(boolean)
okhttp3.internal.connection.RealConnection: okhttp3.internal.connection.RealConnection testConnection(okhttp3.ConnectionPool,okhttp3.Route,java.net.Socket,long)
okio.Okio$2: void close()
org.jitsi.meet.sdk.OngoingNotification: java.lang.String TAG
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
org.webrtc.SurfaceEglRenderer: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
org.jitsi.meet.R$dimen: int compat_control_corner_material
com.facebook.react.devsupport.JSException: JSException(java.lang.String,java.lang.String,java.lang.Throwable)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_END
org.webrtc.EglRenderer: void release()
com.horcrux.svg.R$attr: int arrowHeadLength
okhttp3.internal.http2.Http2Connection: boolean shutdown
com.facebook.react.devsupport.RedBoxDialog$1: void onReportSuccess(android.text.SpannedString)
okio.Options: java.lang.Object get(int)
androidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
org.webrtc.audio.WebRtcAudioManager: int getLowLatencyFramesPerBuffer(android.media.AudioManager)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: JitsiMeetConferenceOptions()
org.webrtc.PeerConnection: void removeStream(org.webrtc.MediaStream)
com.google.android.gms.common.GooglePlayServicesNotAvailableException
okhttp3.Cache$Entry: Cache$Entry(okio.Source)
com.facebook.react.uimanager.ViewGroupManager: int getChildCount(android.view.ViewGroup)
org.jitsi.meet.R$styleable: int ActionBar_title
org.jitsi.meet.sdk.R$styleable: int ViewBackgroundHelper_backgroundTint
okhttp3.Headers$Builder
androidx.fragment.app.Fragment: boolean isStateSaved()
org.jitsi.meet.R$string: int catalyst_reload_error
org.jitsi.meet.sdk.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
org.webrtc.MediaCodecUtils: java.lang.String EXYNOS_PREFIX
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
org.jitsi.meet.sdk.JitsiMeetFragment: JitsiMeetFragment()
com.facebook.react.modules.camera.ImageEditingManager: void onCatalystInstanceDestroy()
com.horcrux.svg.R$styleable: int SimpleDraweeView_failureImage
org.webrtc.VideoEncoder$ResolutionBitrateLimits: VideoEncoder$ResolutionBitrateLimits(int,int,int,int)
com.horcrux.svg.R$style: int Widget_AppCompat_CompoundButton_CheckBox
org.webrtc.TextureBufferImpl: TextureBufferImpl(int,int,int,int,org.webrtc.VideoFrame$TextureBuffer$Type,int,android.graphics.Matrix,android.os.Handler,org.webrtc.YuvConverter,org.webrtc.TextureBufferImpl$RefCountMonitor)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String TOUCH_EXPLORATION_EVENT_NAME
com.facebook.react.bridge.ProxyJavaScriptExecutor: com.facebook.react.bridge.JavaJSExecutor mJavaJSExecutor
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_DES_CBC_SHA
com.horcrux.svg.R$id: int rn_redbox_loading_indicator
com.facebook.react.devsupport.JSDebuggerWebSocketClient: void abort(java.lang.String,java.lang.Throwable)
org.jitsi.meet.R$id: int action_mode_close_button
com.facebook.react.uimanager.BaseViewManager: void resetTransformProperty(android.view.View)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: MessageQueueThreadImpl(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats)
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify[] values()
com.horcrux.svg.R$styleable: int[] SearchView
com.horcrux.svg.R$styleable: int MenuItem_actionViewClass
okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)
org.jitsi.meet.sdk.BaseReactView: int BACKGROUND_COLOR
com.facebook.react.devsupport.BundleDownloader$2: com.facebook.react.devsupport.BundleDownloader this$0
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType valueOf(java.lang.String)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
org.jitsi.meet.sdk.R$id: int fitStart
com.horcrux.svg.R$styleable: int MenuGroup_android_id
org.jitsi.meet.sdk.R$styleable: int FontFamily_fontProviderFetchTimeout
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])
org.webrtc.PeerConnection$IceGatheringState: org.webrtc.PeerConnection$IceGatheringState GATHERING
org.webrtc.MediaCodecUtils: boolean isSoftwareOnly(android.media.MediaCodecInfo)
com.facebook.react.views.image.ReactImageManager
okhttp3.internal.http2.Header: java.lang.String TARGET_PATH_UTF8
com.horcrux.svg.SvgView: void setVbHeight(float)
org.webrtc.MediaCodecUtils: int COLOR_QCOM_FORMATYVU420PackedSemiPlanar32m4ka
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.util.Map getConstants()
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSource source
org.webrtc.AndroidVideoDecoder: void copyPlane(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int)
com.facebook.imagepipeline.platform.PreverificationHelper: boolean shouldUseHardwareBitmapConfig(android.graphics.Bitmap$Config)
com.facebook.react.devsupport.BundleDeltaClient: java.lang.String extendUrlForDelta(java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setWidth(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
org.jitsi.meet.R$styleable: int Spinner_android_entries
okio.Okio$2: java.io.InputStream val$in
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_END
org.webrtc.EglRenderer: void createEglSurfaceInternal(java.lang.Object)
org.webrtc.CameraCapturer$6: CameraCapturer$6(org.webrtc.CameraCapturer,org.webrtc.CameraSession)
org.jitsi.meet.sdk.incoming_call.IncomingCallInfo: java.lang.String getCallerAvatarURL()
com.facebook.react.views.scroll.ReactHorizontalScrollView: int getSnapInterval()
org.jitsi.meet.sdk.JitsiMeetUncaughtExceptionHandler: JitsiMeetUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)
com.reactnativecommunity.webview.RNCWebViewModule$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState: com.reactnativecommunity.webview.RNCWebViewModule$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState[] values()
org.jitsi.meet.R$dimen: int abc_seekbar_track_progress_height_material
org.webrtc.voiceengine.WebRtcAudioRecord: void setAudioSource(int)
org.webrtc.CameraCapturer: android.os.Handler uiThreadHandler
okhttp3.internal.huc.DelegatingHttpsURLConnection: okhttp3.Handshake handshake()
okhttp3.internal.http2.Http2Stream$FramingSink: void flush()
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: DalvikPurgeableDecoder()
com.horcrux.svg.R$styleable: int[] GradientColor
okio.BufferedSource: java.io.InputStream inputStream()
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] values()
okio.SegmentedByteString: java.lang.String toString()
com.facebook.react.devsupport.FpsView: void onDetachedFromWindow()
org.webrtc.audio.WebRtcAudioTrack: android.media.AudioTrack createAudioTrackOnLollipopOrHigher(int,int,int,android.media.AudioAttributes)
okio.Okio$4: java.io.IOException newTimeoutException(java.io.IOException)
okio.RealBufferedSource: long indexOf(byte)
org.jitsi.meet.sdk.R$styleable: int ActionBar_progressBarStyle
org.jitsi.meet.R$dimen: int compat_button_inset_vertical_material
com.oney.WebRTCModule.WebRTCModule: void peerConnectionSetRemoteDescription(com.facebook.react.bridge.ReadableMap,int,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JSIModuleType: JSIModuleType(java.lang.String,int)
org.webrtc.Logging$TraceLevel: org.webrtc.Logging$TraceLevel TRACE_TIMER
org.jitsi.meet.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
com.facebook.jni.UnknownCppException
org.webrtc.voiceengine.WebRtcAudioRecord: void setErrorCallback(org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordErrorCallback)
com.horcrux.svg.R$attr: int actionProviderClass
okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)
org.webrtc.SurfaceTextureHelper: org.webrtc.VideoSink pendingListener
com.facebook.react.uimanager.UIManagerModule: void invalidateNodeLayout(int)
com.horcrux.svg.R$styleable: int Toolbar_maxButtonHeight
com.facebook.react.devsupport.DisabledDevSupportManager: com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler mDefaultNativeModuleCallExceptionHandler
org.webrtc.MediaStream: void removeMediaStreamTrack(java.util.List,long)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
org.webrtc.PeerConnectionFactory$Options: boolean getDisableEncryption()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setR(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
org.webrtc.NetworkMonitorAutoDetect$SimpleNetworkCallback: NetworkMonitorAutoDetect$SimpleNetworkCallback(org.webrtc.NetworkMonitorAutoDetect,org.webrtc.NetworkMonitorAutoDetect$1)
okhttp3.Cookie: boolean equals(java.lang.Object)
org.webrtc.EglRenderer: long renderSwapBufferTimeNs
org.webrtc.CandidatePairChangeEvent: int estimatedDisconnectedTimeMs
org.webrtc.NetworkChangeDetector$NetworkInformation: long getHandle()
okhttp3.HttpUrl$Builder: java.lang.String encodedUsername
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
com.horcrux.svg.R$styleable: int DrawerArrowToggle_arrowHeadLength
okio.SegmentPool: okio.Segment take()
okhttp3.internal.http2.Http2Stream$StreamTimeout: java.io.IOException newTimeoutException(java.io.IOException)
org.webrtc.AndroidVideoDecoder: void deliverTextureFrame(int,android.media.MediaCodec$BufferInfo,int,java.lang.Integer)
com.facebook.jni.IteratorHelper: IteratorHelper(java.lang.Iterable)
org.jitsi.meet.R$styleable: int SearchView_queryHint
org.webrtc.audio.JavaAudioDeviceModule$AudioSamples: int audioFormat
org.jitsi.meet.R$styleable: int Toolbar_android_minHeight
org.webrtc.CameraCapturer: void access$2500(org.webrtc.CameraCapturer,java.lang.String,org.webrtc.CameraVideoCapturer$CameraSwitchHandler)
com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener: void onPackagerConnected()
org.webrtc.EncodedImage: int getEncodedWidth()
com.facebook.imagepipeline.nativecode.Bitmaps: void nativeCopyBitmap(android.graphics.Bitmap,int,android.graphics.Bitmap,int,int)
org.jitsi.meet.R$color: int switch_thumb_normal_material_dark
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternTransform(com.horcrux.svg.PatternView,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder eventListener(okhttp3.EventListener)
okhttp3.MediaType: java.lang.String type
okhttp3.internal.cache.DiskLruCache: int appVersion
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: void run()
okio.RealBufferedSource: okio.Timeout timeout()
org.webrtc.AudioTrack: void nativeSetVolume(long,double)
com.facebook.react.views.image.ReactImageManager: void setBorderWidth(com.facebook.react.views.image.ReactImageView,float)
org.webrtc.Logging$Severity: Logging$Severity(java.lang.String,int)
org.webrtc.PeerConnection: org.webrtc.RtpTransceiver addTransceiver(org.webrtc.MediaStreamTrack,org.webrtc.RtpTransceiver$RtpTransceiverInit)
okio.AsyncTimeout$1: AsyncTimeout$1(okio.AsyncTimeout,okio.Sink)
org.webrtc.PeerConnection$PeerConnectionState: org.webrtc.PeerConnection$PeerConnectionState FAILED
com.horcrux.svg.R$styleable: int AppCompatTheme_actionMenuTextAppearance
com.horcrux.svg.RenderableView: void setStrokeOpacity(float)
org.jitsi.meet.R$color: int switch_thumb_disabled_material_dark
org.jitsi.meet.R$id: int tag_accessibility_pane_title
com.horcrux.svg.R$styleable: int MenuItem_iconTint
okhttp3.EventListener: void connectionAcquired(okhttp3.Call,okhttp3.Connection)
com.facebook.react.devsupport.DevSupportManagerImpl$5: com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType val$errorType
com.horcrux.svg.SvgView: java.util.Map mDefinedMarkers
androidx.core.app.CoreComponentFactory
com.horcrux.svg.R$drawable: int abc_tab_indicator_mtrl_alpha
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Button
okhttp3.internal.http2.Hpack$Reader: okhttp3.internal.http2.Header[] dynamicTable
com.facebook.react.views.art.ARTShapeShadowNode: void setStrokeWidth(float)
org.webrtc.voiceengine.WebRtcAudioRecord: void nativeCacheDirectBufferAddress(java.nio.ByteBuffer,long)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableMap getMap(int)
org.jitsi.meet.sdk.R$styleable: int AppCompatImageView_android_src
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN: HeifExifUtil$HeifExifUtilAndroidN()
org.webrtc.GlTextureFrameBuffer
okhttp3.internal.platform.AndroidPlatform: boolean api24IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object)
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.DebugOverlayController mDebugOverlayController
com.facebook.react.devsupport.JSDevSupport: void getJSHierarchy(int,com.facebook.react.devsupport.JSDevSupport$DevSupportCallback)
org.jitsi.meet.R$id: int search_plate
com.facebook.react.devsupport.interfaces.DevSupportManager: java.lang.String getSourceMapUrl()
com.horcrux.svg.R$layout: R$layout()
okhttp3.MultipartBody: byte[] CRLF
org.webrtc.PeerConnectionFactory$Options: boolean disableNetworkMonitor
okhttp3.internal.huc.OkHttpsURLConnection: void setConnectTimeout(int)
okhttp3.Cache$CacheResponseBody$1
org.jitsi.meet.sdk.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSource source
okhttp3.internal.http2.Huffman: void addCode(int,int,byte)
org.webrtc.voiceengine.WebRtcAudioRecord
org.webrtc.HardwareVideoDecoderFactory: org.webrtc.Predicate defaultAllowedPredicate
okio.ByteString: okio.ByteString read(java.io.InputStream,int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapOffsets(java.util.List)
com.facebook.react.bridge.ReactContext$2
androidx.fragment.app.Fragment: int STARTED
timber.log.Timber$Tree: void d(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.horcrux.svg.R$drawable: int abc_ratingbar_material
org.webrtc.H264Utils
org.jitsi.meet.sdk.R$styleable: int AlertDialog_buttonIconDimen
com.horcrux.svg.R$style: int SpinnerTimePickerDialog
org.webrtc.VideoSource: org.webrtc.NativeAndroidVideoTrackSource nativeAndroidVideoTrackSource
org.webrtc.CameraEnumerationAndroid$1: CameraEnumerationAndroid$1(int)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] values()
org.jitsi.meet.sdk.JitsiMeetView: JitsiMeetView(android.content.Context)
com.facebook.react.views.modal.ReactModalHostManager: void setHardwareAccelerated(com.facebook.react.views.modal.ReactModalHostView,boolean)
com.horcrux.svg.RenderableViewManager: void setStrokeDasharray(com.horcrux.svg.RenderableView,com.facebook.react.bridge.ReadableArray)
okhttp3.CertificatePinner$Pin: java.lang.String pattern
org.webrtc.Camera2Session: void access$000(org.webrtc.Camera2Session)
com.learnium.RNDeviceInfo.RNDeviceModule
com.facebook.react.devsupport.DevServerHelper: void openStackFrameCall(com.facebook.react.devsupport.interfaces.StackFrame)
org.webrtc.CameraVideoCapturer: void removeMediaRecorderFromCamera(org.webrtc.CameraVideoCapturer$MediaRecorderHandler)
org.jitsi.meet.R$style: int Base_V23_Theme_AppCompat_Light
com.horcrux.svg.R$string: int catalyst_hot_reloading
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: boolean equals(java.lang.Object)
com.horcrux.svg.R$attr: int panelBackground
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.facebook.react.fabric.Binding
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType[] values()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_windowFixedWidthMajor
okhttp3.OkHttpClient: int readTimeoutMillis()
okio.SegmentedByteString: int segment(int)
okio.Timeout
org.jitsi.meet.R$color: int common_google_signin_btn_text_light_pressed
com.facebook.react.packagerconnection.NotificationOnlyHandler: void onRequest(java.lang.Object,com.facebook.react.packagerconnection.Responder)
org.webrtc.voiceengine.WebRtcAudioRecord: long nativeAudioRecord
com.facebook.react.devsupport.JSDebuggerWebSocketClient: void loadApplicationScript(java.lang.String,java.util.HashMap,com.facebook.react.devsupport.JSDebuggerWebSocketClient$JSDebuggerCallback)
org.webrtc.JNILogging
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_END
org.jitsi.meet.sdk.R$dimen: int abc_switch_padding
com.horcrux.svg.R$styleable: int AppCompatTheme_colorControlNormal
okio.Pipe$PipeSource: okio.Timeout timeout
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_START
com.facebook.react.uimanager.LayoutShadowNode: void setShouldNotifyOnLayout(boolean)
org.jitsi.meet.R$style: int CalendarDatePickerStyle
com.dropbox.core.v2.sharing.ListFileMembersContinueErrorException
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event[] values()
com.horcrux.svg.VirtualView: void setMarkerStart(java.lang.String)
androidx.fragment.app.Fragment: void setRetainInstance(boolean)
okio.Buffer: okio.BufferedSink writeShortLe(int)
androidx.appcompat.view.menu.ExpandedMenuView
org.jitsi.meet.R$color: int common_google_signin_btn_tint
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPadding(long,int,float)
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasRunJSBundle()
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
okio.Buffer: boolean rangeEquals(long,okio.ByteString,int,int)
org.webrtc.audio.WebRtcAudioTrack: void logUnderrunCount()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel: com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel[] values()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
org.webrtc.ThreadUtils$ThreadChecker: java.lang.Thread thread
com.horcrux.svg.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
org.webrtc.RendererCommon$VideoLayoutMeasure: void setScalingType(org.webrtc.RendererCommon$ScalingType)
com.facebook.react.bridge.JavaMethodWrapper$5
org.jitsi.meet.R$styleable: int AppCompatTheme_switchStyle
okhttp3.HttpUrl: HttpUrl(okhttp3.HttpUrl$Builder)
org.jitsi.meet.R$id: int dark
com.facebook.yoga.YogaNative: void jni_YGConfigSetPrintTreeFlag(long,boolean)
org.jitsi.meet.R$attr: int listPreferredItemHeightSmall
com.facebook.jni.MapIteratorHelper: boolean hasNext()
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(int)
com.horcrux.svg.R$string: int abc_menu_function_shortcut_label
org.webrtc.PeerConnection: java.util.List getReceivers()
org.jitsi.meet.sdk.R$color: int secondary_text_default_material_light
okhttp3.internal.http.RealInterceptorChain: int readTimeoutMillis()
okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)
org.webrtc.WrappedNativeI420Buffer: int getHeight()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_NULL_SHA
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_failureImage
org.jitsi.meet.R$styleable: int AppCompatTextView_drawableStartCompat
org.webrtc.Camera1Session: org.webrtc.Camera1Session$SessionState state
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Headers responseHeaders
org.webrtc.VideoEncoderFactory: org.webrtc.VideoEncoderFactory$VideoEncoderSelector getEncoderSelector()
com.horcrux.svg.R$attr: int initialActivityCount
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_END
com.facebook.react.uimanager.UIManagerModule: int mBatchId
com.horcrux.svg.R$style: int Animation_Catalyst_RedBox
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry access$200(com.facebook.react.bridge.CatalystInstanceImpl)
org.webrtc.PeerConnectionFactory: void onWorkerThreadReady()
com.google.gson.reflect.TypeToken: java.lang.String toString()
co.apptailor.googlesignin.RNGoogleSigninModule: co.apptailor.googlesignin.PromiseWrapper promiseWrapper
org.webrtc.RtpParameters$Rtcp: boolean reducedSize
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: void close()
okhttp3.internal.Util: okio.ByteString UTF_16_BE_BOM
org.jitsi.meet.sdk.R$raw: int node_modules_domserializer_foreignnames
org.webrtc.voiceengine.WebRtcAudioRecord: void logMainParameters()
com.facebook.react.bridge.JavaMethodWrapper: char paramTypeToChar(java.lang.Class)
com.facebook.react.devsupport.BundleDownloader$1: com.facebook.react.devsupport.interfaces.DevBundleDownloadListener val$callback
okhttp3.internal.huc.OkHttpURLConnection: java.lang.Object access$000(okhttp3.internal.huc.OkHttpURLConnection)
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean getUseCaches()
okhttp3.internal.http.BridgeInterceptor
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$1: void onFailure(java.lang.Throwable)
org.webrtc.DefaultVideoDecoderFactory: org.webrtc.VideoDecoderFactory softwareVideoDecoderFactory
androidx.fragment.app.Fragment: void performPause()
com.horcrux.svg.R$styleable: int AppCompatTheme_windowFixedWidthMajor
org.jitsi.meet.sdk.R$styleable: int GradientColor_android_endY
okhttp3.internal.http2.PushObserver$1: PushObserver$1()
org.webrtc.SurfaceEglRenderer: void pauseVideo()
org.jitsi.meet.R$styleable: int SearchView_suggestionRowLayout
org.webrtc.PlatformSoftwareVideoDecoderFactory: org.webrtc.Predicate defaultAllowedPredicate
org.webrtc.Logging$Severity: org.webrtc.Logging$Severity LS_WARNING
com.horcrux.svg.R$color: int primary_dark_material_dark
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.facebook.react.devsupport.InspectorPackagerConnection: com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatusProvider mBundleStatusProvider
okhttp3.internal.cache.CacheStrategy$Factory: long computeFreshnessLifetime()
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_FOCUS
com.facebook.react.views.text.ReactBaseTextShadowNode: void setMaxFontSizeMultiplier(float)
org.jitsi.meet.sdk.R$styleable: int MenuItem_android_enabled
org.webrtc.EglBase10Impl: javax.microedition.khronos.egl.EGLConfig getEglConfig(javax.microedition.khronos.egl.EGLDisplay,int[])
org.webrtc.voiceengine.WebRtcAudioEffects: void assertTrue(boolean)
okio.RealBufferedSource$1: int read(byte[],int,int)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
okhttp3.internal.ws.WebSocketReader$FrameCallback
org.webrtc.CameraCapturer: org.webrtc.CameraVideoCapturer$CameraStatistics access$800(org.webrtc.CameraCapturer)
org.jitsi.meet.R$attr: int windowFixedHeightMinor
com.horcrux.svg.R$anim: int abc_tooltip_exit
com.horcrux.svg.PathView
org.jitsi.meet.R$styleable: int[] AppCompatTextView
org.webrtc.audio.AudioDeviceModule: void setMicrophoneMute(boolean)
com.facebook.react.uimanager.BaseViewManager: void updateViewAccessibility(android.view.View)
com.google.android.gms.measurement.AppMeasurementService: AppMeasurementService()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState
okhttp3.internal.http1.Http1Codec$FixedLengthSource: void close()
com.facebook.react.devsupport.DevSupportManagerImpl$12: DevSupportManagerImpl$12(com.facebook.react.devsupport.DevSupportManagerImpl)
org.jitsi.meet.sdk.R$drawable: int abc_btn_borderless_material
org.webrtc.ScreenCapturerAndroid: android.media.projection.MediaProjection$Callback mediaProjectionCallback
org.jitsi.meet.sdk.R$styleable: int ActionBar_divider
com.facebook.react.devsupport.DevServerHelper$4: java.lang.Void doInBackground(java.lang.Void[])
okhttp3.internal.http2.Http2Reader$Handler: void pushPromise(int,int,java.util.List)
com.horcrux.svg.RenderableViewManager: java.lang.Class getShadowNodeClass()
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService: java.lang.String TAG
org.jitsi.meet.R$attr: int ratingBarStyleSmall
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
okio.Buffer: java.lang.String readUtf8(long)
org.jitsi.meet.R$layout: int abc_search_dropdown_item_icons_2line
org.webrtc.MediaSource: long nativeSource
org.webrtc.VideoSource: void dispose()
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getCommandsMap()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(android.view.View)
okio.Buffer$1: java.lang.String toString()
com.dropbox.core.v2.team.ListTeamDevicesErrorException
com.facebook.react.views.text.ReactRawTextManager
org.webrtc.CameraCapturer: void printStackTrace()
org.jitsi.meet.R$style: int Widget_AppCompat_ListView
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setConnectTimeout(int)
org.jitsi.meet.sdk.BroadcastIntentHelper: android.content.Intent buildSendChatMessageIntent(java.lang.String,java.lang.String)
com.facebook.jni.IteratorHelper
okhttp3.internal.ws.RealWebSocket: void onReadPing(okio.ByteString)
com.horcrux.svg.R$layout: int abc_action_menu_item_layout
org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger
androidx.fragment.app.Fragment: int mContentLayoutId
okhttp3.internal.io.FileSystem: okio.Sink sink(java.io.File)
org.jitsi.meet.R$string: int scrollbar_description
org.webrtc.SurfaceTextureHelper: int textureWidth
org.jitsi.meet.R$styleable: int AppCompatTheme_colorControlNormal
okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
org.webrtc.HardwareVideoEncoder: org.webrtc.VideoCodecStatus resetCodec(int,int,boolean)
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable: void stop()
com.facebook.react.devsupport.BundleDeltaClient$ClientType
com.horcrux.svg.R$color: int background_material_dark
com.facebook.react.modules.core.RCTNativeAppEventEmitter
com.facebook.react.bridge.LifecycleEventListener
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefX(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
org.webrtc.SdpObserver
com.horcrux.svg.LineView: void setX1(com.facebook.react.bridge.Dynamic)
okio.Pipe: okio.Sink sink
com.facebook.react.uimanager.UIManagerModule: void addUIBlock(com.facebook.react.uimanager.UIBlock)
com.facebook.react.bridge.CatalystInstanceImpl: void callFunction(com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall)
com.horcrux.svg.RenderableViewManager$PathViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.JavaOnlyArray: void pushDouble(double)
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException$1: OkHttpURLConnection$UnexpectedException$1()
org.jitsi.meet.R$styleable: int TextAppearance_android_shadowRadius
okhttp3.internal.http2.Http2Stream: boolean hasResponseHeaders
com.facebook.react.modules.core.ExceptionsManagerModule: void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,int)
org.jitsi.meet.sdk.R$raw: int lang_mainoc
androidx.fragment.app.FragmentActivity: java.lang.String ALLOCATED_REQUEST_INDICIES_TAG
org.jitsi.meet.sdk.R$raw: int lang_languagesfa
com.google.android.gms.internal.measurement.zzc: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMargin(long,int,float)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mMethod
org.jitsi.meet.R$styleable: int SwitchCompat_splitTrack
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats mPerfStats
okhttp3.internal.cache.DiskLruCache: void initialize()
org.jitsi.meet.R$styleable: int[] AppCompatTheme
com.dropbox.core.v2.files.ListFolderContinueErrorException
okhttp3.RealCall: boolean forWebSocket
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect getHitSlopRect()
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)
org.webrtc.PeerConnection$IceConnectionState: org.webrtc.PeerConnection$IceConnectionState[] values()
org.jitsi.meet.R$attr: int paddingBottomNoButtons
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
okhttp3.MultipartBody: okhttp3.MediaType originalType
okhttp3.internal.connection.RealConnection$1: void close()
com.horcrux.svg.R$styleable: int[] TextAppearance
org.webrtc.audio.WebRtcAudioTrack: int GetPlayoutUnderrunCount()
okio.RealBufferedSource: java.lang.String readUtf8()
org.jitsi.meet.R$dimen: int abc_dropdownitem_text_padding_left
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
okhttp3.MultipartBody$Builder: java.util.List parts
org.webrtc.Camera2Session: android.hardware.camera2.CameraCharacteristics access$1500(org.webrtc.Camera2Session)
okhttp3.HttpUrl: java.lang.String FRAGMENT_ENCODE_SET_URI
org.webrtc.NativeLibrary: java.lang.Object lock
org.webrtc.AudioEncoderFactoryFactory: long createNativeAudioEncoderFactory()
org.jitsi.meet.sdk.R$styleable: int ActionMode_titleTextStyle
org.jitsi.meet.R$attr: int buttonTint
com.facebook.soloader.SysUtil$LollipopSysdeps
org.webrtc.Size: int width
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_Light_DialogWhenLarge
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
org.webrtc.voiceengine.WebRtcAudioRecord$AudioSamples: int sampleRate
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNotifyOnInlineViewLayout(com.facebook.react.views.text.ReactTextView,boolean)
com.horcrux.svg.R$style: int Base_V7_Widget_AppCompat_Toolbar
com.facebook.react.bridge.Inspector$LocalConnection: Inspector$LocalConnection(com.facebook.jni.HybridData)
com.facebook.react.modules.camera.ImageEditingManager: java.util.Map getConstants()
okhttp3.internal.platform.AndroidPlatform$CloseGuard: AndroidPlatform$CloseGuard(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_roundBottomRight
org.jitsi.meet.sdk.incoming_call.IncomingCallInfo: boolean hasVideo
com.facebook.react.devsupport.DevSupportManagerImpl$24$1: com.facebook.react.bridge.NativeDeltaClient val$nativeDeltaClient
okio.RealBufferedSource: int readInt()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_SearchView
com.facebook.react.views.image.ReactImageManager: java.util.Map getExportedCustomDirectEventTypeConstants()
org.jitsi.meet.R$styleable: int SwitchCompat_showText
com.facebook.react.devsupport.DevSupportManagerImpl$5: DevSupportManagerImpl$5(com.facebook.react.devsupport.DevSupportManagerImpl,java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[],int,com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType)
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.toast.ToastModule)
com.facebook.react.bridge.ReadableNativeArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl mUIQueueThread
com.horcrux.svg.R$drawable: int abc_list_selector_background_transition_holo_dark
org.jitsi.meet.R$attr: int showText
com.facebook.react.devsupport.DevSupportManagerImpl$16
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.facebook.react.modules.network.NetworkingModule: int MAX_CHUNK_SIZE_BETWEEN_FLUSHES
okhttp3.Cookie: boolean persistent
com.facebook.react.modules.camera.ImageEditingManager: android.graphics.Bitmap$CompressFormat getCompressFormatForType(java.lang.String)
okio.BufferedSource: boolean rangeEquals(long,okio.ByteString,int,int)
org.webrtc.WrappedNativeI420Buffer: int strideY
org.webrtc.audio.JavaAudioDeviceModule$AudioSamples: int getAudioFormat()
org.jitsi.meet.sdk.R$attr: int roundWithOverlayColor
org.jitsi.meet.sdk.R$string: int common_signin_button_text
org.jitsi.meet.R$styleable: int SwitchCompat_trackTintMode
com.google.android.gms.internal.measurement.zzcd$zzh: com.google.android.gms.internal.measurement.zzcd$zzh zzf
com.facebook.react.views.viewpager.ReactViewPagerManager: boolean needsCustomLayoutForChildren()
org.webrtc.audio.WebRtcAudioTrack: void access$100(boolean)
com.facebook.react.devsupport.DevSupportManagerImpl$10: void onOptionSelected()
org.jitsi.meet.sdk.R$color: int common_google_signin_btn_text_light_default
org.webrtc.RtcCertificatePem: java.lang.String certificate
okhttp3.Request: java.lang.String header(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode
org.jitsi.meet.R$anim: int abc_popup_exit
org.webrtc.CameraVideoCapturer$CameraStatistics: org.webrtc.CameraVideoCapturer$CameraEventsHandler access$200(org.webrtc.CameraVideoCapturer$CameraStatistics)
org.jitsi.meet.R$raw: int lang_languagesja
org.webrtc.PeerConnection$IceServer$Builder: org.webrtc.PeerConnection$TlsCertPolicy tlsCertPolicy
org.jitsi.meet.sdk.R$raw: int node_modules_reactnativeurlpolyfill_package
org.webrtc.StatsReport: org.webrtc.StatsReport$Value[] values
org.jitsi.meet.R$id: int image
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
org.jitsi.meet.sdk.R$raw: int lang_languagesfi
org.jitsi.meet.R$styleable: int[] ActivityChooserView
org.jitsi.meet.sdk.JitsiMeetActivity$1: JitsiMeetActivity$1(org.jitsi.meet.sdk.JitsiMeetActivity)
com.horcrux.svg.R$styleable: int SearchView_submitBackground
okio.ByteString: java.lang.String string(java.nio.charset.Charset)
com.facebook.react.modules.core.JSTimers
com.facebook.react.modules.deviceinfo.DeviceInfoModule: float mFontScale
org.webrtc.audio.VolumeLogger: java.lang.String THREAD_NAME
org.jitsi.meet.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
org.jitsi.meet.R$attr: int roundingBorderWidth
org.jitsi.meet.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
org.jitsi.meet.R$string: int abc_searchview_description_clear
org.webrtc.MediaStream: boolean nativeRemoveVideoTrack(long,long)
okhttp3.CertificatePinner: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
org.webrtc.VideoEncoderWrapper: java.lang.Integer getScalingSettingsLow(org.webrtc.VideoEncoder$ScalingSettings)
com.horcrux.svg.RenderableViewManager$SVGClass: com.horcrux.svg.RenderableViewManager$SVGClass valueOf(java.lang.String)
com.horcrux.svg.R$attr: int windowActionBarOverlay
com.learnium.RNDeviceInfo.RNDeviceModule: void getCarrier(com.facebook.react.bridge.Promise)
okhttp3.internal.http2.Http2Reader$ContinuationSource: okio.BufferedSource source
okhttp3.Cache$2: Cache$2(okhttp3.Cache)
com.facebook.react.devsupport.DevServerHelper: void openInspectorConnection()
com.horcrux.svg.R$styleable: int ActionMode_height
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableEndCompat
com.facebook.react.devsupport.BundleDownloader$1: BundleDownloader$1(com.facebook.react.devsupport.BundleDownloader,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,java.io.File,com.facebook.react.devsupport.BundleDownloader$BundleInfo,com.facebook.react.devsupport.BundleDeltaClient$ClientType)
org.webrtc.PeerConnectionFactory$InitializationOptions$Builder: org.webrtc.PeerConnectionFactory$InitializationOptions$Builder setFieldTrials(java.lang.String)
androidx.fragment.app.Fragment: boolean hasOptionsMenu()
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_viewAspectRatio
com.facebook.react.bridge.JavaMethodWrapper$6: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.devsupport.DevInternalSettings: DevInternalSettings(android.content.Context,com.facebook.react.devsupport.DevInternalSettings$Listener)
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: StackTraceHelper$StackFrameImpl(java.lang.String,java.lang.String,java.lang.String,int,int,com.facebook.react.devsupport.StackTraceHelper$1)
com.horcrux.svg.TextView: void setTextLength(com.facebook.react.bridge.Dynamic)
com.dropbox.core.v2.files.GetMetadataErrorException
com.facebook.react.uimanager.UIManagerModule: java.util.Map getConstants()
org.webrtc.VideoEncoderWrapper
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_MESSAGE
org.jitsi.meet.sdk.R$color: int notification_action_color_filter
com.google.android.gms.internal.measurement.zzcd$zza: boolean zzg
com.facebook.react.uimanager.UIManagerModule: void playTouchSound()
org.webrtc.RtpParameters$HeaderExtension: java.lang.String uri
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean usingProxy()
org.webrtc.TextureBufferImpl$1: void onRetain(org.webrtc.TextureBufferImpl)
org.webrtc.PeerConnection$BundlePolicy: org.webrtc.PeerConnection$BundlePolicy[] $VALUES
org.jitsi.meet.R$attr: int actionButtonStyle
com.horcrux.svg.R$drawable: int abc_ic_arrow_drop_right_black_24dp
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.PeerConnectionFactory$Builder setAudioDeviceModule(org.webrtc.audio.AudioDeviceModule)
com.google.android.gms.measurement.module.Analytics: com.google.android.gms.measurement.module.Analytics getInstance(android.content.Context)
org.jitsi.meet.sdk.R$id: int action_bar_spinner
org.webrtc.TimestampAligner: long nativeTranslateTimestamp(long,long)
org.jitsi.meet.R$string: int common_google_play_services_updating_text
org.webrtc.MediaStreamTrack$State: org.webrtc.MediaStreamTrack$State LIVE
org.jitsi.meet.sdk.R$styleable: int Toolbar_titleMarginStart
com.horcrux.svg.R$styleable: int MenuGroup_android_enabled
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_drawableEndCompat
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
org.webrtc.CameraCapturer: boolean firstFrameObserved
org.webrtc.PeerConnection$IceConnectionState: org.webrtc.PeerConnection$IceConnectionState valueOf(java.lang.String)
org.jitsi.meet.R$attr: int roundBottomLeft
androidx.fragment.app.FragmentActivity: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
com.facebook.react.devsupport.DisabledDevSupportManager: java.lang.String getDownloadedJSBundleFile()
org.webrtc.VideoFrame$Buffer: int getWidth()
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.uimanager.events.RCTEventEmitter getEventEmitter(int)
okhttp3.internal.http1.Http1Codec$FixedLengthSource: long bytesRemaining
org.jitsi.meet.sdk.R$style: int Base_V26_Theme_AppCompat_Light
org.jitsi.meet.R$styleable: int[] Toolbar
com.facebook.react.devsupport.interfaces.StackFrame: org.json.JSONObject toJSON()
org.webrtc.Camera1Session: void checkIsOnCameraThread()
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)
org.webrtc.NetworkMonitor: void startMonitoring()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.horcrux.svg.SvgViewManager: java.lang.String getName()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.webrtc.NV12Buffer: NV12Buffer(int,int,int,int,java.nio.ByteBuffer,java.lang.Runnable)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
com.facebook.react.bridge.BaseJavaModule: BaseJavaModule()
com.google.android.gms.internal.measurement.zzbv$zze: com.google.android.gms.internal.measurement.zzbv$zze zzj
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setFixedLengthStreamingMode(long)
com.facebook.react.devsupport.RedBoxDialog$1: com.facebook.react.devsupport.RedBoxDialog this$0
okhttp3.ResponseBody$1: okio.BufferedSource val$content
org.webrtc.PeerConnection: java.util.List getTransceivers()
com.horcrux.svg.R$style: int TextAppearance_Compat_Notification_Title
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetAspectRatio(long)
com.facebook.react.animated.EventAnimationDriver: EventAnimationDriver(java.util.List,com.facebook.react.animated.ValueAnimatedNode)
com.facebook.react.devsupport.BundleDeltaClient$BundleDeltaNativeClient: void reset()
org.jitsi.meet.sdk.R$attr: int textLocale
com.horcrux.svg.R$styleable: int[] StateListDrawableItem
com.horcrux.svg.RenderableViewManager: java.lang.String getName()
org.jitsi.meet.sdk.R$styleable: int MenuGroup_android_id
org.webrtc.H264Utils: java.lang.String H264_CONSTRAINED_HIGH_3_1
com.dropbox.core.v2.sharing.ModifySharedLinkSettingsErrorException
com.facebook.react.devsupport.DevSupportManagerImpl$6
com.google.android.gms.internal.measurement.zzbv$zza: com.google.android.gms.internal.measurement.zzid zzf
org.jitsi.meet.sdk.R$raw: int lang_languageshr
org.webrtc.NetworkMonitorAutoDetect$NetworkState: int getUnderlyingNetworkTypeForVpn()
org.webrtc.Predicate$2: org.webrtc.Predicate val$other
org.webrtc.voiceengine.WebRtcAudioRecord: boolean enableBuiltInAEC(boolean)
org.jitsi.meet.sdk.R$style: int Base_V21_Theme_AppCompat_Dialog
org.webrtc.Camera1Session: void access$000(org.webrtc.Camera1Session)
com.horcrux.svg.R$anim: int abc_fade_in
com.horcrux.svg.R$styleable: int MenuItem_android_title
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.facebook.react.modules.debug.DevSettingsModule: void setIsDebuggingRemotely(boolean)
org.webrtc.TextureBufferImpl: int id
com.facebook.react.uimanager.BaseViewManager: void setTestId(android.view.View,java.lang.String)
com.facebook.react.views.view.ReactViewGroup: void updateClippingToRect(android.graphics.Rect)
okhttp3.ResponseBody: java.io.InputStream byteStream()
org.webrtc.YuvConverter: org.webrtc.VideoFrame$I420Buffer convert(org.webrtc.VideoFrame$TextureBuffer)
org.webrtc.DynamicBitrateAdjuster: double timeSinceLastAdjustmentMs
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_roundWithOverlayColor
com.facebook.react.devsupport.DevLoadingViewController: void access$000(com.facebook.react.devsupport.DevLoadingViewController,java.lang.String)
org.webrtc.EglBase14Impl
com.horcrux.svg.R$attr: int selectableItemBackgroundBorderless
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.horcrux.svg.R$styleable: int[] LinearLayoutCompat_Layout
okhttp3.internal.http2.Http2Connection$PingRunnable: int payload1
org.jitsi.meet.sdk.R$attr: int alertDialogTheme
com.facebook.react.bridge.ReactContext: java.lang.Object getSystemService(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$9
com.horcrux.svg.R$id: int search_voice_btn
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ACTION_DISMISSED
okio.ForwardingTimeout: okio.Timeout clearDeadline()
org.jitsi.meet.sdk.JitsiMeet: org.jitsi.meet.sdk.JitsiMeetConferenceOptions getDefaultConferenceOptions()
okio.RealBufferedSink: okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset)
com.dropbox.core.v2.team.MembersSetPermissionsErrorException
okhttp3.internal.cache.DiskLruCache: java.lang.String READ
org.webrtc.CameraCapturer: int width
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mType
org.webrtc.PeerConnection$SignalingState: org.webrtc.PeerConnection$SignalingState valueOf(java.lang.String)
org.webrtc.VideoProcessor$FrameAdaptationParameters: int cropY
com.horcrux.svg.VirtualView: android.graphics.Path mFillPath
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSCallback(int,com.facebook.react.bridge.NativeArray)
org.webrtc.GlGenericDrawer$ShaderCallbacks: void onPrepareShader(org.webrtc.GlShader,float[],int,int,int,int)
okhttp3.internal.http2.Huffman: byte[] decode(byte[])
org.jitsi.meet.sdk.BroadcastEvent: org.jitsi.meet.sdk.BroadcastEvent$Type type
org.jitsi.meet.sdk.JitsiMeetActivity: void onBroadcastReceived(android.content.Intent)
com.facebook.react.views.view.ReactViewGroup: void updateSubviewClipStatus(android.view.View)
org.webrtc.audio.WebRtcAudioRecord: android.content.Context context
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_17
org.webrtc.RefCountDelegate: void release()
com.facebook.react.devsupport.InspectorPackagerConnection: java.util.Map mInspectorConnections
okhttp3.internal.http2.Http2Connection$3: okhttp3.internal.http2.Http2Connection this$0
org.jitsi.meet.sdk.net.NAT64AddrInfo
org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackThread: int writeBytes(android.media.AudioTrack,java.nio.ByteBuffer,int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_GCM_SHA256
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$3: com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback val$callback
okhttp3.internal.http.RealInterceptorChain: int readTimeout
org.jitsi.meet.R$style: int Widget_AppCompat_ListPopupWindow
org.webrtc.voiceengine.WebRtcAudioRecord: android.media.AudioRecord access$000(org.webrtc.voiceengine.WebRtcAudioRecord)
org.jitsi.meet.sdk.R$color: int foreground_material_dark
org.jitsi.meet.sdk.R$attr: int title
org.jitsi.meet.R$drawable: int abc_text_select_handle_middle_mtrl_light
com.facebook.react.modules.core.RCTNativeAppEventEmitter: void emit(java.lang.String,java.lang.Object)
com.horcrux.svg.R$styleable: int AppCompatTheme_colorAccent
okhttp3.Cache$Entry: okhttp3.Handshake handshake
org.jitsi.meet.sdk.BuildConfig
org.webrtc.VideoEncoder$BitrateAllocation: int getSum()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setVerticalAlign(com.horcrux.svg.TextView,java.lang.String)
org.webrtc.MediaStreamTrack$State: org.webrtc.MediaStreamTrack$State[] $VALUES
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()
org.webrtc.NetworkMonitorAutoDetect: java.util.List getActiveNetworkList()
com.facebook.drawee.view.DraweeView: void setImageBitmap(android.graphics.Bitmap)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String,okhttp3.RequestBody)
javax.inject.Provider
androidx.fragment.app.Fragment: void onMultiWindowModeChanged(boolean)
com.facebook.react.devsupport.DevServerHelper: android.os.Handler mRestartOnChangePollingHandler
org.webrtc.WebRtcClassLoader: WebRtcClassLoader()
org.webrtc.SoftwareVideoDecoderFactory: SoftwareVideoDecoderFactory()
com.horcrux.svg.R$id: int rn_frame_method
okio.AsyncTimeout$2: java.lang.String toString()
com.facebook.common.memory.PooledByteBuffer$ClosedException
org.webrtc.voiceengine.WebRtcAudioManager: int BITS_PER_SAMPLE
com.horcrux.svg.R$attr: int titleMarginEnd
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager
okio.Buffer: java.lang.String readUtf8Line(long)
okio.SegmentedByteString: int size()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
okhttp3.internal.http2.Huffman: Huffman()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
okhttp3.internal.cache.CacheStrategy$Factory: boolean isFreshnessLifetimeHeuristic()
org.jitsi.meet.sdk.OngoingConferenceTracker: void updateListeners()
com.horcrux.svg.LinearGradientView: void setX1(com.facebook.react.bridge.Dynamic)
okhttp3.internal.cache.DiskLruCache: java.lang.String CLEAN
okhttp3.Call: okhttp3.Response execute()
okhttp3.internal.Internal: okhttp3.internal.connection.StreamAllocation streamAllocation(okhttp3.Call)
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
org.jitsi.meet.R$attr: int voiceIcon
org.webrtc.PeerConnectionFactory: org.webrtc.PeerConnection createPeerConnection(org.webrtc.PeerConnection$RTCConfiguration,org.webrtc.MediaConstraints,org.webrtc.PeerConnection$Observer)
org.webrtc.voiceengine.WebRtcAudioManager: int nativeSampleRate
org.jitsi.meet.R$id: int accessibility_custom_action_31
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundBottomLeft
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ActionButton_Overflow
okhttp3.CacheControl: java.lang.String headerValue
com.facebook.react.devsupport.JSException: JSException(java.lang.String,java.lang.String)
org.webrtc.EglBase$ConfigBuilder: org.webrtc.EglBase$ConfigBuilder setSupportsPixelBuffer(boolean)
com.facebook.react.views.text.ReactTextView: void setNumberOfLines(int)
com.facebook.react.devsupport.RedBoxDialog: boolean onKeyUp(int,android.view.KeyEvent)
com.horcrux.svg.R$id: int search_mag_icon
org.jitsi.meet.sdk.R$styleable: int SwitchCompat_switchPadding
org.webrtc.PeerConnection$RTCConfiguration: boolean activeResetSrtpParams
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
org.webrtc.voiceengine.WebRtcAudioEffects: boolean effectTypeIsVoIP(java.util.UUID)
com.facebook.react.views.view.ReactViewGroup: void onRtlPropertiesChanged(int)
com.calendarevents.CalendarEvents: com.facebook.react.bridge.WritableNativeMap access$500(com.calendarevents.CalendarEvents,java.lang.String)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONTENT_APPEARED
org.webrtc.SurfaceTextureHelper$2: void onDestroy(org.webrtc.TextureBufferImpl)
com.facebook.react.uimanager.ReactInvalidPropertyException
com.facebook.react.modules.appstate.AppStateModule: void onHostDestroy()
com.horcrux.svg.SvgViewManager
org.jitsi.meet.sdk.R$styleable: int MenuItem_android_onClick
com.horcrux.svg.RenderableViewManager: void setClipPath(com.horcrux.svg.VirtualView,java.lang.String)
okhttp3.internal.platform.Platform: java.lang.Object readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)
org.jitsi.meet.R$color: int colorPrimaryDark
org.webrtc.HardwareVideoDecoderFactory$1: boolean test(java.lang.Object)
org.webrtc.audio.WebRtcAudioRecord: int AUDIO_RECORD_START
org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate: boolean hasInternetCapability(android.net.Network)
org.jitsi.meet.R$attr: int textAppearanceSmallPopupMenu
okhttp3.internal.ws.RealWebSocket$Close: okio.ByteString reason
org.webrtc.EglBase10Impl: javax.microedition.khronos.egl.EGL10 egl
org.webrtc.CameraSession$Events
org.webrtc.audio.WebRtcAudioRecord: org.webrtc.audio.WebRtcAudioRecord$AudioRecordThread audioThread
timber.log.Timber$Tree: void i(java.lang.String,java.lang.Object[])
org.webrtc.AndroidVideoDecoder: void releaseSurface()
org.jitsi.meet.R$id: int tag_accessibility_clickable_spans
org.jitsi.meet.R$drawable: int abc_list_selector_disabled_holo_light
org.webrtc.RefCounted: void retain()
okio.GzipSource: byte FEXTRA
okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)
com.horcrux.svg.R$id: int view_tag_native_id
com.facebook.react.devsupport.WebsocketJavaScriptExecutor: void close()
com.horcrux.svg.R$styleable: int[] AppCompatTextView
org.jitsi.meet.sdk.R$attr: int splitTrack
com.facebook.react.modules.i18nmanager.I18nManagerModule: I18nManagerModule(android.content.Context)
com.horcrux.svg.R$styleable: int[] MenuItem
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
org.webrtc.EglBase14Impl: android.opengl.EGLDisplay getEglDisplay()
com.facebook.react.devsupport.DevServerHelper: java.io.File downloadBundleResourceFromUrlSync(java.lang.String,java.io.File)
com.horcrux.svg.R$styleable: int MenuItem_android_alphabeticShortcut
org.webrtc.PeerConnectionDependencies$Builder: PeerConnectionDependencies$Builder(org.webrtc.PeerConnection$Observer,org.webrtc.PeerConnectionDependencies$1)
com.horcrux.svg.R$attr: int lastBaselineToBottomHeight
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: void closeWebSocketQuietly()
com.facebook.react.modules.debug.AnimationsDebugModule: void stopRecordingFps(double)
okhttp3.Call: okhttp3.Call clone()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.RenderableViewManager$MaskManager: void setY(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.zmxv.RNSound.RNSoundModule: java.util.Map playerPool
org.jitsi.meet.sdk.R$id: int wide
org.jitsi.meet.sdk.R$dimen: int abc_control_corner_material
org.jitsi.meet.R$style: int Theme_AppCompat_Light_NoActionBar
okhttp3.internal.http.RealInterceptorChain: int index
org.webrtc.TextureBufferImpl: org.webrtc.VideoFrame$Buffer cropAndScale(int,int,int,int,int,int)
org.jitsi.meet.R$styleable: int SimpleDraweeView_roundWithOverlayColor
com.facebook.react.bridge.queue.MessageQueueThread
com.horcrux.svg.R$attr: int firstBaselineToTopHeight
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView$RNCWebViewBridge: void postMessage(java.lang.String)
org.webrtc.GlGenericDrawer$ShaderCallbacks: void onNewShader(org.webrtc.GlShader)
org.webrtc.AndroidVideoDecoder: org.webrtc.VideoDecoder$Callback callback
okhttp3.internal.http.HttpHeaders: int skipUntil(java.lang.String,int,java.lang.String)
okhttp3.OkHttpClient: boolean followSslRedirects()
org.jitsi.meet.sdk.R$string: int common_google_play_services_update_button
org.jitsi.meet.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
org.webrtc.CameraVideoCapturer$CameraStatistics
org.webrtc.NV12Buffer: int getHeight()
org.webrtc.RtpParameters: org.webrtc.RtpParameters$DegradationPreference degradationPreference
org.webrtc.SurfaceViewRenderer: void disableFpsReduction()
org.webrtc.HardwareVideoEncoder$BusyCount: HardwareVideoEncoder$BusyCount(org.webrtc.HardwareVideoEncoder$1)
org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger: java.lang.String THREAD_NAME
com.reactnativecommunity.netinfo.NetInfoModule: java.lang.String getName()
okio.ForwardingSource: okio.Source delegate()
okhttp3.OkHttpClient$Builder: javax.net.ssl.SSLSocketFactory sslSocketFactory
com.facebook.react.bridge.ReadableNativeMap: boolean isNull(java.lang.String)
okio.BufferedSource: java.lang.String readUtf8()
org.jitsi.meet.sdk.R$attr: int actionBarTabBarStyle
com.horcrux.svg.R$attr: int trackTintMode
org.webrtc.SurfaceTextureHelper: java.lang.String TAG
com.facebook.react.bridge.CxxModuleWrapperBase
org.webrtc.VideoFrame: VideoFrame(org.webrtc.VideoFrame$Buffer,int,long)
org.jitsi.meet.sdk.R$raw: int lang_languagesit
com.facebook.react.devsupport.DevSupportManagerImpl$24$2: DevSupportManagerImpl$24$2(com.facebook.react.devsupport.DevSupportManagerImpl$24,java.lang.Exception)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbHeight(com.horcrux.svg.SymbolView,float)
org.webrtc.Camera2Session$SessionState: org.webrtc.Camera2Session$SessionState valueOf(java.lang.String)
okhttp3.Challenge: java.lang.String scheme()
org.jitsi.meet.R$styleable: int ViewStubCompat_android_id
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: Http1Codec$UnknownLengthSource(okhttp3.internal.http1.Http1Codec)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
org.jitsi.meet.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
androidx.fragment.app.Fragment: java.lang.String getTag()
com.facebook.react.views.text.ReactTextView: android.text.Spannable getSpanned()
org.jitsi.meet.R$id: int fitXY
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource removeRequest(int)
com.facebook.react.uimanager.UIManagerModule: void removeSubviewsFromContainerWithID(int)
com.facebook.react.modules.camera.ImageStoreManager: void closeQuietly(java.io.Closeable)
org.jitsi.meet.R$string: int catalyst_settings
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder: void nativeTranscodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int)
org.webrtc.WrappedNativeI420Buffer: java.nio.ByteBuffer getDataU()
com.facebook.react.devsupport.BundleDeltaClient$BundleDeltaJavaClient: BundleDeltaClient$BundleDeltaJavaClient()
org.jitsi.meet.R$id: int src_atop
okhttp3.internal.cache.DiskLruCache$Editor: boolean done
org.webrtc.audio.WebRtcAudioTrack: byte[] access$700(org.webrtc.audio.WebRtcAudioTrack)
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_roundBottomRight
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void initialize()
org.webrtc.CameraEnumerationAndroid$2: int val$requestedHeight
androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback mMemoryTrimCallback
com.horcrux.svg.R$id: int home
org.jitsi.meet.R$string: int common_google_play_services_install_title
com.facebook.react.devsupport.DisabledDevSupportManager: void updateJSError(java.lang.String,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.devsupport.DevSupportManagerImpl: java.lang.String access$100(android.content.Context)
okhttp3.RealCall
com.horcrux.svg.R$string: int abc_menu_delete_shortcut_label
okhttp3.OkUrlFactory$1
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType getThreadType()
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
com.facebook.react.modules.network.NetworkingModule: java.util.List mUriHandlers
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule
org.jitsi.meet.sdk.R$string: int common_google_play_services_wear_update_text
org.webrtc.RTCStats
org.webrtc.WrappedNativeVideoDecoder: org.webrtc.VideoCodecStatus decode(org.webrtc.EncodedImage,org.webrtc.VideoDecoder$DecodeInfo)
org.webrtc.SurfaceViewRenderer: void onMeasure(int,int)
okhttp3.OkHttpClient: okhttp3.Cache cache()
com.facebook.react.views.view.ReactViewManager: void setCollapsable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeController getController()
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.WritableMap copy()
com.horcrux.svg.SvgViewManager: boolean needsCustomLayoutForChildren()
org.jitsi.meet.R$id: int accessibility_custom_action_11
org.jitsi.meet.sdk.R$styleable: int AnimatedStateListDrawableCompat_android_visible
org.webrtc.RtpParameters$DegradationPreference: org.webrtc.RtpParameters$DegradationPreference MAINTAIN_FRAMERATE
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String mUserAgentWithApplicationName
okhttp3.Request: okhttp3.RequestBody body
org.jitsi.meet.R$attr: int barLength
org.webrtc.RtpTransceiver$RtpTransceiverInit: java.util.List sendEncodings
com.facebook.react.devsupport.JSDebuggerWebSocketClient: void executeJSCall(java.lang.String,java.lang.String,com.facebook.react.devsupport.JSDebuggerWebSocketClient$JSDebuggerCallback)
com.zmxv.RNSound.RNSoundModule: void pause(java.lang.Double,com.facebook.react.bridge.Callback)
org.jitsi.meet.R$style: int Theme_AppCompat_DialogWhenLarge
org.webrtc.voiceengine.WebRtcAudioManager: int outputBufferSize
okhttp3.Cookie: java.util.regex.Pattern TIME_PATTERN
com.facebook.react.devsupport.BundleDeltaClient$BundleDeltaNativeClient: BundleDeltaClient$BundleDeltaNativeClient()
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCorrect(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
okhttp3.internal.platform.Platform: byte[] concatLengthPrefixed(java.util.List)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
com.facebook.react.devsupport.RedBoxHandler
org.webrtc.PeerConnection$Observer: void onIceConnectionReceivingChange(boolean)
okhttp3.Cache$CacheResponseBody
com.facebook.react.devsupport.DevInternalSettings: boolean isStartSamplingProfilerOnInit()
org.jitsi.meet.R$styleable: int ActionBar_contentInsetEndWithActions
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
org.jitsi.meet.sdk.R$drawable: int abc_list_selector_holo_dark
com.horcrux.svg.RadialGradientView: void setGradientUnits(int)
org.jitsi.meet.R$dimen: int abc_dialog_padding_top_material
com.oney.WebRTCModule.WebRTCModule: void mediaStreamAddTrackAsync(java.lang.String,java.lang.String)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()
org.jitsi.meet.sdk.R$styleable: int View_android_theme
okhttp3.OkUrlFactory$1: java.net.URLConnection openConnection(java.net.URL)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants)
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
androidx.appcompat.widget.ActionBarContextView
okhttp3.internal.ws.WebSocketProtocol: void validateCloseCode(int)
org.jitsi.meet.R$id: int off
com.horcrux.svg.R$layout: int abc_action_mode_bar
okio.GzipSource: int section
okio.RealBufferedSource: boolean rangeEquals(long,okio.ByteString)
com.horcrux.svg.R$styleable: int AppCompatTheme_actionMenuTextColor
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: java.lang.String mFileName
org.jitsi.meet.sdk.R$drawable: int abc_list_pressed_holo_dark
org.webrtc.MediaCodecWrapper: android.media.MediaFormat getOutputFormat()
com.horcrux.svg.SvgView$Events: com.horcrux.svg.SvgView$Events[] values()
okio.RealBufferedSource$1: int available()
okhttp3.internal.http2.Hpack$Writer: void writeHeaders(java.util.List)
com.horcrux.svg.R$attr: int thumbTint
okhttp3.internal.http2.Settings: int ENABLE_PUSH
okhttp3.internal.platform.Platform: java.lang.String getPrefix()
okhttp3.OkHttpClient$1: okhttp3.internal.connection.StreamAllocation streamAllocation(okhttp3.Call)
okhttp3.internal.http2.Http2Connection$6: Http2Connection$6(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode)
com.google.gson.reflect.TypeToken: java.lang.Class rawType
com.facebook.react.bridge.BaseActivityEventListener
org.webrtc.BaseBitrateAdjuster: void reportEncodedFrame(int)
com.google.android.gms.internal.measurement.zzca$zzc: java.lang.String zzd
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
androidx.fragment.app.Fragment: android.content.Context getContext()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.facebook.react.modules.debug.AnimationsDebugModule: AnimationsDebugModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.debug.interfaces.DeveloperSettings)
okio.Buffer: okio.Buffer writeTo(java.io.OutputStream,long)
com.dropbox.core.v2.auth.PaperAccessError: com.dropbox.core.v2.auth.PaperAccessError valueOf(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void getDeviceName(com.facebook.react.bridge.Promise)
org.webrtc.CameraCapturer: void changeCaptureFormat(int,int,int)
okhttp3.TlsVersion: java.lang.String javaName
org.jitsi.meet.R$styleable: int AppCompatTheme_controlBackground
com.horcrux.svg.R$attr: int fontWeight
com.oney.WebRTCModule.WebRTCModule: java.lang.String getName()
okhttp3.Cache$1: okhttp3.Response get(okhttp3.Request)
org.jitsi.meet.sdk.R$attr: int autoSizeMinTextSize
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService: android.os.IBinder onBind(android.content.Intent)
com.facebook.react.views.modal.ModalHostShadowNode
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_20
com.horcrux.svg.MarkerView: void setAlign(java.lang.String)
okhttp3.HttpUrl$Builder: int port
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromDeltaBundle(java.lang.String,com.facebook.react.bridge.NativeDeltaClient,boolean)
org.jitsi.meet.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
okhttp3.internal.huc.OutputStreamRequestBody$1: okio.BufferedSink val$sink
com.horcrux.svg.R$layout: int notification_template_icon_group
org.webrtc.HardwareVideoEncoder: java.lang.String TAG
org.jitsi.meet.R$attr: int icon
com.facebook.react.devsupport.DevSupportManagerImpl$13
com.horcrux.svg.R$drawable: int abc_seekbar_tick_mark_material
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
com.horcrux.svg.R$style: int Widget_AppCompat_EditText
org.webrtc.EglBase10Impl$1FakeSurfaceHolder: void setKeepScreenOn(boolean)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.Object sProgressBarCtorLock
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_INTEGER
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getHeaderField(java.lang.String)
com.horcrux.svg.R$attr: int actionButtonStyle
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem insertMountItem(int,int,int)
org.jitsi.meet.R$style: int Widget_AppCompat_RatingBar_Small
org.webrtc.SurfaceTextureHelper: org.webrtc.VideoSink access$300(org.webrtc.SurfaceTextureHelper)
org.jitsi.meet.R$dimen: int notification_right_side_padding_top
com.facebook.react.bridge.JavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
org.jitsi.meet.R$layout: int redbox_item_title
com.facebook.react.bridge.Inspector$Page: int getId()
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCy(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.connection.StreamAllocation: boolean canceled
org.jitsi.meet.sdk.R$id: int textSpacerNoTitle
org.jitsi.meet.sdk.AudioModeModule$5: org.jitsi.meet.sdk.AudioModeModule this$0
org.jitsi.meet.sdk.JitsiMeetActivityDelegate: void onHostResume(android.app.Activity)
org.webrtc.JavaI420Buffer: JavaI420Buffer(int,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.lang.Runnable)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_colorError
okhttp3.internal.http2.Http2Connection$PingRunnable
okhttp3.internal.http2.Http2Reader$Handler: void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long)
okio.ByteString: okio.ByteString of(byte[],int,int)
org.jitsi.meet.R$style: int CalendarDatePickerDialog
org.jitsi.meet.sdk.ReactInstanceManagerHolder: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath
org.jitsi.meet.sdk.R$drawable: int abc_textfield_search_activated_mtrl_alpha
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: ReactQueueConfigurationImpl(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.facebook.react.devsupport.RedBoxDialog: android.widget.ProgressBar mLoadingIndicator
com.horcrux.svg.R$drawable: int abc_switch_thumb_material
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_TextView
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric
okhttp3.internal.http2.Http2Codec: java.lang.String HOST
org.jitsi.meet.sdk.R$bool: R$bool()
com.horcrux.svg.R$style: int Base_V26_Widget_AppCompat_Toolbar
org.webrtc.PeerConnectionDependencies: PeerConnectionDependencies(org.webrtc.PeerConnection$Observer,org.webrtc.SSLCertificateVerifier,org.webrtc.PeerConnectionDependencies$1)
org.jitsi.meet.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
okio.GzipSource: long read(okio.Buffer,long)
com.facebook.react.modules.camera.ImageStoreManager: ImageStoreManager(com.facebook.react.bridge.ReactApplicationContext)
org.webrtc.EglRenderer: android.graphics.Matrix drawMatrix
com.facebook.react.views.textinput.ReactTextInputManager: void setDisableFullscreenUI(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
org.webrtc.Camera1Capturer: void switchCamera(org.webrtc.CameraVideoCapturer$CameraSwitchHandler)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setY(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.facebook.react.views.view.ReactViewManager: void nextFocusDown(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
org.jitsi.meet.R$string: int abc_activity_chooser_view_see_all
org.jitsi.meet.sdk.OngoingNotification: long startingTime
com.horcrux.svg.SvgViewModule: void access$000(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,int)
org.webrtc.RtcCertificatePem: java.lang.String privateKey
org.webrtc.PeerConnection$RTCConfiguration: int iceConnectionReceivingTimeout
com.facebook.react.devsupport.WebsocketJavaScriptExecutor: java.util.HashMap mInjectedObjects
okhttp3.Cookie: long parseMaxAge(java.lang.String)
okhttp3.internal.connection.StreamAllocation: boolean hasMoreRoutes()
org.webrtc.FileVideoCapturer: void initialize(org.webrtc.SurfaceTextureHelper,android.content.Context,org.webrtc.CapturerObserver)
androidx.fragment.app.Fragment: android.content.Context requireContext()
okhttp3.ConnectionPool
org.jitsi.meet.R$styleable: int AppCompatTheme_windowMinWidthMinor
org.jitsi.meet.sdk.WiFiStatsModule: com.facebook.react.bridge.ReactApplicationContext access$000(org.jitsi.meet.sdk.WiFiStatsModule)
org.jitsi.meet.sdk.ConnectionService$ConnectionImpl: void onHold()
com.corbt.keepawake.KCKeepAwake: java.lang.String getName()
com.facebook.react.uimanager.BaseViewManager: void updateViewContentDescription(android.view.View)
com.horcrux.svg.RenderableViewManager$MaskManager: void setX(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.http.RealInterceptorChain: RealInterceptorChain(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection,int,okhttp3.Request,okhttp3.Call,okhttp3.EventListener,int,int,int)
org.webrtc.ThreadUtils: void joinUninterruptibly(java.lang.Thread)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenClass()
org.webrtc.voiceengine.WebRtcAudioEffects: boolean canUseNoiseSuppressor()
org.jitsi.meet.sdk.OngoingConferenceTracker: java.lang.String CONFERENCE_WILL_JOIN
org.jitsi.meet.sdk.BroadcastEmitter
okhttp3.internal.io.FileSystem: okhttp3.internal.io.FileSystem SYSTEM
org.jitsi.meet.sdk.R$attr: int actionModeShareDrawable
com.facebook.react.bridge.ReadableNativeMap: java.util.Iterator getEntryIterator()
com.horcrux.svg.VirtualView: boolean mTransformInvertible
org.jitsi.meet.sdk.R$styleable: int FontFamilyFont_android_fontWeight
okhttp3.CipherSuite
org.jitsi.meet.R$drawable: int abc_ic_menu_cut_mtrl_alpha
com.fasterxml.jackson.core.JsonParser$Feature: com.fasterxml.jackson.core.JsonParser$Feature[] values()
org.webrtc.PeerConnectionFactory: org.webrtc.VideoSource createVideoSource(boolean)
okhttp3.internal.http2.Http2Connection$5: Http2Connection$5(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okio.Buffer,int,boolean)
com.facebook.react.devsupport.DevServerHelper: java.lang.String createOpenStackFrameURL(java.lang.String)
org.webrtc.EglRenderer: java.lang.String averageTimeAsString(long,int)
okio.RealBufferedSink: okio.Buffer buffer
org.jitsi.meet.sdk.AndroidSettingsModule: AndroidSettingsModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)
androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.reactnativecommunity.webview.RNCWebViewModule: android.app.DownloadManager$Request downloadRequest
com.horcrux.svg.R$color: int abc_background_cache_hint_selector_material_light
com.horcrux.svg.R$style: int Widget_AppCompat_RatingBar_Small
com.horcrux.svg.R$id: int topPanel
okhttp3.Authenticator
org.jitsi.meet.R$style: int Theme_AppCompat_Light_Dialog
org.webrtc.NetworkMonitor: NetworkMonitor(org.webrtc.NetworkMonitor$1)
okhttp3.internal.huc.OkHttpURLConnection: int getConnectTimeout()
org.jitsi.meet.sdk.ProximityModule$1: ProximityModule$1(org.jitsi.meet.sdk.ProximityModule,boolean)
org.webrtc.MediaCodecWrapper: void configure(android.media.MediaFormat,android.view.Surface,android.media.MediaCrypto,int)
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModuleSpec mSpec
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void applyAndAckSettings(okhttp3.internal.http2.Settings)
com.horcrux.svg.R$id: int action_menu_presenter
com.facebook.react.bridge.WritableNativeMap: void putBoolean(java.lang.String,boolean)
org.jitsi.meet.R$styleable: int SimpleDraweeView_failureImageScaleType
org.jitsi.meet.sdk.R$string: int search_description
org.webrtc.DefaultVideoEncoderFactory: org.webrtc.VideoEncoderFactory hardwareVideoEncoderFactory
com.horcrux.svg.R$string: int catalyst_dismiss_button
org.jitsi.meet.R$dimen: int hint_pressed_alpha_material_dark
okhttp3.internal.huc.OutputStreamRequestBody$1: void write(int)
com.horcrux.svg.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
org.webrtc.FileVideoCapturer: boolean isScreencast()
org.jitsi.meet.sdk.R$attr: int actionModeCloseDrawable
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggeredTimestamp
org.webrtc.CameraEnumerationAndroid$CaptureFormat$FramerateRange: boolean equals(java.lang.Object)
com.horcrux.svg.VirtualView: android.graphics.Path mCachedClipPath
okio.BufferedSource: java.lang.String readUtf8LineStrict(long)
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: long read(okio.Buffer,long)
org.webrtc.PeerConnection: java.util.List getSenders()
okhttp3.internal.http1.Http1Codec$AbstractSource: Http1Codec$AbstractSource(okhttp3.internal.http1.Http1Codec)
okio.RealBufferedSource: int read(java.nio.ByteBuffer)
okhttp3.internal.cache.DiskLruCache: java.lang.String VERSION_1
okhttp3.HttpUrl$Builder: int parsePort(java.lang.String,int,int)
com.facebook.react.devsupport.DevSupportManagerImpl: void handleException(java.lang.Exception)
org.webrtc.VideoCodecStatus: org.webrtc.VideoCodecStatus FALLBACK_SOFTWARE
okio.Segment: int pos
com.facebook.react.devsupport.interfaces.DevOptionHandler
okhttp3.internal.http1.Http1Codec$ChunkedSink: void flush()
org.webrtc.audio.VolumeLogger: VolumeLogger(android.media.AudioManager)
com.horcrux.svg.PatternView: void setPatternContentUnits(int)
co.apptailor.googlesignin.RNGoogleSigninModule: void handleSignInTaskResult(com.google.android.gms.tasks.Task)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)
org.jitsi.meet.R$attr: int checkedTextViewStyle
okhttp3.internal.platform.Platform: boolean isCleartextTrafficPermitted(java.lang.String)
com.facebook.react.modules.network.NetworkingModule: void addUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler)
okhttp3.ConnectionPool: java.util.Deque connections
com.facebook.react.views.art.ARTSurfaceViewManager: void setBackgroundColor(com.facebook.react.views.art.ARTSurfaceView,int)
okhttp3.Cache$1: okhttp3.Cache this$0
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost
com.facebook.react.bridge.CatalystInstanceImpl$3
okhttp3.internal.http2.Http2Connection: int maxConcurrentStreams()
androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfigurationImpl mReactQueueConfiguration
okhttp3.OkHttpClient$Builder: java.util.List protocols
org.webrtc.NetworkMonitor: void removeObserver(org.webrtc.NetworkMonitor$NetworkObserver)
com.facebook.react.bridge.CatalystInstance: java.util.Collection getNativeModules()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Display1
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
okhttp3.Address: okhttp3.HttpUrl url()
org.jitsi.meet.sdk.R$id: int notification_main_column_container
com.google.android.gms.internal.measurement.zzbv$zzf$zzb: com.google.android.gms.internal.measurement.zzbv$zzf$zzb[] values()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFontWeight(com.horcrux.svg.GroupView,com.facebook.react.bridge.Dynamic)
org.jitsi.meet.sdk.BroadcastEvent$Type: java.lang.String PARTICIPANT_LEFT_NAME
com.horcrux.svg.R$attr: int checkedTextViewStyle
org.jitsi.meet.R$styleable: int AppCompatTheme_radioButtonStyle
org.webrtc.CryptoOptions$Srtp: CryptoOptions$Srtp(org.webrtc.CryptoOptions,boolean,boolean,boolean)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mainThreadSpec()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_ActionBar
org.jitsi.meet.sdk.R$raw: int lang_mainfi
com.horcrux.svg.RenderableView: void setVectorEffect(int)
com.horcrux.svg.VirtualView: double relativeOnHeight(com.horcrux.svg.SVGLength)
org.webrtc.voiceengine.WebRtcAudioEffects: java.util.UUID AOSP_ACOUSTIC_ECHO_CANCELER
org.webrtc.StatsReport$Value
org.webrtc.Size
co.apptailor.googlesignin.RNGoogleSigninModule: void access$200(co.apptailor.googlesignin.RNGoogleSigninModule,com.google.android.gms.tasks.Task)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setOrient(com.horcrux.svg.MarkerView,java.lang.String)
org.jitsi.meet.R$attr: int background
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Inverse
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService: org.jitsi.meet.sdk.AudioModeModule access$000(org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService)
okhttp3.internal.http2.Hpack$Writer: void writeByteString(okio.ByteString)
org.jitsi.meet.R$dimen: int abc_dialog_title_divider_material
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void onAfterUpdateTransaction(android.view.View)
org.jitsi.meet.sdk.R$layout: int fps_view
com.facebook.react.devsupport.BundleDownloader$2
com.facebook.react.views.art.ARTShapeShadowNode: void setStrokeJoin(int)
com.facebook.react.devsupport.DevServerHelper$1$2
org.webrtc.CameraEnumerationAndroid$1: int MAX_FPS_LOW_DIFF_WEIGHT
org.webrtc.audio.WebRtcAudioTrack: boolean useLowLatency
com.facebook.react.devsupport.DevSupportManagerImpl: void toggleJSSamplingProfiler()
org.jitsi.meet.sdk.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
org.jitsi.meet.R$drawable: int abc_switch_thumb_material
okio.Options: okio.ByteString[] byteStrings
org.jitsi.meet.R$attr: int drawableSize
okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String,java.nio.charset.Charset)
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap of(java.lang.Object[])
com.google.android.gms.internal.measurement.zzci$zzb: double zzh
com.facebook.react.devsupport.DevServerHelper$1$1: com.facebook.react.devsupport.DevServerHelper$1 this$1
com.facebook.react.bridge.CatalystInstanceImpl: void jniHandleMemoryPressure(int)
org.webrtc.NV12Buffer: void release()
org.jitsi.meet.R$styleable: int AppCompatTextView_android_textAppearance
com.dropbox.core.v2.users.GetAccountBatchErrorException
com.horcrux.svg.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
okio.SegmentedByteString: byte[][] segments
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.PeerConnectionFactory$Builder setNetEqFactoryFactory(org.webrtc.NetEqFactoryFactory)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder setFeatureFlag(java.lang.String,java.lang.String)
org.jitsi.meet.R$string: int abc_search_hint
org.webrtc.BaseBitrateAdjuster: int targetFps
org.webrtc.HardwareVideoEncoderFactory: boolean isHardwareSupportedInCurrentSdkH264(android.media.MediaCodecInfo)
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric$2: void onAudioDevicesRemoved(android.media.AudioDeviceInfo[])
com.google.android.gms.measurement.AppMeasurement: void endAdUnitExposure(java.lang.String)
com.horcrux.svg.TextProperties$TextAnchor: com.horcrux.svg.TextProperties$TextAnchor valueOf(java.lang.String)
okio.Buffer: okio.ByteString snapshot(int)
org.jitsi.meet.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
org.jitsi.meet.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
com.facebook.react.bridge.NativeModule$NativeMethod
org.jitsi.meet.R$styleable: int Toolbar_logoDescription
org.webrtc.audio.WebRtcAudioRecord: boolean isAcousticEchoCancelerSupported
okio.Buffer: boolean request(long)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)
com.calendarevents.CalendarEvents: boolean access$600(com.calendarevents.CalendarEvents,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.modules.network.NetworkingModule: boolean mShuttingDown
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
org.jitsi.meet.R$attr: int multiChoiceItemLayout
okhttp3.HttpUrl: java.lang.String host()
org.jitsi.meet.sdk.WiFiStatsModule: java.lang.String TAG
org.jitsi.meet.sdk.R$color: int material_deep_teal_500
okhttp3.internal.http2.Http2Reader$Handler: void data(boolean,int,okio.BufferedSource,int)
com.facebook.react.devsupport.DevInternalSettings: boolean mSupportsNativeDeltaClients
org.jitsi.meet.R$color: int common_google_signin_btn_text_dark
org.webrtc.MediaSource$State: org.webrtc.MediaSource$State LIVE
org.jitsi.meet.sdk.R$attr: int actionBarTabTextStyle
org.webrtc.YuvHelper
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getHeaderFieldLong(java.lang.String,long)
org.jitsi.meet.R$attr: int spinnerDropDownItemStyle
org.jitsi.meet.R$styleable: int AnimatedStateListDrawableItem_android_id
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType UNKNOWN
org.jitsi.meet.sdk.R$color: int abc_tint_spinner
org.webrtc.VideoEncoderFallback
org.jitsi.meet.sdk.R$attr: int commitIcon
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getSerialNumberSync()
okhttp3.internal.cache.DiskLruCache: java.io.File directory
okio.Okio$2: okio.Timeout val$timeout
okhttp3.internal.cache.DiskLruCache: void delete()
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isAirplaneModeSync()
okhttp3.Challenge: okhttp3.Challenge withCharset(java.nio.charset.Charset)
org.jitsi.meet.R$styleable: int LinearLayoutCompat_android_weightSum
okio.BufferedSink: okio.BufferedSink write(okio.Source,long)
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Body2
org.jitsi.meet.R$drawable: int abc_textfield_activated_mtrl_alpha
org.jitsi.meet.sdk.R$styleable: int SearchView_commitIcon
okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
com.facebook.react.bridge.ReadableArray
com.facebook.react.modules.intent.IntentModule: java.lang.String getName()
okhttp3.OkHttpClient$Builder: okhttp3.CookieJar cookieJar
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setY1(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.R$string: int catalyst_reload_button
okhttp3.ConnectionPool: ConnectionPool(int,long,java.util.concurrent.TimeUnit)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
org.webrtc.PeerConnection$KeyType: org.webrtc.PeerConnection$KeyType valueOf(java.lang.String)
com.horcrux.svg.SvgView: float mScale
com.learnium.RNDeviceInfo.RNDeviceModule: void getFontScale(com.facebook.react.bridge.Promise)
okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
okhttp3.internal.Util: java.util.Comparator NATURAL_ORDER
com.horcrux.svg.R$styleable: int ButtonBarLayout_allowStacking
org.jitsi.meet.sdk.BroadcastEvent$Type: org.jitsi.meet.sdk.BroadcastEvent$Type CONFERENCE_TERMINATED
com.facebook.react.views.textinput.ReactTextInputManager: void setLetterSpacing(com.facebook.react.views.textinput.ReactEditText,float)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.webrtc.Size: Size(int,int)
org.jitsi.meet.R$id: int showCustom
okhttp3.internal.http2.Hpack$Reader: void clearDynamicTable()
okhttp3.internal.http2.Http2: byte TYPE_PING
okhttp3.internal.cache2.Relay$RelaySource: void close()
org.webrtc.TextureBufferImpl: org.webrtc.TextureBufferImpl applyTransformMatrix(android.graphics.Matrix,int,int,int,int)
org.webrtc.MediaStream: void removeVideoTrack(long)
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder customClientBuilder
com.horcrux.svg.R$attr: int buttonStyleSmall
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setMessagingEnabled(boolean)
okhttp3.internal.ws.RealWebSocket: void checkResponse(okhttp3.Response)
com.facebook.react.views.viewpager.ReactViewPagerManager: void setScrollEnabled(com.facebook.react.views.viewpager.ReactViewPager,boolean)
okhttp3.ConnectionPool: ConnectionPool()
org.jitsi.meet.sdk.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
com.facebook.react.fabric.ReactNativeConfig: int getInt64(java.lang.String)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setEllipsizeMode(com.facebook.react.views.text.ReactTextView,java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(android.view.View,float)
okhttp3.MultipartBody
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
okhttp3.internal.http2.Http2Connection$6: void execute()
com.dropbox.core.v2.team.ListMemberDevicesErrorException
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator
com.google.gson.reflect.TypeToken: java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class)
org.webrtc.PeerConnection$RTCConfiguration: boolean audioJitterBufferFastAccelerate
com.google.android.gms.internal.measurement.zzcd$zzh: com.google.android.gms.internal.measurement.zzid zze
okhttp3.internal.http2.Http2Connection: int OKHTTP_CLIENT_WINDOW_SIZE
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean)
org.webrtc.SurfaceViewRenderer: void surfaceCreated(android.view.SurfaceHolder)
org.jitsi.meet.R$attr: int actionModePasteDrawable
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionBar
okhttp3.internal.http2.Hpack$Reader: void insertIntoDynamicTable(int,okhttp3.internal.http2.Header)
org.webrtc.MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl: void stop()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3
org.jitsi.meet.sdk.R$styleable: int ActionBar_contentInsetEnd
com.horcrux.svg.R$styleable: int[] GradientColorItem
org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStateCallback: void onWebRtcAudioTrackStop()
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_CENTER
okhttp3.internal.ws.WebSocketReader: okhttp3.internal.ws.WebSocketReader$FrameCallback frameCallback
com.facebook.react.devsupport.DevInternalSettings: void setBundleDeltasEnabled(boolean)
org.webrtc.HardwareVideoEncoderFactory: boolean enableIntelVp8Encoder
org.jitsi.meet.sdk.R$color: int error_color_material_light
com.facebook.yoga.YogaDimension: com.facebook.yoga.YogaDimension valueOf(java.lang.String)
org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordSamplesReadyCallback
com.facebook.react.bridge.ReactContext: void runOnJSQueueThread(java.lang.Runnable)
androidx.fragment.app.FragmentActivity: java.lang.String REQUEST_FRAGMENT_WHO_TAG
org.jitsi.meet.R$string: int abc_searchview_description_submit
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: java.lang.String MODULE_ID
okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)
org.jitsi.meet.R$raw: int lang_mainsv
com.facebook.react.bridge.Arguments$1: int size()
org.webrtc.RtpTransceiver$RtpTransceiverDirection: org.webrtc.RtpTransceiver$RtpTransceiverDirection SEND_ONLY
com.facebook.react.devsupport.DevServerHelper$5: boolean doSync()
org.jitsi.meet.sdk.R$attr: int dropdownListPreferredItemHeight
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getDirectEventNamesResolver()
okio.Buffer$UnsafeCursor: Buffer$UnsafeCursor()
okhttp3.Cookie: boolean domainMatch(java.lang.String,java.lang.String)
org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStateCallback
org.jitsi.meet.sdk.R$styleable: int MenuView_android_windowAnimationStyle
okio.Buffer: boolean exhausted()
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableCompat_android_dither
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Integer stunCandidateKeepaliveIntervalMs
org.jitsi.meet.sdk.R$color: int common_google_signin_btn_text_dark_default
com.facebook.react.views.image.ReactImageView: void setSource(com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.R$id: int fps_text
org.webrtc.VideoEncoder$BitrateAllocation
org.webrtc.NetworkMonitor: void access$300(org.webrtc.NetworkMonitor,long)
org.jitsi.meet.R$bool: R$bool()
org.jitsi.meet.R$anim: int catalyst_slide_down
org.webrtc.audio.WebRtcAudioTrack: android.media.AudioAttributes$Builder applyAttributesOnQOrHigher(android.media.AudioAttributes$Builder,android.media.AudioAttributes)
org.jitsi.meet.R$styleable: int AppCompatTheme_dialogCornerRadius
okio.GzipSink: boolean closed
org.jitsi.meet.sdk.R$dimen: int abc_panel_menu_list_width
com.facebook.react.devsupport.DevSupportManagerImpl$19: void run()
org.webrtc.voiceengine.WebRtcAudioTrack: android.media.AudioTrack createAudioTrackOnLollipopOrHigher(int,int,int)
com.facebook.react.devsupport.DevLoadingViewController: void setDevLoadingEnabled(boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void initialize()
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
co.apptailor.googlesignin.RNGoogleSigninButtonViewManager: java.lang.String getName()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_DrawerArrowToggle
com.horcrux.svg.R$layout: int abc_tooltip
com.horcrux.svg.R$attr: int layout
com.horcrux.svg.R$styleable: int TextAppearance_fontVariationSettings
okhttp3.internal.connection.StreamAllocation: void noNewStreams()
com.facebook.react.devsupport.DevServerHelper: java.lang.String createSymbolicateURL(java.lang.String)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$1: java.lang.Object createFromParcel(android.os.Parcel)
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.PointerEvents getPointerEvents()
org.jitsi.meet.R$attr: int contentDescription
org.jitsi.meet.R$id: int on
com.google.android.gms.internal.measurement.zzle: com.google.android.gms.internal.measurement.zzle[] values()
org.jitsi.meet.sdk.JitsiMeetFragment: void onDestroy()
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
org.webrtc.PeerConnection$ContinualGatheringPolicy: org.webrtc.PeerConnection$ContinualGatheringPolicy[] values()
org.jitsi.meet.sdk.R$attr: int customNavigationLayout
okhttp3.Cache: int writeSuccessCount()
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
org.jitsi.meet.sdk.R$attr: int progressBarPadding
org.webrtc.DataChannel: void checkDataChannelExists()
org.webrtc.voiceengine.WebRtcAudioTrack: void logMainParametersExtended()
com.facebook.react.modules.dialog.DialogModule: void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okhttp3.internal.cache.CacheStrategy: okhttp3.Response cacheResponse
com.horcrux.svg.R$layout: int abc_alert_dialog_title_material
org.jitsi.meet.R$id: int icon
org.jitsi.meet.sdk.RNConnectionService: org.jitsi.meet.sdk.RNConnectionService$CallAudioStateListener getCallAudioStateListener()
org.jitsi.meet.sdk.R$string: int summary_description
okhttp3.internal.http2.Http2Stream$FramingSink: void emitFrame(boolean)
org.jitsi.meet.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_END
com.horcrux.svg.R$attr: int switchTextAppearance
org.webrtc.MediaConstraints$KeyValuePair: java.lang.String getKey()
org.jitsi.meet.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
com.facebook.react.bridge.CatalystInstanceImpl: void access$300(com.facebook.react.bridge.CatalystInstanceImpl)
org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode: org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode[] values()
org.jitsi.meet.sdk.R$attr: int actionLayout
org.webrtc.GlGenericDrawer$ShaderType: org.webrtc.GlGenericDrawer$ShaderType[] values()
org.jitsi.meet.R$drawable: int abc_list_selector_background_transition_holo_light
com.facebook.yoga.YogaExperimentalFeature: com.facebook.yoga.YogaExperimentalFeature valueOf(java.lang.String)
org.webrtc.DefaultVideoEncoderFactory
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.jitsi.meet.sdk.R$styleable: int LinearLayoutCompat_android_baselineAligned
okhttp3.HttpUrl: java.net.URI uri()
org.jitsi.meet.sdk.R$id: int tabMode
org.jitsi.meet.R$drawable: int abc_seekbar_track_material
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
org.webrtc.PeerConnection$TcpCandidatePolicy: org.webrtc.PeerConnection$TcpCandidatePolicy[] values()
org.jitsi.meet.sdk.log.JitsiMeetBaseLogHandler: void doLog(int,java.lang.String,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
com.facebook.react.views.image.ReactImageView: void setOverlayColor(int)
com.horcrux.svg.RenderableViewManager: void setOpacity(com.horcrux.svg.VirtualView,float)
com.horcrux.svg.R$styleable: int AppCompatTheme_popupMenuStyle
com.facebook.react.devsupport.DevSupportManagerImpl$21: void onFailure(com.facebook.react.devsupport.JSCHeapCapture$CaptureException)
org.webrtc.audio.WebRtcAudioEffects: boolean isNoiseSuppressorSupported()
okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)
com.facebook.react.bridge.NativeDeltaClient: void reset()
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_ASYNC
org.jitsi.meet.sdk.R$styleable: int ActionBar_popupTheme
org.jitsi.meet.sdk.R$raw: int lang_maineo
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform valueOf(java.lang.String)
org.jitsi.meet.sdk.R$id: int fragment_container_view_tag
com.facebook.react.devsupport.RedBoxDialog$4: void onClick(android.view.View)
org.webrtc.VideoFrame$Buffer: void release()
org.webrtc.audio.WebRtcAudioRecord: android.media.AudioRecord createAudioRecordOnLowerThanM(int,int,int,int,int)
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.Class getShadowNodeClass()
org.webrtc.Camera1Session: org.webrtc.SurfaceTextureHelper surfaceTextureHelper
org.webrtc.CameraCapturer: android.os.Handler cameraThreadHandler
org.webrtc.AndroidVideoDecoder: org.webrtc.VideoCodecStatus releaseInternal()
org.jitsi.meet.R$style: int Base_V28_Theme_AppCompat_Light
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action: org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action valueOf(java.lang.String)
org.jitsi.meet.R$color: int common_google_signin_btn_text_light
okio.RealBufferedSink: java.io.OutputStream outputStream()
org.webrtc.PeerConnection$RtcpMuxPolicy: org.webrtc.PeerConnection$RtcpMuxPolicy valueOf(java.lang.String)
okio.RealBufferedSource$1: RealBufferedSource$1(okio.RealBufferedSource)
org.jitsi.meet.sdk.log.JitsiMeetLogger: void d(java.lang.Throwable)
okio.Buffer: long indexOf(byte)
okio.Buffer: java.lang.String readUtf8LineStrict()
org.webrtc.VideoEncoder
okio.AsyncTimeout$2: void close()
org.jitsi.meet.sdk.BaseReactView: java.util.Set views
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_START
org.jitsi.meet.BuildConfig: java.lang.String APPLICATION_ID
com.horcrux.svg.R$style: R$style()
com.facebook.react.modules.core.Timing: com.facebook.react.modules.core.Timing$IdleFrameCallback mIdleFrameCallback
org.jitsi.meet.sdk.R$attr: int textAppearanceListItemSecondary
org.webrtc.GlTextureFrameBuffer: void release()
okio.Timeout$1: Timeout$1()
org.webrtc.PeerConnection$SignalingState: PeerConnection$SignalingState(java.lang.String,int)
com.facebook.react.modules.storage.AsyncStorageModule: java.lang.String NAME
org.jitsi.meet.sdk.R$styleable: int SearchView_android_inputType
org.webrtc.NetworkMonitorAutoDetect$NetworkState: int underlyingNetworkSubtypeForVpn
okio.RealBufferedSource: long readDecimalLong()
org.jitsi.meet.R$styleable: int MenuItem_android_title
org.jitsi.meet.sdk.R$id: int jitsiFragment
org.webrtc.VideoEncoder$Settings: int height
okio.ByteString: okio.ByteString EMPTY
org.webrtc.PeerConnection: org.webrtc.RtpTransceiver addTransceiver(org.webrtc.MediaStreamTrack$MediaType,org.webrtc.RtpTransceiver$RtpTransceiverInit)
org.jitsi.meet.sdk.R$attr: int scopeUris
com.calendarevents.CalendarEvents: void requestCalendarReadWritePermission(com.facebook.react.bridge.Promise)
org.webrtc.voiceengine.WebRtcAudioManager: int DEFAULT_FRAME_PER_BUFFER
com.horcrux.svg.R$styleable: int Toolbar_collapseContentDescription
org.webrtc.voiceengine.WebRtcAudioManager: int nativeChannels
com.facebook.react.devsupport.DevSupportManagerImpl: android.util.Pair processErrorCustomizers(android.util.Pair)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_Spinner_Underlined
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_INFRA_PACKAGE_END
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Button
com.reactnativecommunity.webview.RNCWebViewManager: void setSaveFormDataDisabled(android.webkit.WebView,boolean)
org.webrtc.HardwareVideoEncoderFactory: org.webrtc.EglBase14$Context sharedContext
org.jitsi.meet.R$styleable: int AlertDialog_android_layout
okhttp3.internal.http2.Hpack$Reader: int dynamicTableIndex(int)
com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatus
com.facebook.react.uimanager.events.ReactEventEmitter: void register(int,com.facebook.react.uimanager.events.RCTEventEmitter)
com.facebook.react.modules.storage.AsyncStorageModule: void clear(com.facebook.react.bridge.Callback)
org.jitsi.meet.R$color: int secondary_text_default_material_dark
com.horcrux.svg.R$style: int Widget_AppCompat_RatingBar_Indicator
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode valueOf(java.lang.String)
org.jitsi.meet.R$drawable: int abc_list_divider_material
org.webrtc.CryptoOptions$Builder: CryptoOptions$Builder(org.webrtc.CryptoOptions$1)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzap
com.horcrux.svg.SvgViewManager: void onDropViewInstance(com.facebook.react.views.view.ReactViewGroup)
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher
com.facebook.react.devsupport.interfaces.DevSupportManager: void setHotModuleReplacementEnabled(boolean)
org.webrtc.RtpTransceiver$RtpTransceiverDirection: org.webrtc.RtpTransceiver$RtpTransceiverDirection SEND_RECV
com.facebook.react.modules.camera.ImageEditingManager: boolean access$200(java.lang.String)
okio.Okio$2: okio.Timeout timeout()
org.webrtc.VideoFrame$I420Buffer: int getStrideV()
com.horcrux.svg.R$drawable: int abc_ic_go_search_api_material
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider)
okhttp3.RealCall$AsyncCall: okhttp3.Request request()
org.jitsi.meet.sdk.JitsiMeetActivity: void onActivityResult(int,int,android.content.Intent)
okhttp3.internal.JavaNetHeaders$1: int compare(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
org.webrtc.TextureBufferImpl: android.os.Handler getToI420Handler()
org.webrtc.CameraCapturer: org.webrtc.CameraCapturer$SwitchState switchState
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_GCM_SHA384
okhttp3.internal.http2.Header$Listener: void onHeaders(okhttp3.Headers)
org.jitsi.meet.sdk.R$id: int italic
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionModeBackground
org.webrtc.SurfaceTextureHelper: boolean isTextureInUse
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_overlayImage
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
org.jitsi.meet.sdk.R$attr: int titleMarginTop
com.horcrux.svg.R$styleable: int Toolbar_contentInsetEndWithActions
com.google.android.gms.internal.measurement.zzbv$zzb: com.google.android.gms.internal.measurement.zzbv$zzb zzl
com.facebook.react.views.text.ReactTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.webrtc.RtpTransceiver: long nativeRtpTransceiver
okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)
org.jitsi.meet.sdk.R$raw: int node_modules_cssselect_lib_procedure
org.jitsi.meet.R$styleable: int ActionMode_subtitleTextStyle
com.google.firebase.crashlytics.internal.common.DeliveryMechanism: com.google.firebase.crashlytics.internal.common.DeliveryMechanism[] values()
org.jitsi.meet.sdk.R$dimen: int abc_list_item_height_material
com.horcrux.svg.RenderableView: void setId(int)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: CatalystInstanceImpl$1$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1$1)
com.google.android.gms.internal.measurement.zzca$zza: int zzg
okhttp3.internal.connection.RealConnection: okhttp3.internal.http2.Http2Connection http2Connection
org.webrtc.YuvConverter: java.lang.String FRAGMENT_SHADER
org.jitsi.meet.sdk.OngoingConferenceTracker
org.webrtc.PeerConnection$RTCConfiguration: int audioJitterBufferMaxPackets
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Body1
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
com.google.android.gms.internal.measurement.zzbv$zzb: com.google.android.gms.internal.measurement.zzbv$zzd zzh
com.facebook.react.modules.permissions.PermissionsModule
okio.Timeout$1: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
com.facebook.react.modules.datepicker.DatePickerDialogModule
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData mHybridData
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean isOnThread()
com.facebook.react.devsupport.JSDebuggerWebSocketClient: okhttp3.OkHttpClient mHttpClient
org.webrtc.VideoSource: java.lang.Object access$100(org.webrtc.VideoSource)
com.facebook.react.uimanager.ViewManager: java.lang.Object updateLocalData(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.ReactStylesDiffMap)
com.facebook.react.uimanager.BaseViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.ReadableNativeArray: java.util.ArrayList toArrayList()
org.webrtc.MediaCodecWrapper: android.view.Surface createInputSurface()
androidx.fragment.app.Fragment: void initState()
org.webrtc.HardwareVideoEncoder: java.lang.Integer yuvColorFormat
org.webrtc.NetworkMonitor: org.webrtc.NetworkChangeDetector networkChangeDetector
com.facebook.react.uimanager.LayoutShadowNode: void setAlignItems(java.lang.String)
org.webrtc.SessionDescription$Type: org.webrtc.SessionDescription$Type[] $VALUES
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] values()
okhttp3.internal.http2.Http2Stream$FramingSink: void close()
org.webrtc.VideoCapturer: void stopCapture()
org.jitsi.meet.sdk.R$xml: R$xml()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_END
com.facebook.react.views.viewpager.ReactViewPagerManager: void setPageMargin(com.facebook.react.views.viewpager.ReactViewPager,float)
org.jitsi.meet.R$styleable: int ActionBar_progressBarStyle
org.webrtc.voiceengine.WebRtcAudioRecord: void logMainParametersExtended()
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onBridgeDestroyed()
org.webrtc.audio.WebRtcAudioTrack: boolean startPlayout()
org.jitsi.meet.R$layout: int notification_template_custom_big
com.facebook.react.devsupport.DevSupportManagerFactory: com.facebook.react.devsupport.interfaces.DevSupportManager create(android.content.Context,com.facebook.react.devsupport.ReactInstanceManagerDevHelper,java.lang.String,boolean,com.facebook.react.devsupport.RedBoxHandler,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,int,java.util.Map)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
okio.RealBufferedSink: okio.Buffer buffer()
org.jitsi.meet.sdk.R$dimen: int abc_action_button_min_width_material
com.facebook.react.devsupport.DevServerHelper$1$2: DevServerHelper$1$2(com.facebook.react.devsupport.DevServerHelper$1)
okio.BufferedSink: okio.BufferedSink emitCompleteSegments()
org.jitsi.meet.R$attr: int height
com.learnium.RNDeviceInfo.RNDeviceModule: void getIncremental(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.DynamicFromMap$1: DynamicFromMap$1()
org.webrtc.voiceengine.WebRtcAudioUtils: java.lang.String modeToString(int)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDisableIntervalMomentum(boolean)
org.webrtc.AndroidVideoDecoder: org.webrtc.VideoCodecStatus initDecode(org.webrtc.VideoDecoder$Settings,org.webrtc.VideoDecoder$Callback)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setDecelerationRate(float)
org.jitsi.meet.R$attr: int dropdownListPreferredItemHeight
org.webrtc.DtmfSender: void checkDtmfSenderExists()
com.horcrux.svg.SvgView: java.util.Map mDefinedTemplates
org.jitsi.meet.sdk.R$id: int parentPanel
org.jitsi.meet.sdk.R$styleable: int ActionBar_logo
org.jitsi.meet.R$styleable: int MenuItem_iconTintMode
org.jitsi.meet.R$style: int Theme_AppCompat_CompactMenu
org.webrtc.MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl: void configure(android.media.MediaFormat,android.view.Surface,android.media.MediaCrypto,int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMinimumSessionDuration(long)
org.jitsi.meet.R$attr: int titleTextAppearance
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_SeekBar
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_PONG
org.webrtc.GlRectDrawer: GlRectDrawer()
com.horcrux.svg.R$style: int redboxButton
org.webrtc.PeerConnection$BundlePolicy: org.webrtc.PeerConnection$BundlePolicy[] values()
com.facebook.react.bridge.JavaMethodWrapper$7: JavaMethodWrapper$7()
okhttp3.internal.cache.DiskLruCache$Entry: java.io.File[] cleanFiles
org.webrtc.audio.WebRtcAudioEffects
okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setLegacyRequestDisallowInterceptTouchEventEnabled(boolean)
org.jitsi.meet.sdk.RNConnectionService: void reportCallFailed(java.lang.String)
org.jitsi.meet.sdk.R$attr: int initialActivityCount
okhttp3.internal.cache2.Relay: Relay(java.io.RandomAccessFile,okio.Source,long,okio.ByteString,long)
org.webrtc.HardwareVideoEncoder: int MAX_VIDEO_FRAMERATE
org.jitsi.meet.R$styleable: int FontFamilyFont_android_fontStyle
com.facebook.react.devsupport.DevSupportManagerImpl$18: com.facebook.react.devsupport.DevSupportManagerImpl this$0
org.webrtc.PeerConnectionFactory$InitializationOptions: boolean enableInternalTracer
com.dropbox.core.NetworkIOException
org.jitsi.meet.R$color: int error_color_material_dark
com.facebook.react.animated.NativeAnimatedModule: void stopListeningToAnimatedNodeValue(int)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternUnits(com.horcrux.svg.PatternView,int)
timber.log.Timber$Tree: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])
org.jitsi.meet.sdk.R$styleable: int ActionBar_background
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Display4
okhttp3.RequestBody$1: void writeTo(okio.BufferedSink)
org.webrtc.EglBase14Impl: int access$000()
org.jitsi.meet.sdk.JitsiMeetActivityInterface
org.jitsi.meet.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_0
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: boolean getAudioMuted()
okhttp3.internal.connection.ConnectionSpecSelector: ConnectionSpecSelector(java.util.List)
org.webrtc.CryptoOptions$Srtp: boolean getEnableEncryptedRtpHeaderExtensions()
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemHeight
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable,long)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
com.facebook.react.uimanager.UIManagerModule
org.jitsi.meet.sdk.R$styleable: int ActionBar_navigationMode
org.jitsi.meet.sdk.R$style: int Base_Animation_AppCompat_Tooltip
org.jitsi.meet.R$styleable: int Spinner_popupTheme
com.horcrux.svg.R$attr: int titleMargin
com.facebook.react.uimanager.LayoutShadowNode: void setBorderWidths(int,float)
org.jitsi.meet.sdk.R$drawable: int btn_radio_on_mtrl
com.google.android.gms.internal.measurement.zzbv$zzf: int zzd
okhttp3.Cache$2: okhttp3.Cache this$0
com.reactnativecommunity.webview.RNCWebViewModule: android.webkit.ValueCallback filePathCallback
org.webrtc.VideoEncoder$Settings: VideoEncoder$Settings(int,int,int,int,int,int,boolean,org.webrtc.VideoEncoder$Capabilities)
com.reactnativecommunity.webview.RNCWebViewModule: boolean needsCameraPermission()
com.horcrux.svg.R$styleable: int DrawerArrowToggle_barLength
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundBottomRight
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String,java.lang.String,boolean)
org.webrtc.voiceengine.WebRtcAudioEffects: boolean isEffectTypeAvailable(java.util.UUID)
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Menu
org.webrtc.VideoFileRenderer$1: void run()
org.webrtc.CameraVideoCapturer$CameraStatistics: int access$102(org.webrtc.CameraVideoCapturer$CameraStatistics,int)
org.webrtc.SurfaceTextureHelper$FrameRefMonitor: void onRetainBuffer(org.webrtc.VideoFrame$TextureBuffer)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
org.webrtc.Logging: void deleteInjectedLoggable()
com.facebook.react.views.modal.ReactModalHostManager: void setAnimationType(com.facebook.react.views.modal.ReactModalHostView,java.lang.String)
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Display4
com.horcrux.svg.RenderableViewManager$TextViewManager: void setInlineSize(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
org.webrtc.EglBase14Impl$Context: android.opengl.EGLContext getRawContext()
com.oney.WebRTCModule.WebRTCModule: org.webrtc.PeerConnection$RTCConfiguration parseRTCConfiguration(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.R$styleable: int AlertDialog_multiChoiceItemLayout
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getTestFlag(com.google.android.gms.internal.measurement.zzw,int)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.react.views.scroll.ReactScrollView: void setEndFillColor(int)
okio.Buffer$1: void write(byte[],int,int)
org.jitsi.meet.sdk.R$drawable: int abc_textfield_default_mtrl_alpha
org.webrtc.WrappedNativeVideoDecoder: org.webrtc.VideoCodecStatus initDecode(org.webrtc.VideoDecoder$Settings,org.webrtc.VideoDecoder$Callback)
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseLegacyStretchBehaviour(long,boolean)
okio.Buffer: void clear()
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String NAME
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String)
okio.Buffer: okio.Buffer$UnsafeCursor readAndWriteUnsafe()
com.facebook.react.bridge.LifecycleEventListener: void onHostResume()
com.facebook.react.devsupport.DisabledDevSupportManager: void onNewReactContextCreated(com.facebook.react.bridge.ReactContext)
com.horcrux.svg.R$dimen: int abc_edit_text_inset_horizontal_material
org.jitsi.meet.sdk.R$dimen: int abc_text_size_menu_header_material
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink)
com.facebook.react.views.text.ReactTextInlineImageShadowNode
org.jitsi.meet.sdk.R$drawable: int abc_ic_menu_cut_mtrl_alpha
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ActivityChooserView
org.jitsi.meet.sdk.R$styleable: int TextAppearance_fontVariationSettings
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getValue(java.lang.String)
org.jitsi.meet.R$attr: int roundTopLeft
org.webrtc.MediaCodecVideoDecoderFactory
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
okhttp3.internal.cache.DiskLruCache: void setMaxSize(long)
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection[] values()
com.facebook.react.devsupport.BundleDownloader$BundleInfo: int access$502(com.facebook.react.devsupport.BundleDownloader$BundleInfo,int)
okhttp3.internal.cache2.Relay: okio.Source newSource()
com.facebook.react.uimanager.LayoutShadowNode: void setMaxWidth(com.facebook.react.bridge.Dynamic)
org.webrtc.NV12Buffer
org.jitsi.meet.R$string: int abc_shareactionprovider_share_with_application
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
org.jitsi.meet.sdk.ConnectionService: java.lang.String TAG
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Body2
org.webrtc.audio.WebRtcAudioEffects: android.media.audiofx.NoiseSuppressor ns
org.jitsi.meet.R$drawable: int notification_icon_background
org.webrtc.RtpTransceiver: org.webrtc.MediaStreamTrack$MediaType nativeGetMediaType(long)
okhttp3.internal.http2.Http2: okio.ByteString CONNECTION_PREFACE
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: java.lang.Boolean access$902(org.jitsi.meet.sdk.JitsiMeetConferenceOptions,java.lang.Boolean)
okhttp3.MediaType: okhttp3.MediaType get(java.lang.String)
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Toolbar
org.jitsi.meet.sdk.R$id: int radio
com.facebook.react.views.slider.ReactSliderManager: void setMinimumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
com.facebook.react.bridge.ModuleHolder: com.facebook.react.module.model.ReactModuleInfo mReactModuleInfo
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ListView_DropDown
com.oney.WebRTCModule.WebRTCModule: org.webrtc.PeerConnection getPeerConnection(int)
org.webrtc.SurfaceViewRenderer: void setScalingType(org.webrtc.RendererCommon$ScalingType,org.webrtc.RendererCommon$ScalingType)
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.interfaces.DevBundleDownloadListener mBundleDownloadListener
okhttp3.internal.ws.WebSocketWriter: void writePong(okio.ByteString)
org.webrtc.VideoSource: org.webrtc.CapturerObserver capturerObserver
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_ActionBar_TabView
org.jitsi.meet.sdk.R$styleable: int TextAppearance_android_textStyle
okio.ForwardingSource: okio.Source delegate
com.facebook.react.devsupport.DevSupportManagerImpl$ExceptionLogger
org.jitsi.meet.R$styleable: int AppCompatImageView_tint
org.webrtc.voiceengine.WebRtcAudioTrack: void logBufferSizeInFrames()
org.jitsi.meet.R$color: int abc_search_url_text_selected
com.facebook.react.devsupport.DevSupportManagerImpl$9$1: com.facebook.react.devsupport.DevSupportManagerImpl$9 this$1
okio.BufferedSource: byte readByte()
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType valueOf(java.lang.String)
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setFy(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundAsCircle
okhttp3.internal.http2.Http2Connection: boolean $assertionsDisabled
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionBarPopupTheme
com.horcrux.svg.RenderableViewManager$PatternManager: RenderableViewManager$PatternManager()
com.facebook.react.views.text.ReactTextViewManager: ReactTextViewManager()
okhttp3.internal.http2.Http2Reader: void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int)
com.dropbox.core.android.DropboxParseException
okhttp3.internal.http2.Settings: Settings()
org.webrtc.Camera2Capturer: void changeCaptureFormat(int,int,int)
org.jitsi.meet.sdk.R$integer: int google_play_services_version
com.facebook.react.devsupport.interfaces.DevSupportManager: void hideRedboxDialog()
com.horcrux.svg.R$styleable: int[] DrawerArrowToggle
com.horcrux.svg.R$color: int primary_text_default_material_dark
org.webrtc.audio.AudioDeviceModule: long getNativeAudioDeviceModulePointer()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread(java.lang.String)
com.horcrux.svg.R$color: int abc_search_url_text_normal
org.jitsi.meet.sdk.R$attr: int colorScheme
com.facebook.react.views.art.ARTVirtualNode
org.jitsi.meet.R$style: int TextAppearance_Compat_Notification_Title
com.facebook.react.bridge.ReadableType
com.zmxv.RNSound.RNSoundModule: void stop(java.lang.Double,com.facebook.react.bridge.Callback)
org.jitsi.meet.R$styleable: int LinearLayoutCompat_android_orientation
org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger: android.media.AudioManager access$000(org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger)
okio.ForwardingSink: okio.Sink delegate
org.webrtc.CameraEnumerationAndroid: void reportCameraResolution(org.webrtc.Histogram,org.webrtc.Size)
org.jitsi.meet.sdk.R$attr: int roundingBorderWidth
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Body1
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.ReactInstanceManagerDevHelper mReactInstanceManagerHelper
org.jitsi.meet.sdk.R$drawable: int btn_radio_off_mtrl
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$assetUrl
com.facebook.react.views.textinput.ReactTextInputManager: void setOnScroll(com.facebook.react.views.textinput.ReactEditText,boolean)
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Title_Inverse
okhttp3.internal.http.RetryAndFollowUpInterceptor: java.lang.Object callStackTrace
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
org.webrtc.VideoTrack: void addSink(org.webrtc.VideoSink)
com.google.android.gms.internal.measurement.zzcd$zza: com.google.android.gms.internal.measurement.zzcd$zza zzh
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
org.webrtc.Camera2Session$CaptureSessionCallback
org.webrtc.SessionDescription$Type
androidx.fragment.app.Fragment: boolean mRestored
com.facebook.react.devsupport.DevServerHelper$2: java.lang.Object doInBackground(java.lang.Object[])
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setOpacity(android.view.View,float)
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
okhttp3.internal.tls.DistinguishedNameParser: int pos
com.horcrux.svg.R$styleable: int StateListDrawable_android_visible
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long mStackSize
com.horcrux.svg.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
org.webrtc.ThreadUtils$ThreadChecker: void detachThread()
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.devsupport.DevServerHelper$OnServerContentChangeListener mOnServerContentChangeListener
org.webrtc.PeerConnection$IceServer$Builder: java.lang.String hostname
okhttp3.internal.http2.Settings
org.webrtc.VideoSource$AspectRatio: org.webrtc.VideoSource$AspectRatio UNDEFINED
androidx.appcompat.widget.FitWindowsFrameLayout
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
org.jitsi.meet.sdk.LogBridgeModule: java.lang.String getName()
okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImagePadding(com.facebook.react.views.textinput.ReactEditText,int)
okhttp3.internal.http.HttpHeaders
org.jitsi.meet.sdk.R$attr: int popupWindowStyle
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner
org.jitsi.meet.sdk.BroadcastEvent$Type: java.lang.String PARTICIPANTS_INFO_RETRIEVED_NAME
org.jitsi.meet.R$id: int accessibility_custom_action_18
org.webrtc.RtpParameters$Codec: RtpParameters$Codec(int,java.lang.String,org.webrtc.MediaStreamTrack$MediaType,java.lang.Integer,java.lang.Integer,java.util.Map)
com.facebook.react.modules.sound.SoundManagerModule: java.lang.String NAME
okio.ByteString: okio.ByteString hmacSha1(okio.ByteString)
org.webrtc.audio.VolumeLogger: void start()
org.jitsi.meet.R$raw: int lang_languagesoc
com.horcrux.svg.R$styleable: int Spinner_android_dropDownWidth
org.webrtc.RtpParameters$Rtcp
com.facebook.react.modules.systeminfo.AndroidInfoModule: void invalidate()
org.jitsi.meet.sdk.R$styleable: int MenuItem_showAsAction
org.webrtc.VideoCodecMimeType: java.lang.String mimeType
com.horcrux.svg.SvgView: void setId(int)
com.horcrux.svg.TextPathView: void setStartOffset(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.art.ARTTextShadowNode: void setFrame(com.facebook.react.bridge.ReadableMap)
com.google.android.gms.internal.measurement.zzbv$zzc: com.google.android.gms.internal.measurement.zzjp zzi
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: com.facebook.react.bridge.ReactContext this$0
okhttp3.internal.ws.RealWebSocket$PingRunnable: void run()
org.webrtc.GlGenericDrawer: void drawRgb(int,float[],int,int,int,int,int,int)
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.uimanager.RootViewManager: android.view.ViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.jitsi.meet.sdk.R$string: int catalyst_change_bundle_location
okhttp3.CacheControl: CacheControl(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String)
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()
com.facebook.react.bridge.CatalystInstance
com.facebook.react.modules.appregistry.AppRegistry: void startHeadlessTask(int,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.UiThreadUtil: void assertOnUiThread()
com.horcrux.svg.SvgView$Events: com.horcrux.svg.SvgView$Events EVENT_DATA_URL
okhttp3.HttpUrl: java.lang.String username()
org.jitsi.meet.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
org.webrtc.EglRenderer: java.lang.Object statisticsLock
com.horcrux.svg.R$color: int abc_tint_btn_checkable
androidx.fragment.app.Fragment: java.lang.Boolean mIsPrimaryNavigationFragment
com.learnium.RNDeviceInfo.RNDeviceModule: com.learnium.RNDeviceInfo.resolver.DeviceTypeResolver deviceTypeResolver
org.webrtc.VideoFrame$TextureBuffer
org.jitsi.meet.R$attr: int listPreferredItemPaddingRight
androidx.fragment.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
org.jitsi.meet.sdk.net.NAT64AddrInfoModule: long INFO_LIFETIME
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] importKeys()
org.jitsi.meet.sdk.R$id: int content
org.webrtc.TextureBufferImpl: int getUnscaledHeight()
org.jitsi.meet.R$dimen: int abc_dialog_min_width_minor
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connect(int,com.facebook.react.bridge.Inspector$RemoteConnection)
org.jitsi.meet.R$styleable: int AppCompatTextView_fontFamily
org.webrtc.RtpTransceiver: org.webrtc.RtpTransceiver$RtpTransceiverDirection nativeDirection(long)
org.jitsi.meet.sdk.R$style: int Base_V23_Theme_AppCompat_Light
com.google.android.gms.measurement.AppMeasurement: void logEventInternal(java.lang.String,java.lang.String,android.os.Bundle)
org.jitsi.meet.sdk.R$attr: int actionMenuTextColor
androidx.versionedparcelable.ParcelImpl
org.webrtc.EncodedImage: int getEncodedHeight()
com.horcrux.svg.R$styleable: int ActionBar_contentInsetLeft
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.jitsi.meet.R$dimen: int notification_big_circle_margin
org.jitsi.meet.sdk.R$layout: int custom_dialog
com.ocetnik.timer.BackgroundTimerModule: com.facebook.react.bridge.ReactContext access$100(com.ocetnik.timer.BackgroundTimerModule)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_END
okhttp3.internal.ws.RealWebSocket: int receivedPongCount()
com.facebook.react.bridge.ReadableMap: java.lang.String getString(java.lang.String)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA256
okhttp3.internal.connection.RouteSelector: okhttp3.Call call
org.webrtc.NetworkChangeDetectorFactory
com.facebook.react.uimanager.UIManagerModule: java.lang.String NAME
org.jitsi.meet.sdk.R$attr: int spinnerStyle
org.jitsi.meet.R$styleable: int SimpleDraweeView_roundBottomLeft
okhttp3.internal.io.FileSystem: void rename(java.io.File,java.io.File)
com.facebook.react.bridge.ModuleHolder: boolean mIsCreating
org.webrtc.DataChannel$Init: java.lang.String protocol
org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode: org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode AUDIO_TRACK_START_EXCEPTION
okhttp3.internal.http2.Http2Connection: void pushHeadersLater(int,java.util.List,boolean)
org.webrtc.SurfaceViewRenderer
com.horcrux.svg.R$style: int Widget_AppCompat_ProgressBar_Horizontal
org.webrtc.PeerConnection$SdpSemantics
com.facebook.react.fabric.ComponentFactoryDelegate: com.facebook.jni.HybridData mHybridData
com.facebook.yoga.YogaOverflow: com.facebook.yoga.YogaOverflow valueOf(java.lang.String)
org.webrtc.GlRectDrawer$1
com.facebook.react.devsupport.BundleDownloader: void populateBundleInfo(java.lang.String,okhttp3.Headers,com.facebook.react.devsupport.BundleDeltaClient$ClientType,com.facebook.react.devsupport.BundleDownloader$BundleInfo)
com.horcrux.svg.RenderableViewManager: com.horcrux.svg.RenderableViewManager$SVGClass svgClass
org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode: org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode valueOf(java.lang.String)
com.facebook.react.uimanager.events.ReactEventEmitter: java.lang.String TAG
com.horcrux.svg.RenderableViewManager: void setMarkerEnd(com.horcrux.svg.VirtualView,java.lang.String)
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Large_Inverse
org.jitsi.meet.sdk.R$styleable: int ActionBar_hideOnContentScroll
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String)
okio.InflaterSource: okio.Timeout timeout()
okhttp3.internal.connection.RouteException: java.io.IOException lastException
org.webrtc.VideoEncoder$ScalingSettings: VideoEncoder$ScalingSettings(int,int)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.security.cert.Certificate[] getServerCertificates()
com.facebook.react.modules.camera.ImageEditingManager: java.lang.String[] EXIF_ATTRIBUTES
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.Object getContent(java.lang.Class[])
org.jitsi.meet.sdk.R$id: int fps_text
com.facebook.react.bridge.CatalystInstanceImpl: boolean mAcceptCalls
okio.InflaterSource
org.webrtc.EglRenderer: java.util.ArrayList frameListeners
com.horcrux.svg.R$color: int abc_secondary_text_material_light
org.webrtc.NetworkMonitor: void nativeNotifyOfNetworkDisconnect(long,long)
okhttp3.Address: okhttp3.CertificatePinner certificatePinner()
org.webrtc.H264Utils: java.lang.String H264_PROFILE_CONSTRAINED_BASELINE
org.jitsi.meet.sdk.R$attr: int activityChooserViewStyle
org.webrtc.CameraCapturer$7: org.webrtc.CameraCapturer this$0
org.webrtc.Predicate$3
com.reactnativecommunity.webview.RNCWebViewManager: void setCacheMode(android.webkit.WebView,java.lang.String)
com.facebook.react.uimanager.LayoutShadowNode: void setCollapsable(boolean)
com.oney.WebRTCModule.WebRTCModule: void peerConnectionGetStatsAsync(int,com.facebook.react.bridge.Promise)
okhttp3.internal.io.FileSystem$1: void delete(java.io.File)
org.jitsi.meet.sdk.R$id: int rn_redbox_line_separator
com.horcrux.svg.R$color: int material_blue_grey_800
androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
org.jitsi.meet.sdk.R$styleable: int MenuItem_android_checked
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: java.lang.String selected
org.webrtc.PeerConnectionFactory: void printStackTrace(org.webrtc.PeerConnectionFactory$ThreadInfo,boolean)
org.webrtc.RendererCommon: android.graphics.Point getDisplaySize(org.webrtc.RendererCommon$ScalingType,float,int,int)
com.google.android.gms.internal.measurement.zzcd$zze: com.google.android.gms.internal.measurement.zzcd$zze zzj
org.jitsi.meet.sdk.net.NAT64AddrInfoModule
okhttp3.internal.ws.RealWebSocket: boolean send(okio.ByteString,int)
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundedCornerRadius
okhttp3.Request: java.lang.String method
com.facebook.react.bridge.JSIModuleProvider: com.facebook.react.bridge.JSIModule get()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder username(java.lang.String)
com.horcrux.svg.R$attr: int viewAspectRatio
com.facebook.react.uimanager.ViewGroupManager: android.view.View getChildAt(android.view.ViewGroup,int)
com.horcrux.svg.SvgViewManager: void setTintColor(com.horcrux.svg.SvgView,java.lang.Integer)
org.jitsi.meet.R$string: int common_google_play_services_unsupported_text
okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine get(okhttp3.Response)
androidx.fragment.app.Fragment: java.lang.Object getHost()
okhttp3.internal.http2.PushObserver$1
org.jitsi.meet.R$attr: int drawableLeftCompat
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView$RNCWebViewBridge
org.jitsi.meet.sdk.BroadcastEvent$Type: java.lang.String getAction()
org.jitsi.meet.GoogleServicesHelper: void lambda$initialize$0(org.jitsi.meet.sdk.JitsiMeetActivity,com.google.firebase.dynamiclinks.PendingDynamicLinkData)
okhttp3.internal.http2.Http2Codec: okhttp3.internal.connection.StreamAllocation streamAllocation
org.jitsi.meet.sdk.R$attr: int alertDialogStyle
com.facebook.react.views.art.ARTSurfaceViewManager: java.lang.String REACT_CLASS
org.jitsi.meet.sdk.R$attr: int preserveIconSpacing
okio.Okio: okio.Sink blackhole()
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
okhttp3.internal.Internal: okhttp3.internal.Internal instance
org.jitsi.meet.sdk.JitsiMeetActivityInterface: int checkPermission(java.lang.String,int,int)
com.horcrux.svg.R$id: int action_bar_root
org.webrtc.RefCounted: void release()
okhttp3.Cookie: boolean persistent()
org.webrtc.EncodedImage$Builder: org.webrtc.EncodedImage$Builder setEncodedHeight(int)
org.jitsi.meet.R$attr: int viewInflaterClass
com.horcrux.svg.R$id: int up
org.jitsi.meet.R$drawable: int abc_ab_share_pack_mtrl_alpha
okhttp3.CertificatePinner$Pin: boolean equals(java.lang.Object)
org.jitsi.meet.R$color: int material_grey_850
org.jitsi.meet.sdk.ProximityModule
com.facebook.yoga.YogaNative: long jni_YGNodeNew()
org.jitsi.meet.sdk.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
org.jitsi.meet.sdk.JitsiMeetActivity: boolean extraInitialize()
okhttp3.internal.tls.DistinguishedNameParser: java.lang.String quotedAV()
org.webrtc.CameraVideoCapturer$CameraStatistics: int access$000(org.webrtc.CameraVideoCapturer$CameraStatistics)
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NEVER_ASK_AGAIN
com.reactnativecommunity.netinfo.NetInfoModule: void getCurrentState(com.facebook.react.bridge.Promise)
org.jitsi.meet.sdk.R$drawable: int abc_item_background_holo_light
okhttp3.Response: okhttp3.Request request()
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_Light_Dialog_Alert
org.webrtc.EglRenderer$1: EglRenderer$1(org.webrtc.EglRenderer)
okio.BufferedSource: java.lang.String readUtf8LineStrict()
okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,okio.ByteString)
org.webrtc.YuvHelper: void I420Copy(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int)
org.webrtc.RtpTransceiver: boolean isStopped()
com.facebook.react.modules.permissions.PermissionsModule: void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
org.webrtc.VideoFrameDrawer: void drawTexture(org.webrtc.RendererCommon$GlDrawer,org.webrtc.VideoFrame$TextureBuffer,android.graphics.Matrix,int,int,int,int,int,int)
com.google.android.gms.auth.api.signin.internal.SignInHubActivity: SignInHubActivity()
com.oney.WebRTCModule.WebRTCModule: void peerConnectionRemoveStream(java.lang.String,int)
org.jitsi.meet.R$styleable: int StateListDrawableItem_android_drawable
com.facebook.react.views.view.ReactViewManager: void handleHotspotUpdate(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
org.jitsi.meet.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
okhttp3.internal.huc.OkHttpsURLConnection: OkHttpsURLConnection(okhttp3.internal.huc.OkHttpURLConnection)
org.jitsi.meet.sdk.R$attr: int pressedStateOverlayImage
com.facebook.react.devsupport.StackTraceHelper
okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])
org.webrtc.ThreadUtils$3: org.webrtc.ThreadUtils$1CaughtException val$caughtException
com.facebook.react.devsupport.DevServerHelper$1: DevServerHelper$1(com.facebook.react.devsupport.DevServerHelper,com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener,java.lang.String)
com.facebook.react.uimanager.ViewManager: java.lang.String getName()
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
org.jitsi.meet.R$styleable: int AppCompatTheme_listPreferredItemHeight
org.webrtc.VideoFileRenderer: android.os.Handler fileThreadHandler
com.facebook.react.views.textinput.ReactEditText: void setBorderStyle(java.lang.String)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure[] $VALUES
okhttp3.internal.huc.OkHttpURLConnection: boolean connectPending
org.jitsi.meet.sdk.net.NAT64AddrInfo: org.jitsi.meet.sdk.net.NAT64AddrInfo figureOutNAT64AddrInfo(byte[],byte[])
com.facebook.react.modules.core.ExceptionsManagerModule: ExceptionsManagerModule(com.facebook.react.devsupport.interfaces.DevSupportManager)
org.webrtc.VideoCodecType: int VIDEO_CODEC_GENERIC
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getPreviewSdkIntSync()
androidx.fragment.app.Fragment: void setHasOptionsMenu(boolean)
org.jitsi.meet.R$attr
org.jitsi.meet.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
okhttp3.OkHttpClient: java.util.List protocols()
com.facebook.react.bridge.ModuleHolder: java.util.concurrent.atomic.AtomicInteger sInstanceKeyCounter
com.facebook.react.bridge.JSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.calendarevents.CalendarEvents: com.facebook.react.bridge.WritableNativeArray calendarAllowedAvailabilitiesFromDBString(java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostPause()
org.jitsi.meet.sdk.R$dimen: int highlight_alpha_material_colored
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType valueOf(java.lang.String)
okio.RealBufferedSink: boolean closed
org.webrtc.Logging$TraceLevel: org.webrtc.Logging$TraceLevel TRACE_DEFAULT
org.jitsi.meet.R$id: int middle
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_actualImageUri
com.horcrux.svg.BuildConfig: BuildConfig()
org.jitsi.meet.sdk.R$attr: int textAppearancePopupMenuHeader
org.webrtc.CameraVideoCapturer$CameraStatistics: int access$100(org.webrtc.CameraVideoCapturer$CameraStatistics)
com.horcrux.svg.R$attr: int roundingBorderPadding
okhttp3.Cache: void remove(okhttp3.Request)
org.webrtc.ThreadUtils$3: ThreadUtils$3(org.webrtc.ThreadUtils$1Result,java.util.concurrent.Callable,org.webrtc.ThreadUtils$1CaughtException,java.util.concurrent.CountDownLatch)
org.webrtc.Camera2Session: int cameraOrientation
org.webrtc.voiceengine.WebRtcAudioUtils: void setDefaultSampleRateHz(int)
com.horcrux.svg.R$styleable: int SwitchCompat_showText
okhttp3.Protocol: okhttp3.Protocol[] values()
com.dropbox.core.v2.teamcommon.MemberSpaceLimitType: com.dropbox.core.v2.teamcommon.MemberSpaceLimitType[] values()
okhttp3.internal.http1.Http1Codec$FixedLengthSink
com.facebook.react.views.art.ARTVirtualNode: void setTransform(com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ActionMode
org.webrtc.audio.WebRtcAudioTrack: long AUDIO_TRACK_THREAD_JOIN_TIMEOUT_MS
org.jitsi.meet.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.RtcCertificatePem getCertificate()
com.horcrux.svg.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String getName()
org.jitsi.meet.sdk.R$style: int ThemeOverlay_AppCompat_DayNight_ActionBar
com.google.firebase.crashlytics.CrashlyticsRegistrar: CrashlyticsRegistrar()
org.jitsi.meet.R$style
org.jitsi.meet.R$dimen: int abc_dialog_padding_material
org.webrtc.voiceengine.WebRtcAudioUtils: java.lang.String TAG
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
com.horcrux.svg.R$dimen: int abc_text_size_menu_material
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect mHitSlopRect
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_31
org.jitsi.meet.sdk.JitsiMeetUserInfo: java.lang.String email
org.webrtc.AndroidVideoDecoder: void reformat(android.media.MediaFormat)
org.jitsi.meet.sdk.R$dimen: int notification_top_pad
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: CatalystInstanceImpl$JSProfilerTraceListener(com.facebook.react.bridge.CatalystInstanceImpl)
org.webrtc.GlGenericDrawer: java.lang.String createFragmentShaderString(java.lang.String,org.webrtc.GlGenericDrawer$ShaderType)
org.jitsi.meet.R$styleable: int TextAppearance_android_shadowDy
com.horcrux.svg.VirtualView: java.lang.String mDisplay
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.facebook.react.ReactRootView: void setIsFabric(boolean)
org.webrtc.MediaStream: java.util.List preservedVideoTracks
com.horcrux.svg.R$styleable: int SimpleDraweeView_viewAspectRatio
org.jitsi.meet.sdk.BroadcastEvent$Type: org.jitsi.meet.sdk.BroadcastEvent$Type PARTICIPANT_JOINED
org.jitsi.meet.sdk.R$dimen: int abc_dialog_list_padding_top_no_title
com.dropbox.core.v2.team.MembersRecoverErrorException
com.facebook.yoga.YogaPositionType
com.horcrux.svg.RenderableViewManager$LinearGradientManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.internal.ws.WebSocketReader: boolean closed
org.webrtc.PeerConnection$AdapterType: org.webrtc.PeerConnection$AdapterType CELLULAR_4G
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.PeerConnectionFactory$Builder setNetworkStatePredictorFactoryFactory(org.webrtc.NetworkStatePredictorFactoryFactory)
org.webrtc.Metrics$HistogramInfo: int max
com.facebook.react.views.view.ReactViewGroup: android.view.View[] mAllChildren
com.horcrux.svg.R$styleable: int LinearLayoutCompat_measureWithLargestChild
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
okhttp3.internal.tls.DistinguishedNameParser: int cur
okhttp3.HttpUrl: int port
org.jitsi.meet.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.google.android.gms.internal.measurement.zzbv$zzd$zza: com.google.android.gms.internal.measurement.zzbv$zzd$zza[] values()
okio.Buffer: long readDecimalLong()
okio.ByteString: int compareTo(java.lang.Object)
com.facebook.react.bridge.WritableNativeArray: void pushString(java.lang.String)
com.horcrux.svg.R$styleable: int MenuView_android_itemTextAppearance
org.webrtc.GlGenericDrawer: void drawYuv(int[],float[],int,int,int,int,int,int)
okio.Base64
androidx.fragment.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)
com.horcrux.svg.R$attr: int windowActionBar
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
org.webrtc.VideoEncoder$Settings: int numberOfSimulcastStreams
org.webrtc.TextureBufferImpl: TextureBufferImpl(int,int,org.webrtc.VideoFrame$TextureBuffer$Type,int,android.graphics.Matrix,android.os.Handler,org.webrtc.YuvConverter,java.lang.Runnable)
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread(java.lang.String)
com.facebook.react.bridge.Inspector$Page: java.lang.String toString()
org.webrtc.VideoCodecInfo: java.lang.String H264_PROFILE_CONSTRAINED_BASELINE
org.webrtc.EglRenderer: long renderTimeNs
okio.RealBufferedSource: void skip(long)
org.webrtc.WrappedNativeVideoDecoder
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
org.webrtc.FileVideoCapturer$VideoReaderY4M: int frameWidth
com.facebook.react.modules.timepicker.TimePickerDialogModule: java.lang.String ARG_MODE
org.webrtc.audio.VolumeLogger$LogVolumeTask: int maxVoiceCallVolume
okhttp3.internal.http2.Http2: java.lang.String formatFlags(byte,byte)
com.facebook.react.devsupport.DevSupportManagerImpl$3: DevSupportManagerImpl$3(com.facebook.react.devsupport.DevSupportManagerImpl)
com.facebook.react.views.picker.ReactDropdownPickerManager: com.facebook.react.views.picker.ReactPicker createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.R$color: int abc_color_highlight_material
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getHeaderField(int)
com.google.android.gms.internal.measurement.zzcd$zzc: com.google.android.gms.internal.measurement.zzcd$zzc zzi
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response)
okhttp3.internal.http2.Http2Reader: void readGoAway(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
org.jitsi.meet.R$raw: int lang_mainet
com.reactnativecommunity.webview.RNCWebViewManager: void setIncognito(android.webkit.WebView,boolean)
okhttp3.Cache$Entry: java.lang.String url
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(java.time.Duration)
com.facebook.react.views.scroll.ReactScrollView: int getMaxScrollY()
org.webrtc.voiceengine.WebRtcAudioUtils: void setWebRtcBasedNoiseSuppressor(boolean)
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String REACT_CLASS
com.horcrux.svg.R$integer: R$integer()
com.horcrux.svg.R$drawable: int abc_vector_test
org.webrtc.IceCandidate
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3: Http2Connection$ReaderRunnable$3(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],okhttp3.internal.http2.Settings)
org.webrtc.PeerConnection$RTCConfiguration: boolean getSurfaceIceCandidatesOnIceTransportTypeChanged()
org.jitsi.meet.sdk.R$attr: int colorButtonNormal
org.jitsi.meet.sdk.JitsiMeet: void showSplashScreen(android.app.Activity)
com.facebook.react.views.textinput.ReactTextInputManager: void setUnderlineColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.dropbox.core.json.JsonReadException
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder setToken(java.lang.String)
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: void nativeToCircleFilter(android.graphics.Bitmap,boolean)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
org.webrtc.WrappedNativeI420Buffer: java.nio.ByteBuffer dataV
org.webrtc.CryptoOptions$Builder: org.webrtc.CryptoOptions createCryptoOptions()
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
com.facebook.react.modules.camera.CameraRollManager: CameraRollManager(com.facebook.react.bridge.ReactApplicationContext)
androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
org.webrtc.VideoProcessor: void onFrameCaptured(org.webrtc.VideoFrame,org.webrtc.VideoProcessor$FrameAdaptationParameters)
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
okhttp3.HttpUrl$Builder: java.lang.String toString()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer)
com.facebook.react.views.view.ReactViewManager: void addView(android.view.ViewGroup,android.view.View,int)
okhttp3.Authenticator$1: Authenticator$1()
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
org.jitsi.meet.R$styleable: int AppCompatTheme_checkboxStyle
com.horcrux.svg.R$layout: int abc_screen_simple_overlay_action_mode
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodeToView(int,int)
okhttp3.Cookie: long expiresAt
org.webrtc.PeerConnection: org.webrtc.PeerConnection$PeerConnectionState nativeConnectionState()
org.webrtc.EglRenderer$FrameListenerAndParams: float scale
androidx.fragment.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getUniqueIdSync()
org.webrtc.CameraCapturer: void startCapture(int,int,int)
org.jitsi.meet.R$raw: int lang_mainja
okhttp3.internal.connection.StreamAllocation: okhttp3.Address address
org.jitsi.meet.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
com.facebook.react.devsupport.JSDebuggerWebSocketClient$JSDebuggerCallback: void onFailure(java.lang.Throwable)
org.webrtc.Camera2Enumerator: java.util.List getSupportedFormats(android.content.Context,java.lang.String)
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
com.facebook.react.bridge.GuardedResultAsyncTask: GuardedResultAsyncTask(com.facebook.react.bridge.ReactContext)
com.calendarevents.CalendarEvents: com.facebook.react.bridge.WritableNativeArray serializeEventCalendars(android.database.Cursor)
org.jitsi.meet.R$style: int Widget_AppCompat_TextView_SpinnerItem
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Display3
com.facebook.react.views.textinput.ReactTextInputManager: void setOnKeyPress(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.modules.core.Timing: boolean mFrameCallbackPosted
com.facebook.react.views.art.ARTShapeShadowNode: void setStrokeDash(com.facebook.react.bridge.ReadableArray)
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Response getResponse(boolean)
com.facebook.react.modules.core.Timing: com.facebook.react.bridge.ReactApplicationContext access$1500(com.facebook.react.modules.core.Timing)
org.jitsi.meet.R$styleable: int Toolbar_titleMarginStart
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void unregisterOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzab)
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
org.jitsi.meet.R$drawable: int btn_radio_on_mtrl
org.webrtc.HardwareVideoEncoder$BusyCount: void waitForZero()
org.jitsi.meet.sdk.BuildConfig: boolean DEBUG
org.jitsi.meet.R$style: int Widget_AppCompat_PopupWindow
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getTagsSync()
org.webrtc.EglRenderer: void postToRenderThread(java.lang.Runnable)
org.webrtc.EglBase10Impl: void createSurface(android.graphics.SurfaceTexture)
org.webrtc.PeerConnection$KeyType
org.jitsi.meet.R$id: int accessibility_custom_action_23
okhttp3.HttpUrl$Builder: java.lang.String INVALID_HOST
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: AndroidPlatform$AndroidCertificateChainCleaner(java.lang.Object,java.lang.reflect.Method)
org.jitsi.meet.sdk.R$string: int abc_activity_chooser_view_see_all
com.facebook.react.devsupport.interfaces.DevSupportManager: void onNewReactContextCreated(com.facebook.react.bridge.ReactContext)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextContentType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
org.jitsi.meet.sdk.AudioModeModule: java.lang.String NAME
org.jitsi.meet.sdk.R$style: int ThemeOverlay_AppCompat_Dialog
org.jitsi.meet.R$id: int disableHome
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
org.jitsi.meet.R$color: int notification_icon_bg_color
com.horcrux.svg.R$color: int dim_foreground_disabled_material_light
org.jitsi.meet.sdk.R$styleable: int MenuView_android_itemBackground
com.facebook.react.uimanager.BaseViewManager: void setTranslateX(android.view.View,float)
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
com.reactnativecommunity.netinfo.NetInfoModule: NetInfoModule(com.facebook.react.bridge.ReactApplicationContext)
org.jitsi.meet.R$layout: int notification_template_part_chronometer
org.jitsi.meet.sdk.R$attr: int buttonTintMode
okhttp3.internal.http2.Http2: byte TYPE_CONTINUATION
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTimedOutEventName
org.jitsi.meet.R$raw: int lang_mainmn
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteSelector$Selection routeSelection
org.jitsi.meet.sdk.R$attr: int listDividerAlertDialog
com.facebook.react.bridge.CatalystInstanceImpl$2: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.horcrux.svg.R$attr: int controlBackground
com.google.firebase.crashlytics.internal.network.HttpMethod: com.google.firebase.crashlytics.internal.network.HttpMethod[] values()
com.facebook.react.bridge.Inspector$RemoteConnection
org.webrtc.TurnCustomizer
org.jitsi.meet.sdk.R$attr: int drawableSize
org.webrtc.audio.WebRtcAudioManager: boolean isLowLatencyOutputSupported(android.content.Context)
org.jitsi.meet.sdk.R$styleable: int TextAppearance_android_textColorLink
org.webrtc.CryptoOptions: org.webrtc.CryptoOptions$Srtp getSrtp()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.react.devsupport.DevSupportManagerImpl$24$2
com.facebook.react.views.art.ARTRenderableViewManager: ARTRenderableViewManager(java.lang.String)
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder(okhttp3.OkHttpClient)
okhttp3.internal.ws.WebSocketProtocol: int B0_MASK_OPCODE
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScript(android.webkit.WebView,java.lang.String)
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX2(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
co.apptailor.googlesignin.RNGoogleSigninModule: com.google.android.gms.auth.api.signin.GoogleSignInClient _apiClient
okio.ForwardingTimeout: okio.Timeout clearTimeout()
org.webrtc.ScreenCapturerAndroid: android.hardware.display.VirtualDisplay access$202(org.webrtc.ScreenCapturerAndroid,android.hardware.display.VirtualDisplay)
okhttp3.EventListener: void responseHeadersEnd(okhttp3.Call,okhttp3.Response)
org.jitsi.meet.R$string: int common_google_play_services_notification_channel_name
com.facebook.react.devsupport.BundleDeltaClient: java.lang.String METRO_DELTA_ID_HEADER
org.webrtc.VideoFrameDrawer: org.webrtc.VideoFrameDrawer$YuvUploader yuvUploader
com.facebook.react.modules.timepicker.TimePickerDialogModule: com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.timepicker.TimePickerDialogModule)
okhttp3.internal.connection.RouteSelector$Selection: okhttp3.Route next()
okio.ForwardingSource
org.webrtc.CryptoOptions$Builder: boolean enableEncryptedRtpHeaderExtensions
org.webrtc.audio.LowLatencyAudioBufferManager: int prevUnderrunCount
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.security.cert.Certificate[] getLocalCertificates()
com.facebook.react.devsupport.interfaces.StackFrame: java.lang.String getMethod()
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundingBorderPadding
org.jitsi.meet.sdk.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionBar_Solid
com.facebook.react.modules.blob.BlobModule: byte[] getBytesFromUri(android.net.Uri)
org.webrtc.Metrics$HistogramInfo: int bucketCount
com.horcrux.svg.RadialGradientView: void setRy(com.facebook.react.bridge.Dynamic)
org.jitsi.meet.sdk.R$attr: int subtitleTextColor
org.jitsi.meet.sdk.R$drawable: int abc_cab_background_top_mtrl_alpha
org.jitsi.meet.R$attr: int preserveIconSpacing
org.jitsi.meet.sdk.R
org.jitsi.meet.R$attr: int viewAspectRatio
org.webrtc.CameraCapturer: int OPEN_CAMERA_TIMEOUT
org.webrtc.VideoFileRenderer: org.webrtc.EglBase eglBase
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
okhttp3.OkUrlFactory$1: int getDefaultPort()
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Display3
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegments(java.lang.String)
com.dropbox.core.v2.team.MembersSetProfileErrorException
okio.RealBufferedSource: java.lang.String readUtf8LineStrict()
okio.Buffer: okio.Buffer writeLong(long)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
org.jitsi.meet.sdk.R$string: int catalyst_reload
com.facebook.react.modules.clipboard.ClipboardModule: java.lang.String getName()
com.facebook.react.devsupport.JSDebuggerWebSocketClient
org.jitsi.meet.R$string: int catalyst_dismiss_button
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRx(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope[] values()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_END
okio.Buffer$UnsafeCursor: int next()
com.horcrux.svg.R$styleable: int AppCompatTheme_ratingBarStyle
com.facebook.react.views.view.ReactViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.devsupport.DevServerHelper$OnServerContentChangeListener: void onServerContentChanged()
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesQueueThread
com.facebook.react.bridge.JsonWriterHelper
org.jitsi.meet.R$id: int action_bar_subtitle
com.dropbox.core.v2.fileproperties.TemplateErrorException
org.jitsi.meet.R$id: int checked
org.jitsi.meet.R$styleable: int AppCompatTheme_toolbarStyle
com.horcrux.svg.RenderableViewManager$LineViewManager: void setX1(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
org.webrtc.audio.WebRtcAudioTrack: int getDefaultUsageAttribute()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.facebook.react.devsupport.DevSupportManagerImpl$28: void run()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_RC4_128_SHA
okhttp3.internal.http2.Http2: java.lang.String[] BINARY
okhttp3.internal.ws.WebSocketReader: okio.Buffer$UnsafeCursor maskCursor
org.webrtc.SurfaceTextureHelper: boolean isQuitting
com.facebook.imagepipeline.memory.BasePool$SizeTooLargeException
org.jitsi.meet.sdk.R$styleable: int TextAppearance_android_shadowDx
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback
okhttp3.CookieJar$1: CookieJar$1()
com.facebook.react.bridge.ModuleHolder: int mInstanceKey
okhttp3.internal.huc.OkHttpsURLConnection: boolean usingProxy()
com.facebook.react.devsupport.BundleDeltaClient
org.jitsi.meet.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
okhttp3.ConnectionSpec: boolean supportsTlsExtensions()
com.horcrux.svg.VirtualView: double getFontSizeFromContext()
org.jitsi.meet.R$style: int Widget_AppCompat_Spinner_DropDown
org.jitsi.meet.sdk.R$attr: int thumbTint
com.facebook.react.modules.camera.ImageStoreManager: int BUFFER_SIZE
com.facebook.react.devsupport.DevSupportManagerImpl: void resetCurrentContext(com.facebook.react.bridge.ReactContext)
com.reactnativecommunity.webview.RNCWebViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$Builder setUseStereoInput(boolean)
org.webrtc.VideoFileRenderer$1: org.webrtc.VideoFileRenderer this$0
org.webrtc.YuvConverter$ShaderCallbacks: float[] vCoeffs
okio.InflaterSource: int bufferBytesHeldByInflater
androidx.fragment.app.Fragment: void performAttach()
okhttp3.internal.http1.Http1Codec$ChunkedSource: void close()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
com.horcrux.svg.R$attr: int autoSizeStepGranularity
org.webrtc.Camera2Session: int getFrameOrientation()
org.jitsi.meet.sdk.R$attr: int navigationContentDescription
org.jitsi.meet.sdk.RNConnectionService: void onCallAudioStateChange(android.telecom.CallAudioState)
com.facebook.react.fabric.ComponentFactoryDelegate
org.webrtc.NetworkMonitor$2: org.webrtc.NetworkMonitor this$0
org.jitsi.meet.R$styleable: int PopupWindow_android_popupAnimationStyle
com.facebook.react.modules.core.ExceptionsManagerModule: void reportException(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.zmxv.RNSound.RNSoundModule: void access$000(com.zmxv.RNSound.RNSoundModule,boolean,java.lang.Double)
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_drawableTop
com.google.android.gms.common.internal.ReflectedParcelable
okio.Buffer: okio.ByteString hmacSha1(okio.ByteString)
androidx.fragment.app.Fragment: boolean mAdded
org.jitsi.meet.R$drawable: int btn_checkbox_checked_to_unchecked_mtrl_animation
com.facebook.react.bridge.JavaMethodWrapper$8: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CONNECT_ERROR
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String NAME
org.webrtc.NetworkMonitor: java.util.List getNativeNetworkObserversSync()
org.webrtc.PeerConnectionFactory
org.jitsi.meet.sdk.ParticipantsService: org.jitsi.meet.sdk.ParticipantsService instance
org.jitsi.meet.sdk.ExternalAPIModule: ExternalAPIModule(com.facebook.react.bridge.ReactApplicationContext)
okio.Buffer: okio.Buffer writeDecimalLong(long)
com.google.android.gms.measurement.AppMeasurementReceiver
com.facebook.react.bridge.ReadableNativeMap: boolean hasKey(java.lang.String)
com.google.android.gms.measurement.module.Analytics
org.webrtc.NetworkMonitorAutoDetect$WifiDirectManagerDelegate: int WIFI_P2P_NETWORK_HANDLE
androidx.fragment.app.Fragment: Fragment()
org.jitsi.meet.sdk.R$style: int Base_V26_Widget_AppCompat_Toolbar
okio.Buffer: okio.Buffer write(byte[])
org.webrtc.Camera2Session: org.webrtc.SurfaceTextureHelper access$900(org.webrtc.Camera2Session)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager requireFragmentManager()
org.jitsi.meet.sdk.R$string: int rn_tab_description
com.horcrux.svg.SymbolView: void setMeetOrSlice(int)
org.webrtc.MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl: void releaseOutputBuffer(int,boolean)
org.jitsi.meet.R$color: int accent_material_light
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Small
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.internal.ws.RealWebSocket: okhttp3.WebSocketListener listener
com.horcrux.svg.R$styleable: int SearchView_queryBackground
com.horcrux.svg.SvgView: void defineBrush(com.horcrux.svg.Brush,java.lang.String)
com.dropbox.core.v2.auth.InvalidAccountTypeError: com.dropbox.core.v2.auth.InvalidAccountTypeError valueOf(java.lang.String)
okhttp3.internal.http1.Http1Codec$UnknownLengthSource
com.facebook.react.devsupport.DevSupportManagerImpl: boolean hasBundleInAssets(java.lang.String)
com.horcrux.svg.RenderableViewManager: boolean isZero(double)
com.dropbox.core.v2.fileproperties.PropertiesSearchErrorException
com.facebook.react.bridge.WritableNativeArray: void pushDouble(double)
org.jitsi.meet.R$attr: int measureWithLargestChild
org.jitsi.meet.sdk.AudioModeModule$1: void run()
okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor: okhttp3.internal.huc.OkHttpURLConnection this$0
org.jitsi.meet.R$color: int androidx_core_secondary_text_default_material_light
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionBar_TabText
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String NAME
org.webrtc.EglBase10Impl: boolean hasSurface()
org.webrtc.audio.WebRtcAudioRecord: android.media.AudioRecord createAudioRecordOnMOrHigher(int,int,int,int,int)
org.webrtc.MediaCodecUtils: MediaCodecUtils()
okhttp3.ConnectionSpec: boolean supportsTlsExtensions
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ARG_MODE
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setWidth(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
org.jitsi.meet.sdk.R$attr: int actionMenuTextAppearance
org.jitsi.meet.sdk.R$layout: int abc_expanded_menu_layout
org.jitsi.meet.sdk.R$attr: int fontStyle
okhttp3.Headers: java.lang.String name(int)
com.facebook.react.devsupport.RedBoxHandler: void reportRedbox(android.content.Context,java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[],java.lang.String,com.facebook.react.devsupport.RedBoxHandler$ReportCompletedListener)
co.apptailor.googlesignin.RNGoogleSigninModule: com.facebook.react.bridge.ReactApplicationContext access$900(co.apptailor.googlesignin.RNGoogleSigninModule)
com.facebook.react.devsupport.BundleDeltaClient$BundleDeltaJavaClient: int removeModules(android.util.JsonReader,java.util.TreeMap)
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatus access$000(com.facebook.react.devsupport.DevSupportManagerImpl)
com.horcrux.svg.R$dimen: int abc_action_bar_overflow_padding_end_material
okhttp3.ResponseBody$1: long val$contentLength
org.jitsi.meet.R$anim: int btn_radio_to_on_mtrl_ring_outer_path_animation
com.dropbox.core.http.SSLConfig$LoadException
com.facebook.react.devsupport.BundleDeltaClient$ClientType: com.facebook.react.devsupport.BundleDeltaClient$ClientType[] values()
com.facebook.react.views.text.ReactRawTextManager: java.lang.String getName()
okhttp3.Connection: okhttp3.Protocol protocol()
okhttp3.internal.connection.RealConnection$1: RealConnection$1(okhttp3.internal.connection.RealConnection,boolean,okio.BufferedSource,okio.BufferedSink,okhttp3.internal.connection.StreamAllocation)
org.webrtc.audio.WebRtcAudioEffects: android.media.audiofx.AudioEffect$Descriptor[] cachedEffects
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
com.facebook.react.bridge.DynamicFromArray: boolean asBoolean()
okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()
com.facebook.react.views.view.ReactViewGroup: void removeViewAt(int)
okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.reflect.Method warnIfOpenMethod
okhttp3.internal.ws.RealWebSocket: okhttp3.Request originalRequest
org.webrtc.AndroidVideoDecoder: org.webrtc.MediaCodecWrapper codec
okhttp3.Request: okhttp3.Headers headers()
okhttp3.ConnectionPool: boolean cleanupRunning
com.facebook.react.bridge.CatalystInstanceImpl: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
org.jitsi.meet.R$dimen: int abc_button_padding_horizontal_material
com.dropbox.core.v2.filerequests.ListFileRequestsErrorException
org.jitsi.meet.R$styleable: int SwitchCompat_switchTextAppearance
okhttp3.internal.http2.Http2Connection: java.lang.String hostname
okio.HashingSource: javax.crypto.Mac mac
com.zmxv.RNSound.RNSoundModule: java.lang.Object NULL
timber.log.Timber$Tree: boolean isLoggable(int)
com.facebook.react.modules.core.Timing: java.lang.Object access$1300(com.facebook.react.modules.core.Timing)
com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType: com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType[] values()
okhttp3.internal.cache.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])
com.horcrux.svg.R$id: int fitEnd
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.react.bridge.CxxModuleWrapperBase: CxxModuleWrapperBase(com.facebook.jni.HybridData)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextAlign(java.lang.String)
com.horcrux.svg.VirtualView: java.lang.String mMarkerEnd
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: JavaModuleWrapper$MethodDescriptor(com.facebook.react.bridge.JavaModuleWrapper)
com.facebook.react.bridge.CatalystInstanceImpl$1: void run()
com.facebook.react.bridge.JavaMethodWrapper: int mParamLength
com.google.android.gms.common.util.DynamiteApi
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.lang.String NAME
okhttp3.internal.connection.ConnectionSpecSelector: int nextModeIndex
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String[] EMPTY_RULE
com.facebook.react.devsupport.DevSupportManagerImpl$30
com.facebook.react.devsupport.DevSettingsActivity: DevSettingsActivity()
org.jitsi.meet.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
com.horcrux.svg.RenderableView: void setStroke(com.facebook.react.bridge.Dynamic)
org.webrtc.CameraCapturer$9: org.webrtc.CameraSession val$oldSession
androidx.fragment.app.Fragment: void setSharedElementEnterTransition(java.lang.Object)
com.facebook.react.devsupport.DevServerHelper: void openPackagerConnection(java.lang.String,com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener)
org.jitsi.meet.R$raw: int lang_languagesde
com.google.android.gms.internal.measurement.zzhp: com.google.android.gms.internal.measurement.zzhp[] values()
org.webrtc.audio.WebRtcAudioRecord: int audioFormat
org.webrtc.TimestampAligner: long getRtcTimeNanos()
com.horcrux.svg.R$style: int ClockTimePickerStyle
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.facebook.react.bridge.CatalystInstanceImpl: void runJSBundle()
com.facebook.react.devsupport.DevServerHelper$7: void onResponse(okhttp3.Call,okhttp3.Response)
okio.AsyncTimeout$1: void flush()
org.webrtc.Predicate$1: org.webrtc.Predicate this$0
okhttp3.Cookie: Cookie(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)
org.webrtc.Logging$TraceLevel: org.webrtc.Logging$TraceLevel TRACE_STATEINFO
okhttp3.Cookie$Builder: java.lang.String domain
org.jitsi.meet.R$id: int time
okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)
org.webrtc.CallSessionFileRotatingLogSink: void dispose()
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_failureImageScaleType
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getType()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object getNullableValue(java.lang.String,java.lang.Class)
org.webrtc.HardwareVideoEncoder: org.webrtc.ThreadUtils$ThreadChecker encodeThreadChecker
org.jitsi.meet.sdk.R$styleable: int RecycleListView_paddingBottomNoButtons
com.dropbox.core.v2.paper.PaperDocCreateErrorException
com.horcrux.svg.R$string: int abc_toolbar_collapse_description
com.facebook.jni.NativeRunnable: void run()
org.jitsi.meet.R$attr: int submitBackground
org.jitsi.meet.sdk.OngoingNotification
org.webrtc.PeerConnection$SdpSemantics: org.webrtc.PeerConnection$SdpSemantics valueOf(java.lang.String)
org.webrtc.PeerConnectionFactory: void onSignalingThreadReady()
org.webrtc.CameraCapturer: boolean access$1100(org.webrtc.CameraCapturer)
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableCompat_android_visible
com.google.firebase.analytics.FirebaseAnalytics: com.google.firebase.analytics.FirebaseAnalytics getInstance(android.content.Context)
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Headline
okhttp3.internal.huc.OkHttpURLConnection: void onFailure(okhttp3.Call,java.io.IOException)
com.facebook.react.views.scroll.ReactScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
com.facebook.react.devsupport.StackTraceHelper: StackTraceHelper()
com.facebook.react.modules.camera.ImageStoreManager
okhttp3.OkHttpClient$Builder: java.net.ProxySelector proxySelector
okhttp3.Address: boolean equals(java.lang.Object)
com.horcrux.svg.R$styleable: int MenuItem_android_titleCondensed
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.R$layout: int dev_loading_view
com.facebook.react.devsupport.DevSupportManagerImpl$21: com.facebook.react.devsupport.DevSupportManagerImpl this$0
com.horcrux.svg.VirtualView: java.lang.String mMarkerStart
org.webrtc.SessionDescription$Type: java.lang.String canonicalForm()
okhttp3.internal.http2.Header: int hashCode()
org.jitsi.meet.R$id: int notification_background
com.facebook.react.devsupport.BundleDownloader$1: void onResponse(okhttp3.Call,okhttp3.Response)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
org.webrtc.ScreenCapturerAndroid: void stopCapture()
org.webrtc.NetworkMonitor$2: NetworkMonitor$2(org.webrtc.NetworkMonitor)
org.jitsi.meet.sdk.R$attr: int titleMarginEnd
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.RNSVGRenderableManager
okio.RealBufferedSink: okio.BufferedSink emit()
org.jitsi.meet.sdk.R$drawable: int notify_panel_notification_icon_bg
com.facebook.react.modules.image.ImageLoaderModule
org.jitsi.meet.R$attr: int panelMenuListWidth
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder callTimeout(long,java.util.concurrent.TimeUnit)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: void run()
org.webrtc.MediaStreamTrack: boolean setEnabled(boolean)
okhttp3.CertificatePinner$Pin: java.lang.String toString()
okio.SegmentPool
com.horcrux.svg.R$style: int Widget_AppCompat_AutoCompleteTextView
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$AdapterType networkPreference
org.webrtc.PeerConnectionFactory$InitializationOptions$Builder: android.content.Context applicationContext
com.facebook.react.modules.deviceinfo.DeviceInfoModule
org.jitsi.meet.R$id: int chronometer
androidx.fragment.app.Fragment: android.view.LayoutInflater mLayoutInflater
okio.ByteString: int indexOf(byte[],int)
org.jitsi.meet.sdk.R$id: int right_icon
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2: com.facebook.react.devsupport.JSDebuggerWebSocketClient val$client
org.jitsi.meet.sdk.ReactInstanceManagerHolder: void emitEvent(java.lang.String,java.lang.Object)
org.webrtc.voiceengine.WebRtcAudioRecord: void assertTrue(boolean)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
org.jitsi.meet.R$anim: int btn_checkbox_to_checked_icon_null_animation
com.facebook.react.modules.camera.ImageEditingManager: void access$500(android.content.Context,android.net.Uri,java.io.File)
org.webrtc.CapturerObserver: void onCapturerStarted(boolean)
com.facebook.react.views.image.ReactImageView: void setBorderWidth(float)
com.facebook.react.views.text.ReactTextViewManager: void onAfterUpdateTransaction(com.facebook.react.views.text.ReactTextView)
okhttp3.internal.http2.Http2Connection$5: int val$byteCount
com.facebook.react.bridge.CatalystInstanceImpl
org.webrtc.Camera2Enumerator: Camera2Enumerator(android.content.Context)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode: void setSource(com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.webview.RNCWebViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.webrtc.PeerConnection$Observer: void onDataChannel(org.webrtc.DataChannel)
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Button
com.horcrux.svg.R$style: int Widget_AppCompat_CompoundButton_RadioButton
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.util.Map getConstants()
okhttp3.Route: java.net.InetSocketAddress inetSocketAddress
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$IceTransportsType iceTransportsType
org.jitsi.meet.R$styleable: int StateListDrawable_android_exitFadeDuration
org.jitsi.meet.sdk.R$styleable: int SwitchCompat_android_textOn
org.webrtc.WrappedNativeI420Buffer: void release()
org.webrtc.MediaCodecVideoDecoderFactory: boolean isSupportedCodec(android.media.MediaCodecInfo,org.webrtc.VideoCodecMimeType)
com.google.android.gms.internal.measurement.zzbv$zzb: boolean zzk
com.horcrux.svg.R$drawable: int notification_bg_low_normal
org.jitsi.meet.R$style: int Theme_AppCompat_Dialog
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
org.jitsi.meet.R$string: int restriction_server_url_description
org.jitsi.meet.sdk.R$styleable: int FontFamilyFont_android_ttcIndex
okhttp3.internal.cache.DiskLruCache: void validateKey(java.lang.String)
org.jitsi.meet.sdk.R$drawable: int common_google_signin_btn_text_dark_normal
com.oney.WebRTCModule.RTCVideoViewManager
com.horcrux.svg.R$integer: int abc_config_activityDefaultDur
com.facebook.react.devsupport.DevServerHelper: java.lang.String createBundleURL(java.lang.String,com.facebook.react.devsupport.DevServerHelper$BundleType,java.lang.String)
com.google.android.gms.internal.measurement.zzca$zzb: int zzc
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
org.jitsi.meet.sdk.R$attr: int colorSwitchThumbNormal
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger sNextInstanceIdForTrace
com.facebook.react.devsupport.JSDevSupport: int ERROR_CODE_EXCEPTION
com.reactnativecommunity.webview.RNCWebViewManager: void onDropViewInstance(android.view.View)
com.rnimmersive.RNImmersiveModule
org.webrtc.NetworkMonitor: java.util.ArrayList nativeNetworkObservers
com.facebook.yoga.YogaStyleInputs
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_drawableBottom
org.jitsi.meet.sdk.R$attr: int tickMark
org.jitsi.meet.sdk.R$integer: int abc_config_activityDefaultDur
com.facebook.react.bridge.JavaMethodWrapper$8
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_controlBackground
com.horcrux.svg.R$layout: int abc_list_menu_item_icon
com.oney.WebRTCModule.WebRTCModule: void peerConnectionAddStreamAsync(java.lang.String,int)
com.facebook.react.devsupport.DebugOverlayController: void requestPermission(android.content.Context)
org.jitsi.meet.R$style: int Theme_AppCompat_DayNight
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action: java.lang.String name
com.horcrux.svg.VirtualView: int saveAndSetupCanvas(android.graphics.Canvas,android.graphics.Matrix)
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler mDefaultNativeModuleCallExceptionHandler
org.jitsi.meet.R$attr: int tooltipFrameBackground
okhttp3.internal.http2.Http2: java.lang.String[] FLAGS
okhttp3.Cache$CacheResponseBody: long contentLength()
org.jitsi.meet.sdk.R$drawable: int abc_btn_radio_material
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig getDefaultConfig(com.facebook.react.bridge.ReactContext)
okio.SegmentedByteString: byte getByte(int)
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String)
androidx.fragment.app.Fragment: void setStateAfterAnimating(int)
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String TAG
com.facebook.react.bridge.DynamicFromMap$1: androidx.core.util.Pools$SimplePool initialValue()
org.webrtc.NetworkMonitorAutoDetect: org.webrtc.NetworkMonitorAutoDetect$WifiDirectManagerDelegate wifiDirectManagerDelegate
com.facebook.react.devsupport.DevSupportManagerImpl$24: void onSuccess(com.facebook.react.bridge.NativeDeltaClient)
org.webrtc.voiceengine.WebRtcAudioTrack: int getDefaultUsageAttribute()
okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: java.lang.String getFile()
org.webrtc.VideoSink
com.horcrux.svg.R$color: int dim_foreground_disabled_material_dark
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,int,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$1100(com.learnium.RNDeviceInfo.RNDeviceModule)
org.webrtc.CryptoOptions$Builder: org.webrtc.CryptoOptions$Builder setEnableEncryptedRtpHeaderExtensions(boolean)
androidx.fragment.app.FragmentActivity: boolean mCreated
okio.ForwardingTimeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
org.webrtc.MediaConstraints$KeyValuePair: java.lang.String getValue()
org.jitsi.meet.sdk.R$id: int normal
okhttp3.internal.Util: java.nio.charset.Charset bomAwareCharset(okio.BufferedSource,java.nio.charset.Charset)
org.jitsi.meet.R$styleable: int TextAppearance_android_textFontWeight
com.horcrux.svg.VirtualView: double relativeOnWidth(com.horcrux.svg.SVGLength)
okio.BufferedSource: boolean request(long)
org.jitsi.meet.R$style: int Widget_AppCompat_ActivityChooserView
org.webrtc.audio.JavaAudioDeviceModule$AudioSamples: int sampleRate
org.jitsi.meet.R$id: int search_bar
org.webrtc.PeerConnection$PeerConnectionState: org.webrtc.PeerConnection$PeerConnectionState CLOSED
com.facebook.jni.CppException: CppException(java.lang.String)
com.facebook.react.devsupport.MultipartStreamReader: java.lang.String mBoundary
org.webrtc.NetworkMonitorAutoDetect$WifiDirectManagerDelegate: android.content.Context context
okio.Buffer: java.lang.String toString()
okhttp3.EventListener$2: okhttp3.EventListener create(okhttp3.Call)
org.webrtc.HardwareVideoEncoderFactory: boolean enableH264HighProfile
okio.Buffer: int hashCode()
okhttp3.internal.tls.OkHostnameVerifier: int ALT_DNS_NAME
com.facebook.yoga.YogaNodeJNIBase: float baseline(float,float)
org.jitsi.meet.sdk.R$attr: int switchStyle
org.webrtc.MediaStreamTrack$MediaType: int getNative()
org.jitsi.meet.sdk.R$style: int DialogAnimationSlide
org.webrtc.RtpTransceiver$RtpTransceiverInit: RtpTransceiver$RtpTransceiverInit(org.webrtc.RtpTransceiver$RtpTransceiverDirection,java.util.List)
org.jitsi.meet.R$styleable: int[] ButtonBarLayout
com.horcrux.svg.RenderableViewManager$CircleViewManager
com.facebook.react.modules.dialog.DialogModule: java.util.Map CONSTANTS
okhttp3.internal.huc.OkHttpURLConnection: java.io.InputStream getErrorStream()
okhttp3.EventListener: void dnsStart(okhttp3.Call,java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
org.webrtc.GlRectDrawer: void drawOes(int,float[],int,int,int,int,int,int)
okhttp3.internal.cache2.Relay: okio.ByteString metadata
org.webrtc.SurfaceTextureHelper$1: org.webrtc.EglBase$Context val$sharedContext
com.horcrux.svg.R$styleable: int AppCompatTheme_dropDownListViewStyle
com.dropbox.core.v2.sharing.FileMemberActionErrorException
org.webrtc.NetworkMonitor: NetworkMonitor()
okhttp3.internal.ws.WebSocketWriter: okio.Buffer$UnsafeCursor maskCursor
androidx.fragment.app.FragmentActivity: boolean mResumed
okhttp3.internal.ws.RealWebSocket$Streams
org.jitsi.meet.R$drawable: int abc_cab_background_top_mtrl_alpha
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getContentType()
org.webrtc.audio.WebRtcAudioRecord: int audioSource
org.jitsi.meet.R$color: int common_google_signin_btn_text_dark_disabled
org.jitsi.meet.sdk.R$id: int catalyst_redbox_title
com.facebook.react.views.text.ReactTextView: void setLinkifyMask(int)
okhttp3.internal.huc.OkHttpURLConnection: void setIfModifiedSince(long)
com.horcrux.svg.R$color: int switch_thumb_material_light
com.reactnativecommunity.webview.RNCWebViewModule: android.app.Activity access$100(com.reactnativecommunity.webview.RNCWebViewModule)
org.webrtc.LibvpxVp8Encoder: boolean isHardwareEncoder()
org.webrtc.SSLCertificateVerifier
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_STYLE
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableType getType()
timber.log.Timber$Tree: void w(java.lang.String,java.lang.Object[])
org.jitsi.meet.sdk.R$styleable: int TextAppearance_android_textColor
okhttp3.ConnectionSpec$Builder
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getIfModifiedSince()
org.jitsi.meet.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
org.jitsi.meet.sdk.JitsiMeetUserInfo: void setAvatar(java.net.URL)
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignItems(long)
org.jitsi.meet.sdk.R$styleable: int SwipeRefreshLayout_swipeRefreshLayoutProgressSpinnerBackgroundColor
org.jitsi.meet.sdk.R$layout: int redbox_item_title
com.horcrux.svg.R$id
org.jitsi.meet.R$string: int toolbar_description
com.horcrux.svg.R$style: int Widget_AppCompat_ActionBar_Solid
com.horcrux.svg.R$style: int AlertDialog_AppCompat
org.webrtc.VideoEncoder$BitrateAllocation: int[][] bitratesBbs
com.horcrux.svg.R$style: int Theme_AppCompat_Light
com.google.android.gms.internal.measurement.zzbv$zze
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JavaOnlyMap$2
okhttp3.internal.http2.Hpack: java.util.Map NAME_TO_FIRST_INDEX
org.jitsi.meet.sdk.JitsiMeetActivity: void leave()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA
com.facebook.react.devsupport.BundleDownloader$BundleInfo: java.lang.String toJSONString()
com.facebook.react.views.scroll.ReactScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
com.facebook.react.devsupport.JSDevSupport: java.lang.String MODULE_NAME
org.jitsi.meet.sdk.AudioModeModule: java.util.Map getConstants()
okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlex(long)
org.jitsi.meet.R$styleable: int ActionBar_icon
com.facebook.react.devsupport.BundleDeltaClient$BundleDeltaNativeClient: boolean canHandle(com.facebook.react.devsupport.BundleDeltaClient$ClientType)
org.webrtc.AndroidVideoDecoder: int colorFormat
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)
com.facebook.react.devsupport.DevServerHelper$5: DevServerHelper$5(com.facebook.react.devsupport.DevServerHelper,android.content.Context,java.lang.String)
androidx.fragment.app.Fragment: android.os.Bundle getArguments()
org.webrtc.YuvConverter$ShaderCallbacks
org.jitsi.meet.sdk.R$style: int Base_V7_Theme_AppCompat
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()
org.jitsi.meet.sdk.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
okhttp3.ResponseBody$BomAwareReader: boolean closed
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String)
org.webrtc.EglRenderer$EglSurfaceCreation
com.reactnativecommunity.asyncstorage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext,java.util.concurrent.Executor)
com.horcrux.svg.R$styleable: int LinearLayoutCompat_dividerPadding
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostDestroy()
org.webrtc.EglBase14Impl: android.opengl.EGLConfig eglConfig
org.webrtc.CameraCapturer$3
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_END
com.horcrux.svg.R$id: int accessibility_states
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: java.lang.reflect.Method findByIssuerAndSignatureMethod
org.webrtc.CameraCapturer: org.webrtc.CapturerObserver capturerObserver
org.webrtc.Loggable: void onLogMessage(java.lang.String,org.webrtc.Logging$Severity,java.lang.String)
com.horcrux.svg.SvgView: android.graphics.RectF getViewBox()
androidx.fragment.app.Fragment: boolean isRemoving()
org.jitsi.meet.sdk.R$attr: int circleCrop
com.facebook.react.bridge.ReactContext: void removeWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
org.webrtc.PeerConnection$SignalingState: org.webrtc.PeerConnection$SignalingState[] $VALUES
com.horcrux.svg.R$dimen: int tooltip_corner_radius
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStarted()
okhttp3.internal.http2.Http2Codec: okhttp3.Protocol protocol
org.jitsi.meet.R$mipmap
org.jitsi.meet.sdk.R$layout: int select_dialog_multichoice_material
com.horcrux.svg.R$dimen: int abc_panel_menu_list_width
org.jitsi.meet.sdk.R$id: int fitBottomStart
org.webrtc.CryptoOptions$Srtp: boolean enableAes128Sha1_32CryptoCipher
org.webrtc.NetworkMonitor$2: void onNetworkPreference(java.util.List,int)
org.jitsi.meet.R$attr: int actionBarWidgetTheme
com.facebook.react.devsupport.JSDebuggerWebSocketClient$JSDebuggerCallback: void onSuccess(java.lang.String)
com.horcrux.svg.R$attr: int imageButtonStyle
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()
com.horcrux.svg.R$styleable: int Toolbar_titleMargins
org.webrtc.EglRenderer: void setErrorCallback(org.webrtc.EglRenderer$ErrorCallback)
org.jitsi.meet.sdk.R$attr: int collapseIcon
org.jitsi.meet.sdk.R$string: int catalyst_hot_reloading_stop
okhttp3.MultipartBody: okhttp3.MediaType FORM
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getRequestMethod()
okhttp3.Dispatcher: java.util.List queuedCalls()
org.webrtc.CryptoOptions: org.webrtc.CryptoOptions$Srtp srtp
org.webrtc.DataChannel$State: org.webrtc.DataChannel$State OPEN
org.webrtc.RtpParameters$Encoding: double bitratePriority
org.jitsi.meet.sdk.R$attr: int actionModeStyle
org.webrtc.RtpParameters$Codec: int payloadType
okhttp3.internal.tls.DistinguishedNameParser: java.lang.String nextAT()
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Display2
com.facebook.react.devsupport.DevSupportManagerImpl$24: com.facebook.react.devsupport.DevSupportManagerImpl this$0
okio.ByteString: okio.ByteString toAsciiUppercase()
org.jitsi.meet.MainActivity: java.net.URL buildURL(java.lang.String)
org.webrtc.MediaSource$State: org.webrtc.MediaSource$State[] $VALUES
com.reactnativecommunity.webview.RNCWebViewModule: android.net.Uri[] getSelectedFiles(android.content.Intent,int)
com.horcrux.svg.ImageView: void setMeetOrSlice(int)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.horcrux.svg.TextProperties$TextPathSide: com.horcrux.svg.TextProperties$TextPathSide[] values()
com.facebook.react.devsupport.BundleDownloader: void access$100(com.facebook.react.devsupport.BundleDownloader,java.lang.String,okhttp3.Response,java.lang.String,java.io.File,com.facebook.react.devsupport.BundleDownloader$BundleInfo,com.facebook.react.devsupport.BundleDeltaClient$ClientType,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener)
com.horcrux.svg.R$styleable: int ActionBar_subtitle
okhttp3.internal.huc.StreamedRequestBody: void writeTo(okio.BufferedSink)
com.facebook.react.modules.core.DeviceEventManagerModule: DeviceEventManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler)
okio.Okio$4: void timedOut()
org.webrtc.audio.WebRtcAudioRecord: int BUFFERS_PER_SECOND
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_Button_Colored
com.horcrux.svg.R$attr: int paddingTopNoTitle
com.facebook.react.bridge.BaseActivityEventListener: BaseActivityEventListener()
com.facebook.react.views.viewpager.ReactViewPagerManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.webrtc.TextureBufferImpl: org.webrtc.VideoFrame$TextureBuffer$Type getType()
com.facebook.react.devsupport.DevServerHelper$SymbolicationListener: void onSymbolicationComplete(java.lang.Iterable)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray of(java.lang.Object[])
okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings okHttpSettings
com.facebook.react.modules.storage.AsyncStorageModule: void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
org.jitsi.meet.sdk.R$style: int Widget_Compat_NotificationActionText
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier mReactDatabaseSupplier
androidx.lifecycle.AndroidViewModel
com.horcrux.svg.R$drawable: int abc_btn_check_to_on_mtrl_015
okio.SegmentedByteString: java.lang.String utf8()
org.jitsi.meet.R$dimen: int notification_large_icon_height
org.jitsi.meet.sdk.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
com.google.android.gms.internal.measurement.zzcd$zzh: int zzd
org.webrtc.Logging: void nativeLog(int,java.lang.String,java.lang.String)
org.jitsi.meet.sdk.R$styleable: int SwitchCompat_android_textOff
org.webrtc.JniCommon: void nativeAddRef(long)
org.jitsi.meet.sdk.R$styleable: int AppCompatTextHelper_android_drawableRight
org.webrtc.AndroidVideoDecoder: org.webrtc.ThreadUtils$ThreadChecker outputThreadChecker
org.webrtc.CameraEnumerationAndroid$CaptureFormat: java.lang.String toString()
org.jitsi.meet.R$styleable: int MenuGroup_android_enabled
com.facebook.react.modules.network.NetworkingModule: okhttp3.Headers extractHeaders(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap)
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.NetworkStatePredictorFactoryFactory networkStatePredictorFactoryFactory
com.horcrux.svg.MaskView: void setX(com.facebook.react.bridge.Dynamic)
okio.Buffer: okio.Buffer writeUtf8(java.lang.String,int,int)
co.apptailor.googlesignin.RNGoogleSigninModule: com.facebook.react.bridge.ReactApplicationContext access$600(co.apptailor.googlesignin.RNGoogleSigninModule)
org.webrtc.NetEqFactoryFactory: long createNativeNetEqFactory()
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.facebook.react.modules.core.ExceptionsManagerModule: void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,int)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMeetOrSlice(com.horcrux.svg.SymbolView,int)
okhttp3.Cache: int ENTRY_BODY
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String IS_TESTING
org.jitsi.meet.R$id: int action_context_bar
okio.Okio$2: Okio$2(okio.Timeout,java.io.InputStream)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
com.dropbox.core.android.DropboxUidNotInitializedException
org.jitsi.meet.sdk.R$attr: int actionBarItemBackground
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: android.os.Bundle featureFlags
org.jitsi.meet.R$string: int state_on_description
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.webrtc.VideoCodecMimeType: VideoCodecMimeType(java.lang.String,int,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
org.webrtc.audio.WebRtcAudioRecord: boolean isNoiseSuppressorSupported
org.webrtc.SurfaceEglRenderer: int rotatedFrameHeight
org.jitsi.meet.R$string: int catalyst_debug_stop
org.jitsi.meet.sdk.R$string: int catalyst_hot_reloading
okio.ForwardingTimeout: okio.Timeout delegate
androidx.fragment.app.Fragment: java.lang.Object requireHost()
com.dropbox.core.v2.files.RestoreErrorException
com.facebook.react.devsupport.WindowOverlayCompat: int ANDROID_OREO
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Hpack$Reader hpackReader
org.jitsi.meet.R$id: int accessibility_custom_action_7
org.jitsi.meet.sdk.R$id: int accessibility_role
com.facebook.react.fabric.events.FabricEventEmitter: FabricEventEmitter(com.facebook.react.fabric.FabricUIManager)
com.horcrux.svg.R$styleable: int MenuItem_android_icon
com.google.firebase.analytics.FirebaseAnalytics: void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String)
okhttp3.Dns: java.util.List lookup(java.lang.String)
org.webrtc.audio.WebRtcAudioManager: int DEFAULT_SAMPLE_RATE_HZ
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_BASE64
okhttp3.internal.huc.OutputStreamRequestBody: java.io.OutputStream outputStream
com.facebook.react.views.view.ReactViewGroup: void updateBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.ws.RealWebSocket: void onReadPong(okio.ByteString)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeFree(long)
com.horcrux.svg.RenderableViewManager$UseViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.Response$Builder: okhttp3.ResponseBody body
org.webrtc.audio.WebRtcAudioRecord: void setNativeAudioRecord(long)
org.jitsi.meet.R$id: int rn_redbox_report_label
org.jitsi.meet.R$attr: int navigationIcon
org.jitsi.meet.sdk.R$drawable: int abc_btn_radio_material_anim
org.jitsi.meet.sdk.R$raw: int lang_languagestr
okhttp3.Cookie: java.lang.String name
org.webrtc.HardwareVideoEncoder: boolean useSurfaceMode
com.facebook.react.views.view.ReactViewManager: void addView(com.facebook.react.views.view.ReactViewGroup,android.view.View,int)
com.google.android.gms.common.server.response.FastParser$ParseException
org.jitsi.meet.sdk.R$drawable: int abc_text_select_handle_middle_mtrl_dark
com.google.android.gms.internal.measurement.zzci$zzb
org.webrtc.ThreadUtils: java.lang.Object invokeAtFrontUninterruptibly(android.os.Handler,java.util.concurrent.Callable)
org.jitsi.meet.sdk.AudioModeModule: boolean supportsConnectionService
org.jitsi.meet.R$dimen: int abc_dialog_list_padding_top_no_title
androidx.fragment.app.FragmentActivity: FragmentActivity()
com.horcrux.svg.R$attr: int paddingStart
org.jitsi.meet.sdk.BroadcastReceiver
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection connection
com.facebook.react.views.art.ARTSurfaceViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] values()
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeCutDrawable
com.facebook.react.views.view.ReactViewManager: int[] SPACING_TYPES
org.jitsi.meet.sdk.R$color: int material_grey_900
org.jitsi.meet.R$string: int abc_searchview_description_query
org.jitsi.meet.R$styleable: int AppCompatTheme_dividerVertical
org.webrtc.VideoFrame: org.webrtc.VideoFrame$Buffer getBuffer()
org.jitsi.meet.R$style: int ThemeOverlay_AppCompat_DayNight
com.reactnativecommunity.webview.RNCWebViewModule: java.io.File outputVideo
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
org.jitsi.meet.sdk.R$drawable: int abc_list_selector_holo_light
com.horcrux.svg.R$styleable: int View_theme
org.jitsi.meet.R$id: int accessibility_custom_action_30
org.jitsi.meet.sdk.R$dimen: int abc_button_padding_vertical_material
com.horcrux.svg.R$styleable: int Toolbar_navigationIcon
org.webrtc.Logging$TraceLevel: org.webrtc.Logging$TraceLevel[] values()
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
com.facebook.react.bridge.GuardedAsyncTask: void doInBackgroundGuarded(java.lang.Object[])
org.webrtc.WrappedNativeI420Buffer: void retain()
okhttp3.HttpUrl: java.lang.String query()
com.google.android.gms.common.SignInButton: void setColorScheme(int)
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1$1 this$2
org.jitsi.meet.R$id: int notification_main_column_container
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
org.webrtc.NativeLibrary: java.lang.String TAG
org.webrtc.VideoDecoder: org.webrtc.VideoCodecStatus decode(org.webrtc.EncodedImage,org.webrtc.VideoDecoder$DecodeInfo)
org.webrtc.PeerConnectionFactory$InitializationOptions: java.lang.String fieldTrials
okhttp3.Cookie: boolean httpOnly
org.jitsi.meet.R$style: int Theme_FullScreenDialog
org.webrtc.ScreenCapturerAndroid$2: org.webrtc.ScreenCapturerAndroid this$0
com.facebook.react.fabric.Binding: void installFabricUIManager(long,java.lang.Object,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.fabric.ComponentFactoryDelegate,java.lang.Object)
com.horcrux.svg.R$color: int material_grey_100
org.webrtc.GlGenericDrawer: void prepareShader(org.webrtc.GlGenericDrawer$ShaderType,float[],int,int,int,int)
okhttp3.internal.http2.Http2Connection: void writeSynReply(int,boolean,java.util.List)
com.facebook.react.bridge.NativeModuleCallExceptionHandler
org.webrtc.FileVideoCapturer$VideoReaderY4M: void close()
org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate: void releaseCallback(android.net.ConnectivityManager$NetworkCallback)
com.facebook.react.views.textinput.ReactEditText: void setGravityVertical(int)
org.jitsi.meet.sdk.R$bool: int abc_action_bar_embed_tabs
org.jitsi.meet.R$style: int Theme_AppCompat_NoActionBar
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()
org.webrtc.ThreadUtils$3: void run()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableMap getPowerStateSync()
com.facebook.react.modules.fresco.FrescoModule: void onHostPause()
org.webrtc.YuvHelper: void I420ToNV12(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int)
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$Builder setUseLowLatency(boolean)
com.facebook.yoga.YogaNative: void jni_YGConfigSetPointScaleFactor(long,float)
com.google.android.gms.internal.measurement.zzcd$zzk: java.lang.String zze
org.jitsi.meet.R
org.webrtc.EglBase10Impl$1FakeSurfaceHolder: android.graphics.Rect getSurfaceFrame()
org.webrtc.NetworkMonitorAutoDetect: org.webrtc.NetworkChangeDetector$ConnectionType getCurrentConnectionType()
okhttp3.internal.huc.OkHttpURLConnection: void onResponse(okhttp3.Call,okhttp3.Response)
org.jitsi.meet.sdk.R$color: int abc_primary_text_material_light
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthAuto(long)
com.facebook.react.modules.statusbar.StatusBarModule: void setStyle(java.lang.String)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_RUN_JS_BUNDLE_START
com.horcrux.svg.RenderableViewManager: android.util.SparseArray mTagToRenderableView
androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState
org.webrtc.VideoTrack
com.horcrux.svg.R$style: int Widget_AppCompat_PopupMenu_Overflow
com.facebook.react.views.switchview.ReactSwitchManager: void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean)
com.facebook.react.modules.core.Timing: float FRAME_DURATION_MS
androidx.core.util.Pools$SimplePool
org.webrtc.EglBase14$Context
org.jitsi.meet.sdk.BroadcastAction$Type: org.jitsi.meet.sdk.BroadcastAction$Type SEND_ENDPOINT_TEXT_MESSAGE
com.facebook.react.devsupport.DevServerHelper$1$3: com.facebook.react.devsupport.DevServerHelper$1 this$1
org.webrtc.PeerConnection$Observer: void onIceCandidate(org.webrtc.IceCandidate)
okhttp3.internal.http.HttpHeaders: java.util.List parseChallenges(okhttp3.Headers,java.lang.String)
org.jitsi.meet.R$id
com.facebook.react.devsupport.DevServerHelper$5: android.content.Context val$context
org.jitsi.meet.R$anim: int btn_radio_to_off_mtrl_ring_outer_animation
org.jitsi.meet.sdk.R$dimen: int abc_dialog_corner_radius_material
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
com.horcrux.svg.VirtualView: void restoreCanvas(android.graphics.Canvas,int)
org.jitsi.meet.R$styleable: int Toolbar_contentInsetStartWithNavigation
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
org.webrtc.PeerConnectionFactory: void nativeFreeFactory(long)
okio.ByteString: java.nio.ByteBuffer asByteBuffer()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onCatalystInstanceDestroy()
org.jitsi.meet.R$dimen: int disabled_alpha_material_light
org.webrtc.PeerConnection$IceServer: PeerConnection$IceServer(java.lang.String,java.lang.String,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void getSupportedAbis(com.facebook.react.bridge.Promise)
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
org.webrtc.DataChannel: void nativeClose()
org.jitsi.meet.sdk.R$dimen: int compat_button_inset_horizontal_material
com.horcrux.svg.RenderableViewManager$MaskManager: void setHeight(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.R$color: int primary_text_default_material_light
org.jitsi.meet.sdk.BaseReactView: void dispose()
com.facebook.react.devsupport.DevServerHelper: void stopPollingOnChangeEndpoint()
org.webrtc.Logging$TraceLevel: org.webrtc.Logging$TraceLevel TRACE_MODULECALL
com.facebook.react.bridge.AssertionException
okhttp3.CacheControl$Builder: boolean noCache
org.webrtc.CameraEnumerationAndroid$1: int MAX_FPS_DIFF_THRESHOLD
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.R$styleable: int AppCompatTextView_autoSizeTextType
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void resetAnalyticsData(long)
okio.Buffer: okio.Buffer copyTo(java.io.OutputStream,long,long)
org.webrtc.NetworkMonitorAutoDetect: NetworkMonitorAutoDetect(org.webrtc.NetworkChangeDetector$Observer,android.content.Context)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void close()
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadClose(int,java.lang.String)
org.webrtc.audio.JavaAudioDeviceModule: void release()
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: android.media.AudioManager audioManager
okhttp3.internal.connection.ConnectInterceptor: okhttp3.OkHttpClient client
org.jitsi.meet.R$raw: int lang_mainca
org.jitsi.meet.R$styleable: int GradientColor_android_type
org.jitsi.meet.R$string: int state_collapsed_description
com.facebook.react.views.art.ARTRenderableViewManager: java.lang.String CLASS_GROUP
okio.SegmentedByteString: int hashCode()
com.dropbox.core.v2.team.ListMembersDevicesErrorException
org.webrtc.HardwareVideoEncoderFactory: boolean isHardwareSupportedInCurrentSdkVp9(android.media.MediaCodecInfo)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
com.facebook.react.modules.appstate.AppStateModule: java.util.Map getConstants()
org.jitsi.meet.sdk.OngoingConferenceTracker: void addListener(org.jitsi.meet.sdk.OngoingConferenceTracker$OngoingConferenceListener)
okio.AsyncTimeout: java.io.IOException newTimeoutException(java.io.IOException)
com.horcrux.svg.R$id: int spacer
org.webrtc.Predicate$1
okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$WebsocketExecutorTimeoutException: WebsocketJavaScriptExecutor$WebsocketExecutorTimeoutException(java.lang.String)
org.jitsi.meet.sdk.R$styleable: int Toolbar_titleMarginTop
com.facebook.react.devsupport.DevServerHelper$BundleType: com.facebook.react.devsupport.DevServerHelper$BundleType BUNDLE
com.facebook.react.bridge.ContextBaseJavaModule: ContextBaseJavaModule(android.content.Context)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection)
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.RealWebSocket$Streams streams
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.internal.cache.DiskLruCache: long size
org.webrtc.NetworkMonitor: boolean networkBindingSupported()
org.webrtc.H264Utils: java.util.Map getDefaultH264Params(boolean)
okhttp3.internal.platform.AndroidPlatform$CloseGuard
okio.Options: int intCount(okio.Buffer)
com.google.android.gms.internal.measurement.zzci$zzb: java.lang.String zzj
org.jitsi.meet.sdk.R$raw: int lang_mainhu
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
org.webrtc.voiceengine.WebRtcAudioTrack: byte[] access$600(org.webrtc.voiceengine.WebRtcAudioTrack)
org.webrtc.voiceengine.WebRtcAudioUtils: boolean hasMicrophone()
org.jitsi.meet.sdk.R$dimen: int hint_pressed_alpha_material_dark
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzcd$zze: double zzh
org.webrtc.PeerConnectionFactory: org.webrtc.PeerConnectionFactory nativeCreatePeerConnectionFactory(android.content.Context,org.webrtc.PeerConnectionFactory$Options,long,long,long,org.webrtc.VideoEncoderFactory,org.webrtc.VideoDecoderFactory,long,long,long,long,long)
com.facebook.react.devsupport.BundleDownloader$2: com.facebook.react.devsupport.BundleDownloader$BundleInfo val$bundleInfo
com.dropbox.core.DbxWebAuth$ProviderException
com.google.android.gms.auth.api.signin.internal.SignInHubActivity
org.webrtc.MediaSource$State: MediaSource$State(java.lang.String,int)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setPlaceholder(java.lang.String)
org.jitsi.meet.R$string: int search_menu_title
okhttp3.internal.http2.Hpack$Writer: void clearDynamicTable()
org.jitsi.meet.R$styleable: int ActionBar_divider
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
com.facebook.react.modules.camera.CameraRollManager: java.lang.String[] PROJECTION
com.horcrux.svg.R$dimen: int abc_action_bar_default_padding_end_material
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String DEFAULT_BACKGROUND_COLOR_KEY
com.facebook.react.modules.network.NetworkingModule: void addResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
org.jitsi.meet.R$string: int common_signin_button_text_long
org.jitsi.meet.R$styleable: int AppCompatTheme_spinnerStyle
com.facebook.react.devsupport.DevInternalSettings: boolean isNuclideJSDebugEnabled()
org.jitsi.meet.sdk.R$drawable: int redbox_top_border_background
com.facebook.react.bridge.JavaOnlyMap: void putBoolean(java.lang.String,boolean)
org.jitsi.meet.sdk.R$dimen: int notification_small_icon_background_padding
com.facebook.react.bridge.CatalystInstanceImpl: void initializeBridge(com.facebook.react.bridge.ReactCallback,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.bridge.queue.MessageQueueThread,java.util.Collection,java.util.Collection)
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholderTextColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
okio.BufferedSource: int readInt()
com.facebook.react.bridge.Inspector$Page: java.lang.String getVM()
com.horcrux.svg.RenderableView: void setStrokeWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.ReactContext: void initializeMessageQueueThreads(com.facebook.react.bridge.queue.ReactQueueConfiguration)
org.jitsi.meet.sdk.R$attr: int actionBarSplitStyle
org.webrtc.voiceengine.WebRtcAudioTrack: int getStreamVolume()
com.reactnativecommunity.webview.RNCWebViewModule: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.views.text.ReactRawTextManager: java.lang.Class getShadowNodeClass()
okhttp3.OkHttpClient: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)
com.horcrux.svg.RenderableView: void setStrokeMiterlimit(float)
org.jitsi.meet.sdk.R$styleable: int ActionBarLayout_android_layout_gravity
org.jitsi.meet.sdk.AudioModeModule: org.jitsi.meet.sdk.AudioModeModule$AudioDeviceHandlerInterface audioDeviceHandler
com.horcrux.svg.RenderableViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.horcrux.svg.VirtualView)
com.horcrux.svg.R$id: int accessibility_label
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock get()
org.jitsi.meet.sdk.R$id: int forever
org.webrtc.NetworkMonitor: void assertIsTrue(boolean)
org.webrtc.EglBase$Context: long getNativeEglContext()
org.jitsi.meet.R$styleable: int AppCompatTextView_drawableBottomCompat
com.facebook.react.bridge.ReactContext: void onNewIntent(android.app.Activity,android.content.Intent)
com.horcrux.svg.R$attr: int actionViewClass
org.jitsi.meet.sdk.R$attr: int retryImageScaleType
okhttp3.HttpUrl: boolean percentEncoded(java.lang.String,int,int)
com.horcrux.svg.SvgView$Events: com.horcrux.svg.SvgView$Events valueOf(java.lang.String)
okhttp3.internal.Util$1: int compare(java.lang.String,java.lang.String)
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityHint(android.view.View,java.lang.String)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String)
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_AutoCompleteTextView
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
okhttp3.Cookie$Builder: long expiresAt
okhttp3.internal.huc.OkHttpsURLConnection: long getContentLengthLong()
org.jitsi.meet.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
org.webrtc.VideoSource: void adaptOutputFormat(org.webrtc.VideoSource$AspectRatio,java.lang.Integer,org.webrtc.VideoSource$AspectRatio,java.lang.Integer,java.lang.Integer)
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman get()
okhttp3.internal.cache.DiskLruCache: java.lang.String MAGIC
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_fontVariationSettings
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okio.Buffer: boolean rangeEquals(long,okio.ByteString)
org.webrtc.Histogram: void addSample(int)
org.jitsi.meet.R$color: int dim_foreground_disabled_material_dark
org.webrtc.BitrateAdjuster
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_windowNoTitle
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
org.jitsi.meet.sdk.R$attr: int expandActivityOverflowButtonDrawable
org.webrtc.MediaCodecWrapper: void setParameters(android.os.Bundle)
org.jitsi.meet.R$raw: int node_modules_reactnativeurlpolyfill_package
com.horcrux.svg.R$dimen: int highlight_alpha_material_colored
org.jitsi.meet.R$styleable: int AppCompatTheme_imageButtonStyle
org.webrtc.NV21Buffer: int getWidth()
com.horcrux.svg.R$styleable: int MenuView_android_horizontalDivider
okhttp3.internal.ws.RealWebSocket$1: RealWebSocket$1(okhttp3.internal.ws.RealWebSocket)
okhttp3.internal.cache.CacheStrategy
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
org.webrtc.PeerConnectionFactory: long getNativeOwnedFactoryAndThreads()
org.webrtc.AndroidVideoDecoder: boolean keyFrameRequired
org.webrtc.PeerConnection$TlsCertPolicy
com.facebook.react.modules.debug.SourceCodeModule
com.facebook.react.views.switchview.ReactSwitchManager: void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode REFUSED_STREAM
org.webrtc.PeerConnection: org.webrtc.RtpSender nativeAddTrack(long,java.util.List)
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String responseSourceHeader(okhttp3.Response)
com.horcrux.svg.R$dimen: int notification_large_icon_width
org.webrtc.VideoEncoder$ResolutionBitrateLimits: int getMinStartBitrateBps()
org.jitsi.meet.sdk.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
org.jitsi.meet.sdk.R$raw: R$raw()
okhttp3.internal.http.HttpHeaders: java.lang.String repeat(char,int)
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer receiveBuffer
org.jitsi.meet.sdk.R$styleable: int LinearLayoutCompat_android_gravity
com.horcrux.svg.R$id: int parentPanel
com.squareup.duktape.DuktapeException
com.facebook.react.bridge.ReactBridge: long getLoadEndTime()
com.facebook.react.views.viewpager.ReactViewPagerManager: void removeViewAt(android.view.ViewGroup,int)
okio.Utf8: long size(java.lang.String)
com.facebook.react.bridge.JsonWriterHelper: void readableMapValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableMap)
okhttp3.Cookie$Builder
org.webrtc.DataChannel$Buffer: java.nio.ByteBuffer data
okhttp3.internal.connection.RealConnection: okhttp3.Protocol protocol()
okhttp3.Cache: int writeSuccessCount
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Medium
okhttp3.Cache$Entry: java.lang.String requestMethod
org.webrtc.ContextUtils: android.content.Context applicationContext
okhttp3.internal.ws.RealWebSocket: boolean send(java.lang.String)
org.webrtc.CameraEnumerationAndroid$CaptureFormat: CameraEnumerationAndroid$CaptureFormat(int,int,int,int)
com.facebook.react.views.picker.ReactDialogPickerManager: java.lang.String REACT_CLASS
org.webrtc.DtmfSender: java.lang.String tones()
org.jitsi.meet.sdk.R$styleable: int Toolbar_titleMarginEnd
okhttp3.internal.http2.Http2Codec$StreamFinishingSource
okhttp3.internal.cache.DiskLruCache$Editor: DiskLruCache$Editor(okhttp3.internal.cache.DiskLruCache,okhttp3.internal.cache.DiskLruCache$Entry)
org.webrtc.SurfaceViewRenderer: void init(org.webrtc.EglBase$Context,org.webrtc.RendererCommon$RendererEvents,int[],org.webrtc.RendererCommon$GlDrawer)
okio.RealBufferedSink: okio.BufferedSink writeByte(int)
com.facebook.react.bridge.ReactContext: boolean startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.google.firebase.provider.FirebaseInitProvider
org.jitsi.meet.sdk.R$attr: int windowMinWidthMajor
org.webrtc.audio.WebRtcAudioTrack: int AUDIO_TRACK_START
com.facebook.react.bridge.JavaMethodWrapper$4: JavaMethodWrapper$4()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.Object mValue
org.webrtc.SessionDescription: SessionDescription(org.webrtc.SessionDescription$Type,java.lang.String)
com.facebook.react.turbomodule.core.interfaces.JSCallInvokerHolder
com.facebook.react.devsupport.JSDebuggerWebSocketClient: JSDebuggerWebSocketClient()
org.jitsi.meet.sdk.R$styleable: int MenuGroup_android_enabled
org.webrtc.CameraVideoCapturer$CameraEventsHandler: void onCameraFreezed(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.facebook.react.animated.EventAnimationDriver
org.webrtc.PeerConnectionFactory: org.webrtc.AudioTrack createAudioTrack(java.lang.String,org.webrtc.AudioSource)
com.facebook.soloader.SoLoader$Api14Utils
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
org.webrtc.NetworkMonitor$InstanceHolder: org.webrtc.NetworkMonitor instance
org.webrtc.TimestampAligner: void nativeReleaseTimestampAligner(long)
okio.BufferedSource: long indexOfElement(okio.ByteString,long)
org.jitsi.meet.sdk.BroadcastEvent$Type: java.lang.String SCREEN_SHARE_TOGGLED_NAME
com.facebook.react.views.picker.ReactPicker: com.facebook.react.views.picker.ReactPicker$OnSelectListener getOnSelectListener()
org.jitsi.meet.sdk.BroadcastReceiver: BroadcastReceiver(android.content.Context)
org.webrtc.PeerConnection$IceConnectionState
org.webrtc.PeerConnectionDependencies$Builder: org.webrtc.SSLCertificateVerifier sslCertificateVerifier
com.facebook.react.bridge.Arguments: void addEntry(com.facebook.react.bridge.WritableNativeMap,java.lang.String,java.lang.Object)
okhttp3.internal.proxy.NullProxySelector: java.util.List select(java.net.URI)
com.horcrux.svg.R$attr: int tickMarkTint
androidx.fragment.app.Fragment: android.content.res.Resources getResources()
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric$1: void run()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
com.horcrux.svg.R$string: int state_busy_description
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzw,long)
org.webrtc.SurfaceTextureHelper$1: java.lang.String val$threadName
org.jitsi.meet.R$raw: int lang_mainpl
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl
okio.Buffer: okio.Buffer writeString(java.lang.String,java.nio.charset.Charset)
com.facebook.react.bridge.ReadableNativeMap: java.lang.String[] mKeys
com.horcrux.svg.R$layout: int abc_activity_chooser_view
org.webrtc.PeerConnection$Observer: void onAddTrack(org.webrtc.RtpReceiver,org.webrtc.MediaStream[])
okhttp3.RequestBody$2: long contentLength()
org.jitsi.meet.R$id: int topPanel
org.jitsi.meet.sdk.R$attr: int dropDownListViewStyle
com.dropbox.core.v2.files.UploadSessionLookupErrorException
com.facebook.react.devsupport.WindowOverlayCompat: WindowOverlayCompat()
org.jitsi.meet.R$style: int Platform_V21_AppCompat_Light
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
org.jitsi.meet.R$drawable: int abc_ic_star_black_48dp
org.jitsi.meet.R$id: int parentPanel
com.horcrux.svg.R$attr: int arrowShaftLength
org.webrtc.EglRenderer: java.lang.Object frameLock
com.horcrux.svg.R$style: int Base_V7_Theme_AppCompat_Light
org.jitsi.meet.R$anim: int fragment_open_enter
com.horcrux.svg.TextView: void setDeltaX(com.facebook.react.bridge.Dynamic)
okhttp3.internal.huc.DelegatingHttpsURLConnection: int getHeaderFieldInt(java.lang.String,int)
org.jitsi.meet.sdk.R$styleable: int AlertDialog_singleChoiceItemLayout
org.webrtc.CameraCapturer$2: void onCameraOpening()
com.horcrux.svg.R$attr: int roundTopStart
org.webrtc.AndroidVideoDecoder: android.view.Surface surface
okio.Buffer: okio.BufferedSink writeUtf8(java.lang.String,int,int)
org.webrtc.RtpParameters$Codec: java.lang.String getName()
org.jitsi.meet.sdk.R$dimen: int abc_dialog_fixed_height_minor
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.concurrent.CountDownLatch readCompleteLatch
org.jitsi.meet.R$string: int common_google_play_services_notification_ticker
okhttp3.internal.http2.Http2Stream: java.util.Deque access$000(okhttp3.internal.http2.Http2Stream)
org.webrtc.GlGenericDrawer: int texMatrixLocation
com.facebook.react.bridge.JavaMethodWrapper: boolean DEBUG
okhttp3.Dispatcher: int maxRequests
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$1
com.facebook.react.views.text.ReactVirtualTextViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.reactnativecommunity.webview.RNCWebViewManager: void setOverScrollMode(android.webkit.WebView,java.lang.String)
org.webrtc.PeerConnection$RTCConfiguration: boolean enableDscp
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalMap()
org.webrtc.PeerConnection$RTCConfiguration: int maxIPv6Networks
org.jitsi.meet.sdk.R$styleable: int MenuView_android_itemTextAppearance
com.facebook.react.views.view.ReactViewManager: void setOpacity(android.view.View,float)
org.jitsi.meet.R$attr: int autoSizeMaxTextSize
org.webrtc.Camera1Enumerator: Camera1Enumerator()
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Display2
okio.AsyncTimeout$1: okio.AsyncTimeout this$0
org.jitsi.meet.sdk.R$styleable: int[] AnimatedStateListDrawableCompat
org.webrtc.audio.VolumeLogger$LogVolumeTask: org.webrtc.audio.VolumeLogger this$0
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_windowFixedWidthMinor
org.jitsi.meet.R$attr: int titleMargins
okhttp3.internal.http2.Http2Connection: void pushDataLater(int,okio.BufferedSource,int,boolean)
org.jitsi.meet.sdk.R$id: int action_bar_root
org.webrtc.Metrics$HistogramInfo
com.horcrux.svg.R$styleable: int ColorStateListItem_android_alpha
com.facebook.react.views.text.ReactBaseTextShadowNode: void setColor(java.lang.Integer)
okhttp3.internal.http2.Http2Connection$4: Http2Connection$4(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List,boolean)
org.jitsi.meet.R$styleable: int FontFamily_fontProviderFetchStrategy
org.jitsi.meet.sdk.R$styleable: int Spinner_popupTheme
org.jitsi.meet.R$style: int Base_AlertDialog_AppCompat
okhttp3.internal.platform.Platform: java.lang.String toString()
org.webrtc.RtpParameters$Rtcp: java.lang.String cname
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1: void run()
okhttp3.HttpUrl: java.lang.String encodedQuery()
okhttp3.internal.ws.RealWebSocket: int receivedPingCount()
okio.ByteString: java.lang.String toString()
okhttp3.HttpUrl$Builder: java.lang.String encodedFragment
org.jitsi.meet.sdk.R$attr: int controlBackground
org.webrtc.PeerConnection$IceGatheringState: org.webrtc.PeerConnection$IceGatheringState NEW
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void data(boolean,int,okio.BufferedSource,int)
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService: java.lang.String access$400()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
okhttp3.Dispatcher: int runningCallsCount()
org.jitsi.meet.R$id: int center_vertical
org.jitsi.meet.sdk.ProximityModule$1: org.jitsi.meet.sdk.ProximityModule this$0
com.horcrux.svg.R$styleable: int ActionMode_backgroundSplit
okhttp3.internal.http2.Http2Writer: okio.Buffer hpackBuffer
okhttp3.Cache$CacheResponseBody$1: okhttp3.Cache$CacheResponseBody this$0
com.horcrux.svg.R$attr: int icon
com.horcrux.svg.R$styleable: int SimpleDraweeView_progressBarAutoRotateInterval
org.webrtc.EglBase14Impl: int CURRENT_SDK_VERSION
com.horcrux.svg.SymbolView: void setMinY(float)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removePathSegment(int)
org.webrtc.CameraSession
org.webrtc.CameraEnumerationAndroid$ClosestComparator: CameraEnumerationAndroid$ClosestComparator()
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getScreenCTM(int)
org.jitsi.meet.R$attr: int singleChoiceItemLayout
org.webrtc.GlTextureFrameBuffer: int width
com.horcrux.svg.R$attr: int dialogTheme
org.jitsi.meet.sdk.ConnectionService: java.util.Map connections
org.jitsi.meet.R$style: int Widget_AppCompat_ImageButton
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$Builder setAudioRecordStateCallback(org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStateCallback)
com.ocetnik.timer.BackgroundTimerModule: android.os.Handler handler
org.webrtc.EglBase10Impl$1FakeSurfaceHolder: EglBase10Impl$1FakeSurfaceHolder(org.webrtc.EglBase10Impl,android.view.Surface)
org.jitsi.meet.sdk.R$styleable: int ActionBar_indeterminateProgressStyle
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType valueOf(java.lang.String)
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents[] values()
okhttp3.ResponseBody$1: long contentLength()
okhttp3.Cache$CacheRequestImpl$1: void close()
org.jitsi.meet.R$styleable: int View_android_theme
org.jitsi.meet.sdk.R$styleable: int LoadingImageView_imageAspectRatioAdjust
org.webrtc.EglRenderer: java.lang.Runnable access$400(org.webrtc.EglRenderer)
okhttp3.internal.http2.Http2Connection$Listener: okhttp3.internal.http2.Http2Connection$Listener REFUSE_INCOMING_STREAMS
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$KeyType getKeyType()
com.dropbox.core.v2.team.TeamNamespacesListContinueErrorException
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider getProvider()
org.webrtc.VideoEncoder: org.webrtc.VideoCodecStatus release()
com.google.android.gms.internal.measurement.zzu: zzu()
com.facebook.react.modules.camera.CameraRollManager: java.lang.String ERROR_UNABLE_TO_FILTER
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action: org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action[] $VALUES
org.jitsi.meet.R$attr: int navigationContentDescription
org.webrtc.IceCandidate: int hashCode()
org.webrtc.AudioTrack: AudioTrack(long)
com.horcrux.svg.R$styleable: int ActionMenuItemView_android_minWidth
okhttp3.internal.http1.Http1Codec$FixedLengthSink: okhttp3.internal.http1.Http1Codec this$0
org.webrtc.PeerConnectionFactory: void shutdownInternalTracer()
com.facebook.react.devsupport.MultipartStreamReader$ChunkListener: void onChunkComplete(java.util.Map,okio.Buffer,boolean)
com.facebook.react.bridge.WritableNativeArray: com.facebook.jni.HybridData initHybrid()
org.jitsi.meet.R$dimen: int tooltip_corner_radius
com.learnium.RNDeviceInfo.RNDeviceModule: void onCatalystInstanceDestroy()
org.jitsi.meet.R$styleable: int AppCompatTheme_ratingBarStyle
com.horcrux.svg.R$styleable: int SearchView_commitIcon
org.jitsi.meet.sdk.R$raw: int lang_maintr
okhttp3.Cache$CacheRequestImpl: void abort()
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType valueOf(java.lang.String)
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ListView
com.oney.WebRTCModule.WebRTCModule: void getUserMedia(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
org.jitsi.meet.R$styleable: int DrawerArrowToggle_spinBars
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_3
okio.Buffer: long indexOf(byte,long,long)
com.horcrux.svg.VirtualView: android.graphics.Region mMarkerRegion
org.webrtc.WrappedNativeI420Buffer: int strideU
org.webrtc.SurfaceTextureHelper$1: org.webrtc.SurfaceTextureHelper call()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzw)
org.webrtc.MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl
com.facebook.react.bridge.CatalystInstanceImpl$5
org.webrtc.YuvConverter: YuvConverter(org.webrtc.VideoFrameDrawer)
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
com.facebook.react.bridge.CxxModuleWrapperBase: java.lang.String getName()
com.horcrux.svg.R$string: int state_mixed_description
com.facebook.react.bridge.DynamicFromArray: int mIndex
okhttp3.internal.http2.Http2Connection$3: void execute()
org.webrtc.HardwareVideoEncoder$BusyCount: HardwareVideoEncoder$BusyCount()
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager mNodesManager
com.facebook.react.modules.clipboard.ClipboardModule
org.webrtc.EglBase14Impl: void createSurface(android.view.Surface)
org.webrtc.CameraCapturer$5: void run()
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
org.webrtc.PeerConnection$IceServer$Builder: java.util.List tlsAlpnProtocols
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Subhead_Inverse
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String LOW_POWER_MODE
com.facebook.react.bridge.ReactContext$2: int[] $SwitchMap$com$facebook$react$common$LifecycleState
com.horcrux.svg.R$string: int catalyst_sample_profiler_disable
com.horcrux.svg.VirtualView: com.horcrux.svg.GroupView getParentTextRoot()
com.horcrux.svg.R$drawable: int abc_list_selector_holo_light
com.calendarevents.CalendarEvents: int access$100(com.calendarevents.CalendarEvents,com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.R$style: int Base_Widget_AppCompat_EditText
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String HTML_MIME_TYPE
org.webrtc.SessionDescription: org.webrtc.SessionDescription$Type type
org.webrtc.PeerConnectionFactory: boolean startInternalTracingCapture(java.lang.String)
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService$1
org.jitsi.meet.R$dimen: int abc_text_size_subhead_material
com.facebook.react.views.textinput.ReactTextInputManager: void setContextMenuHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
org.jitsi.meet.R$attr: int actionMenuTextColor
com.facebook.react.devsupport.DevServerHelper$1$2: com.facebook.react.devsupport.DevServerHelper$1 this$1
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionBarWidgetTheme
org.webrtc.CameraCapturer: boolean sessionOpening
com.facebook.react.uimanager.BaseViewManager: BaseViewManager()
okhttp3.OkUrlFactory$1: java.lang.String val$protocol
org.jitsi.meet.sdk.R$layout: int dev_loading_view
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_roundingBorderPadding
com.horcrux.svg.R$styleable: int ActionBar_subtitleTextStyle
com.horcrux.svg.RenderableViewManager$EllipseViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.core.app.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
com.google.android.gms.measurement.AppMeasurement: java.util.List getConditionalUserProperties(java.lang.String,java.lang.String)
androidx.fragment.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)
com.facebook.react.devsupport.DevLoadingViewController: android.content.Context getContext()
org.webrtc.AndroidVideoDecoder: org.webrtc.VideoCodecStatus release()
org.jitsi.meet.sdk.R$string: int catalyst_loading_from_url
com.facebook.react.devsupport.DevSupportManagerImpl: boolean access$2002(com.facebook.react.devsupport.DevSupportManagerImpl,boolean)
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat
org.jitsi.meet.sdk.R$anim: int fragment_close_exit
com.facebook.react.devsupport.DevServerHelper: java.lang.String getHostForJSProxy()
com.horcrux.svg.R$style: int Widget_AppCompat_ListView_DropDown
com.facebook.react.modules.appstate.AppStateModule: void sendAppStateChangeEvent()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_START
com.horcrux.svg.VirtualView: void setMarkerMid(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidthPercent(long,float)
com.learnium.RNDeviceInfo.RNDeviceModule: double getTotalDiskCapacityOldSync()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_END
okhttp3.internal.huc.OkHttpsURLConnection: void setUseCaches(boolean)
com.rnimmersive.RNImmersiveModule: com.facebook.react.bridge.ReactContext _reactContext
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: JdkWithJettyBootPlatform$JettyNegoProvider(java.util.List)
androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)
com.facebook.react.bridge.DynamicFromMap: DynamicFromMap()
org.webrtc.SurfaceTextureHelper: org.webrtc.VideoSink access$402(org.webrtc.SurfaceTextureHelper,org.webrtc.VideoSink)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
okhttp3.internal.connection.RealConnection: void connect(int,int,int,int,boolean,okhttp3.Call,okhttp3.EventListener)
okio.Buffer$UnsafeCursor: long resizeBuffer(long)
org.webrtc.MediaCodecWrapper
okhttp3.HttpUrl: java.lang.String PATH_SEGMENT_ENCODE_SET_URI
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_END
com.horcrux.svg.VirtualView: java.lang.String mName
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.facebook.react.views.picker.ReactDialogPickerManager: ReactDialogPickerManager()
org.jitsi.meet.sdk.R$anim: int btn_radio_to_on_mtrl_dot_group_animation
org.jitsi.meet.sdk.R$styleable: int[] ActionMenuItemView
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromDeltaBundle(java.lang.String,com.facebook.react.bridge.NativeDeltaClient,boolean)
com.facebook.react.devsupport.RedBoxDialog$StackAdapter: java.lang.Object getItem(int)
com.horcrux.svg.R$attr: int panelMenuListTheme
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.DevInternalSettings access$200(com.facebook.react.devsupport.DevSupportManagerImpl)
org.jitsi.meet.R$attr: int listItemLayout
com.facebook.yoga.YogaNodeJNIFinalizer
org.webrtc.Camera2Enumerator: java.lang.String[] getDeviceNames()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setLengthAdjust(com.horcrux.svg.TextView,java.lang.String)
okhttp3.internal.cache.DiskLruCache$3: java.lang.Object next()
org.jitsi.meet.sdk.incoming_call.IncomingCallView: IncomingCallView(android.content.Context)
com.facebook.react.devsupport.interfaces.DevSupportManager: void updateJSError(java.lang.String,com.facebook.react.bridge.ReadableArray,int)
org.jitsi.meet.R$styleable: int AppCompatTextView_lineHeight
org.jitsi.meet.R$drawable: int images_dropboxlogo_square
com.horcrux.svg.R$drawable: int abc_textfield_search_material
com.horcrux.svg.R$styleable: int SimpleDraweeView_overlayImage
org.jitsi.meet.sdk.R$attr: int buttonTint
okhttp3.OkHttpClient: int writeTimeout
okhttp3.internal.io.FileSystem$1: boolean exists(java.io.File)
org.jitsi.meet.R$style: int Theme_AppCompat_Dialog_Alert
org.webrtc.audio.WebRtcAudioEffects: android.media.audiofx.AudioEffect$Descriptor[] getAvailableEffects()
com.facebook.react.views.art.ARTSurfaceViewManager: void updateExtraData(com.facebook.react.views.art.ARTSurfaceView,java.lang.Object)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void onDropViewInstance(android.view.View)
org.jitsi.meet.R$attr: int buttonBarNeutralButtonStyle
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ARG_DATE
org.webrtc.audio.JavaAudioDeviceModule$Builder: JavaAudioDeviceModule$Builder(android.content.Context,org.webrtc.audio.JavaAudioDeviceModule$1)
org.webrtc.PeerConnection: void getStats(org.webrtc.RTCStatsCollectorCallback)
com.horcrux.svg.UseView: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.devsupport.DevLoadingViewController$1: void run()
com.learnium.RNDeviceInfo.RNDeviceModule: void hasGms(com.facebook.react.bridge.Promise)
okhttp3.OkHttpClient: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
com.learnium.RNDeviceInfo.RNDeviceModule: android.content.pm.PackageInfo getPackageInfo()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()
org.jitsi.meet.R$styleable: int GradientColor_android_endX
org.jitsi.meet.sdk.R$id: int checked
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
org.jitsi.meet.sdk.R$attr: int listChoiceIndicatorMultipleAnimated
androidx.fragment.app.Fragment: boolean getUserVisibleHint()
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String)
com.facebook.react.views.picker.ReactDropdownPickerManager: java.lang.String getName()
com.horcrux.svg.R$styleable: int Toolbar_subtitleTextColor
com.horcrux.svg.EllipseView: void setCx(com.facebook.react.bridge.Dynamic)
okio.Buffer: int read(byte[],int,int)
okhttp3.internal.http2.Http2Stream: int getId()
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
com.facebook.react.views.view.ReactViewGroup: void onMeasure(int,int)
org.jitsi.meet.R$string: int spinbutton_description
okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
org.jitsi.meet.R$style: int Base_ThemeOverlay_AppCompat
okhttp3.MediaType: java.lang.String type()
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void onBatchComplete()
org.jitsi.meet.BuildConfig: boolean DEBUG
com.horcrux.svg.R$attr: int itemPadding
okhttp3.internal.ws.WebSocketWriter$FrameSink: void close()
androidx.fragment.app.Fragment: void performStop()
okhttp3.OkUrlFactory$1: OkUrlFactory$1(okhttp3.OkUrlFactory,java.lang.String)
okhttp3.internal.cache.DiskLruCache: void completeEdit(okhttp3.internal.cache.DiskLruCache$Editor,boolean)
okhttp3.internal.Util: okio.ByteString UTF_32_BE_BOM
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
org.jitsi.meet.R$drawable: int abc_dialog_material_background
okhttp3.HttpUrl: java.util.Set queryParameterNames()
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.interfaces.StackFrame[] mLastErrorStack
org.jitsi.meet.R$styleable: int SimpleDraweeView_roundingBorderColor
org.jitsi.meet.R$raw: int lang_mainro
org.jitsi.meet.sdk.R$attr: int radioButtonStyle
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.uimanager.ViewGroupDrawingOrderHelper mDrawingOrderHelper
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundWithOverlayColor
com.facebook.react.bridge.ProxyJavaScriptExecutor: ProxyJavaScriptExecutor(com.facebook.react.bridge.JavaJSExecutor)
org.webrtc.EglBase: int[] CONFIG_RECORDABLE
okio.Okio: okio.Sink sink(java.io.OutputStream)
org.jitsi.meet.sdk.R$style: int Theme_FullScreenDialogAnimatedSlide
okio.Buffer: okio.BufferedSink emit()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMarginAuto(long,int)
com.facebook.yoga.YogaExperimentalFeature
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirty(long)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getNestedScrollAxes()
com.facebook.react.bridge.ReactMarker: void addFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.facebook.drawee.view.DraweeView
okhttp3.internal.http.RealResponseBody: RealResponseBody(java.lang.String,long,okio.BufferedSource)
okhttp3.Cache: int VERSION
org.webrtc.EglBase$ConfigBuilder: int[] createConfigAttributes()
com.facebook.react.bridge.Inspector$LocalConnection
org.webrtc.Metrics: Metrics()
org.jitsi.meet.R$drawable: int notification_action_background
org.webrtc.CameraVideoCapturer$CameraStatistics$1: CameraVideoCapturer$CameraStatistics$1(org.webrtc.CameraVideoCapturer$CameraStatistics)
com.facebook.react.modules.vibration.VibrationModule: java.lang.String NAME
com.google.android.gms.measurement.AppMeasurement: void setConditionalUserProperty(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty)
org.webrtc.NativeCapturerObserver: NativeCapturerObserver(long)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
org.jitsi.meet.R$id: int split_action_bar
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Header$Listener headersListener
com.google.android.gms.internal.measurement.zzcd$zzi
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleCallExceptionHandler mNativeModuleCallExceptionHandler
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_0
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$WebsocketExecutorTimeoutException
org.webrtc.voiceengine.WebRtcAudioRecord: org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordSamplesReadyCallback access$700()
org.webrtc.TextureBufferImpl: org.webrtc.VideoFrame$I420Buffer toI420()
com.facebook.yoga.YogaAlign: com.facebook.yoga.YogaAlign[] values()
com.horcrux.svg.R$attr: int editTextStyle
androidx.appcompat.app.AlertController$RecycleListView
com.facebook.react.bridge.Arguments$1: java.lang.Object get(int)
org.jitsi.meet.R$styleable: int Toolbar_contentInsetRight
org.webrtc.DataChannel$Observer: void onStateChange()
com.zmxv.RNSound.RNSoundModule: void setCategory(java.lang.String,java.lang.Boolean)
com.facebook.react.views.image.ReactImageView: void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)
org.jitsi.meet.sdk.R$styleable: int GradientColor_android_startY
com.facebook.react.modules.fresco.FrescoModule: boolean mClearOnDestroy
org.jitsi.meet.sdk.R$style: int Base_DialogWindowTitleBackground_AppCompat
org.webrtc.EglBase10Impl: void createPbufferSurface(int,int)
org.webrtc.EglBase14Impl: void makeCurrent()
com.horcrux.svg.SvgView: void setBbHeight(com.facebook.react.bridge.Dynamic)
okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)
okhttp3.internal.http2.Http2Reader: boolean client
org.jitsi.meet.sdk.R$styleable: int AlertDialog_listLayout
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CONVERT_CONSTANTS_END
org.jitsi.meet.sdk.R$style: int Base_V23_Theme_AppCompat
com.facebook.react.devsupport.DevServerHelper$10
org.jitsi.meet.R$dimen: int abc_action_bar_subtitle_top_margin_material
org.jitsi.meet.R$attr: int textAppearanceSearchResultSubtitle
com.horcrux.svg.R$style: int Theme_AppCompat_Light_DarkActionBar
com.facebook.react.modules.toast.ToastModule: java.lang.String NAME
org.webrtc.VideoEncoder: boolean isHardwareEncoder()
org.webrtc.voiceengine.WebRtcAudioRecord: int BUFFER_SIZE_FACTOR
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
okhttp3.internal.connection.RealConnection: long idleAtNanos
org.webrtc.PeerConnection$AdapterType
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
org.jitsi.meet.R$color: int primary_dark_material_light
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
androidx.fragment.app.FragmentActivity: void onResumeFragments()
org.jitsi.meet.sdk.R$dimen: int abc_text_size_display_3_material
org.jitsi.meet.sdk.ProximityModule$1: void run()
org.jitsi.meet.sdk.R$color: int secondary_text_disabled_material_dark
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte EXCEPTION_MARKER
org.jitsi.meet.R$attr: int ratingBarStyle
org.webrtc.audio.JavaAudioDeviceModule$Builder: boolean useHardwareAcousticEchoCanceler
org.jitsi.meet.sdk.R$styleable: int Toolbar_title
com.horcrux.svg.SvgViewModule: java.lang.String getName()
androidx.appcompat.widget.AppCompatSpinner
com.facebook.react.modules.camera.ImageEditingManager
com.zmxv.RNSound.RNSoundModule: java.util.Map getConstants()
okio.Pipe$PipeSource: okio.Pipe this$0
com.google.android.gms.internal.measurement.zzcd$zzg: long zzal
org.webrtc.CameraCapturer
com.facebook.react.devsupport.DevServerHelper: int LONG_POLL_KEEP_ALIVE_DURATION_MS
org.webrtc.WrappedNativeVideoEncoder: org.webrtc.VideoCodecStatus encode(org.webrtc.VideoFrame,org.webrtc.VideoEncoder$EncodeInfo)
org.jitsi.meet.sdk.R$anim: int btn_radio_to_on_mtrl_ring_outer_path_animation
com.learnium.RNDeviceInfo.RNDeviceModule: boolean access$500(com.learnium.RNDeviceInfo.RNDeviceModule)
com.horcrux.svg.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
org.jitsi.meet.R$attr: int fontStyle
com.kevinresol.react_native_default_preference.RNDefaultPreferenceModule: android.content.SharedPreferences getPreferences()
com.facebook.react.modules.core.Timing: float IDLE_CALLBACK_FRAME_DEADLINE_MS
com.horcrux.svg.RenderableViewManager: void onAfterUpdateTransaction(com.horcrux.svg.VirtualView)
org.jitsi.meet.R$styleable: int StateListDrawable_android_dither
com.horcrux.svg.SvgView: boolean mResponsible
org.webrtc.CameraEnumerationAndroid$CaptureFormat: int imageFormat
org.jitsi.meet.R$drawable: int common_google_signin_btn_text_light_focused
com.reactnativecommunity.webview.RNCWebViewModule: android.content.Intent getFileChooserIntent(java.lang.String)
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Display1
org.webrtc.CameraCapturer: org.webrtc.CameraSession$CreateSessionCallback createSessionCallback
com.horcrux.svg.SvgView: void setVbWidth(float)
org.webrtc.MediaStream: void addNativeVideoTrack(long)
com.horcrux.svg.R$styleable: int AppCompatTheme_listDividerAlertDialog
okhttp3.Response: java.util.List headers(java.lang.String)
okhttp3.Cache$CacheRequestImpl$1: Cache$CacheRequestImpl$1(okhttp3.Cache$CacheRequestImpl,okio.Sink,okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor)
org.webrtc.YuvHelper: void I420ToNV12(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int)
okhttp3.Dispatcher
org.jitsi.meet.R$drawable: int abc_list_selector_holo_dark
com.horcrux.svg.R$style: int Widget_AppCompat_ActionBar
okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.facebook.react.animated.NativeAnimatedModule: void onHostResume()
org.jitsi.meet.sdk.R$attr: int buttonCompat
okhttp3.ResponseBody: okhttp3.MediaType contentType()
okhttp3.Cookie: java.lang.String parseDomain(java.lang.String)
org.jitsi.meet.sdk.DropboxModule: java.util.Map getConstants()
org.webrtc.IceCandidate: int sdpMLineIndex
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.facebook.react.views.textinput.ReactEditText: void setInputType(int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: AccessibilityInfoModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.EventListener: void responseHeadersStart(okhttp3.Call)
org.jitsi.meet.R$drawable
com.horcrux.svg.R$drawable: int abc_cab_background_internal_bg
org.jitsi.meet.sdk.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
com.facebook.react.views.view.ReactViewGroup: java.lang.String getOverflow()
com.horcrux.svg.RectView: void setRx(com.facebook.react.bridge.Dynamic)
org.webrtc.DataChannel$Init: int maxRetransmitTimeMs
org.webrtc.MediaCodecVideoDecoderFactory: boolean isCodecAllowed(android.media.MediaCodecInfo)
org.jitsi.meet.R$attr: int titleMarginBottom
org.jitsi.meet.sdk.R$string: int catalyst_debug_stop
com.facebook.react.bridge.queue.MessageQueueThread: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
org.jitsi.meet.sdk.R$styleable: int Toolbar_navigationIcon
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Body1
org.jitsi.meet.R$styleable: int AppCompatTextView_autoSizeMinTextSize
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_placeholderImageScaleType
org.webrtc.Camera2Capturer: void dispose()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
com.facebook.react.devsupport.DoubleTapReloadRecognizer: boolean mDoRefresh
com.ocetnik.timer.BackgroundTimerModule: java.lang.String getName()
okio.RealBufferedSource: void close()
com.oney.WebRTCModule.WebRTCModule: org.webrtc.PeerConnectionFactory mFactory
org.webrtc.audio.VolumeLogger: android.media.AudioManager audioManager
org.jitsi.meet.sdk.BroadcastEvent$Type: java.lang.String CONFERENCE_TERMINATED_NAME
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager(com.facebook.react.views.scroll.FpsListener)
org.jitsi.meet.R$id: int accessibility_custom_action_1
com.facebook.react.devsupport.RedBoxHandler: void handleRedbox(java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[],com.facebook.react.devsupport.RedBoxHandler$ErrorType)
org.jitsi.meet.sdk.R$attr: int textAppearanceLargePopupMenu
com.horcrux.svg.R$style: int AlertDialog_AppCompat_Light
org.jitsi.meet.sdk.R$color: int abc_btn_colored_borderless_text_material
org.jitsi.meet.sdk.WiFiStatsModule$1: org.jitsi.meet.sdk.WiFiStatsModule this$0
org.webrtc.PeerConnectionFactory: java.lang.String VIDEO_FRAME_EMIT_TRIAL
org.jitsi.meet.R$string: int ongoing_notification_action_mute
com.horcrux.svg.R$attr: int backgroundTintMode
com.facebook.react.bridge.WritableNativeMap: void mergeNativeMap(com.facebook.react.bridge.ReadableNativeMap)
org.webrtc.NetworkMonitorAutoDetect: long networkToNetId(android.net.Network)
org.jitsi.meet.R$style: int Widget_AppCompat_Button_Colored
okhttp3.MultipartBody$Builder: okio.ByteString boundary
org.jitsi.meet.sdk.R$styleable: int[] AppCompatTheme
org.jitsi.meet.sdk.R$styleable: int[] TextAppearance
org.jitsi.meet.R$attr: int pressedStateOverlayImage
org.jitsi.meet.R$styleable: int ActionBar_backgroundSplit
org.webrtc.CameraEnumerationAndroid: java.lang.String TAG
org.jitsi.meet.sdk.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
okhttp3.Headers$Builder: java.lang.String get(java.lang.String)
org.jitsi.meet.sdk.R$anim: int catalyst_push_up_in
okio.RealBufferedSink$1: void write(byte[],int,int)
org.jitsi.meet.sdk.R$raw
org.webrtc.voiceengine.WebRtcAudioManager: boolean init()
org.webrtc.GlShader: java.lang.String TAG
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient,java.util.List)
com.facebook.react.fabric.mounting.mountitems.BatchMountItem
org.webrtc.MediaCodecVideoDecoderFactory: MediaCodecVideoDecoderFactory(org.webrtc.EglBase$Context,org.webrtc.Predicate)
org.webrtc.VideoCodecInfo: java.util.Map params
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.reactnativecommunity.webview.RNCWebViewModule: void onShouldStartLoadWithRequestCallback(boolean,int)
okio.ByteString: java.lang.String utf8()
org.webrtc.RtpParameters$Rtcp: boolean getReducedSize()
com.horcrux.svg.R$style: int Theme
okio.Segment: byte[] data
com.facebook.react.devsupport.DevServerHelper$1$4: com.facebook.react.devsupport.DevServerHelper$1 this$1
org.webrtc.PeerConnection$CandidateNetworkPolicy: org.webrtc.PeerConnection$CandidateNetworkPolicy valueOf(java.lang.String)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
org.webrtc.audio.WebRtcAudioRecord: java.util.concurrent.ScheduledExecutorService newDefaultScheduler()
okhttp3.internal.huc.OutputStreamRequestBody: boolean isClosed()
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptBeforeContentLoadedForMainFrameOnly(android.webkit.WebView,boolean)
com.horcrux.svg.R$id: int accessibility_state
org.jitsi.meet.R$id: int fitStart
org.jitsi.meet.R$styleable: int SimpleDraweeView_actualImageResource
org.jitsi.meet.R$attr: int imageButtonStyle
okhttp3.internal.platform.Jdk9Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.react.devsupport.RedBoxDialog: void resetReporting()
okio.Buffer$1: void write(int)
okhttp3.internal.http2.Http2: byte FLAG_END_HEADERS
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()
org.webrtc.PeerConnection: PeerConnection(long)
okhttp3.internal.http2.Http2Reader$Handler: void settings(boolean,okhttp3.internal.http2.Settings)
org.jitsi.meet.sdk.R$color: int bright_foreground_material_light
androidx.viewpager.widget.ViewPager: int getCurrentItem()
org.webrtc.RtcCertificatePem
org.jitsi.meet.R$style: int Widget_AppCompat_ActionButton_CloseMode
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Tooltip
org.jitsi.meet.R$attr: int colorSwitchThumbNormal
com.google.android.gms.internal.measurement.zzcd$zza: com.google.android.gms.internal.measurement.zzjp zzi
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getInstallReferrerSync()
org.webrtc.MediaSource$State: org.webrtc.MediaSource$State ENDED
com.horcrux.svg.R$styleable: int AppCompatTheme_tooltipForegroundColor
org.jitsi.meet.R$attr: int roundAsCircle
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.Class)
org.webrtc.audio.WebRtcAudioRecord: int AUDIO_RECORD_STOP
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Type: com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Type[] values()
org.jitsi.meet.sdk.DropboxModule: boolean isEnabled
com.facebook.react.devsupport.DevSupportManagerImpl$29: com.facebook.react.devsupport.DevSupportManagerImpl this$0
okhttp3.CipherSuite: java.lang.String secondaryName(java.lang.String)
com.facebook.react.bridge.ReactCallback: void onBatchComplete()
com.facebook.react.views.textinput.ReactTextInputManager: void setCursorColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
org.webrtc.RendererCommon: float convertScalingTypeToVisibleFraction(org.webrtc.RendererCommon$ScalingType)
org.webrtc.PeerConnectionFactory: org.webrtc.PeerConnection createPeerConnection(java.util.List,org.webrtc.MediaConstraints,org.webrtc.PeerConnection$Observer)
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_failureImage
com.horcrux.svg.R$xml: int rn_dev_preferences
okhttp3.MultipartBody: okio.ByteString boundary
org.jitsi.meet.sdk.R$styleable: int MenuView_subMenuArrow
com.reactnativecommunity.webview.RNCWebViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.R$dimen: int abc_text_size_body_1_material
com.horcrux.svg.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
com.facebook.react.devsupport.DevServerHelper$9: void run()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionModeCutDrawable
okhttp3.internal.http.HttpHeaders: void parseChallengeHeader(java.util.List,okio.Buffer)
org.webrtc.audio.LowLatencyAudioBufferManager: void maybeAdjustBufferSize(android.media.AudioTrack)
org.jitsi.meet.R$styleable: int Toolbar_android_gravity
org.webrtc.CryptoOptions$SFrame: boolean requireFrameEncryption
org.webrtc.Camera2Session: org.webrtc.Histogram access$1800()
org.jitsi.meet.R$layout: int abc_action_bar_up_container
com.facebook.jni.NativeRunnable: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.ImageView: void setSrc(com.facebook.react.bridge.ReadableMap)
org.webrtc.H264Utils: boolean isSameH264Profile(java.util.Map,java.util.Map)
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight_Dialog
okio.Buffer: okio.ByteString readByteString()
org.jitsi.meet.sdk.BaseReactView: com.facebook.react.ReactRootView reactRootView
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String getName()
org.webrtc.NetworkChangeDetector$NetworkInformation: org.webrtc.NetworkChangeDetector$ConnectionType type
org.jitsi.meet.sdk.OngoingConferenceTracker: org.jitsi.meet.sdk.OngoingConferenceTracker getInstance()
com.facebook.react.fabric.ComponentFactoryDelegate: ComponentFactoryDelegate()
org.jitsi.meet.R$raw
com.facebook.react.views.modal.ReactModalHostView: void setOnRequestCloseListener(com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener)
com.horcrux.svg.R$id: int rn_redbox_report_button
com.google.android.gms.internal.measurement.zzbv$zzb: boolean zzi
org.jitsi.meet.R$styleable: int AppCompatTextHelper_android_drawableEnd
com.facebook.yoga.YogaNative: void jni_YGNodeMarkDirtyAndPropogateToDescendants(long)
org.jitsi.meet.sdk.R$anim: int btn_radio_to_off_mtrl_ring_outer_animation
com.horcrux.svg.R$string: int link_description
org.webrtc.CameraEnumerationAndroid$CaptureFormat: int hashCode()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setY(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.platform.OptionalMethod: OptionalMethod(java.lang.Class,java.lang.String,java.lang.Class[])
org.jitsi.meet.sdk.R$attr: int buttonSize
org.jitsi.meet.R$color: int abc_primary_text_disable_only_material_dark
org.jitsi.meet.sdk.R$color: int material_blue_grey_950
org.jitsi.meet.sdk.R$id: int right_side
org.webrtc.CameraCapturer: void access$1600(org.webrtc.CameraCapturer,org.webrtc.CameraVideoCapturer$CameraSwitchHandler,java.lang.String)
org.jitsi.meet.sdk.R$raw: int lang_languagesru
com.horcrux.svg.RenderableViewManager$TextViewManager: RenderableViewManager$TextViewManager(com.horcrux.svg.RenderableViewManager$SVGClass)
androidx.activity.ComponentActivity: java.lang.Object getLastCustomNonConfigurationInstance()
okhttp3.CipherSuite: java.util.Map INSTANCES
org.webrtc.NetworkMonitorAutoDetect$SimpleNetworkCallback: void onNetworkChanged(android.net.Network)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
org.webrtc.StatsReport: double timestamp
org.webrtc.LibvpxVp9Decoder: long createNativeVideoDecoder()
org.jitsi.meet.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
org.webrtc.NativePeerConnectionFactory: long createNativePeerConnection()
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowColor(int)
org.webrtc.PeerConnection$SignalingState: org.webrtc.PeerConnection$SignalingState HAVE_REMOTE_OFFER
org.webrtc.EncodedImage$Builder: org.webrtc.EncodedImage$FrameType frameType
okhttp3.internal.cache.DiskLruCache$Editor: okio.Sink newSink(int)
com.facebook.react.modules.debug.DevSettingsModule: void reload()
com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior: com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior valueOf(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetJustifyContent(long,int)
com.dropbox.core.v2.users.SpaceAllocation$Tag: com.dropbox.core.v2.users.SpaceAllocation$Tag valueOf(java.lang.String)
androidx.fragment.app.Fragment: boolean equals(java.lang.Object)
org.jitsi.meet.sdk.R$dimen: int tooltip_margin
org.jitsi.meet.sdk.R$attr: int buttonBarStyle
org.webrtc.voiceengine.WebRtcAudioEffects: boolean isAcousticEchoCancelerBlacklisted()
com.facebook.react.views.textinput.ReactEditText: int getStagedInputType()
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
org.jitsi.meet.R$styleable: int MenuItem_android_icon
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
org.jitsi.meet.R$attr: int commitIcon
androidx.lifecycle.ReportFragment$LifecycleCallbacks
org.webrtc.DefaultVideoDecoderFactory: DefaultVideoDecoderFactory(org.webrtc.VideoDecoderFactory)
org.webrtc.GlUtil: GlUtil()
com.learnium.RNDeviceInfo.RNDeviceModule: double getFirstInstallTimeSync()
org.webrtc.SessionDescription$Type: org.webrtc.SessionDescription$Type fromCanonicalForm(java.lang.String)
org.webrtc.PeerConnection$IceTransportsType: org.webrtc.PeerConnection$IceTransportsType[] $VALUES
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.webrtc.RtpTransceiver: org.webrtc.MediaStreamTrack$MediaType getMediaType()
org.webrtc.MediaSource
org.jitsi.meet.sdk.R$styleable: int AnimatedStateListDrawableItem_android_id
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
org.jitsi.meet.sdk.R$attr: int actionBarWidgetTheme
org.webrtc.CryptoOptions$Builder: CryptoOptions$Builder()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Reader reader
org.jitsi.meet.R$styleable: int ActionBar_logo
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1
org.jitsi.meet.sdk.R$attr: int spinBars
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getEnterTransitionCallback()
com.facebook.react.devsupport.interfaces.DevSupportManager: boolean getDevSupportEnabled()
com.facebook.react.bridge.WritableArray: void pushArray(com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.sdk.R$attr: int actionModeBackground
org.jitsi.meet.R$drawable: int abc_vector_test
okio.ForwardingSource: ForwardingSource(okio.Source)
com.facebook.react.modules.core.Timing: java.lang.Object access$200(com.facebook.react.modules.core.Timing)
okhttp3.internal.Util: boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit)
org.webrtc.FrameEncryptor
okhttp3.MediaType: java.nio.charset.Charset charset()
okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)
org.jitsi.meet.R$style: int SplashScreen_SplashAnimation
okio.RealBufferedSource: int select(okio.Options)
org.jitsi.meet.sdk.R$raw: int lang_languagesoc
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.facebook.react.devsupport.InspectorPackagerConnection: void handleConnect(org.json.JSONObject)
com.facebook.react.bridge.CatalystInstanceImpl: boolean mInitialized
com.facebook.react.devsupport.RedBoxDialog$StackAdapter: RedBoxDialog$StackAdapter(java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[])
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedPathSegment(int,java.lang.String)
com.facebook.yoga.YogaWrap
com.facebook.react.views.slider.ReactSliderManager: java.lang.String REACT_CLASS
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Body2
org.webrtc.TextureBufferImpl: int width
org.jitsi.meet.R$raw: int lang_languageszhcn
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
org.jitsi.meet.R$id: int action_container
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
org.devio.rn.splashscreen.SplashScreenModule: void show()
com.horcrux.svg.R$styleable: int AppCompatTextView_lineHeight
androidx.activity.ImmLeaksCleaner
okio.RealBufferedSink: okio.BufferedSink write(okio.Source,long)
co.apptailor.googlesignin.RNGoogleSigninButtonViewManager: RNGoogleSigninButtonViewManager()
com.horcrux.svg.SvgPackage: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.devsupport.WebsocketJavaScriptExecutor: com.facebook.react.devsupport.JSDebuggerWebSocketClient access$102(com.facebook.react.devsupport.WebsocketJavaScriptExecutor,com.facebook.react.devsupport.JSDebuggerWebSocketClient)
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_placeholderImageScaleType
okhttp3.RequestBody$1: okhttp3.MediaType val$contentType
org.webrtc.PeerConnectionFactory$Options: int ADAPTER_TYPE_ANY
okhttp3.internal.huc.OkHttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)
com.facebook.react.bridge.DynamicFromArray: androidx.core.util.Pools$SimplePool sPool
org.jitsi.meet.R$id: int titleDividerNoCustom
com.zmxv.RNSound.RNSoundModule: void prepare(java.lang.String,java.lang.Double,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
okio.RealBufferedSink$1: RealBufferedSink$1(okio.RealBufferedSink)
com.facebook.react.uimanager.UIManagerModule: void sendAccessibilityEvent(int,int)
com.facebook.react.views.art.ARTRenderableViewManager: java.lang.String CLASS_TEXT
org.jitsi.meet.R$id: int icon_only
com.horcrux.svg.R$styleable: int AppCompatTheme_dialogPreferredPadding
okhttp3.CertificatePinner$Pin: okio.ByteString hash
com.facebook.react.modules.share.ShareModule
com.facebook.react.devsupport.DevSupportManagerImpl: void showNewError(java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[],int,com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType)
okhttp3.internal.NamedRunnable: java.lang.String name
okhttp3.OkHttpClient$1: boolean isInvalidHttpUrlHost(java.lang.IllegalArgumentException)
org.jitsi.meet.sdk.BaseReactView: java.util.ArrayList getViews()
com.horcrux.svg.RenderableView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
okhttp3.internal.Util$2
org.webrtc.CameraCapturer: org.webrtc.CameraSession currentSession
org.webrtc.ScreenCapturerAndroid: void checkNotDisposed()
com.learnium.RNDeviceInfo.RNDeviceModule: void getIpAddress(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$SymbolManager: RenderableViewManager$SymbolManager()
okhttp3.RealCall: okhttp3.RealCall clone()
androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)
okhttp3.internal.http2.Hpack$Reader: java.util.List getAndResetHeaderList()
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: int mLine
com.reactnativecommunity.webview.RNCWebViewModule: java.io.File outputImage
com.horcrux.svg.R$drawable: int abc_text_select_handle_right_mtrl_dark
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
org.webrtc.VideoFrameDrawer: void drawFrame(org.webrtc.VideoFrame,org.webrtc.RendererCommon$GlDrawer,android.graphics.Matrix,int,int,int,int)
org.jitsi.meet.sdk.R$styleable: int AppCompatTextHelper_android_textAppearance
org.jitsi.meet.sdk.R$dimen: int notification_action_text_size
org.jitsi.meet.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
org.jitsi.meet.sdk.R$xml: int file_provider_paths
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeightPercent(long,float)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.sdk.R$attr: int imageButtonStyle
org.webrtc.audio.WebRtcAudioRecord$1: java.lang.Thread newThread(java.lang.Runnable)
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
org.webrtc.MediaStream: boolean removeTrack(org.webrtc.AudioTrack)
org.jitsi.meet.sdk.R$string: int combobox_description
org.jitsi.meet.sdk.AudioModeModule: boolean useConnectionService_
org.jitsi.meet.R$color: int abc_hint_foreground_material_dark
com.facebook.react.bridge.JavaOnlyArray: void pushInt(int)
org.jitsi.meet.sdk.LogBridgeModule: void info(java.lang.String)
okhttp3.internal.http2.Http2Writer: void rstStream(int,okhttp3.internal.http2.ErrorCode)
com.horcrux.svg.R$attr: int actionBarTheme
com.facebook.react.modules.camera.ImageEditingManager: void copyExif(android.content.Context,android.net.Uri,java.io.File)
okhttp3.internal.http2.Http2Connection: int openStreamCount()
org.webrtc.RtpTransceiver$RtpTransceiverDirection: org.webrtc.RtpTransceiver$RtpTransceiverDirection fromNativeIndex(int)
com.facebook.react.bridge.WritableArray: void pushInt(int)
okhttp3.internal.platform.ConscryptPlatform: java.security.Provider getProvider()
com.facebook.react.devsupport.DevSupportManagerImpl$17: com.facebook.react.devsupport.DevSupportManagerImpl this$0
org.webrtc.HardwareVideoEncoder$YuvFormat: org.webrtc.HardwareVideoEncoder$YuvFormat valueOf(int)
com.horcrux.svg.RenderableViewManager$GroupViewManager: RenderableViewManager$GroupViewManager(com.horcrux.svg.RenderableViewManager$SVGClass)
com.facebook.react.bridge.WritableNativeMap: void merge(com.facebook.react.bridge.ReadableMap)
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
okio.ForwardingSink: java.lang.String toString()
okhttp3.internal.Internal
okhttp3.EventListener: void requestHeadersEnd(okhttp3.Call,okhttp3.Request)
org.webrtc.voiceengine.BuildInfo: java.lang.String getBuildType()
org.jitsi.meet.sdk.BroadcastEvent$Type: org.jitsi.meet.sdk.BroadcastEvent$Type access$100(java.lang.String)
org.webrtc.PeerConnectionFactory$InitializationOptions$Builder: org.webrtc.PeerConnectionFactory$InitializationOptions$Builder setNativeLibraryName(java.lang.String)
com.facebook.react.views.art.ARTShapeShadowNode: void setStroke(com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action: org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action UNMUTE
okio.Buffer$2: java.lang.String toString()
org.jitsi.meet.R$styleable: int SwitchCompat_thumbTint
okhttp3.internal.http2.Http2: byte TYPE_SETTINGS
org.jitsi.meet.R$style: int Platform_V25_AppCompat
com.facebook.react.devsupport.InspectorPackagerConnection: void sendEventToAllConnections(java.lang.String)
com.horcrux.svg.TextPathView
org.jitsi.meet.sdk.BroadcastAction: com.facebook.react.bridge.WritableNativeMap getDataAsWritableNativeMap()
org.jitsi.meet.sdk.R$anim: int abc_tooltip_exit
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
com.horcrux.svg.R$id: int customPanel
com.reactnativecommunity.webview.RNCWebViewManager: void onDropViewInstance(android.webkit.WebView)
org.jitsi.meet.R$style: int Theme_AppCompat_Dialog_MinWidth
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ActionMode
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_END
okhttp3.internal.ws.RealWebSocket$Message
okhttp3.internal.http.StatusLine
com.horcrux.svg.R$styleable: int SimpleDraweeView_pressedStateOverlayImage
com.facebook.react.modules.network.NetworkingModule: boolean shouldDispatch(long,long)
com.horcrux.svg.R$attr: int titleMarginStart
okhttp3.internal.cache.DiskLruCache: long ANY_SEQUENCE_NUMBER
okio.Buffer: okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset)
okio.HashingSink: okio.HashingSink hmacSha256(okio.Sink,okio.ByteString)
org.webrtc.voiceengine.WebRtcAudioTrack: boolean access$500()
com.facebook.react.devsupport.DevSupportManagerImpl: void onPackagerReloadCommand()
com.facebook.jni.HybridData
org.jitsi.meet.sdk.R$anim: int btn_checkbox_to_checked_icon_null_animation
org.webrtc.FileVideoCapturer$1: void run()
okhttp3.internal.connection.RouteSelector$Selection
com.horcrux.svg.R$integer: int abc_config_activityShortDur
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection
org.webrtc.ScreenCapturerAndroid: void onFrame(org.webrtc.VideoFrame)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
com.facebook.react.devsupport.DevSupportManagerImpl$6: void onOptionSelected()
org.webrtc.NetworkMonitor: void notifyObserversOfNetworkPreference(java.util.List,int)
okhttp3.internal.Util: okio.ByteString UTF_16_LE_BOM
okhttp3.internal.http2.Http2Reader: void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
org.jitsi.meet.R$raw: int lang_languageseo
org.webrtc.EglRenderer$HandlerWithExceptionCallback: void dispatchMessage(android.os.Message)
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.interfaces.StackFrame[] getLastErrorStack()
org.webrtc.NativeAndroidVideoTrackSource: void nativeSetState(long,boolean)
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
okhttp3.internal.http2.Settings: int MAX_HEADER_LIST_SIZE
com.horcrux.svg.R$drawable: int abc_textfield_activated_mtrl_alpha
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_panelMenuListTheme
com.facebook.react.bridge.JavaOnlyMap: int hashCode()
org.webrtc.RtpParameters$Encoding: RtpParameters$Encoding(java.lang.String,boolean,java.lang.Double)
com.facebook.imagepipeline.memory.NativeMemoryChunk
okhttp3.HttpUrl: java.lang.String queryParameter(java.lang.String)
com.facebook.react.views.image.ReactImageManager: void onAfterUpdateTransaction(com.facebook.react.views.image.ReactImageView)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createRemoteDebuggerBundleLoader(java.lang.String,java.lang.String)
okio.AsyncTimeout$Watchdog: AsyncTimeout$Watchdog()
co.apptailor.googlesignin.RNGoogleSigninButtonViewManager: void setColor(com.google.android.gms.common.SignInButton,int)
okhttp3.Cache: boolean isClosed()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzw,long)
okhttp3.Cookie: java.lang.String toString()
com.horcrux.svg.R$attr: int autoSizeMinTextSize
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.Dynamic getDynamic(int)
org.jitsi.meet.R$styleable: int ActionBar_itemPadding
com.horcrux.svg.R$styleable: int AlertDialog_buttonIconDimen
okhttp3.internal.http2.Http2Connection$ReaderRunnable: Http2Connection$ReaderRunnable(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader)
okhttp3.MultipartBody: okhttp3.MediaType type()
org.jitsi.meet.sdk.R$attr: int titleMargins
org.webrtc.CameraVideoCapturer$CameraStatistics: void checkThread()
org.webrtc.LibvpxVp8Encoder: long createNativeVideoEncoder()
okhttp3.CacheControl: boolean isPrivate()
com.horcrux.svg.R$styleable: int[] AnimatedStateListDrawableCompat
okhttp3.CookieJar: okhttp3.CookieJar NO_COOKIES
com.facebook.react.devsupport.DisabledDevSupportManager: void isPackagerRunning(com.facebook.react.devsupport.interfaces.PackagerStatusCallback)
com.facebook.react.views.view.ReactViewManager: void removeViewAt(com.facebook.react.views.view.ReactViewGroup,int)
okhttp3.ConnectionSpec: java.util.List cipherSuites()
com.facebook.react.devsupport.BundleDeltaClient: void reset()
com.reactnativecommunity.webview.RNCWebViewManager: void setUserAgent(android.webkit.WebView,java.lang.String)
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$000(com.facebook.react.modules.websocket.WebSocketModule)
org.webrtc.NetworkMonitor$NetworkObserver: void onConnectionTypeChanged(org.webrtc.NetworkChangeDetector$ConnectionType)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_START
okhttp3.internal.cache.CacheRequest
com.horcrux.svg.R$style: int Base_V26_Theme_AppCompat_Light
org.jitsi.meet.R$raw: int lang_languageshu
com.horcrux.svg.R$attr: int closeItemLayout
com.horcrux.svg.R$id: int tabMode
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setText(java.lang.String)
org.jitsi.meet.R$styleable: int AppCompatTheme_colorPrimary
org.webrtc.Camera2Session: android.hardware.camera2.CameraManager cameraManager
org.jitsi.meet.sdk.R$styleable: int Toolbar_buttonGravity
org.jitsi.meet.sdk.R$string: int catalyst_debug_connecting
org.webrtc.AudioProcessingFactory
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.facebook.yoga.YogaNode: YogaNode()
okhttp3.internal.ws.RealWebSocket: int receivedPingCount
org.jitsi.meet.R$color: int bright_foreground_material_light
com.horcrux.svg.RenderableViewManager$RenderableShadowNode
com.facebook.react.devsupport.DevSupportManagerImpl$23
org.webrtc.ContextUtils: android.content.Context getApplicationContext()
com.horcrux.svg.R$string: int catalyst_debug
org.webrtc.CameraCapturer: int OPEN_CAMERA_DELAY_MS
okhttp3.Route: boolean equals(java.lang.Object)
com.facebook.react.bridge.ActivityEventListener: void onActivityResult(android.app.Activity,int,int,android.content.Intent)
com.facebook.react.modules.dialog.DialogModule: DialogModule(com.facebook.react.bridge.ReactApplicationContext)
org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger$LogVolumeTask: org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger this$0
org.jitsi.meet.R$attr: int colorPrimaryDark
org.jitsi.meet.R$styleable: int GradientColor_android_tileMode
org.jitsi.meet.R$dimen: int abc_text_size_display_4_material
okhttp3.Response$Builder: Response$Builder(okhttp3.Response)
org.webrtc.VideoCodecStatus: org.webrtc.VideoCodecStatus MEMORY
org.jitsi.meet.sdk.R$attr: int colorPrimary
com.google.android.gms.common.api.ResolvableApiException
com.facebook.react.views.textinput.ReactEditText: com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator getTextWatcherDelegator()
org.jitsi.meet.sdk.R$attr: int listPreferredItemPaddingRight
org.jitsi.meet.R$style: int Animation_AppCompat_Dialog
okhttp3.Handshake: java.security.Principal localPrincipal()
okio.RealBufferedSink: okio.BufferedSink writeDecimalLong(long)
com.facebook.react.modules.toast.ToastModule
okhttp3.internal.huc.OutputStreamRequestBody$1: long bytesReceived
org.jitsi.meet.R$attr: int collapseContentDescription
org.webrtc.SurfaceViewRenderer: void onLayout(boolean,int,int,int,int)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.R$id: int search_go_btn
com.facebook.react.views.slider.ReactSliderManager: void setMaximumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
okhttp3.internal.cache.CacheStrategy$Factory
org.jitsi.meet.R$attr: int colorScheme
org.webrtc.HardwareVideoEncoder$YuvFormat: org.webrtc.HardwareVideoEncoder$YuvFormat NV12
com.reactnativecommunity.webview.RNCWebViewManager: void setSupportMultipleWindows(android.webkit.WebView,boolean)
okhttp3.internal.cache.CacheInterceptor$1: okhttp3.internal.cache.CacheRequest val$cacheRequest
com.facebook.react.bridge.ReadableMap: double getDouble(java.lang.String)
org.webrtc.VideoCodecType: int VIDEO_CODEC_H264
com.horcrux.svg.R$style: int TextAppearance_AppCompat
com.horcrux.svg.R$dimen: int abc_dropdownitem_text_padding_left
okhttp3.Response: int code
okio.Okio$2: java.lang.String toString()
org.webrtc.audio.WebRtcAudioRecord: boolean startRecording()
org.webrtc.MediaCodecUtils: boolean isHardwareAccelerated(android.media.MediaCodecInfo)
com.horcrux.svg.RenderableViewManager: void setStrokeLinejoin(com.horcrux.svg.RenderableView,int)
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light_Dialog
okhttp3.Cookie: int hashCode()
okhttp3.internal.huc.OkHttpURLConnection: java.lang.Throwable callFailure
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_colorBackgroundFloating
org.webrtc.CameraVideoCapturer$CameraStatistics$1: void run()
org.jitsi.meet.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
org.webrtc.EglBase10Impl: javax.microedition.khronos.egl.EGLDisplay getEglDisplay()
org.jitsi.meet.R$drawable: int common_google_signin_btn_text_dark_focused
com.oney.WebRTCModule.WebRTCModule: void peerConnectionSetRemoteDescriptionAsync(com.facebook.react.bridge.ReadableMap,int,com.facebook.react.bridge.Callback)
com.google.android.gms.internal.measurement.zzcd$zzc: int zzh
okio.AsyncTimeout$Watchdog: void run()
com.facebook.react.bridge.PromiseImpl: PromiseImpl(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.textinput.ReactTextInputManager: void setCaretHidden(com.facebook.react.views.textinput.ReactEditText,boolean)
org.webrtc.Logging$TraceLevel: org.webrtc.Logging$TraceLevel TRACE_MEMORY
org.webrtc.Camera2Enumerator: int getFpsUnitFactor(android.util.Range[])
com.horcrux.svg.R$dimen: int abc_action_bar_default_height_material
okhttp3.internal.http2.Http2: byte FLAG_NONE
okhttp3.internal.http2.Hpack$Writer: int nextHeaderIndex
okhttp3.internal.Util: java.net.InetAddress decodeIpv6(java.lang.String,int,int)
org.jitsi.meet.R$dimen: int highlight_alpha_material_colored
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_activityChooserViewStyle
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
com.reactnativecommunity.webview.RNCWebViewManager: void setScalesPageToFit(android.webkit.WebView,boolean)
com.facebook.react.bridge.queue.MessageQueueThread: boolean isOnThread()
org.webrtc.Camera1Enumerator: java.lang.String[] getDeviceNames()
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String mModule
org.webrtc.Predicate$2: boolean test(java.lang.Object)
com.facebook.react.devsupport.DevSupportManagerImpl: android.app.AlertDialog mDevOptionsDialog
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_pressedStateOverlayImage
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()
org.jitsi.meet.sdk.R$styleable: int MenuItem_iconTintMode
org.webrtc.VideoDecoderFactory: org.webrtc.VideoDecoder createDecoder(java.lang.String)
org.webrtc.GlGenericDrawer: void drawOes(int,float[],int,int,int,int,int,int)
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Medium_Inverse
okio.HashingSink: void write(okio.Buffer,long)
com.facebook.react.views.checkbox.ReactCheckBoxManager: java.lang.String REACT_CLASS
okhttp3.internal.connection.RealConnection: boolean noNewStreams
com.horcrux.svg.R$styleable: int TextAppearance_android_typeface
org.webrtc.DataChannel: void unregisterObserver()
org.webrtc.NetworkMonitor: void updateCurrentConnectionType(org.webrtc.NetworkChangeDetector$ConnectionType)
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbHeight(com.horcrux.svg.PatternView,float)
okio.RealBufferedSink: okio.BufferedSink writeLong(long)
okio.HashingSink: okio.HashingSink sha512(okio.Sink)
org.jitsi.meet.R$id: int homeAsUp
com.horcrux.svg.DefinitionView
okhttp3.FormBody$Builder: java.util.List values
org.jitsi.meet.sdk.OngoingNotification: java.lang.String CHANNEL_NAME
com.facebook.react.bridge.JavaMethodWrapper
org.webrtc.PeerConnection: boolean nativeStartRtcEventLog(int,int)
org.jitsi.meet.R$color: int abc_primary_text_material_light
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: ModuleDescriptor()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(java.time.Duration)
okhttp3.Dns
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getBuildIdSync()
org.jitsi.meet.R$style: int DialogAnimationSlide
org.webrtc.AndroidVideoDecoder: org.webrtc.VideoCodecStatus reinitDecode(int,int)
org.webrtc.CameraCapturer: void dispose()
okhttp3.internal.ws.RealWebSocket: void cancel()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
okhttp3.MediaType: java.lang.String charset
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ActionBar_Solid
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$3: com.facebook.react.devsupport.JSDebuggerWebSocketClient val$client
org.jitsi.meet.sdk.R$styleable: int ActionBar_displayOptions
com.horcrux.svg.R$drawable: int abc_ic_star_half_black_48dp
org.webrtc.EglRenderer$FrameListenerAndParams: org.webrtc.EglRenderer$FrameListener listener
okio.Util: void sneakyRethrow(java.lang.Throwable)
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_roundTopLeft
okio.Buffer: okio.ByteString hmacSha512(okio.ByteString)
org.webrtc.RtpTransceiver: org.webrtc.RtpTransceiver$RtpTransceiverDirection getDirection()
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: android.os.Bundle colorScheme
org.jitsi.meet.R$drawable: int notification_bg_normal
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignContent(long,int)
com.google.android.gms.internal.measurement.zzcd$zze
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason valueOf(java.lang.String)
org.webrtc.SurfaceViewRenderer: void clearImage()
com.horcrux.svg.R$attr: int textAppearanceSmallPopupMenu
com.facebook.react.devsupport.BundleDownloader$1: com.facebook.react.devsupport.BundleDownloader$BundleInfo val$bundleInfo
org.webrtc.WrappedNativeVideoEncoder
com.horcrux.svg.R$styleable: int AppCompatTheme_alertDialogTheme
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_6
org.jitsi.meet.R$color: int common_google_signin_btn_text_dark_default
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_roundTopRight
okhttp3.internal.connection.RealConnection: void onStream(okhttp3.internal.http2.Http2Stream)
okhttp3.internal.http2.Http2Stream: void receiveHeaders(java.util.List)
org.webrtc.EglRenderer: void access$100(org.webrtc.EglRenderer)
com.horcrux.svg.VirtualView: float canvasHeight
com.horcrux.svg.R$dimen: int tooltip_vertical_padding
com.facebook.react.devsupport.DisabledDevSupportManager: void toggleElementInspector()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexShrink(long,float)
org.jitsi.meet.sdk.R$attr: int homeAsUpIndicator
org.jitsi.meet.R$drawable: int abc_ic_search_api_material
com.facebook.react.modules.core.Timing: void access$2000(com.facebook.react.modules.core.Timing)
okhttp3.Response$Builder: okhttp3.Response$Builder receivedResponseAtMillis(long)
com.facebook.react.views.art.ARTSurfaceViewManager
okio.InflaterSource: InflaterSource(okio.Source,java.util.zip.Inflater)
org.jitsi.meet.R$raw: int lang_mainesus
com.facebook.react.bridge.ReadableNativeMap: int getJNIPassCounter()
org.webrtc.NetworkMonitor: void nativeNotifyOfActiveNetworkList(long,org.webrtc.NetworkChangeDetector$NetworkInformation[])
org.webrtc.EglRenderer: void logE(java.lang.String,java.lang.Throwable)
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActivityChooserView
org.jitsi.meet.sdk.JitsiMeetActivity: void onParticipantLeft(java.util.HashMap)
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_drawableTint
org.jitsi.meet.R$drawable: int abc_list_selector_holo_light
okhttp3.internal.http2.Http2Stream$FramingSink: long EMIT_BUFFER_SIZE
com.horcrux.svg.R$id: int time
com.facebook.react.bridge.ReactContext$1: void run()
com.google.android.gms.measurement.AppMeasurement: java.util.List getConditionalUserPropertiesAs(java.lang.String,java.lang.String,java.lang.String)
org.webrtc.audio.JavaAudioDeviceModule$Builder: android.content.Context context
com.facebook.react.uimanager.BaseViewManager: java.util.Map sStateDescription
com.facebook.react.views.modal.ReactModalHostManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService: void onDestroy()
com.horcrux.svg.VirtualView: android.graphics.Path getClipPath()
org.jitsi.meet.R$style: int Base_Theme_AppCompat_Light
com.facebook.react.views.scroll.ReactScrollView: void setPagingEnabled(boolean)
com.google.android.gms.internal.measurement.zzcd$zzg: long zzj
okhttp3.CacheControl: int maxStaleSeconds()
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
com.facebook.react.modules.appstate.AppStateModule: AppStateModule(com.facebook.react.bridge.ReactApplicationContext)
org.webrtc.voiceengine.WebRtcAudioEffects: android.media.audiofx.AudioEffect$Descriptor[] cachedEffects
co.apptailor.googlesignin.RNGoogleSigninModule: co.apptailor.googlesignin.PendingAuthRecovery access$802(co.apptailor.googlesignin.RNGoogleSigninModule,co.apptailor.googlesignin.PendingAuthRecovery)
org.jitsi.meet.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedUsername(java.lang.String)
org.jitsi.meet.R$style: int Widget_AppCompat_Light_ActivityChooserView
org.jitsi.meet.sdk.BroadcastEvent$Type: java.lang.String CHAT_MESSAGE_RECEIVED_NAME
androidx.fragment.app.Fragment: void performOptionsMenuClosed(android.view.Menu)
org.jitsi.meet.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
okhttp3.internal.cache.DiskLruCache: int valueCount
com.horcrux.svg.R$styleable: int SearchView_defaultQueryHint
org.jitsi.meet.sdk.R$id: int decor_content_parent
com.facebook.react.uimanager.UIManagerModule: void setJSResponder(int,boolean)
okhttp3.internal.cache.CacheInterceptor
org.webrtc.Camera2Session: void create(org.webrtc.CameraSession$CreateSessionCallback,org.webrtc.CameraSession$Events,android.content.Context,android.hardware.camera2.CameraManager,org.webrtc.SurfaceTextureHelper,java.lang.String,int,int,int)
com.horcrux.svg.R$attr: int splitTrack
org.jitsi.meet.sdk.ReactPackageAdapter
org.webrtc.StatsReport: StatsReport(java.lang.String,java.lang.String,double,org.webrtc.StatsReport$Value[])
org.webrtc.RtpSender: long nativeGetTrack(long)
org.webrtc.MediaStreamTrack
com.facebook.react.modules.timepicker.TimePickerDialogModule: java.lang.String ERROR_NO_ACTIVITY
org.jitsi.meet.sdk.BroadcastEvent$Type: java.lang.String AUDIO_MUTED_CHANGED_NAME
org.jitsi.meet.sdk.R$id: int visible_removing_fragment_view_tag
org.webrtc.audio.WebRtcAudioUtils: boolean hasMicrophone(android.content.Context)
com.facebook.react.bridge.JavaOnlyMap: void merge(com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setAllowFontScaling(boolean)
okhttp3.internal.huc.OkHttpsURLConnection: okhttp3.Handshake handshake()
com.facebook.react.bridge.WritableNativeMap: WritableNativeMap()
org.webrtc.LibvpxVp8Encoder: long nativeCreateEncoder()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_END
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Caption
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromDeltaBundle(java.lang.String,com.facebook.react.bridge.NativeDeltaClient,boolean)
org.webrtc.EncodedImage$Builder: int encodedHeight
org.webrtc.ThreadUtils$2: ThreadUtils$2(java.util.concurrent.CountDownLatch)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void disconnect()
org.jitsi.meet.R$drawable: int notification_bg
okhttp3.Request: Request(okhttp3.Request$Builder)
org.jitsi.meet.sdk.R$id: int time
com.horcrux.svg.R$styleable: int[] SimpleDraweeView
okhttp3.internal.cache.DiskLruCache: java.io.File journalFile
okhttp3.internal.ws.RealWebSocket: void loopReader()
org.jitsi.meet.R$attr: int windowMinWidthMajor
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex
org.webrtc.VideoTrack: void nativeFreeSink(long)
org.webrtc.RtpTransceiver: void dispose()
org.jitsi.meet.sdk.R$string: int catalyst_settings_title
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
com.facebook.react.bridge.JSBundleLoader$5
okhttp3.internal.http1.Http1Codec$FixedLengthSink: long bytesRemaining
okio.DeflaterSink: DeflaterSink(okio.BufferedSink,java.util.zip.Deflater)
com.facebook.common.time.RealtimeSinceBootClock: com.facebook.common.time.RealtimeSinceBootClock get()
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: boolean getVideoMuted()
androidx.fragment.app.Fragment: void setTargetFragment(androidx.fragment.app.Fragment,int)
okhttp3.internal.io.FileSystem$1: long size(java.io.File)
org.webrtc.TextureBufferImpl$RefCountMonitor
org.jitsi.meet.sdk.R$raw: int lang_mainzhtw
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec mReactQueueConfigurationSpec
com.horcrux.svg.R$styleable: int SearchView_iconifiedByDefault
org.jitsi.meet.sdk.AudioModeModule: void initialize()
org.webrtc.CameraCapturer$8: org.webrtc.CameraVideoCapturer$CameraSwitchHandler val$switchEventsHandler
okhttp3.internal.ws.WebSocketReader: okio.Buffer controlFrameBuffer
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.PushObserver pushObserver
com.google.gson.reflect.TypeToken: boolean equals(java.lang.Object)
okhttp3.internal.cache.DiskLruCache: long nextSequenceNumber
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String getNameFromAnnotation(java.lang.Class)
org.jitsi.meet.R$string: int catalyst_hot_reloading_stop
okio.GzipSink: void flush()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream getStream(int)
com.facebook.react.devsupport.DevInternalSettings$Listener
com.horcrux.svg.RenderableViewManager$TextViewManager: void setDeltaY(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.facebook.react.devsupport.DevSupportManagerImpl: java.lang.String getJSBundleURLForRemoteDebugging()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: java.lang.String getName()
okhttp3.internal.http2.Http2Stream: long unacknowledgedBytesRead
org.jitsi.meet.sdk.R$id: int accessibility_hint
org.jitsi.meet.R$styleable: int AppCompatTheme_actionBarTabBarStyle
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] $VALUES
okhttp3.internal.ws.RealWebSocket$CancelRunnable: okhttp3.internal.ws.RealWebSocket this$0
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRy(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.devsupport.RedBoxDialog$StackAdapter: int VIEW_TYPE_STACKFRAME
okhttp3.MultipartBody: int size()
org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStateCallback: void onWebRtcAudioRecordStop()
org.webrtc.voiceengine.WebRtcAudioTrack: WebRtcAudioTrack(long)
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_CANCELABLE
org.webrtc.EglRenderer: org.webrtc.VideoFrameDrawer frameDrawer
org.webrtc.HardwareVideoDecoderFactory: HardwareVideoDecoderFactory(org.webrtc.EglBase$Context,org.webrtc.Predicate)
org.jitsi.meet.sdk.BroadcastAction$Type: org.jitsi.meet.sdk.BroadcastAction$Type SET_AUDIO_MUTED
com.horcrux.svg.R$styleable: int AppCompatTheme_searchViewStyle
org.jitsi.meet.R$color: int abc_background_cache_hint_selector_material_dark
org.webrtc.PlatformSoftwareVideoDecoderFactory$1: boolean test(android.media.MediaCodecInfo)
org.webrtc.CameraCapturer$8: java.lang.String val$cameraName
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
com.horcrux.svg.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
org.jitsi.meet.sdk.R$styleable: int MenuView_preserveIconSpacing
com.horcrux.svg.R$id: int src_atop
org.jitsi.meet.sdk.BroadcastIntentHelper: android.content.Intent buildOpenChatIntent(java.lang.String)
com.horcrux.svg.VirtualView: VirtualView(com.facebook.react.bridge.ReactContext)
org.jitsi.meet.sdk.R$id: int icon_group
okhttp3.EventListener: void secureConnectStart(okhttp3.Call)
org.jitsi.meet.R$style: int Base_Widget_AppCompat_TextView
org.jitsi.meet.R$color: int abc_primary_text_material_dark
org.jitsi.meet.sdk.R$attr: int viewInflaterClass
okio.HashingSink: okio.HashingSink hmacSha512(okio.Sink,okio.ByteString)
okhttp3.RequestBody$2: RequestBody$2(okhttp3.MediaType,int,byte[],int)
okio.Pipe$PipeSink: void flush()
org.jitsi.meet.sdk.R$attr: int firstBaselineToTopHeight
org.webrtc.NetworkChangeDetector$NetworkInformation: org.webrtc.NetworkChangeDetector$IPAddress[] ipAddresses
androidx.appcompat.widget.SearchView: int getMaxWidth()
org.jitsi.meet.sdk.R$styleable: int View_paddingStart
com.horcrux.svg.R$attr: int collapseIcon
com.facebook.react.views.view.ReactViewManager
okhttp3.internal.huc.OkHttpURLConnection: OkHttpURLConnection(java.net.URL,okhttp3.OkHttpClient,okhttp3.internal.URLFilter)
org.webrtc.PeerConnection: boolean setConfiguration(org.webrtc.PeerConnection$RTCConfiguration)
org.webrtc.EncodedImage$FrameType: int nativeIndex
com.google.android.gms.internal.measurement.zzcd$zze: java.lang.String zze
org.webrtc.CameraVideoCapturer$CameraEventsHandler: void onCameraDisconnected()
org.webrtc.YuvConverter$ShaderCallbacks: int xUnitLoc
okhttp3.internal.http2.Http2Reader: void readSettings(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
com.facebook.react.devsupport.interfaces.StackFrame: java.lang.String getFileName()
com.facebook.react.bridge.GuardedRunnable: GuardedRunnable(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
com.horcrux.svg.R$color: int switch_thumb_material_dark
org.jitsi.meet.R$color: int dim_foreground_disabled_material_light
org.webrtc.PeerConnection: org.webrtc.SessionDescription nativeGetRemoteDescription()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getAppInstanceId()
com.facebook.react.bridge.GuardedAsyncTask: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandler
org.jitsi.meet.R$layout: int abc_search_view
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_16
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)
com.facebook.react.bridge.JSBundleLoaderDelegate: void setSourceURLs(java.lang.String,java.lang.String)
okhttp3.OkHttpClient: java.util.List DEFAULT_CONNECTION_SPECS
org.jitsi.meet.R$dimen: int abc_edit_text_inset_horizontal_material
org.jitsi.meet.sdk.R$id: int light
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: java.lang.String NAME
com.facebook.react.modules.toast.ToastModule: java.lang.String getName()
org.jitsi.meet.sdk.BroadcastAction$Type: org.jitsi.meet.sdk.BroadcastAction$Type SET_VIDEO_MUTED
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException: okhttp3.Interceptor INTERCEPTOR
okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)
com.facebook.react.views.textinput.ReactEditText: void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher)
okhttp3.Response: okhttp3.Handshake handshake
com.horcrux.svg.R$id: int contentPanel
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableMap getMap(int)
okhttp3.ConnectionPool: int idleConnectionCount()
com.facebook.react.devsupport.JSCHeapCapture$HeapCapture
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_overlayImage
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getProductSync()
org.jitsi.meet.R$attr: int placeholderImageScaleType
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.facebook.react.modules.debug.SourceCodeModule: java.lang.String getName()
okhttp3.internal.http1.Http1Codec: void detachTimeout(okio.ForwardingTimeout)
com.calendarevents.CalendarEvents: com.facebook.react.bridge.WritableNativeArray access$400(com.calendarevents.CalendarEvents,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.R$attr: int actionBarDivider
com.reactnativecommunity.netinfo.NetInfoModule: void initialize()
com.facebook.react.modules.debug.SourceCodeModule: java.util.Map getConstants()
org.jitsi.meet.R$color: int background_floating_material_light
okio.RealBufferedSource$1
org.jitsi.meet.R$styleable: int AppCompatTheme_actionModeShareDrawable
org.webrtc.VideoEncoder: org.webrtc.VideoEncoder$ResolutionBitrateLimits[] getResolutionBitrateLimits()
com.horcrux.svg.R$attr: int actualImageResource
okhttp3.internal.ws.RealWebSocket: java.util.concurrent.ScheduledFuture cancelFuture
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec codec
org.webrtc.audio.WebRtcAudioEffects: java.lang.String TAG
org.webrtc.TurnCustomizer: void dispose()
org.jitsi.meet.sdk.R$color: int switch_thumb_disabled_material_dark
org.webrtc.HardwareVideoEncoder: java.lang.Thread createOutputThread()
org.webrtc.HardwareVideoEncoderFactory: org.webrtc.BitrateAdjuster createBitrateAdjuster(org.webrtc.VideoCodecMimeType,java.lang.String)
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_TabText
com.horcrux.svg.R$styleable: int AlertDialog_singleChoiceItemLayout
org.jitsi.meet.sdk.JavaScriptSandboxModule: java.lang.String NAME
org.webrtc.RendererCommon$ScalingType: org.webrtc.RendererCommon$ScalingType SCALE_ASPECT_FIT
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: org.jitsi.meet.sdk.JitsiMeetUserInfo getUserInfo()
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
com.horcrux.svg.R$attr: int checkboxStyle
com.facebook.react.devsupport.RedBoxDialog$3: void onClick(android.view.View)
org.jitsi.meet.sdk.R$styleable: int MenuItem_tooltipText
okhttp3.EventListener: void connectStart(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy)
com.facebook.react.modules.core.Timing: boolean mFrameIdleCallbackPosted
org.jitsi.meet.R$styleable: int GradientColor_android_startColor
org.webrtc.Logging: void log(org.webrtc.Logging$Severity,java.lang.String,java.lang.String)
okio.Buffer: okio.BufferedSink writeByte(int)
org.webrtc.NetworkMonitorAutoDetect: java.lang.String TAG
org.webrtc.audio.WebRtcAudioRecord: int initRecording(int,int)
okhttp3.Dispatcher: Dispatcher()
com.facebook.react.modules.timepicker.TimePickerDialogModule: java.lang.String ARG_MINUTE
okhttp3.OkHttpClient$Builder: boolean followSslRedirects
org.webrtc.MediaStreamTrack: java.lang.String nativeGetKind(long)
kotlin.io.FileSystemException
org.webrtc.SurfaceTextureHelper$2: org.webrtc.SurfaceTextureHelper this$0
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
okio.AsyncTimeout: okio.Sink sink(okio.Sink)
okio.Timeout: boolean hasDeadline()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
org.jitsi.meet.sdk.R$dimen: int abc_dropdownitem_icon_width
com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatus: InspectorPackagerConnection$BundleStatus()
okhttp3.internal.ws.RealWebSocket: boolean $assertionsDisabled
com.horcrux.svg.RenderableView: java.util.ArrayList getAttributeList()
com.facebook.react.bridge.ReactContext: boolean isOnNativeModulesQueueThread()
org.jitsi.meet.R$id: int rn_redbox_reload_button
org.jitsi.meet.R$style: int TextAppearance_Compat_Notification_Time
org.jitsi.meet.sdk.WiFiStatsModule$1
okio.DeflaterSink
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String RECOVERABLE
com.ocetnik.timer.BackgroundTimerModule: com.facebook.react.bridge.ReactApplicationContext access$400(com.ocetnik.timer.BackgroundTimerModule)
okhttp3.internal.http2.Http2Stream$FramingSink: void write(okio.Buffer,long)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec build()
com.horcrux.svg.R$style: int Widget_AppCompat_Light_SearchView
okhttp3.RealCall: void cancel()
okio.Buffer: Buffer()
com.google.android.gms.measurement.AppMeasurement: void clearConditionalUserPropertyAs(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)
okhttp3.internal.connection.RealConnection: java.lang.String NPE_THROW_WITH_NULL
org.webrtc.EglBase10Impl: void swapBuffers()
com.google.android.gms.internal.measurement.zzcd$zzf: com.google.android.gms.internal.measurement.zzjp zze
com.horcrux.svg.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
com.learnium.RNDeviceInfo.RNDeviceModule: void getHost(com.facebook.react.bridge.Promise)
com.facebook.react.views.image.ReactImageManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.jitsi.meet.sdk.R$drawable: int common_google_signin_btn_text_light_focused
com.horcrux.svg.R$attr: int subtitleTextColor
androidx.appcompat.widget.AppCompatCheckBox
okio.RealBufferedSink$1
org.webrtc.Predicate$3: boolean test(java.lang.Object)
com.facebook.react.devsupport.JSDevSupport: java.lang.String getName()
androidx.appcompat.widget.SwitchCompat
org.jitsi.meet.sdk.R$string
okio.Options: int size()
com.facebook.react.bridge.JSBundleLoader$2: JSBundleLoader$2(java.lang.String,java.lang.String,boolean)
org.webrtc.CryptoOptions: org.webrtc.CryptoOptions$Builder builder()
org.webrtc.NV21Buffer: org.webrtc.VideoFrame$I420Buffer toI420()
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: void connect()
okhttp3.internal.cache.DiskLruCache$3: okhttp3.internal.cache.DiskLruCache$Snapshot next()
com.facebook.imagepipeline.common.TooManyBitmapsException: TooManyBitmapsException()
okhttp3.internal.Util: boolean nonEmptyIntersection(java.util.Comparator,java.lang.String[],java.lang.String[])
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromFile(java.lang.String,java.lang.String,boolean)
org.jitsi.meet.sdk.R$attr: int tooltipForegroundColor
okhttp3.EventListener: void requestBodyStart(okhttp3.Call)
okio.Segment: int limit
okhttp3.internal.http.HttpCodec: okio.Sink createRequestBody(okhttp3.Request,long)
org.webrtc.DataChannel$Observer: void onMessage(org.webrtc.DataChannel$Buffer)
org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate: java.util.List getActiveNetworkList()
com.facebook.react.views.view.ReactViewGroup: void setBackgroundColor(int)
org.webrtc.CameraCapturer: int access$2200(org.webrtc.CameraCapturer)
org.jitsi.meet.sdk.R$id: int up
com.horcrux.svg.RenderableViewManager$TextPathViewManager
okio.Buffer: okio.BufferedSink emitCompleteSegments()
org.jitsi.meet.sdk.R$attr: int textAllCaps
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pingIntervalMillis(int)
com.facebook.react.views.art.ARTTextShadowNode
com.facebook.react.modules.intent.IntentModule: IntentModule(com.facebook.react.bridge.ReactApplicationContext)
org.jitsi.meet.sdk.R$drawable: int abc_text_cursor_material
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_progressBarImageScaleType
org.webrtc.voiceengine.WebRtcAudioEffects: org.webrtc.voiceengine.WebRtcAudioEffects create()
com.facebook.react.uimanager.LayoutShadowNode: void setJustifyContent(java.lang.String)
com.facebook.react.bridge.ReactContext: boolean isOnJSQueueThread()
com.dropbox.core.v2.team.DateRangeErrorException
okhttp3.CacheControl: boolean noTransform()
org.jitsi.meet.sdk.RNConnectionService: java.lang.String TAG
org.jitsi.meet.sdk.ParticipantInfo: ParticipantInfo()
org.webrtc.Camera2Enumerator: java.util.List convertSizes(android.util.Size[])
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String RESPONSE_SOURCE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_CCM_SHA256
org.webrtc.JNILogging: JNILogging(org.webrtc.Loggable)
com.horcrux.svg.BuildConfig: boolean DEBUG
org.jitsi.meet.R$attr: int titleMarginStart
okhttp3.Protocol: okhttp3.Protocol HTTP_2
org.jitsi.meet.sdk.R$anim: int btn_radio_to_off_mtrl_ring_outer_path_animation
org.webrtc.Logging: void enableLogToDebugOutput(org.webrtc.Logging$Severity)
org.webrtc.audio.WebRtcAudioRecord: void access$200(org.webrtc.audio.WebRtcAudioRecord,int)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void onDropViewInstance(android.view.View)
org.webrtc.audio.WebRtcAudioRecord$1: java.util.concurrent.atomic.AtomicInteger val$nextThreadId
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
com.horcrux.svg.R$attr: int dividerHorizontal
okhttp3.HttpUrl: boolean equals(java.lang.Object)
okhttp3.internal.connection.StreamAllocation: java.net.Socket deallocate(boolean,boolean,boolean)
com.facebook.react.fabric.FabricUIManager: void setJSResponder(int,int,boolean)
okhttp3.OkHttpClient: int callTimeout
androidx.viewpager.widget.ViewPager: void setCurrentItem(int)
com.facebook.react.modules.appstate.AppStateModule: void onHostPause()
com.dropbox.core.v2.sharing.MountFolderErrorException
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_dividerHorizontal
androidx.fragment.app.Fragment$InstantiationException
org.webrtc.HardwareVideoEncoderFactory: boolean isHardwareSupportedInCurrentSdk(android.media.MediaCodecInfo,org.webrtc.VideoCodecMimeType)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadPing(okio.ByteString)
okhttp3.Response: long sentRequestAtMillis()
org.jitsi.meet.sdk.R$string: int abc_searchview_description_clear
org.webrtc.AndroidVideoDecoder: java.lang.String codecName
com.facebook.react.modules.dialog.DialogModule: void initialize()
okio.RealBufferedSink$1: okio.RealBufferedSink this$0
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.facebook.react.bridge.DynamicFromMap: int asInt()
com.facebook.react.bridge.JsonWriterHelper: void value(android.util.JsonWriter,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void registerOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzab)
org.webrtc.VideoEncoderWrapper: java.lang.Integer getScalingSettingsHigh(org.webrtc.VideoEncoder$ScalingSettings)
com.facebook.react.bridge.NativeModuleRegistry: boolean hasModule(java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder socketFactory(javax.net.SocketFactory)
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ListView
okio.Buffer: long indexOf(byte,long)
okhttp3.internal.http2.Settings: int getMaxFrameSize(int)
com.calendarevents.CalendarEvents: void findCalendars(com.facebook.react.bridge.Promise)
org.jitsi.meet.sdk.R$styleable: int Spinner_android_popupBackground
com.horcrux.svg.R$attr: int srcCompat
org.webrtc.VideoFrameDrawer$YuvUploader: java.nio.ByteBuffer copyBuffer
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event valueOf(java.lang.String)
org.jitsi.meet.sdk.R$string: int catalyst_report_button
org.jitsi.meet.sdk.R$style: int redboxButton
com.facebook.yoga.YogaNodeType: com.facebook.yoga.YogaNodeType valueOf(java.lang.String)
org.webrtc.GlUtil$GlOutOfMemoryException
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.facebook.react.uimanager.BaseViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray)
org.webrtc.VideoDecoderFactory: org.webrtc.VideoDecoder createDecoder(org.webrtc.VideoCodecInfo)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_29
org.jitsi.meet.sdk.R$attr: int ratingBarStyleIndicator
okhttp3.EventListener$2: okhttp3.EventListener val$listener
com.squareup.duktape.DuktapeException: void addDuktapeStack(java.lang.Throwable,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
org.webrtc.CameraSession$CreateSessionCallback
org.webrtc.AudioSource
org.webrtc.Camera1Capturer: void initialize(org.webrtc.SurfaceTextureHelper,android.content.Context,org.webrtc.CapturerObserver)
com.oney.WebRTCModule.WebRTCModule: void peerConnectionCreateOffer(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.horcrux.svg.R$attr: int logo
okhttp3.internal.http2.Http2Writer: void applyAndAckSettings(okhttp3.internal.http2.Settings)
com.horcrux.svg.R$style: int Base_V7_Theme_AppCompat
okhttp3.Cookie: java.lang.String toString(boolean)
okio.Buffer: okio.BufferedSink writeShort(int)
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.facebook.react.devsupport.DevServerHelper$10$1: void run()
org.webrtc.AndroidVideoDecoder: boolean hasDecodedFirstFrame
org.jitsi.meet.sdk.R$color: int switch_thumb_material_dark
com.facebook.react.devsupport.DevServerHelper$1: java.lang.String val$clientId
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.bridge.ReactApplicationContext access$300(com.facebook.react.animated.NativeAnimatedModule)
okhttp3.internal.http2.Http2Connection: int nextStreamId
com.facebook.react.bridge.CatalystInstanceImpl$1$1: com.facebook.react.bridge.JSIModule val$turboModuleManager
com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException
org.webrtc.PeerConnectionFactory$InitializationOptions$Builder: org.webrtc.PeerConnectionFactory$InitializationOptions$Builder setNativeLibraryLoader(org.webrtc.NativeLibraryLoader)
org.webrtc.LibvpxVp8Decoder: long createNativeVideoDecoder()
org.jitsi.meet.sdk.R$styleable: int TextAppearance_android_textColorHint
org.jitsi.meet.R$styleable: int Toolbar_titleMarginBottom
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
okhttp3.ResponseBody: java.lang.String string()
org.jitsi.meet.sdk.R$dimen: int notification_large_icon_width
com.facebook.hermes.instrumentation.HermesMemoryDumper
com.horcrux.svg.SvgView: int mMeetOrSlice
androidx.fragment.app.Fragment: int mTargetRequestCode
org.webrtc.NetworkMonitor$1: org.webrtc.NetworkMonitor this$0
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_editTextColor
org.jitsi.meet.R$dimen: int abc_search_view_preferred_height
org.jitsi.meet.sdk.R$string: int abc_searchview_description_search
org.jitsi.meet.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
okhttp3.internal.http2.Http2Codec: java.lang.String KEEP_ALIVE
okio.GzipSource: byte SECTION_HEADER
org.jitsi.meet.sdk.R$drawable: int abc_text_select_handle_right_mtrl_dark
org.webrtc.SoftwareVideoDecoderFactory
com.facebook.react.modules.timepicker.TimePickerDialogModule: java.lang.String getName()
org.webrtc.Camera1Session$SessionState: org.webrtc.Camera1Session$SessionState[] values()
org.webrtc.MediaStreamTrack: java.lang.String kind()
com.facebook.react.devsupport.DevSupportManagerImpl$20: DevSupportManagerImpl$20(com.facebook.react.devsupport.DevSupportManagerImpl,com.facebook.react.packagerconnection.Responder)
com.facebook.react.devsupport.BundleDownloader$BundleInfo: int getFilesChangedCount()
com.horcrux.svg.R$id: int action_context_bar
org.webrtc.PeerConnectionFactory$ThreadInfo: java.lang.Thread thread
com.facebook.react.modules.deviceinfo.DeviceInfoModule: java.lang.String NAME
org.webrtc.VideoEncoder$CodecSpecificInfoH264
com.horcrux.svg.SvgView$Events: java.lang.String mName
okio.ByteString: int lastIndexOf(okio.ByteString,int)
com.horcrux.svg.R$attr: int roundingBorderColor
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_DayNight_DarkActionBar
org.webrtc.PeerConnection$RTCConfiguration: boolean suspendBelowMinBitrate
org.jitsi.meet.R$styleable: int ActionBar_hideOnContentScroll
org.webrtc.ThreadUtils$3
okhttp3.internal.cache.FaultHidingSink: void close()
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzcd$zzg zzaw
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
com.horcrux.svg.R$attr: int submitBackground
okhttp3.FormBody$Builder: java.nio.charset.Charset charset
org.webrtc.PeerConnectionFactory: org.webrtc.PeerConnectionFactory$ThreadInfo networkThread
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
org.jitsi.meet.R$drawable: int abc_ic_star_black_36dp
com.facebook.react.uimanager.RootViewManager: RootViewManager()
com.facebook.react.uimanager.ViewGroupManager: java.util.WeakHashMap mZIndexHash
org.webrtc.MediaStream: MediaStream(long)
okhttp3.internal.huc.OutputStreamRequestBody: okio.Timeout timeout()
org.jitsi.meet.R$id: int adjust_height
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
org.jitsi.meet.R$id: int action_bar_root
org.jitsi.meet.sdk.JitsiMeetActivityDelegate: void onBackPressed()
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map mContentHandlers
com.facebook.react.views.view.ReactViewGroup: void setBorderColor(int,float,float)
org.webrtc.CameraEnumerationAndroid$ClosestComparator
org.jitsi.meet.R$styleable: int SwitchCompat_android_textOff
okhttp3.internal.huc.OkHttpsURLConnection: boolean getAllowUserInteraction()
com.dropbox.core.v2.fileproperties.RemovePropertiesErrorException
okio.ByteString: int size()
org.webrtc.RendererCommon$ScalingType: org.webrtc.RendererCommon$ScalingType valueOf(java.lang.String)
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback: void onFailure(java.lang.Throwable)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
org.jitsi.meet.sdk.R$attr: int listPreferredItemPaddingEnd
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ActionBar_Solid
org.jitsi.meet.R$styleable: int AppCompatTheme_listDividerAlertDialog
org.jitsi.meet.R$id: int SHIFT
androidx.appcompat.widget.SearchView: void setInputType(int)
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String val$fileName
com.facebook.react.views.textinput.ReactTextInputManager: int UNSET
okhttp3.internal.http2.Http2Connection$4: okhttp3.internal.http2.Http2Connection this$0
com.horcrux.svg.R$styleable: int LinearLayoutCompat_android_baselineAligned
com.horcrux.svg.TextPathView: void setHref(java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.Cache cache
com.facebook.react.bridge.ReactContext: void assertOnNativeModulesQueueThread()
org.webrtc.YuvHelper: void nativeCopyPlane(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int)
org.jitsi.meet.R$anim: int abc_popup_enter
com.horcrux.svg.SvgView: SvgView(com.facebook.react.bridge.ReactContext)
okhttp3.OkHttpClient$Builder: javax.net.ssl.HostnameVerifier hostnameVerifier
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_roundBottomEnd
com.horcrux.svg.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
org.jitsi.meet.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.horcrux.svg.RenderableViewManager$TSpanViewManager
okhttp3.Headers$Builder: okhttp3.Headers build()
com.facebook.react.views.text.ReactTextViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode)
com.facebook.react.bridge.ReadableArray: java.lang.String getString(int)
okhttp3.internal.tls.TrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
org.jitsi.meet.R$style: int Base_DialogWindowTitleBackground_AppCompat
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)
okhttp3.internal.http2.Hpack$Writer: int evictToRecoverBytes(int)
okhttp3.internal.http2.Http2Reader$ContinuationSource: Http2Reader$ContinuationSource(okio.BufferedSource)
okhttp3.internal.platform.AndroidPlatform$CloseGuard: boolean warnIfOpen(java.lang.Object)
androidx.fragment.app.Fragment: Fragment(int)
org.jitsi.meet.R$drawable: int abc_spinner_mtrl_am_alpha
org.webrtc.VideoCodecType: int VIDEO_CODEC_VP8
org.jitsi.meet.R$styleable: int Spinner_android_dropDownWidth
com.horcrux.svg.R$id: int listMode
org.webrtc.AndroidVideoDecoder: java.lang.String MEDIA_FORMAT_KEY_CROP_LEFT
okhttp3.internal.http2.Http2Writer: void ping(boolean,int,int)
com.facebook.react.modules.statusbar.StatusBarModule: StatusBarModule(com.facebook.react.bridge.ReactApplicationContext)
org.webrtc.EglRenderer$FrameListenerAndParams: boolean applyFpsReduction
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
org.jitsi.meet.sdk.R$color: int dim_foreground_material_light
com.dropbox.core.v2.teampolicies.SharedLinkCreatePolicy: com.dropbox.core.v2.teampolicies.SharedLinkCreatePolicy[] values()
org.webrtc.MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl: void release()
okhttp3.internal.http2.Http2Reader$ContinuationSource: byte flags
org.jitsi.meet.sdk.JitsiMeetActivityInterface: void onRequestPermissionsResult(int,java.lang.String[],int[])
org.jitsi.meet.sdk.JitsiMeetActivity: java.lang.String ACTION_JITSI_MEET_CONFERENCE
org.jitsi.meet.R$dimen: int compat_button_padding_vertical_material
org.jitsi.meet.R$styleable: int AppCompatTheme_actionModeCloseDrawable
okhttp3.internal.huc.DelegatingHttpsURLConnection
com.dropbox.core.v2.fileproperties.PropertiesSearchContinueErrorException
org.jitsi.meet.sdk.AudioModeModule: void updateAudioRoute()
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Medium
com.horcrux.svg.R$dimen: int abc_dialog_padding_material
org.webrtc.CameraVideoCapturer$CameraStatistics: int access$104(org.webrtc.CameraVideoCapturer$CameraStatistics)
org.webrtc.YuvConverter: org.webrtc.GlGenericDrawer drawer
org.jitsi.meet.sdk.R$id: int dark
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2: void onFailure(java.lang.Throwable)
org.jitsi.meet.sdk.R$string: int abc_activitychooserview_choose_application
com.horcrux.svg.TextProperties$TextLengthAdjust: com.horcrux.svg.TextProperties$TextLengthAdjust[] values()
androidx.appcompat.widget.AppCompatCheckedTextView
com.facebook.react.modules.debug.DevSettingsModule: void setHotLoadingEnabled(boolean)
org.jitsi.meet.sdk.R$attr: int colorError
org.webrtc.MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl: int dequeueOutputBuffer(android.media.MediaCodec$BufferInfo,long)
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
com.horcrux.svg.R$dimen: int notification_small_icon_size_as_large
com.rnimmersive.RNImmersiveModule: java.lang.String getName()
androidx.fragment.app.Fragment: boolean getAllowReturnTransitionOverlap()
org.jitsi.meet.R$styleable: int TextAppearance_android_fontFamily
com.facebook.react.devsupport.DevSupportManagerFactory
org.jitsi.meet.sdk.R$dimen: int abc_action_button_min_height_material
com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinkRegistrar: FirebaseDynamicLinkRegistrar()
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor$Factory mJavaJSExecutorFactory
org.webrtc.VideoProcessor$FrameAdaptationParameters: int cropWidth
com.horcrux.svg.R$attr: int backgroundImage
okhttp3.internal.platform.JdkWithJettyBootPlatform: void afterHandshake(javax.net.ssl.SSLSocket)
com.horcrux.svg.R$style: int Widget_AppCompat_DropDownItem_Spinner
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setUseCaches(boolean)
com.facebook.react.modules.dialog.AlertFragment
org.webrtc.Predicate: org.webrtc.Predicate or(org.webrtc.Predicate)
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ListView_Menu
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
com.facebook.react.views.textinput.ReactEditText: boolean getBlurOnSubmit()
org.webrtc.AndroidVideoDecoder: org.webrtc.ThreadUtils$ThreadChecker decoderThreadChecker
okhttp3.Request$Builder: okhttp3.HttpUrl url
com.dropbox.core.v2.sharing.UpdateFolderMemberErrorException
com.facebook.react.bridge.JavaJSExecutor$Factory
org.webrtc.AndroidVideoDecoder: void stopOnOutputThread(java.lang.Exception)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewStartOffset()
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Headline
org.webrtc.EncodedImage$Builder: org.webrtc.EncodedImage$Builder setBuffer(java.nio.ByteBuffer,java.lang.Runnable)
com.horcrux.svg.VirtualView: void onMeasure(int,int)
com.facebook.react.views.view.ReactViewManager: void setBorderRadius(com.facebook.react.views.view.ReactViewGroup,int,float)
okhttp3.CertificatePinner$Pin: java.lang.String hashAlgorithm
org.webrtc.NetworkMonitor: java.lang.Object networkChangeDetectorLock
org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode: org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode valueOf(java.lang.String)
org.webrtc.voiceengine.WebRtcAudioTrack: org.webrtc.voiceengine.WebRtcAudioTrack$ErrorCallback errorCallback
org.jitsi.meet.sdk.R$raw: int lang_main
com.facebook.react.devsupport.DevSupportManagerImpl$ExceptionLogger: void log(java.lang.Exception)
okio.Buffer: long indexOfElement(okio.ByteString)
org.jitsi.meet.sdk.R$drawable: int common_google_signin_btn_icon_light_normal
com.facebook.react.devsupport.DisabledDevSupportManager: boolean hasUpToDateJSBundleInCache()
okio.Buffer$2: Buffer$2(okio.Buffer)
com.google.android.gms.internal.measurement.zzbv$zzb: com.google.android.gms.internal.measurement.zzid zzf
com.facebook.react.devsupport.DevSupportManagerImpl$JSExceptionLogger: com.facebook.react.devsupport.DevSupportManagerImpl this$0
okhttp3.internal.ws.RealWebSocket: long pingIntervalMillis
org.jitsi.meet.R$layout: int abc_action_menu_layout
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder setAudioOnly(boolean)
okhttp3.internal.http.HttpMethod: HttpMethod()
com.facebook.react.bridge.CallbackImpl: void invoke(java.lang.Object[])
com.facebook.react.devsupport.JSDevSupport: void onSuccess(java.lang.String)
org.webrtc.EglBase10Impl$Context: long getNativeEglContext()
com.facebook.react.uimanager.UIManagerModule: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_END
org.jitsi.meet.R$drawable: int abc_ratingbar_small_material
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder addEncoded(java.lang.String,java.lang.String)
com.facebook.react.modules.core.Timing: void clearFrameCallback()
com.facebook.react.modules.core.DeviceEventManagerModule: void invokeDefaultBackPressHandler()
okhttp3.Cookie: boolean hostOnly
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap access$000(com.facebook.react.bridge.ReadableNativeMap)
com.horcrux.svg.R$style: int Base_DialogWindowTitle_AppCompat
org.webrtc.EglBase10$Context
com.learnium.RNDeviceInfo.RNDeviceModule: void initialize()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.facebook.react.modules.storage.AsyncStorageModule
org.webrtc.audio.WebRtcAudioTrack: void releaseAudioResources()
org.webrtc.PeerConnection: org.webrtc.PeerConnection$IceConnectionState iceConnectionState()
org.webrtc.MediaStreamTrack: void dispose()
org.jitsi.meet.sdk.R$attr: int height
okhttp3.internal.ws.RealWebSocket: boolean enqueuedClose
org.webrtc.TextureBufferImpl$RefCountMonitor: void onRetain(org.webrtc.TextureBufferImpl)
com.facebook.react.devsupport.DevServerHelper: int LONG_POLL_FAILURE_DELAY_MS
org.jitsi.meet.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode: org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode[] $VALUES
okhttp3.internal.http2.Http2Connection: void flush()
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzs
org.jitsi.meet.sdk.R$string: int state_off_description
org.webrtc.WrappedNativeVideoEncoder: WrappedNativeVideoEncoder()
org.jitsi.meet.R$drawable: int abc_text_cursor_material
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType[] values()
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: JitsiMeetConferenceOptions(org.jitsi.meet.sdk.JitsiMeetConferenceOptions$1)
org.webrtc.JavaI420Buffer: int getStrideV()
okhttp3.internal.connection.RouteSelector: okhttp3.EventListener eventListener
org.webrtc.VideoFrameDrawer$YuvUploader: int[] uploadFromBuffer(org.webrtc.VideoFrame$I420Buffer)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
androidx.core.app.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
com.dropbox.core.v2.sharing.SharedLinkErrorException
com.facebook.react.bridge.NativeModuleRegistry: void notifyJSInstanceDestroy()
org.jitsi.meet.sdk.R$color
org.jitsi.meet.sdk.R$dimen: int abc_text_size_small_material
com.facebook.react.devsupport.RedBoxDialog$1: RedBoxDialog$1(com.facebook.react.devsupport.RedBoxDialog)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String buildSignature(java.lang.reflect.Method,java.lang.Class[],boolean)
com.horcrux.svg.R$style: int Base_V22_Theme_AppCompat_Light
org.jitsi.meet.R$string: int catalyst_loading_from_url
com.facebook.react.bridge.PerformanceCounter: void profileNextBatch()
org.jitsi.meet.sdk.RNConnectionService: java.lang.String getName()
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
com.facebook.yoga.YogaLogLevel
org.webrtc.ScreenCapturerAndroid: android.content.Intent mediaProjectionPermissionResultData
okhttp3.internal.connection.StreamAllocation: okhttp3.ConnectionPool connectionPool
org.jitsi.meet.sdk.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
com.facebook.react.devsupport.RedBoxDialog
com.facebook.react.modules.timepicker.TimePickerDialogFragment
com.facebook.react.bridge.JavaOnlyMap: int getInt(java.lang.String)
okio.ForwardingSink: okio.Sink delegate()
com.horcrux.svg.R$attr: int fadeDuration
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable: boolean mShouldStop
org.webrtc.NetworkMonitorAutoDetect
com.horcrux.svg.PatternView: void setPatternTransform(com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.String NAME
org.webrtc.CameraCapturer$4: void onCameraOpening(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: CatalystInstanceImpl$PendingJSCall(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
org.jitsi.meet.sdk.log.JitsiMeetLogger: JitsiMeetLogger()
androidx.fragment.app.Fragment: android.view.View getView()
okhttp3.internal.io.FileSystem: long size(java.io.File)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinX(com.horcrux.svg.PatternView,float)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeOffset(int,double)
okhttp3.internal.http2.Http2Writer: Http2Writer(okio.BufferedSink,boolean)
org.jitsi.meet.sdk.R$attr: int titleMarginBottom
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionModeSplitBackground
org.jitsi.meet.sdk.OngoingConferenceTracker: java.lang.String currentConference
com.facebook.react.views.textinput.ReactEditText: void setOnKeyPress(boolean)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$1)
okio.HashingSink: java.security.MessageDigest messageDigest
com.horcrux.svg.R$styleable: int MenuItem_numericModifiers
com.facebook.react.bridge.ModuleHolder: java.lang.String getName()
okhttp3.Cache: void delete()
okhttp3.internal.huc.OkHttpURLConnection: void setFixedLengthStreamingMode(long)
okio.AsyncTimeout
com.facebook.react.bridge.CatalystInstanceImpl: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
com.horcrux.svg.MarkerView: void setMinX(float)
okio.InflaterSource: long read(okio.Buffer,long)
org.webrtc.VideoFrameDrawer$YuvUploader: int[] uploadYuvData(int,int,int[],java.nio.ByteBuffer[])
org.webrtc.AudioEncoderFactoryFactory
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: android.media.AudioManager access$000(org.jitsi.meet.sdk.AudioDeviceHandlerGeneric)
org.jitsi.meet.R$style: int Base_Widget_AppCompat_Light_PopupMenu
org.jitsi.meet.R$dimen: int abc_button_inset_vertical_material
com.facebook.jni.HybridData$Destructor
okhttp3.internal.huc.OkHttpURLConnection: long fixedContentLength
com.horcrux.svg.R$styleable: int AppCompatTheme_windowFixedHeightMinor
com.facebook.react.uimanager.ViewManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isCameraPresentSync()
org.jitsi.meet.R$integer: R$integer()
okio.RealBufferedSource: okio.Buffer buffer()
org.jitsi.meet.R$styleable: int AlertDialog_multiChoiceItemLayout
okio.Base64: java.lang.String encode(byte[])
org.jitsi.meet.MainActivity: void resolveRestrictions()
com.horcrux.svg.R$dimen: int abc_dropdownitem_icon_width
org.webrtc.audio.JavaAudioDeviceModule$Builder: android.media.AudioManager audioManager
org.jitsi.meet.R$string: int common_google_play_services_update_button
org.jitsi.meet.sdk.R$attr: int subtitleTextStyle
com.facebook.react.bridge.Dynamic: int asInt()
org.jitsi.meet.R$styleable: int AppCompatTheme_actionBarWidgetTheme
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPassword(java.lang.String)
com.horcrux.svg.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSharp(com.horcrux.svg.TextPathView,java.lang.String)
com.horcrux.svg.R$dimen: R$dimen()
org.webrtc.voiceengine.WebRtcAudioManager: boolean lowLatencyOutput
okhttp3.Headers: void checkName(java.lang.String)
okhttp3.internal.platform.OptionalMethod: java.lang.Class returnType
com.horcrux.svg.R$layout: int fps_view
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
org.webrtc.audio.JavaAudioDeviceModule: void setSpeakerMute(boolean)
okhttp3.internal.huc.OkHttpURLConnection: java.util.Set METHODS
org.jitsi.meet.sdk.R$styleable: int[] GradientColorItem
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.facebook.react.devsupport.DevServerHelper: java.lang.String RELOAD_APP_EXTRA_JS_PROXY
com.horcrux.svg.VirtualView: void setName(java.lang.String)
okio.SegmentedByteString: int[] directory
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.Boolean acceptsImages(java.lang.String)
org.webrtc.LibvpxVp9Encoder: boolean nativeIsSupported()
androidx.fragment.app.Fragment: android.view.ViewGroup mContainer
okio.Okio: okio.Sink sink(java.nio.file.Path,java.nio.file.OpenOption[])
com.google.android.gms.internal.measurement.zzcd$zzc
okhttp3.internal.huc.OkHttpURLConnection: void setReadTimeout(int)
org.webrtc.audio.JavaAudioDeviceModule: int inputSampleRate
org.webrtc.Camera1Session: android.hardware.Camera access$300(org.webrtc.Camera1Session)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_INDETERMINATE
okhttp3.internal.ws.WebSocketProtocol: void toggleMask(okio.Buffer$UnsafeCursor,byte[])
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_21
com.facebook.react.bridge.CatalystInstanceImpl$4: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getFingerprintSync()
org.webrtc.voiceengine.BuildInfo: int getSdkVersion()
org.jitsi.meet.sdk.R$id: int alertTitle
com.horcrux.svg.R$attr: int contentDescription
com.facebook.react.uimanager.UIManagerModule: void setChildren(int,com.facebook.react.bridge.ReadableArray)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA256
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
org.webrtc.RtpTransceiver$RtpTransceiverDirection
com.horcrux.svg.R$anim: int catalyst_fade_out
org.jitsi.meet.sdk.R$dimen: int abc_action_bar_content_inset_with_nav
org.webrtc.RtpTransceiver$RtpTransceiverDirection: org.webrtc.RtpTransceiver$RtpTransceiverDirection valueOf(java.lang.String)
com.horcrux.svg.R$styleable: int AppCompatTheme_textColorSearchUrl
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_EXTRACTED
org.webrtc.MediaStream: boolean addPreservedTrack(org.webrtc.VideoTrack)
com.facebook.jni.MapIteratorHelper: java.lang.Object mValue
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$1: JitsiMeetConferenceOptions$1()
com.oney.WebRTCModule.WebRTCModule: void mediaStreamCreate(java.lang.String)
org.webrtc.voiceengine.WebRtcAudioRecord$AudioSamples: int getChannelCount()
org.jitsi.meet.sdk.ExternalAPIModule: java.lang.String TAG
okhttp3.internal.huc.OkHttpsURLConnection: java.security.Permission getPermission()
com.horcrux.svg.R$color: int abc_primary_text_material_light
com.facebook.react.views.slider.ReactSliderManager: ReactSliderManager()
com.squareup.duktape.DuktapeException: java.lang.String STACK_TRACE_CLASS_NAME
com.horcrux.svg.RenderableView: int FILL_RULE_NONZERO
com.facebook.react.devsupport.DevServerHelper: DevServerHelper(com.facebook.react.devsupport.DevInternalSettings,java.lang.String,com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatusProvider)
org.webrtc.ScreenCapturerAndroid$2: void run()
timber.log.Timber$Tree: void v(java.lang.Throwable,java.lang.String,java.lang.Object[])
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Medium_Inverse
org.webrtc.NetworkMonitorAutoDetect$WifiDirectManagerDelegate: void onReceive(android.content.Context,android.content.Intent)
org.jitsi.meet.R$color
com.horcrux.svg.RadialGradientView: void setGradient(com.facebook.react.bridge.ReadableArray)
com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatus: java.lang.Boolean isLastDownloadSucess
org.jitsi.meet.sdk.ParticipantsService: ParticipantsService(android.content.Context)
com.facebook.react.modules.core.Timing: java.lang.Object mIdleCallbackGuard
okhttp3.internal.tls.DistinguishedNameParser: char[] chars
org.webrtc.DataChannel$State: org.webrtc.DataChannel$State fromNativeIndex(int)
com.facebook.react.devsupport.RedBoxDialog$OpenStackFrameTask: org.json.JSONObject stackFrameToJson(com.facebook.react.devsupport.interfaces.StackFrame)
okhttp3.Cookie: java.lang.String name()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
org.webrtc.ScreenCapturerAndroid: long numCapturedFrames
com.facebook.react.devsupport.JSCHeapCapture$CaptureException
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsReferenceBaseline(long)
org.jitsi.meet.sdk.R$styleable: int LinearLayoutCompat_measureWithLargestChild
com.facebook.react.bridge.UnexpectedNativeTypeException
okio.Buffer: byte[] readByteArray(long)
okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)
com.reactnativecommunity.webview.RNCWebViewManager: void setJavaScriptCanOpenWindowsAutomatically(android.webkit.WebView,boolean)
org.webrtc.JavaI420Buffer: void nativeCropAndScaleI420(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int)
org.jitsi.meet.sdk.log.JitsiMeetBaseLogHandler
org.jitsi.meet.R$string: int radiogroup_description
org.webrtc.FileVideoCapturer$VideoReader: org.webrtc.VideoFrame getNextFrame()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int)
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMinWidth(long)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: java.lang.String nextKey()
org.jitsi.meet.R$styleable: int DrawerArrowToggle_arrowShaftLength
org.jitsi.meet.sdk.R$dimen: int abc_action_bar_stacked_tab_max_width
com.horcrux.svg.RenderableViewManager$PathViewManager
okhttp3.internal.platform.AndroidPlatform: boolean api23IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object)
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getDefaultEventTypes()
org.jitsi.meet.sdk.R$string: int common_google_play_services_unknown_issue
org.webrtc.HardwareVideoEncoderFactory: boolean isHardwareSupportedInCurrentSdkVp8(android.media.MediaCodecInfo)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String getName()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)
org.webrtc.NetworkMonitor: int numObservers
okhttp3.internal.ws.RealWebSocket$1: okhttp3.internal.ws.RealWebSocket this$0
com.horcrux.svg.R$styleable: int AppCompatTheme_tooltipFrameBackground
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Spinner
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA
org.webrtc.PeerConnection$PeerConnectionState: org.webrtc.PeerConnection$PeerConnectionState NEW
org.jitsi.meet.R$drawable: int abc_item_background_holo_light
com.facebook.react.modules.intent.IntentModule
org.webrtc.Logging: void d(java.lang.String,java.lang.String)
com.facebook.react.modules.debug.AnimationsDebugModule: void onCatalystInstanceDestroy()
org.webrtc.EglBase
okhttp3.internal.NamedRunnable: void run()
com.facebook.react.devsupport.DevSupportManagerFactory: java.lang.String DEVSUPPORT_IMPL_PACKAGE
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexDirection(long,int)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
org.jitsi.meet.R$style: int Animation_Catalyst_RedBox
org.jitsi.meet.sdk.R$id: int rn_redbox_report_button
org.webrtc.CameraSession$Events: void onCameraClosed(org.webrtc.CameraSession)
com.horcrux.svg.R$attr: int alertDialogCenterButtons
com.google.android.gms.internal.measurement.zzca$zzb: int zzf
org.webrtc.PeerConnection$PortPrunePolicy: org.webrtc.PeerConnection$PortPrunePolicy PRUNE_BASED_ON_PRIORITY
org.jitsi.meet.R$styleable: int AppCompatTheme_homeAsUpIndicator
com.facebook.react.animated.NativeAnimatedModule: void addAnimatedEventToView(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type valueOf(java.lang.String)
com.facebook.react.devsupport.JSCHeapCapture: java.lang.String getName()
org.jitsi.meet.R$attr: int searchIcon
org.jitsi.meet.sdk.R$string: int image_description
org.jitsi.meet.sdk.DropboxModule: java.lang.String getName()
com.facebook.imagepipeline.nativecode.NativeRoundingFilter
org.webrtc.SdpObserver: void onSetFailure(java.lang.String)
org.jitsi.meet.R$styleable: int AppCompatTheme_windowActionBarOverlay
okhttp3.ConnectionSpec
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
org.webrtc.VideoDecoder$DecodeInfo: long renderTimeMs
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.DevServerHelper access$300(com.facebook.react.devsupport.DevSupportManagerImpl)
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_MIXED
okhttp3.internal.huc.OkHttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)
org.jitsi.meet.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
com.facebook.react.bridge.ReadableArray: boolean getBoolean(int)
okio.BufferedSink: okio.Buffer buffer()
com.facebook.react.devsupport.DevServerHelper$1$1
okio.GzipSource: byte FCOMMENT
com.horcrux.svg.R$styleable: int AppCompatTheme_windowActionModeOverlay
com.facebook.react.devsupport.BundleDeltaClient$BundleDeltaJavaClient: byte[] mPostCode
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: java.lang.String mMethod
com.dropbox.core.v2.auth.AccessError$Tag: com.dropbox.core.v2.auth.AccessError$Tag valueOf(java.lang.String)
org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger: void start()
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
com.learnium.RNDeviceInfo.RNDeviceModule: android.content.BroadcastReceiver receiver
org.webrtc.audio.WebRtcAudioManager: int getMinOutputFrameSize(int,int)
com.facebook.react.modules.clipboard.ClipboardModule: android.content.ClipboardManager getClipboardService()
okhttp3.internal.connection.RouteException: java.io.IOException getFirstConnectException()
com.horcrux.svg.R$styleable: int Toolbar_buttonGravity
org.webrtc.CameraEnumerationAndroid$CaptureFormat: boolean equals(java.lang.Object)
com.facebook.react.bridge.CxxModuleWrapper: CxxModuleWrapper(com.facebook.jni.HybridData)
okhttp3.ResponseBody: byte[] bytes()
okio.Source
okio.Buffer: long readLongLe()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionModePasteDrawable
com.horcrux.svg.R$attr: int titleTextColor
org.webrtc.HardwareVideoEncoder: java.lang.Integer surfaceColorFormat
okhttp3.Cache: int ENTRY_COUNT
okhttp3.ResponseBody$BomAwareReader: int read(char[],int,int)
org.jitsi.meet.sdk.R$dimen: int abc_action_bar_stacked_max_height
com.facebook.react.bridge.JSCJavaScriptExecutor: JSCJavaScriptExecutor(com.facebook.react.bridge.ReadableNativeMap)
okhttp3.internal.http2.Http2Stream$FramingSink: boolean $assertionsDisabled
org.jitsi.meet.R$raw: int lang_languagesesus
androidx.appcompat.view.menu.ListMenuItemView
okhttp3.internal.ws.RealWebSocket: long CANCEL_AFTER_CLOSE_MILLIS
org.jitsi.meet.R$styleable: int MenuView_android_horizontalDivider
com.horcrux.svg.R$attr: int tooltipForegroundColor
org.webrtc.Camera2Session: int access$1300(org.webrtc.Camera2Session)
com.horcrux.svg.RenderableViewManager: void resetTransformProperty(android.view.View)
com.horcrux.svg.R$attr: int titleTextAppearance
okhttp3.internal.http1.Http1Codec
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Menu
org.jitsi.meet.sdk.R$string: int state_expanded_description
com.horcrux.svg.R$attr: int subtitle
org.webrtc.CryptoOptions: org.webrtc.CryptoOptions$SFrame getSFrame()
okhttp3.CacheControl: java.lang.String toString()
org.jitsi.meet.sdk.ListenerUtils$1: java.lang.String val$eventName
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: int RECONNECT_DELAY_MS
com.facebook.react.views.textinput.ReactTextInputManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okio.Buffer: byte[] readByteArray()
androidx.fragment.app.Fragment: boolean mIsNewlyAdded
com.horcrux.svg.R$styleable: int ActionBar_popupTheme
org.webrtc.CameraCapturer: int height
org.jitsi.meet.sdk.R$color: int common_google_signin_btn_text_dark_focused
org.webrtc.Logging$Severity: org.webrtc.Logging$Severity LS_INFO
org.webrtc.Predicate$1: Predicate$1(org.webrtc.Predicate,org.webrtc.Predicate)
org.webrtc.MediaCodecWrapper: void start()
okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])
org.webrtc.RtpSender: void checkRtpSenderExists()
org.webrtc.PeerConnection$TcpCandidatePolicy: PeerConnection$TcpCandidatePolicy(java.lang.String,int)
org.jitsi.meet.R$styleable: int GradientColor_android_endY
org.jitsi.meet.sdk.JitsiMeetActivity: void onCreate(android.os.Bundle)
okhttp3.internal.ws.WebSocketWriter: okio.Buffer sinkBuffer
org.webrtc.CameraEnumerationAndroid$1: int progressivePenalty(int,int,int,int)
com.facebook.react.uimanager.ViewManager: java.util.Map getCommandsMap()
okhttp3.OkHttpClient: boolean followRedirects
org.jitsi.meet.sdk.R$string: int menuitem_description
com.facebook.react.modules.statusbar.StatusBarModule: void setTranslucent(boolean)
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebViewManager$RNCWebChromeClient mWebChromeClient
org.webrtc.HardwareVideoEncoder$YuvFormat$1
okio.SegmentedByteString: java.lang.Object writeReplace()
com.facebook.react.devsupport.interfaces.DevSupportManager: java.lang.String getSourceUrl()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long)
org.jitsi.meet.sdk.R$style: int SpinnerTimePickerStyle
org.jitsi.meet.sdk.R$attr: int collapseContentDescription
org.jitsi.meet.sdk.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
okhttp3.internal.http2.PushObserver$1: boolean onRequest(int,java.util.List)
okhttp3.internal.http2.Huffman$Node: Huffman$Node(int,int)
org.webrtc.SurfaceTextureHelper: android.os.Handler handler
com.facebook.react.views.textinput.ReactTextInputManager: int FOCUS_TEXT_INPUT
org.webrtc.audio.WebRtcAudioRecord: boolean enableBuiltInAEC(boolean)
com.facebook.react.bridge.NativeModuleRegistry: java.util.List getAllModules()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.Address: java.util.List connectionSpecs()
org.webrtc.NetworkChangeDetector$NetworkInformation
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecuteGuarded(java.lang.Object)
org.webrtc.RTCStats: java.lang.String type
com.horcrux.svg.R$attr: int showTitle
com.google.android.gms.internal.measurement.zzcd$zzi: com.google.android.gms.internal.measurement.zzjp zzh
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableMap getPowerStateFromIntent(android.content.Intent)
com.dropbox.core.v2.auth.PaperAccessError: com.dropbox.core.v2.auth.PaperAccessError[] values()
org.jitsi.meet.sdk.ListenerUtils
org.webrtc.CameraEnumerationAndroid$1: int MIN_FPS_LOW_VALUE_WEIGHT
com.facebook.react.devsupport.DevServerHelper$1: com.facebook.react.devsupport.DevServerHelper this$0
org.jitsi.meet.sdk.R$styleable: int SwitchCompat_thumbTextPadding
org.jitsi.meet.R$styleable: int SimpleDraweeView_roundingBorderWidth
org.jitsi.meet.R$anim: int btn_radio_to_on_mtrl_dot_group_animation
org.webrtc.RtpReceiver$Observer: void onFirstPacketReceived(org.webrtc.MediaStreamTrack$MediaType)
com.facebook.react.devsupport.BundleDeltaClient$BundleDeltaJavaClient: void reset()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionModeCopyDrawable
org.webrtc.audio.JavaAudioDeviceModule$AudioRecordErrorCallback
org.jitsi.meet.sdk.R$styleable: int Spinner_android_entries
com.facebook.react.uimanager.NoSuchNativeViewException
org.webrtc.audio.WebRtcAudioTrack: WebRtcAudioTrack(android.content.Context,android.media.AudioManager)
org.devio.rn.splashscreen.SplashScreenModule: SplashScreenModule(com.facebook.react.bridge.ReactApplicationContext)
org.webrtc.PeerConnection$IceServer: java.lang.String hostname
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.Boolean arrayContainsString(java.lang.String[],java.lang.String)
com.facebook.react.fabric.events.EventBeatManager
com.facebook.react.views.textinput.ReactTextInputManager: com.facebook.react.views.textinput.ReactEditText createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: void access$300(org.jitsi.meet.sdk.AudioDeviceHandlerGeneric)
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: long LEGACY_STACK_SIZE_BYTES
org.webrtc.GlGenericDrawer: java.nio.FloatBuffer FULL_RECTANGLE_TEXTURE_BUFFER
org.jitsi.meet.sdk.AudioModeModule: void addDevice(java.lang.String)
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String defaultUserAgent()
org.webrtc.PeerConnection$IceServer: java.util.List tlsAlpnProtocols
org.jitsi.meet.sdk.R$drawable: int common_google_signin_btn_text_dark
org.webrtc.SurfaceTextureHelper: SurfaceTextureHelper(org.webrtc.EglBase$Context,android.os.Handler,boolean,org.webrtc.YuvConverter,org.webrtc.SurfaceTextureHelper$FrameRefMonitor)
org.jitsi.meet.sdk.R$dimen: int abc_seekbar_track_background_height_material
org.jitsi.meet.R$raw: int lang_languageset
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder
okhttp3.Response: okhttp3.CacheControl cacheControl
org.jitsi.meet.sdk.R$drawable: int abc_ratingbar_small_material
com.horcrux.svg.R$id: R$id()
okhttp3.internal.huc.BufferedRequestBody: okio.Buffer buffer
org.webrtc.EglBase14Impl: void createSurfaceInternal(java.lang.Object)
okio.SegmentPool: SegmentPool()
com.reactnativecommunity.webview.RNCWebViewManager: void setLayerType(android.webkit.WebView,java.lang.String)
okhttp3.Dispatcher: void setIdleCallback(java.lang.Runnable)
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: void call(com.facebook.react.bridge.CatalystInstanceImpl)
org.webrtc.RtpParameters$Codec: java.util.Map getParameters()
com.horcrux.svg.R$string: int summary_description
com.facebook.react.devsupport.DevSupportManagerImpl$9$1: void onClick(android.content.DialogInterface,int)
org.webrtc.Camera2Session: void openCamera()
com.horcrux.svg.RNSVGRenderableManager: int DEFAULT_BUFFER_SIZE
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: org.jitsi.meet.sdk.JitsiMeetUserInfo access$1002(org.jitsi.meet.sdk.JitsiMeetConferenceOptions,org.jitsi.meet.sdk.JitsiMeetUserInfo)
com.horcrux.svg.R$attr: int barLength
okhttp3.internal.tls.CertificateChainCleaner: CertificateChainCleaner()
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
org.webrtc.audio.WebRtcAudioUtils: java.lang.String channelMaskToString(int)
com.facebook.react.bridge.DynamicFromArray: java.lang.String asString()
com.facebook.react.devsupport.DevSupportManagerImpl$21: void onSuccess(java.io.File)
org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode: org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode AUDIO_RECORD_START_EXCEPTION
okhttp3.ResponseBody
org.webrtc.audio.LowLatencyAudioBufferManager
com.facebook.react.devsupport.InspectorPackagerConnection: void closeQuietly()
org.webrtc.NetworkChangeDetector$ConnectionType: org.webrtc.NetworkChangeDetector$ConnectionType CONNECTION_VPN
org.jitsi.meet.R$drawable: int abc_list_selector_disabled_holo_dark
com.facebook.react.devsupport.ViewHierarchyUtil: ViewHierarchyUtil()
okio.ForwardingTimeout: void throwIfReached()
okhttp3.internal.http1.Http1Codec: okio.Source newUnknownLengthSource()
org.webrtc.FileVideoCapturer: void tick()
com.facebook.react.bridge.JavaOnlyArray: java.lang.String toString()
org.jitsi.meet.sdk.JitsiMeetActivity: void onConferenceJoined(java.util.HashMap)
com.facebook.react.views.textinput.ReactEditText: void setBlurOnSubmit(java.lang.Boolean)
androidx.fragment.app.Fragment: void onDestroy()
okio.GzipSink: void writeFooter()
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2
org.jitsi.meet.sdk.net.NAT64AddrInfo: byte[] ipv4AddressStringToBytes(java.lang.String)
org.webrtc.VideoDecoder$Settings: int height
org.webrtc.HardwareVideoEncoderFactory: java.util.List H264_HW_EXCEPTION_MODELS
com.rnimmersive.RNImmersiveModule: com.rnimmersive.RNImmersiveModule getInstance()
okio.BufferedSource: long indexOf(byte)
org.jitsi.meet.sdk.R$attr: int actionModeSplitBackground
okhttp3.internal.http2.ErrorCode
okio.Utf8: long size(java.lang.String,int,int)
org.webrtc.EncodedImage$Builder: org.webrtc.EncodedImage$Builder setFrameType(org.webrtc.EncodedImage$FrameType)
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Integer getIceUnwritableMinChecks()
org.webrtc.NetworkMonitor$1: NetworkMonitor$1(org.webrtc.NetworkMonitor)
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_actualImageScaleType
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.lang.String REACT_CLASS
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_BUTTON_NEGATIVE
okio.Buffer: void require(long)
org.webrtc.MediaStreamTrack: boolean enabled()
com.facebook.react.devsupport.DevSupportManagerImpl$10: DevSupportManagerImpl$10(com.facebook.react.devsupport.DevSupportManagerImpl)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_START
org.webrtc.CalledByNativeUnchecked
androidx.activity.ComponentActivity: int mContentLayoutId
org.webrtc.Camera2Capturer: void startCapture(int,int,int)
com.facebook.react.devsupport.DevSupportManagerImpl$22: DevSupportManagerImpl$22(com.facebook.react.devsupport.DevSupportManagerImpl)
okhttp3.EventListener: void responseBodyStart(okhttp3.Call)
org.jitsi.meet.R$dimen: int abc_text_size_body_1_material
com.horcrux.svg.R$id: int notification_background
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.jitsi.meet.R$attr: int thickness
com.horcrux.svg.RenderableViewManager: void setOnLayout(com.horcrux.svg.VirtualView,boolean)
org.webrtc.Camera2Capturer: void switchCamera(org.webrtc.CameraVideoCapturer$CameraSwitchHandler)
okhttp3.RealCall$1: RealCall$1(okhttp3.RealCall)
com.facebook.react.bridge.ReactMarker: java.util.List sListeners
org.jitsi.meet.R$style: int Platform_ThemeOverlay_AppCompat
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_CHECK_START
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
okhttp3.internal.huc.OkHttpsURLConnection: int getResponseCode()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.facebook.react.fabric.FabricUIManager: void preallocateView(int,int,java.lang.String,com.facebook.react.bridge.ReadableMap,java.lang.Object,boolean)
org.jitsi.meet.R$raw: int lang_languagesmn
org.jitsi.meet.sdk.R$dimen: int abc_text_size_menu_material
org.webrtc.HardwareVideoEncoder: org.webrtc.VideoCodecStatus initEncode(org.webrtc.VideoEncoder$Settings,org.webrtc.VideoEncoder$Callback)
org.webrtc.FileVideoCapturer$VideoReader
com.facebook.react.modules.share.ShareModule: ShareModule(com.facebook.react.bridge.ReactApplicationContext)
org.jitsi.meet.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_1
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ImageButton
com.horcrux.svg.RenderableViewManager$RadialGradientManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getUserAgentSync()
okhttp3.internal.http2.Http2Reader$Handler: void ping(boolean,int,int)
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_textLocale
org.jitsi.meet.R$layout: int abc_alert_dialog_button_bar_material
org.jitsi.meet.sdk.ListenerUtils: void runListenerMethodOnUiThread(java.lang.Object,java.util.Map,java.lang.String,com.facebook.react.bridge.ReadableMap)
org.webrtc.PeerConnectionFactory: boolean startAecDump(int,int)
org.jitsi.meet.sdk.R$color: int common_google_signin_btn_text_dark
okio.RealBufferedSource: boolean closed
org.jitsi.meet.sdk.R$attr: int trackTintMode
org.jitsi.meet.sdk.R$id: int screen
org.webrtc.voiceengine.WebRtcAudioManager: long nativeAudioManager
okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()
com.facebook.react.devsupport.InspectorPackagerConnection$Connection$2: com.facebook.react.devsupport.InspectorPackagerConnection$Connection this$1
org.jitsi.meet.R$string
org.jitsi.meet.R$styleable: int MenuView_android_windowAnimationStyle
org.webrtc.VideoEncoder$BitrateAllocation: VideoEncoder$BitrateAllocation(int[][])
org.webrtc.CameraCapturer: int access$1700(org.webrtc.CameraCapturer)
com.facebook.react.views.view.ReactViewManager: android.view.View getChildAt(com.facebook.react.views.view.ReactViewGroup,int)
androidx.fragment.app.Fragment: void postponeEnterTransition()
org.jitsi.meet.R$dimen: int abc_dialog_fixed_height_major
org.webrtc.NV12Buffer: void retain()
co.apptailor.googlesignin.RNGoogleSigninButtonViewManager: com.google.android.gms.common.SignInButton createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.jitsi.meet.sdk.BroadcastEvent: java.lang.String TAG
org.webrtc.EglBase10Impl: javax.microedition.khronos.egl.EGLContext createEglContext(javax.microedition.khronos.egl.EGLContext,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int)
org.jitsi.meet.R$attr: int actionModeWebSearchDrawable
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1
org.webrtc.CameraCapturer: java.lang.String getCameraName()
org.devio.rn.splashscreen.SplashScreenModule
okio.Okio$2
com.facebook.react.devsupport.DisabledDevSupportManager: java.lang.String getJSBundleURLForRemoteDebugging()
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.Boolean acceptsImages(java.lang.String[])
org.webrtc.NetworkMonitorAutoDetect$WifiDirectManagerDelegate: org.webrtc.NetworkChangeDetector$NetworkInformation wifiP2pNetworkInfo
okhttp3.internal.http2.Http2Connection: okhttp3.Protocol getProtocol()
okio.RealBufferedSource: boolean rangeEquals(long,okio.ByteString,int,int)
org.webrtc.DataChannel$Init: boolean ordered
okhttp3.internal.ws.RealWebSocket: boolean failed
org.jitsi.meet.sdk.R$layout: int abc_list_menu_item_checkbox
okhttp3.internal.http2.Huffman: int[] CODES
com.facebook.react.devsupport.RedBoxDialog: android.widget.Button access$100(com.facebook.react.devsupport.RedBoxDialog)
com.facebook.react.modules.camera.ImageEditingManager: boolean isLocalUri(java.lang.String)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler
com.horcrux.svg.R$attr: int actionBarItemBackground
org.jitsi.meet.sdk.R$color: int abc_btn_colored_text_material
okhttp3.Cookie: java.lang.String domain
org.webrtc.DataChannel$State: org.webrtc.DataChannel$State[] $VALUES
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_roundBottomStart
org.webrtc.PeerConnection$IceConnectionState: org.webrtc.PeerConnection$IceConnectionState COMPLETED
org.jitsi.meet.R$color: int material_blue_grey_800
com.facebook.react.devsupport.DevInternalSettings: java.lang.String PREFS_RELOAD_ON_JS_CHANGE_KEY
com.facebook.react.bridge.NativeMap
org.jitsi.meet.sdk.BaseReactView: java.lang.Object listener
okhttp3.HttpUrl: boolean isHttps()
com.facebook.react.devsupport.DebugOverlayController: DebugOverlayController(com.facebook.react.bridge.ReactContext)
com.facebook.react.modules.dialog.DialogModule: java.util.Map getConstants()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_START
androidx.fragment.app.Fragment: void onHiddenChanged(boolean)
com.horcrux.svg.R$style: int Widget_AppCompat_ActionButton
org.webrtc.EglRenderer: void logD(java.lang.String)
com.horcrux.svg.BuildConfig: java.lang.String BUILD_TYPE
com.horcrux.svg.VirtualView: float mScale
com.horcrux.svg.R$attr: int windowFixedHeightMajor
org.webrtc.Camera2Session: android.hardware.camera2.CameraDevice cameraDevice
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.packagerconnection.JSPackagerClient mPackagerClient
org.jitsi.meet.sdk.R$drawable: int btn_radio_on_to_off_mtrl_animation
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
com.facebook.react.bridge.CatalystInstanceImpl$1$1: com.facebook.react.bridge.CatalystInstanceImpl$1 this$1
org.webrtc.PeerConnection$RTCConfiguration: java.util.List getIceServers()
com.horcrux.svg.RenderableViewManager$UseViewManager: void onDropViewInstance(android.view.View)
org.jitsi.meet.sdk.R$styleable: int FontFamily_fontProviderCerts
okhttp3.internal.http2.Http2Connection: void pushResetLater(int,okhttp3.internal.http2.ErrorCode)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_dividerVertical
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Title_Inverse
com.facebook.react.bridge.JavaOnlyMap$1
org.jitsi.meet.sdk.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
com.facebook.react.devsupport.ReactInstanceManagerDevHelper: void onJSBundleLoadedFromServer(com.facebook.react.bridge.NativeDeltaClient)
org.webrtc.audio.WebRtcAudioTrack$AudioTrackThread: WebRtcAudioTrack$AudioTrackThread(org.webrtc.audio.WebRtcAudioTrack,java.lang.String)
com.facebook.react.bridge.JSIModuleSpec
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.toast.ToastModule)
com.facebook.react.modules.timepicker.TimePickerDialogModule: android.os.Bundle createFragmentArguments(com.facebook.react.bridge.ReadableMap)
com.google.android.gms.internal.measurement.zzca$zzb: com.google.android.gms.internal.measurement.zzca$zzb zzm
org.jitsi.meet.R$styleable: int CompoundButton_buttonTintMode
org.jitsi.meet.R$style: int Base_Widget_AppCompat_Light_ActionBar
com.facebook.react.devsupport.DevLoadingViewController: void hideInternal()
com.facebook.react.views.image.ReactImageManager: void setBorderRadius(com.facebook.react.views.image.ReactImageView,int,float)
com.horcrux.svg.VirtualView: void invalidate()
org.webrtc.PeerConnectionFactory$InitializationOptions$Builder: java.lang.String fieldTrials
org.webrtc.audio.WebRtcAudioEffects: android.media.audiofx.AcousticEchoCanceler aec
org.jitsi.meet.sdk.R$id: int tag_accessibility_pane_title
com.facebook.react.devsupport.DevSupportManagerImpl: boolean mIsDevSupportEnabled
okhttp3.internal.tls.BasicTrustRootIndex
org.webrtc.PeerConnection$AdapterType: java.util.Map BY_BITMASK
com.horcrux.svg.R$id: int icon
org.webrtc.BuiltinAudioDecoderFactoryFactory
com.facebook.react.animated.NativeAnimatedModule: void flattenAnimatedNodeOffset(int)
com.facebook.jni.ThreadScopeSupport: ThreadScopeSupport()
okhttp3.internal.platform.Jdk9Platform: okhttp3.internal.platform.Jdk9Platform buildIfSupported()
okhttp3.Route: boolean requiresTunnel()
org.webrtc.audio.WebRtcAudioTrack: boolean access$900(org.webrtc.audio.WebRtcAudioTrack)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String dateFormat(double,boolean,boolean)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setRefY(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.http2.Header: okio.ByteString TARGET_SCHEME
okhttp3.internal.ws.WebSocketProtocol: int B1_MASK_LENGTH
okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)
okhttp3.internal.cache.DiskLruCache$Entry: boolean readable
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
org.webrtc.VideoCodecInfo: java.util.Map getParams()
org.jitsi.meet.sdk.R$drawable
androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
org.webrtc.SurfaceTextureHelper$2
org.webrtc.EncodedImage: java.lang.Integer getQp()
org.webrtc.VideoEncoder$ResolutionBitrateLimits: int minStartBitrateBps
org.webrtc.PeerConnection$ContinualGatheringPolicy: org.webrtc.PeerConnection$ContinualGatheringPolicy GATHER_ONCE
com.facebook.react.uimanager.LayoutShadowNode: void setFlexWrap(java.lang.String)
org.webrtc.voiceengine.WebRtcAudioEffects: boolean isAcousticEchoCancelerEffectAvailable()
org.jitsi.meet.R$attr: int actionOverflowMenuStyle
com.dropbox.core.DbxWebAuth$Exception
okhttp3.internal.http2.Http2Codec: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_windowActionBarOverlay
org.jitsi.meet.sdk.AudioModeModule$5: void run()
com.facebook.react.bridge.WritableNativeArray: void pushNativeMap(com.facebook.react.bridge.WritableNativeMap)
org.webrtc.Logging: org.webrtc.Loggable loggable
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
okhttp3.Cookie$Builder: java.lang.String path
okhttp3.internal.cache2.Relay$RelaySource: Relay$RelaySource(okhttp3.internal.cache2.Relay)
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
com.facebook.react.bridge.JavaMethodWrapper: boolean mArgumentsProcessed
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
com.horcrux.svg.R$id: int multiply
org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger$LogVolumeTask
org.jitsi.meet.sdk.R$dimen: int abc_dropdownitem_text_padding_right
org.jitsi.meet.sdk.R$id: int search_src_text
com.horcrux.svg.R$attr: int editTextBackground
okio.SegmentedByteString: void write(okio.Buffer)
com.horcrux.svg.SvgView: java.lang.String toDataURL(int,int)
org.jitsi.meet.R$raw: int lang_mainfrca
org.jitsi.meet.sdk.R$color: int material_grey_600
org.jitsi.meet.R$drawable: int abc_ic_menu_overflow_material
com.facebook.react.modules.appstate.AppStateModule: com.facebook.react.bridge.WritableMap createAppStateEventMap()
com.facebook.react.bridge.ReactContext: void runOnUiQueueThread(java.lang.Runnable)
com.facebook.react.fabric.events.FabricEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator()
okhttp3.MultipartBody$Part: okhttp3.Headers headers
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Body2
org.jitsi.meet.R$attr: int goIcon
com.horcrux.svg.R$style: int Widget_AppCompat_Button_Borderless
com.horcrux.svg.RenderableViewManager$TextViewManager: RenderableViewManager$TextViewManager()
org.jitsi.meet.sdk.R$styleable: int[] FragmentContainerView
org.webrtc.SurfaceTextureHelper: boolean access$500(org.webrtc.SurfaceTextureHelper)
org.jitsi.meet.R$styleable: int SearchView_searchIcon
org.webrtc.JniHelper: java.lang.Object getKey(java.util.Map$Entry)
org.webrtc.PeerConnectionFactory: void stopInternalTracingCapture()
com.horcrux.svg.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
com.reactnativecommunity.webview.RNCWebViewModule: android.content.Intent getVideoIntent()
com.horcrux.svg.R$style: int Theme_FullScreenDialogAnimatedSlide
com.facebook.react.uimanager.UIManagerModule: int mViewManagerConstantsCacheSize
com.horcrux.svg.ImageView: void setAlign(java.lang.String)
okhttp3.Headers: long byteCount()
okio.ByteString: okio.ByteString hmacSha512(okio.ByteString)
okhttp3.internal.http2.Http2Writer: okhttp3.internal.http2.Hpack$Writer hpackWriter
org.jitsi.meet.R$styleable: int AppCompatTextView_fontVariationSettings
org.jitsi.meet.sdk.R$drawable: int notification_bg_normal
okhttp3.OkHttpClient$1: void setCache(okhttp3.OkHttpClient$Builder,okhttp3.internal.cache.InternalCache)
com.horcrux.svg.R$styleable: int SimpleDraweeView_failureImageScaleType
com.facebook.react.bridge.WritableNativeArray: void pushArray(com.facebook.react.bridge.ReadableArray)
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String REACT_CLASS
org.webrtc.VideoDecoder$Settings: VideoDecoder$Settings(int,int,int)
org.jitsi.meet.sdk.R$styleable: int[] ViewStubCompat
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzt
com.facebook.react.devsupport.RedBoxDialog$StackAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
org.webrtc.VideoFrameDrawer$YuvUploader: VideoFrameDrawer$YuvUploader()
com.facebook.react.bridge.ModuleSpec: javax.inject.Provider mProvider
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.devsupport.InspectorPackagerConnection access$200(com.facebook.react.devsupport.DevServerHelper)
org.webrtc.Camera2Session$CameraStateCallback: Camera2Session$CameraStateCallback(org.webrtc.Camera2Session)
okhttp3.internal.Util$2: java.lang.String val$name
com.horcrux.svg.R$styleable: int ActionBar_itemPadding
org.webrtc.RTCStatsReport: java.util.Map stats
com.google.android.gms.internal.measurement.zzcd$zzg: int zzai
com.horcrux.svg.R$attr: int tintMode
org.jitsi.meet.sdk.R$styleable: int[] CompoundButton
okio.Buffer: long indexOf(okio.ByteString)
org.jitsi.meet.sdk.R$styleable: int ButtonBarLayout_allowStacking
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_URI
okio.Buffer: okio.BufferedSink writeIntLe(int)
org.webrtc.VideoSource$AspectRatio
com.facebook.react.views.text.TextTransform: com.facebook.react.views.text.TextTransform[] values()
com.facebook.drawee.view.DraweeView: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Headline
okio.GzipSource: byte FNAME
org.webrtc.PeerConnection$TlsCertPolicy: org.webrtc.PeerConnection$TlsCertPolicy valueOf(java.lang.String)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mUiMessageQueueThread
org.jitsi.meet.sdk.R$dimen: int abc_text_size_display_1_material
org.webrtc.NetworkMonitor: org.webrtc.NetworkMonitorAutoDetect createAndSetAutoDetectForTest(android.content.Context)
org.webrtc.RtpParameters$Codec: java.util.Map parameters
com.zmxv.RNSound.RNSoundModule: java.lang.Double focusedPlayerKey
com.facebook.react.views.textinput.ReactTextInputManager: void setAutoCapitalize(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.Dynamic)
com.facebook.react.devsupport.BundleDeltaClient: BundleDeltaClient()
org.jitsi.meet.sdk.R$string: int abc_menu_shift_shortcut_label
org.jitsi.meet.MainActivity: void onCreate(android.os.Bundle)
com.facebook.react.bridge.CatalystInstanceImpl$1$1: CatalystInstanceImpl$1$1(com.facebook.react.bridge.CatalystInstanceImpl$1,com.facebook.react.bridge.JSIModule)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setDoOutput(boolean)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure MODERATE
androidx.fragment.app.FragmentActivity: void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
org.webrtc.DataChannel: org.webrtc.DataChannel$State state()
org.webrtc.Camera1Session: boolean access$500(org.webrtc.Camera1Session)
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_DayNight_Dialog
com.rnimmersive.RNImmersiveModule: void getImmersive(com.facebook.react.bridge.Promise)
com.facebook.react.modules.websocket.WebSocketModule: void access$100(com.facebook.react.modules.websocket.WebSocketModule,java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.JsonWriterHelper: void mapValue(android.util.JsonWriter,java.util.Map)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String getName()
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_retryImageScaleType
com.horcrux.svg.RenderableView: int FILL_RULE_EVENODD
okio.SegmentedByteString: okio.ByteString toAsciiUppercase()
com.google.android.gms.internal.measurement.zzbv$zze: com.google.android.gms.internal.measurement.zzbv$zzc zzf
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
org.webrtc.ThreadUtils$1Result: java.lang.Object value
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedMask(java.lang.String)
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String convertToCase(java.lang.String,int,boolean)
com.facebook.react.devsupport.DevSupportManagerImpl: void onCaptureHeapCommand(com.facebook.react.packagerconnection.Responder)
com.facebook.react.views.image.ReactImageManager: java.lang.String getName()
okhttp3.Headers: okhttp3.Headers of(java.util.Map)
com.facebook.react.bridge.CatalystInstanceImpl$5: com.facebook.react.bridge.CatalystInstanceImpl this$0
com.facebook.react.fabric.FabricUIManager: long measure(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float)
com.facebook.react.bridge.JavaMethodWrapper: JavaMethodWrapper(com.facebook.react.bridge.JavaModuleWrapper,java.lang.reflect.Method,boolean)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexGrow(long,float)
org.jitsi.meet.sdk.R$id: int group_divider
org.webrtc.PeerConnectionFactory: void nativePrintStackTrace(int)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$1: org.jitsi.meet.sdk.JitsiMeetConferenceOptions[] newArray(int)
org.jitsi.meet.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
org.jitsi.meet.R$attr: int actionViewClass
org.jitsi.meet.sdk.R$id: int progress_circular
com.facebook.react.modules.toast.ToastModule: void showWithGravityAndOffset(java.lang.String,int,int,int,int)
org.webrtc.voiceengine.WebRtcAudioUtils: boolean useWebRtcBasedAcousticEchoCanceler
org.jitsi.meet.sdk.R$id: int scrollView
org.jitsi.meet.R$styleable: int Spinner_android_popupBackground
org.jitsi.meet.R$color: R$color()
com.horcrux.svg.VirtualView: com.facebook.react.bridge.ReactContext mContext
org.webrtc.MediaCodecUtils: int[] DECODER_COLOR_FORMATS
com.horcrux.svg.VirtualView: java.util.ArrayList elements
com.facebook.react.views.textinput.ReactEditText: void setScrollWatcher(com.facebook.react.views.textinput.ScrollWatcher)
okio.SegmentedByteString: boolean rangeEquals(int,okio.ByteString,int,int)
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Widget_Switch
org.jitsi.meet.R$styleable: int MenuGroup_android_id
com.facebook.react.bridge.JavaJSExecutor: void loadApplicationScript(java.lang.String)
okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.internal.http2.Header: java.lang.String RESPONSE_STATUS_UTF8
org.jitsi.meet.sdk.R$string: int catalyst_debug_chrome_stop
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType[] values()
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$RtcpMuxPolicy getRtcpMuxPolicy()
com.horcrux.svg.R$dimen: int abc_edit_text_inset_top_material
com.horcrux.svg.R$color: int tooltip_background_dark
com.horcrux.svg.RNSVGRenderableManager: float getTotalLength(int)
co.apptailor.googlesignin.RNGoogleSigninButtonViewManager: void setSize(com.google.android.gms.common.SignInButton,int)
com.horcrux.svg.R$attr: int logoDescription
okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)
org.webrtc.BuiltinAudioEncoderFactoryFactory: BuiltinAudioEncoderFactoryFactory()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setDistanceToTriggerSync(int)
org.webrtc.voiceengine.WebRtcAudioEffects: java.lang.String TAG
org.jitsi.meet.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
com.horcrux.svg.R$styleable: int CompoundButton_buttonTint
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
org.jitsi.meet.R$anim: int abc_slide_out_bottom
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderWidth(com.facebook.react.views.textinput.ReactEditText,int,float)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
org.webrtc.EglRenderer$HandlerWithExceptionCallback: EglRenderer$HandlerWithExceptionCallback(android.os.Looper,java.lang.Runnable)
org.jitsi.meet.R$id: int submenuarrow
okio.SegmentedByteString: boolean equals(java.lang.Object)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: org.jitsi.meet.sdk.JitsiMeetUserInfo userInfo
okhttp3.CacheControl: boolean immutable
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder allEnabledTlsVersions()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)
org.webrtc.YuvConverter$ShaderCallbacks: float[] yCoeffs
com.reactnativecommunity.webview.RNCWebViewModule: android.webkit.ValueCallback filePathCallbackLegacy
androidx.fragment.app.Fragment: int getNextTransition()
okio.ByteString: void write(java.io.OutputStream)
com.facebook.react.devsupport.BundleDownloader: void processBundleResult(java.lang.String,int,okhttp3.Headers,okio.BufferedSource,java.io.File,com.facebook.react.devsupport.BundleDownloader$BundleInfo,com.facebook.react.devsupport.BundleDeltaClient$ClientType,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener)
okhttp3.Address: java.net.ProxySelector proxySelector()
okio.Buffer: okio.Buffer write(okio.ByteString)
org.webrtc.SurfaceViewRenderer: int rotatedFrameWidth
org.webrtc.audio.WebRtcAudioTrack: int initPlayout(int,int,double)
org.webrtc.audio.WebRtcAudioTrack: org.webrtc.audio.VolumeLogger volumeLogger
org.jitsi.meet.sdk.R$attr: int navigationMode
org.jitsi.meet.R$styleable: int SimpleDraweeView_roundTopEnd
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
org.webrtc.RTCStatsReport: RTCStatsReport(long,java.util.Map)
com.facebook.react.fabric.Binding: void setConstraints(int,float,float,float,float)
com.facebook.react.bridge.queue.NativeRunnableDeprecated
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.util.Date)
org.webrtc.CameraCapturer$1: CameraCapturer$1(org.webrtc.CameraCapturer)
org.jitsi.meet.R$style: int Widget_AppCompat_DropDownItem_Spinner
org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackThread: void run()
com.facebook.react.modules.camera.CameraRollManager: java.lang.String getName()
org.webrtc.audio.WebRtcAudioTrack: android.media.AudioAttributes getAudioAttributes(android.media.AudioAttributes)
org.webrtc.VideoSink: void onFrame(org.webrtc.VideoFrame)
org.jitsi.meet.R$styleable: int SearchView_android_focusable
org.jitsi.meet.sdk.R$raw: int lang_languageses
org.webrtc.DataChannel: int id()
org.webrtc.VideoCodecStatus: org.webrtc.VideoCodecStatus TARGET_BITRATE_OVERSHOOT
com.horcrux.svg.VirtualView: void setMatrix(com.facebook.react.bridge.Dynamic)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzaj
org.webrtc.EglBase10Impl: int EGL_CONTEXT_CLIENT_VERSION
org.jitsi.meet.R$dimen: int abc_dialog_fixed_width_minor
org.jitsi.meet.R$styleable: int AppCompatTheme_editTextBackground
com.horcrux.svg.R$id: int title
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegments(java.lang.String,boolean)
okhttp3.OkHttpClient$1
org.webrtc.PeerConnectionFactory: org.webrtc.PeerConnectionFactory$ThreadInfo workerThread
com.horcrux.svg.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
com.dropbox.core.v2.auth.TokenFromOAuth1ErrorException
okhttp3.internal.Util: okhttp3.ResponseBody EMPTY_RESPONSE
org.webrtc.NativeAndroidVideoTrackSource: void nativeOnFrameCaptured(long,int,long,org.webrtc.VideoFrame$Buffer)
org.webrtc.AndroidVideoDecoder: java.lang.String MEDIA_FORMAT_KEY_CROP_TOP
com.oney.WebRTCModule.WebRTCModule: void peerConnectionCloseAsync(int)
org.webrtc.Camera1Session$1: Camera1Session$1(org.webrtc.Camera1Session)
com.horcrux.svg.R$dimen: int abc_floating_window_z
com.facebook.react.devsupport.DevSupportManagerImpl: java.lang.String getSourceUrl()
org.jitsi.meet.R$attr: int buttonIconDimen
org.webrtc.TextureBufferImpl: int height
com.facebook.react.bridge.WritableMap: void putString(java.lang.String,java.lang.String)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setDoInput(boolean)
com.horcrux.svg.R$attr: int actionBarSplitStyle
com.facebook.react.devsupport.DevLoadingViewController: com.facebook.react.devsupport.ReactInstanceManagerDevHelper mReactInstanceManagerHelper
com.facebook.react.uimanager.BaseViewManager: void setOpacity(android.view.View,float)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ATTACH_MEASURED_ROOT_VIEWS_START
org.jitsi.meet.sdk.OngoingConferenceTracker: java.lang.String CONFERENCE_TERMINATED
org.webrtc.HardwareVideoEncoder$1: HardwareVideoEncoder$1(org.webrtc.HardwareVideoEncoder)
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableStartCompat
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.facebook.react.animated.NativeAnimatedModule: void setAnimatedNodeValue(int,double)
org.webrtc.FileVideoCapturer$1
com.facebook.react.devsupport.StackTraceHelper: com.facebook.react.devsupport.interfaces.StackFrame[] convertJsStackTrace(org.json.JSONArray)
com.reactnativecommunity.webview.RNCWebViewModule: boolean grantFileDownloaderPermissions()
com.horcrux.svg.TextProperties$TextPathMethod: com.horcrux.svg.TextProperties$TextPathMethod[] values()
org.jitsi.meet.R$style: int Theme_AppCompat_DayNight_DarkActionBar
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: void execute()
org.webrtc.LibvpxVp9Encoder: LibvpxVp9Encoder()
org.jitsi.meet.R$color: int bright_foreground_inverse_material_light
com.facebook.react.fabric.events.FabricEventEmitter: java.lang.String TAG
com.horcrux.svg.R$color: int background_floating_material_dark
org.jitsi.meet.R$string: int abc_action_bar_up_description
org.jitsi.meet.R$style: int Base_Animation_AppCompat_Dialog
com.horcrux.svg.R$id: int action_bar
org.jitsi.meet.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
com.horcrux.svg.SvgView: void setMinX(float)
org.webrtc.CameraCapturer$SwitchState: org.webrtc.CameraCapturer$SwitchState IN_PROGRESS
org.webrtc.voiceengine.WebRtcAudioTrack: void assertTrue(boolean)
org.jitsi.meet.sdk.R$color: int background_material_light
org.webrtc.SurfaceTextureHelper$3: SurfaceTextureHelper$3(org.webrtc.SurfaceTextureHelper)
com.facebook.react.bridge.JavaMethodWrapper: int mJSArgumentsNeeded
org.webrtc.LibvpxVp9Encoder: long nativeCreateEncoder()
org.jitsi.meet.R$layout: int notification_action_tombstone
org.jitsi.meet.sdk.R$layout: int notification_action_tombstone
com.learnium.RNDeviceInfo.RNDeviceModule: void getSupported64BitAbis(com.facebook.react.bridge.Promise)
com.oney.WebRTCModule.RTCVideoViewManager: void setStreamURL(com.oney.WebRTCModule.WebRTCView,java.lang.String)
org.webrtc.Camera2Enumerator: boolean isFrontFacing(java.lang.String)
org.webrtc.HardwareVideoEncoderFactory$1
org.webrtc.SurfaceTextureHelper: boolean isTextureInUse()
org.jitsi.meet.sdk.ConnectionService: boolean setConnectionActive(java.lang.String)
org.webrtc.NetworkMonitor$InstanceHolder
com.facebook.react.devsupport.RedBoxDialog$StackAdapter: com.facebook.react.devsupport.interfaces.StackFrame[] mStack
org.webrtc.EglRenderer: void notifyCallbacks(org.webrtc.VideoFrame,boolean)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
org.jitsi.meet.R$anim: int catalyst_fade_out
org.jitsi.meet.sdk.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
org.webrtc.audio.JavaAudioDeviceModule: long nativeAudioDeviceModule
com.facebook.react.bridge.JavaScriptContextHolder: JavaScriptContextHolder(long)
org.webrtc.ScreenCapturerAndroid$1: org.webrtc.ScreenCapturerAndroid this$0
org.webrtc.SurfaceTextureHelper$3
com.horcrux.svg.R$styleable: int ActionBar_elevation
com.horcrux.svg.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
org.jitsi.meet.sdk.R$id: int accessibility_actions
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2: void onSuccess(java.lang.String)
org.webrtc.VideoFrame
org.webrtc.CameraVideoCapturer: void switchCamera(org.webrtc.CameraVideoCapturer$CameraSwitchHandler,java.lang.String)
org.webrtc.RtpSender: org.webrtc.RtpParameters nativeGetParameters(long)
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
org.jitsi.meet.R$color: int abc_secondary_text_material_light
org.jitsi.meet.sdk.BroadcastAction: java.lang.String TAG
com.facebook.react.bridge.ObjectAlreadyConsumedException
com.facebook.react.modules.fresco.FrescoModule: boolean sHasBeenInitialized
com.facebook.react.views.text.ReactBaseTextShadowNode: void setIncludeFontPadding(boolean)
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.CryptoOptions cryptoOptions
com.horcrux.svg.TextView: void setLengthAdjust(java.lang.String)
com.google.firebase.FirebaseApiNotAvailableException
com.facebook.react.uimanager.ViewGroupManager: void addViews(android.view.ViewGroup,java.util.List)
com.horcrux.svg.RenderableViewManager$RectViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.internal.http1.Http1Codec$ChunkedSource: long bytesRemainingInChunk
org.webrtc.VideoEncoderFallback: boolean isHardwareEncoder()
com.facebook.react.devsupport.MultipartStreamReader: long mLastProgressEvent
com.facebook.react.devsupport.DevServerHelper: void startPollingOnChangeEndpoint(com.facebook.react.devsupport.DevServerHelper$OnServerContentChangeListener)
org.webrtc.PeerConnection$IceServer: java.lang.String toString()
okhttp3.internal.cache.DiskLruCache: void readJournal()
org.jitsi.meet.sdk.JitsiMeetUserInfo: java.lang.String getDisplayName()
org.webrtc.VideoCodecInfo: java.lang.String H264_FMTP_PROFILE_LEVEL_ID
com.facebook.react.views.textinput.ReactEditText: void setBackgroundColor(int)
org.webrtc.CryptoOptions: CryptoOptions(boolean,boolean,boolean,boolean)
org.jitsi.meet.R$string: int abc_action_mode_done
com.facebook.react.bridge.JavaMethodWrapper$3: JavaMethodWrapper$3()
org.webrtc.DynamicBitrateAdjuster: int getAdjustedBitrateBps()
com.horcrux.svg.SvgView: float mVbHeight
org.webrtc.voiceengine.WebRtcAudioUtils: java.lang.String getThreadInfo()
org.jitsi.meet.R$attr: int buttonBarNegativeButtonStyle
okhttp3.RequestBody: RequestBody()
com.facebook.react.devsupport.DevSupportManagerImpl: int JSEXCEPTION_ERROR_COOKIE
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFontSize(com.horcrux.svg.GroupView,com.facebook.react.bridge.Dynamic)
org.webrtc.Camera1Session: android.hardware.Camera$CameraInfo info
org.jitsi.meet.sdk.R$string: int common_google_play_services_enable_button
org.jitsi.meet.R$styleable: int TextAppearance_android_textSize
com.horcrux.svg.R$attr: int windowActionModeOverlay
androidx.appcompat.widget.ContentFrameLayout
org.webrtc.VideoSource$1: void onCapturerStopped()
org.webrtc.NetworkMonitorAutoDetect: org.webrtc.NetworkMonitorAutoDetect$NetworkState getCurrentNetworkState()
org.webrtc.RtpParameters$Rtcp: java.lang.String getCname()
org.jitsi.meet.sdk.R$string: int ongoing_notification_action_hang_up
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode ENHANCE_YOUR_CALM
com.horcrux.svg.RectView: void setWidth(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.switchview.ReactSwitchManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Integer getIceCheckIntervalWeakConnectivity()
com.dropbox.core.v2.sharing.UnshareFileErrorException
com.horcrux.svg.R$styleable: int FontFamily_fontProviderFetchTimeout
com.facebook.react.bridge.ReadableNativeMap: ReadableNativeMap(com.facebook.jni.HybridData)
org.jitsi.meet.sdk.ConnectionService: void setConnectionDisconnected(java.lang.String,android.telecom.DisconnectCause)
com.facebook.hermes.unicode.AndroidUnicodeUtils
org.jitsi.meet.R$attr: int progressBarImageScaleType
com.horcrux.svg.R$style: int TextAppearance_Compat_Notification_Info
com.horcrux.svg.R$styleable: int AppCompatSeekBar_tickMarkTint
okhttp3.internal.http2.ErrorCode: int httpCode
org.jitsi.meet.sdk.R$attr: int fadeDuration
org.jitsi.meet.sdk.BroadcastEvent$Type: org.jitsi.meet.sdk.BroadcastEvent$Type SCREEN_SHARE_TOGGLED
org.jitsi.meet.sdk.R$styleable: int TextAppearance_android_shadowColor
org.jitsi.meet.R$styleable: int MenuItem_android_alphabeticShortcut
org.jitsi.meet.R$color: int tooltip_background_light
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.ReactScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.queue.ReactQueueConfiguration
com.horcrux.svg.R$drawable: int abc_btn_radio_to_on_mtrl_015
okhttp3.internal.http1.Http1Codec$ChunkedSource: long NO_CHUNK_YET
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()
org.webrtc.CameraCapturer: android.os.Handler access$300(org.webrtc.CameraCapturer)
org.jitsi.meet.sdk.ProximityModule$1: boolean val$enabled
org.webrtc.SurfaceViewRenderer: java.lang.String TAG
com.facebook.react.bridge.CatalystInstanceImpl$1
com.facebook.react.devsupport.InspectorPackagerConnection$Connection
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.bridge.ReactContext access$1300(com.facebook.react.devsupport.DevSupportManagerImpl)
org.webrtc.ScreenCapturerAndroid: boolean isScreencast()
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_ARRAY
okio.Okio: okio.Sink sink(java.net.Socket)
com.facebook.react.views.picker.ReactPickerManager: void setEnabled(com.facebook.react.views.picker.ReactPicker,boolean)
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableNativeMap getMap(java.lang.String)
org.jitsi.meet.sdk.R$raw: int lang_languagesvi
com.facebook.react.devsupport.DevSupportManagerImpl$5: void run()
com.horcrux.svg.VirtualView: android.graphics.Matrix mInvMatrix
com.facebook.react.bridge.JavaMethodWrapper$3
com.facebook.react.devsupport.StackTraceHelper: java.lang.String formatFrameSource(com.facebook.react.devsupport.interfaces.StackFrame)
com.dropbox.core.v2.teampolicies.OfficeAddInPolicy: com.dropbox.core.v2.teampolicies.OfficeAddInPolicy[] values()
okhttp3.Cache$CacheResponseBody: okio.BufferedSource source()
org.webrtc.EncodedImage: int getFrameType()
com.horcrux.svg.R$attr: int contentInsetLeft
com.dropbox.core.v2.team.ExcludedUsersUpdateErrorException
org.webrtc.JavaI420Buffer: java.nio.ByteBuffer dataU
okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route)
com.facebook.react.devsupport.DevSupportManagerFactory: com.facebook.react.devsupport.interfaces.DevSupportManager create(android.content.Context,com.facebook.react.devsupport.ReactInstanceManagerDevHelper,java.lang.String,boolean,int)
org.webrtc.EglBase$ConfigBuilder: org.webrtc.EglBase$ConfigBuilder setHasAlphaChannel(boolean)
okhttp3.internal.http2.Http2Stream$FramingSource: boolean $assertionsDisabled
org.jitsi.meet.sdk.R$dimen: int abc_dialog_min_width_major
com.facebook.react.bridge.ReadableNativeMap: boolean equals(java.lang.Object)
org.jitsi.meet.sdk.R$styleable: int AppCompatSeekBar_tickMarkTintMode
com.horcrux.svg.MaskView: void setMaskTransform(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewGroup: ReactViewGroup(android.content.Context)
com.dropbox.core.v2.sharing.TransferFolderErrorException
org.jitsi.meet.sdk.R$drawable: R$drawable()
com.horcrux.svg.R$dimen: int abc_action_button_min_width_material
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextShadowRadius(float)
com.facebook.react.devsupport.interfaces.DevBundleDownloadListener: void onProgress(java.lang.String,java.lang.Integer,java.lang.Integer)
com.facebook.react.bridge.JSIModuleRegistry
com.google.android.gms.tasks.RuntimeExecutionException
com.horcrux.svg.RenderableViewManager$RectViewManager: void onDropViewInstance(android.view.View)
com.reactnativecommunity.webview.RNCWebViewFileProvider: RNCWebViewFileProvider()
okhttp3.internal.http2.Http2Writer: void synReply(boolean,int,java.util.List)
org.jitsi.meet.R$styleable: int ViewStubCompat_android_inflatedId
okhttp3.Dispatcher: void executed(okhttp3.RealCall)
com.facebook.react.bridge.SoftAssertions: void assertUnreachable(java.lang.String)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.bridge.JSBundleLoader$3: java.lang.String val$cachedFileLocation
okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)
com.horcrux.svg.RenderableViewManager$RectViewManager: void setOpacity(android.view.View,float)
com.calendarevents.CalendarEvents: com.facebook.react.bridge.WritableNativeMap findEventById(java.lang.String)
okhttp3.RealCall: java.lang.String redactedUrl()
org.jitsi.meet.R$styleable: int[] RecycleListView
okio.ForwardingSource: void close()
org.webrtc.Logging$TraceLevel: org.webrtc.Logging$TraceLevel TRACE_STREAM
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
org.jitsi.meet.R$styleable: int AppCompatTextView_autoSizePresetSizes
org.jitsi.meet.sdk.R$attr: int displayOptions
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
org.jitsi.meet.R$id: int end
org.webrtc.DataChannel: org.webrtc.DataChannel$State nativeState()
okhttp3.internal.cache.DiskLruCache$Snapshot: long sequenceNumber
org.webrtc.VideoCodecInfo: java.lang.String getName()
org.jitsi.meet.R$id: int rn_frame_method
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()
org.jitsi.meet.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerUnits(com.horcrux.svg.MarkerView,java.lang.String)
com.facebook.react.devsupport.RedBoxDialog$StackAdapter: int getItemViewType(int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean mReduceMotionEnabled
org.jitsi.meet.R$drawable: int redbox_top_border_background
com.horcrux.svg.R$drawable: int abc_btn_switch_to_on_mtrl_00001
okio.Util: void checkOffsetAndCount(long,long,long)
org.jitsi.meet.sdk.DropboxModule: void getSpaceUsage(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.http1.Http1Codec: void writeRequestHeaders(okhttp3.Request)
com.facebook.react.devsupport.DebugOverlayController$1: com.facebook.react.devsupport.DebugOverlayController this$0
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
com.horcrux.svg.R$style: int Theme_AppCompat_Dialog_Alert
org.webrtc.HardwareVideoEncoder$YuvFormat$2
okhttp3.internal.http.HttpDate$1: HttpDate$1()
timber.log.Timber$Tree: Timber$Tree()
com.facebook.react.modules.debug.DevSettingsModule: java.lang.String getName()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: int getStyleFromString(java.lang.String)
com.facebook.react.devsupport.DevServerHelper$6: com.facebook.react.devsupport.DevServerHelper this$0
okhttp3.internal.http2.Http2Writer: void writeMedium(okio.BufferedSink,int)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ActionBar
org.webrtc.Camera2Capturer: android.hardware.camera2.CameraManager cameraManager
org.jitsi.meet.R$styleable: int AppCompatTheme_windowFixedHeightMinor
org.webrtc.PeerConnection$RtcpMuxPolicy: PeerConnection$RtcpMuxPolicy(java.lang.String,int)
okhttp3.internal.http2.ConnectionShutdownException: ConnectionShutdownException()
com.facebook.react.devsupport.InspectorPackagerConnection: void closeAllConnections()
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType[] $VALUES
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(java.time.Duration)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Tooltip
com.facebook.react.bridge.ContextBaseJavaModule: android.content.Context mContext
okio.Segment: okio.Segment next
org.jitsi.meet.R$raw: int node_modules_reactnative_package
okhttp3.internal.cache2.Relay: long bufferMaxSize
org.jitsi.meet.sdk.R$drawable: int abc_ic_search_api_material
org.webrtc.NetworkMonitor$NetworkObserver
org.webrtc.PeerConnection$RTCConfiguration: int getIceConnectionReceivingTimeout()
org.jitsi.meet.sdk.R$style: int Base_V28_Theme_AppCompat_Light
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType IN
com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinkRegistrar: java.util.List getComponents()
org.webrtc.VideoEncoder$Settings: int width
com.horcrux.svg.R$styleable: R$styleable()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setJSQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
com.facebook.react.bridge.JsonWriterHelper: void listValue(android.util.JsonWriter,java.util.List)
com.facebook.react.bridge.JsonWriterHelper$1
org.webrtc.H264Utils: java.lang.String H264_CONSTRAINED_BASELINE_3_1
com.horcrux.svg.RenderableViewManager$RectViewManager
okhttp3.internal.cache2.Relay: okio.ByteString PREFIX_CLEAN
okio.Okio$1: void flush()
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache this$0
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry mViewManagerRegistry
com.facebook.react.bridge.Promise: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.GuardedResultAsyncTask: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandler
com.reactnativecommunity.netinfo.types.CellularGeneration: com.reactnativecommunity.netinfo.types.CellularGeneration[] values()
com.facebook.react.views.modal.ReactModalHostView: void setOnShowListener(android.content.DialogInterface$OnShowListener)
okio.Buffer: int readInt()
org.jitsi.meet.R$raw: int lang_languagesro
org.webrtc.Logging$TraceLevel: org.webrtc.Logging$TraceLevel TRACE_ALL
org.jitsi.meet.sdk.BroadcastAction$Type: org.jitsi.meet.sdk.BroadcastAction$Type CLOSE_CHAT
org.jitsi.meet.sdk.R$layout: int abc_list_menu_item_layout
org.jitsi.meet.MainActivity: java.lang.String defaultURL
okhttp3.Cookie: java.lang.String path()
org.webrtc.audio.WebRtcAudioTrack: void reportWebRtcAudioTrackError(java.lang.String)
org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode: org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode AUDIO_RECORD_START_STATE_MISMATCH
com.horcrux.svg.R$layout: int abc_action_mode_close_item_material
okhttp3.internal.http.HttpHeaders: okio.ByteString QUOTED_STRING_DELIMITERS
com.horcrux.svg.R$attr: int actionBarSize
com.facebook.react.devsupport.DevSupportManagerImpl: void onPackagerDisconnected()
com.facebook.react.devsupport.HMRClient: void setup(java.lang.String,java.lang.String,java.lang.String,int,boolean)
okhttp3.internal.http2.Http2Codec: okhttp3.internal.http2.Http2Stream stream
com.facebook.react.animated.NativeAnimatedModule: void createAnimatedNode(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.devsupport.DevInternalSettings$Listener: void onInternalSettingsChanged()
com.horcrux.svg.R$id: int src_over
org.jitsi.meet.R$id: int META
com.dropbox.core.v2.team.MembersListErrorException
com.horcrux.svg.SvgViewManager: void setMeetOrSlice(com.horcrux.svg.SvgView,int)
org.webrtc.CameraSession: void stop()
com.horcrux.svg.R$styleable: int SimpleDraweeView_placeholderImageScaleType
org.webrtc.voiceengine.WebRtcAudioManager: boolean initialized
okhttp3.Cookie: java.lang.String value
com.horcrux.svg.R$styleable: int SwitchCompat_android_thumb
org.webrtc.MediaSource: org.webrtc.MediaSource$State state()
org.webrtc.voiceengine.WebRtcAudioRecord: long access$500(org.webrtc.voiceengine.WebRtcAudioRecord)
org.webrtc.PeerConnection$SignalingState: org.webrtc.PeerConnection$SignalingState HAVE_REMOTE_PRANSWER
org.jitsi.meet.R$style: int Widget_AppCompat_ButtonBar
com.facebook.react.common.JavascriptException
org.webrtc.EglBase10Impl$1FakeSurfaceHolder: boolean isCreating()
com.horcrux.svg.R$color: int dim_foreground_material_dark
okhttp3.Headers$Builder: okhttp3.Headers$Builder addAll(okhttp3.Headers)
com.facebook.react.uimanager.BaseViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
com.kevinresol.react_native_default_preference.RNDefaultPreferenceModule: java.lang.String preferencesName
okhttp3.internal.cache.DiskLruCache$Snapshot: long getLength(int)
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_ENCODE_SET
org.webrtc.voiceengine.WebRtcAudioTrack: void setSpeakerMute(boolean)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)
com.horcrux.svg.R$dimen: int tooltip_margin
org.webrtc.EglRenderer$FrameListener
org.jitsi.meet.R$styleable: int AppCompatTheme_actionModeSplitBackground
com.facebook.react.modules.core.DeviceEventManagerModule: void emitHardwareBackPressed()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String NAME
okhttp3.internal.huc.OkHttpsURLConnection: javax.net.ssl.SSLSocketFactory getSSLSocketFactory()
okhttp3.Address: Address(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)
com.facebook.react.bridge.CatalystInstanceImpl: void access$400(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.views.view.ReactViewManager: void setNeedsOffscreenAlphaCompositing(com.facebook.react.views.view.ReactViewGroup,boolean)
org.webrtc.NetworkMonitorAutoDetect$WifiManagerDelegate
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignContent(long)
okhttp3.CipherSuite: java.lang.String javaName
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_DES_CBC_SHA
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.ReactHorizontalScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.Request: okhttp3.RequestBody body()
com.facebook.react.devsupport.DevSupportManagerImpl: boolean hasUpToDateJSBundleInCache()
org.jitsi.meet.R$styleable: int View_theme
org.jitsi.meet.R$style: int Widget_AppCompat_CompoundButton_CheckBox
okhttp3.internal.http2.Http2Connection: void writeSynReset(int,okhttp3.internal.http2.ErrorCode)
com.facebook.react.devsupport.BundleDownloader$2: com.facebook.react.devsupport.BundleDeltaClient$ClientType val$clientType
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewEndOffset()
okhttp3.internal.http2.Http2: byte FLAG_ACK
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_MESSAGE
org.jitsi.meet.R$styleable: int MenuView_android_itemIconDisabledAlpha
okhttp3.internal.platform.Platform: void logCloseableLeak(java.lang.String,java.lang.Object)
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URI)
org.jitsi.meet.R$raw: int lang_mainaf
org.jitsi.meet.MainActivity: java.lang.String RESTRICTION_SERVER_URL
com.facebook.react.devsupport.RedBoxDialog: com.facebook.react.devsupport.RedBoxHandler access$400(com.facebook.react.devsupport.RedBoxDialog)
com.calendarevents.CalendarEvents: void findById(java.lang.String,com.facebook.react.bridge.Promise)
org.webrtc.EglRenderer: java.lang.String TAG
org.jitsi.meet.R$string: int summary_description
org.webrtc.voiceengine.WebRtcAudioRecord: byte[] access$400(org.webrtc.voiceengine.WebRtcAudioRecord)
androidx.savedstate.Recreator
org.webrtc.GlGenericDrawer: java.lang.String DEFAULT_VERTEX_SHADER_STRING
org.webrtc.WrappedNativeVideoEncoder: org.webrtc.VideoCodecStatus setRateAllocation(org.webrtc.VideoEncoder$BitrateAllocation,int)
org.webrtc.audio.LowLatencyAudioBufferManager: java.lang.String TAG
com.horcrux.svg.R$dimen: int abc_dialog_min_width_minor
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor(com.facebook.react.bridge.JavaMethodWrapper$1)
org.webrtc.Metrics$HistogramInfo: java.util.Map samples
com.horcrux.svg.RenderableView: void setStrokeLinejoin(int)
com.horcrux.svg.R$style: int Base_Theme_AppCompat
com.facebook.react.modules.blob.BlobModule: byte[] resolve(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.VirtualView: com.horcrux.svg.GroupView getTextRoot()
com.horcrux.svg.R$layout: int abc_expanded_menu_layout
okhttp3.internal.Version: java.lang.String userAgent()
okhttp3.RequestBody$3
com.facebook.react.uimanager.SimpleViewManager: java.lang.Class getShadowNodeClass()
okio.BufferedSource: okio.ByteString readByteString(long)
org.webrtc.NetworkChangeDetector$ConnectionType: org.webrtc.NetworkChangeDetector$ConnectionType CONNECTION_UNKNOWN_CELLULAR
org.webrtc.audio.WebRtcAudioTrack: void access$200(org.webrtc.audio.WebRtcAudioTrack,int)
org.jitsi.meet.sdk.JitsiMeetActivity: android.content.BroadcastReceiver broadcastReceiver
org.jitsi.meet.R$string: int restriction_server_url_title
com.horcrux.svg.R$styleable: int StateListDrawable_android_variablePadding
com.horcrux.svg.VirtualView: void draw(android.graphics.Canvas,android.graphics.Paint,float)
com.facebook.drawee.view.DraweeView: void setAspectRatio(float)
org.jitsi.meet.sdk.R$color: int highlighted_text_material_light
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.String getName()
com.horcrux.svg.R$drawable: int abc_seekbar_thumb_material
org.webrtc.PeerConnection$TlsCertPolicy: org.webrtc.PeerConnection$TlsCertPolicy TLS_CERT_POLICY_SECURE
okhttp3.internal.platform.ConscryptPlatform: void configureSslSocketFactory(javax.net.ssl.SSLSocketFactory)
com.facebook.react.bridge.NativeArray: java.lang.String toString()
com.horcrux.svg.R$attr: int listDividerAlertDialog
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_START
com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture: com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture valueOf(java.lang.String)
org.webrtc.VideoSource$AspectRatio: int height
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String access$402(com.learnium.RNDeviceInfo.RNDeviceModule,java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray()
com.facebook.react.devsupport.RedBoxHandler$ErrorType: com.facebook.react.devsupport.RedBoxHandler$ErrorType valueOf(java.lang.String)
org.jitsi.meet.sdk.ParticipantsService
org.webrtc.audio.WebRtcAudioTrack: android.media.AudioTrack createAudioTrackOnLowerThanLollipop(int,int,int)
org.webrtc.audio.WebRtcAudioTrack: int channelCountToConfiguration(int)
org.jitsi.meet.sdk.R$string: int app_name
org.webrtc.EglRenderer$EglSurfaceCreation: void run()
okhttp3.CertificatePinner: java.lang.String pin(java.security.cert.Certificate)
okhttp3.RequestBody$2: okhttp3.MediaType contentType()
org.jitsi.meet.R$attr: int paddingEnd
com.learnium.RNDeviceInfo.RNDeviceModule: void getApiLevel(com.facebook.react.bridge.Promise)
org.webrtc.HardwareVideoEncoder: boolean access$100(org.webrtc.HardwareVideoEncoder)
okhttp3.Dns$1
okio.Okio$4
okhttp3.OkHttpClient$Builder: int pingInterval
com.google.android.gms.internal.measurement.zzcd$zze: com.google.android.gms.internal.measurement.zzjp zzk
org.webrtc.NativeLibraryLoader
okio.Buffer: void write(okio.Buffer,long)
androidx.core.widget.NestedScrollView
org.jitsi.meet.sdk.R$string: int menubar_description
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference: StreamAllocation$StreamAllocationReference(okhttp3.internal.connection.StreamAllocation,java.lang.Object)
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
org.jitsi.meet.sdk.R$color: int abc_hint_foreground_material_dark
org.webrtc.RtcCertificatePem: org.webrtc.RtcCertificatePem generateCertificate(long)
okio.SegmentedByteString: byte[] internalArray()
org.webrtc.MediaCodecWrapperFactoryImpl: MediaCodecWrapperFactoryImpl()
org.jitsi.meet.sdk.R$drawable: int abc_list_focused_holo
org.webrtc.RtcCertificatePem: java.lang.String getPrivateKey()
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String getName()
org.jitsi.meet.R$attr: int controlBackground
com.horcrux.svg.RenderableView: java.util.ArrayList mAttributeList
org.jitsi.meet.sdk.R$styleable: int FragmentContainerView_android_tag
okhttp3.WebSocket: long queueSize()
com.horcrux.svg.RenderableViewManager: void onDropViewInstance(android.view.View)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long)
org.jitsi.meet.sdk.ReactPackageAdapter: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_END
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
com.facebook.react.views.checkbox.ReactCheckBoxManager: int getIdentifier(android.content.Context,java.lang.String)
com.facebook.react.modules.core.Timing: java.util.concurrent.atomic.AtomicBoolean access$000(com.facebook.react.modules.core.Timing)
org.webrtc.voiceengine.WebRtcAudioTrack: long AUDIO_TRACK_THREAD_JOIN_TIMEOUT_MS
org.jitsi.meet.R$styleable: int RecycleListView_paddingTopNoTitle
okhttp3.EventListener: void connectFailed(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol,java.io.IOException)
okio.RealBufferedSource
org.jitsi.meet.sdk.R$style: int Base_DialogWindowTitle_AppCompat
org.jitsi.meet.sdk.R$attr: int autoSizeStepGranularity
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase get()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float)
okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getMacAddressSync()
okhttp3.internal.huc.OkHttpsURLConnection: boolean getDoInput()
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactScrollView,int,java.lang.Integer)
org.webrtc.YuvHelper: YuvHelper()
com.facebook.react.bridge.JSIModuleType
com.facebook.react.bridge.CatalystInstanceImpl$3: CatalystInstanceImpl$3(com.facebook.react.bridge.CatalystInstanceImpl)
com.horcrux.svg.R$styleable: int[] ButtonBarLayout
com.facebook.react.devsupport.FpsView: void onAttachedToWindow()
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.CryptoOptions getCryptoOptions()
com.horcrux.svg.RenderableViewManager: void setTransform(com.horcrux.svg.VirtualView,com.facebook.react.bridge.Dynamic)
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
okio.RealBufferedSink: okio.BufferedSink writeIntLe(int)
com.oney.WebRTCModule.WebRTCModule: void mediaStreamTrackSwitchCamera(java.lang.String)
com.facebook.react.modules.blob.BlobModule: java.lang.String access$100(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
org.jitsi.meet.sdk.log.JitsiMeetBaseLogHandler: JitsiMeetBaseLogHandler()
okhttp3.MediaType: java.lang.String TOKEN
okhttp3.OkUrlFactory: okhttp3.OkHttpClient client()
org.jitsi.meet.R$id: int accessibility_custom_action_16
com.facebook.react.views.view.ReactViewManager: void setRemoveClippedSubviews(com.facebook.react.views.view.ReactViewGroup,boolean)
com.horcrux.svg.R$color: int abc_tint_default
okio.BufferedSink: void flush()
org.webrtc.LibvpxVp9Decoder: long nativeCreateDecoder()
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec createDefault()
org.webrtc.VideoSource: org.webrtc.VideoProcessor access$300(org.webrtc.VideoSource)
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
com.facebook.react.devsupport.BundleDownloader$BundleInfo
org.jitsi.meet.sdk.PictureInPictureModule: void setPictureInPictureDisabled(java.lang.Boolean)
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String REACT_CLASS
androidx.fragment.app.Fragment: void onPrimaryNavigationFragmentChanged(boolean)
okhttp3.Headers$Builder: Headers$Builder()
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_roundTopEnd
com.facebook.react.bridge.queue.MessageQueueThreadImpl
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
com.horcrux.svg.R$attr: int contentInsetStart
org.jitsi.meet.sdk.R$styleable: int MenuItem_iconTint
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_Dark
org.webrtc.NetworkChangeDetector$ConnectionType: org.webrtc.NetworkChangeDetector$ConnectionType CONNECTION_4G
org.webrtc.voiceengine.WebRtcAudioEffects: boolean isAcousticEchoCancelerSupported()
com.calendarevents.CalendarEvents: com.facebook.react.bridge.WritableNativeArray findEvents(com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
okhttp3.OkHttpClient$Builder: int connectTimeout
org.webrtc.PeerConnection$KeyType: org.webrtc.PeerConnection$KeyType ECDSA
com.horcrux.svg.R$style: int Theme_AppCompat_Light_Dialog_Alert
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_END
com.facebook.jni.Countable: long mInstance
com.horcrux.svg.R$color: int abc_btn_colored_borderless_text_material
org.webrtc.EglBase: boolean hasSurface()
org.jitsi.meet.sdk.R$styleable: int Toolbar_subtitleTextColor
org.jitsi.meet.R$styleable: int AppCompatTheme_listPopupWindowStyle
org.webrtc.JavaI420Buffer: void release()
org.jitsi.meet.R$styleable: int[] CompoundButton
org.webrtc.StatsReport: java.lang.String id
okhttp3.Response: okhttp3.Headers headers
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.Stack mLoaders
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Title
okhttp3.internal.ws.RealWebSocket$CancelRunnable
androidx.fragment.app.Fragment: boolean isDetached()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
com.facebook.react.bridge.ReactContext$1
org.jitsi.meet.sdk.R$attr: int drawableStartCompat
org.jitsi.meet.sdk.R$drawable: int abc_ic_voice_search_api_material
com.facebook.react.animated.NativeAnimatedModule: java.lang.String NAME
com.facebook.react.turbomodule.core.JSCallInvokerHolderImpl
org.jitsi.meet.R$color: int abc_btn_colored_borderless_text_material
com.horcrux.svg.R$color: int catalyst_redbox_background
org.jitsi.meet.sdk.R$styleable: int SwitchCompat_splitTrack
com.google.android.gms.internal.auth.zzay: com.google.android.gms.internal.auth.zzay[] values()
org.webrtc.voiceengine.WebRtcAudioUtils: int defaultSampleRateHz
org.jitsi.meet.R$styleable: int[] ActionBarLayout
com.facebook.react.devsupport.InspectorPackagerConnection: void handleWrappedEvent(org.json.JSONObject)
com.dropbox.core.v2.fileproperties.AddPropertiesErrorException
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Button_Small
org.webrtc.audio.WebRtcAudioManager: boolean isLowLatencyInputSupported(android.content.Context)
okhttp3.HttpUrl: java.lang.String host
com.facebook.react.devsupport.ReactInstanceManagerDevHelper: com.facebook.react.bridge.JavaScriptExecutorFactory getJavaScriptExecutorFactory()
org.jitsi.meet.sdk.R$styleable: int MenuGroup_android_visible
com.horcrux.svg.RenderableViewManager$TextViewManager: void setX(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundingBorderColor
com.horcrux.svg.RenderableViewManager$SymbolManager
org.webrtc.CameraVideoCapturer$CameraEventsHandler
org.jitsi.meet.R$color: int common_google_signin_btn_text_light_disabled
com.facebook.react.devsupport.RedBoxDialog$StackAdapter: java.lang.String mTitle
okhttp3.Cache$CacheRequestImpl: okhttp3.internal.cache.DiskLruCache$Editor editor
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_MD5
org.webrtc.Camera2Enumerator: java.util.List getSupportedFormats(java.lang.String)
okhttp3.Cache: int writeAbortCount
com.facebook.jni.HybridData: HybridData()
org.jitsi.meet.sdk.PictureInPictureModule
okhttp3.HttpUrl: java.util.List encodedPathSegments()
androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setReactQueueConfigurationSpec(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec)
org.jitsi.meet.sdk.R$drawable: int abc_btn_radio_to_on_mtrl_015
okhttp3.internal.http2.Header: boolean equals(java.lang.Object)
org.webrtc.NativeCapturerObserver: void onCapturerStarted(boolean)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setInstanceFollowRedirects(boolean)
com.reactnativecommunity.webview.RNCWebViewManager: void setShowsVerticalScrollIndicator(android.webkit.WebView,boolean)
com.horcrux.svg.R$dimen: int compat_button_inset_horizontal_material
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4: MessageQueueThreadImpl$4(com.facebook.react.common.futures.SimpleSettableFuture)
okhttp3.internal.http2.Http2Stream: void receiveData(okio.BufferedSource,int)
com.facebook.react.modules.blob.BlobCollector: void nativeInstall(java.lang.Object,long)
org.jitsi.meet.sdk.ConnectionService$ConnectionImpl: java.lang.String getCallUUID()
org.webrtc.RendererCommon$ScalingType: org.webrtc.RendererCommon$ScalingType SCALE_ASPECT_FILL
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPath(java.lang.String)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionBarDivider
okhttp3.CacheControl: boolean noTransform
com.fasterxml.jackson.core.JsonGenerationException
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: void getLastUpdateTime(com.facebook.react.bridge.Promise)
okhttp3.internal.connection.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)
org.jitsi.meet.R$dimen: int tooltip_vertical_padding
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
com.facebook.react.bridge.DynamicFromMap$1: java.lang.Object initialValue()
org.jitsi.meet.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_1
com.facebook.react.bridge.ReadableArray: int getInt(int)
org.jitsi.meet.R$id: int up
com.horcrux.svg.R$dimen: int abc_text_size_headline_material
androidx.fragment.app.FragmentActivity: void supportStartPostponedEnterTransition()
com.horcrux.svg.RectView: void setHeight(com.facebook.react.bridge.Dynamic)
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric$3: int val$focusChange
org.jitsi.meet.R$attr: int iconTint
org.webrtc.RtpSender: void dispose()
androidx.fragment.app.Fragment: java.lang.String mWho
org.jitsi.meet.sdk.R$styleable: int FontFamilyFont_fontStyle
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,int)
com.facebook.react.uimanager.LayoutShadowNode
org.jitsi.meet.R$attr: int logoDescription
org.webrtc.PeerConnection$SignalingState: org.webrtc.PeerConnection$SignalingState[] values()
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.devsupport.DevInternalSettings mSettings
org.webrtc.DynamicBitrateAdjuster: double BITRATE_ADJUSTMENT_SEC
org.webrtc.JniHelper: JniHelper()
com.horcrux.svg.R$styleable: int SwitchCompat_splitTrack
com.facebook.react.bridge.CallbackImpl: CallbackImpl(com.facebook.react.bridge.JSInstance,int)
org.webrtc.audio.WebRtcAudioEffects: void enable(int)
com.horcrux.svg.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
org.jitsi.meet.sdk.R$raw: int lang_mainnl
okio.Pipe: boolean sourceClosed
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray createArray()
org.jitsi.meet.sdk.AudioModeModule: int AUDIO_CALL
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: MessageQueueThreadImpl$1(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.common.futures.SimpleSettableFuture,java.util.concurrent.Callable)
okhttp3.Cache: void close()
com.horcrux.svg.R$dimen: int abc_text_size_button_material
org.jitsi.meet.sdk.R$attr: int titleTextAppearance
org.jitsi.meet.sdk.R$attr: int roundBottomRight
org.jitsi.meet.sdk.R$style: int ThemeOverlay_AppCompat
org.jitsi.meet.sdk.R$drawable: int notification_icon_background
org.webrtc.PeerConnection$RTCConfiguration: boolean getEnableRtpDataChannel()
org.webrtc.Camera2Capturer: Camera2Capturer(android.content.Context,java.lang.String,org.webrtc.CameraVideoCapturer$CameraEventsHandler)
com.oney.WebRTCModule.WebRTCModule: void createDataChannelAsync(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
org.webrtc.Loggable
okhttp3.Authenticator: okhttp3.Authenticator NONE
com.facebook.react.views.viewpager.ReactViewPagerManager: java.util.Map getCommandsMap()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_128_CBC_SHA
org.jitsi.meet.R$styleable: int SwipeRefreshLayout_swipeRefreshLayoutProgressSpinnerBackgroundColor
okio.RealBufferedSource: boolean request(long)
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceListItem
okhttp3.MultipartBody: java.lang.StringBuilder appendQuotedString(java.lang.StringBuilder,java.lang.String)
org.jitsi.meet.sdk.JitsiMeetActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.horcrux.svg.SvgView: android.graphics.Matrix mInvViewBoxMatrix
com.reactnativecommunity.webview.RNCWebViewModule: com.reactnativecommunity.webview.RNCWebViewModule$ShouldOverrideUrlLoadingLock shouldOverrideUrlLoadingLock
org.webrtc.CameraCapturer$SwitchState: org.webrtc.CameraCapturer$SwitchState PENDING
org.webrtc.voiceengine.WebRtcAudioManager: android.media.AudioManager audioManager
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.facebook.react.views.view.ReactViewGroup: void onAttachedToWindow()
okhttp3.internal.cache.DiskLruCache: long size()
androidx.fragment.app.Fragment: int CREATED
com.facebook.jni.CpuCapabilitiesJni: CpuCapabilitiesJni()
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
okio.BufferedSink
org.webrtc.GlTextureFrameBuffer: int height
org.jitsi.meet.sdk.R$color: int primary_text_disabled_material_light
org.jitsi.meet.R$dimen: int abc_floating_window_z
org.jitsi.meet.R$attr: int progressBarImage
org.webrtc.CameraVideoCapturer$CameraEventsHandler: void onCameraError(java.lang.String)
org.webrtc.EglRenderer: long LOG_INTERVAL_SEC
org.webrtc.MediaStream: java.lang.String getId()
com.facebook.react.bridge.SoftAssertions: void assertCondition(boolean,java.lang.String)
org.jitsi.meet.sdk.R$styleable: int ActionBar_contentInsetStart
org.webrtc.PeerConnectionFactory$ThreadInfo: PeerConnectionFactory$ThreadInfo(java.lang.Thread,int)
com.google.android.gms.internal.measurement.zzcd$zzg: long zzv
org.webrtc.VideoEncoder$EncodeInfo
org.jitsi.meet.R$attr: int listDividerAlertDialog
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] values()
okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: android.os.Bundle colorScheme
com.facebook.react.devsupport.RedBoxDialog: android.widget.ListView mStackView
com.horcrux.svg.GroupView
org.webrtc.PeerConnection$RtcpMuxPolicy: org.webrtc.PeerConnection$RtcpMuxPolicy NEGOTIATE
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.ReactDatabaseSupplier access$100(com.reactnativecommunity.asyncstorage.AsyncStorageModule)
com.facebook.react.views.textinput.ReactTextInputManager: void setMaxLength(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
org.webrtc.TextureBufferImpl$1: void onDestroy(org.webrtc.TextureBufferImpl)
org.jitsi.meet.sdk.R$styleable: int DrawerArrowToggle_gapBetweenBars
org.webrtc.voiceengine.WebRtcAudioRecord: org.webrtc.voiceengine.WebRtcAudioEffects effects
com.facebook.react.views.viewpager.ReactViewPagerManager: int COMMAND_SET_PAGE_WITHOUT_ANIMATION
okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)
org.webrtc.PeerConnection$SdpSemantics: org.webrtc.PeerConnection$SdpSemantics[] values()
com.facebook.react.devsupport.BundleDownloader$BundleInfo: java.lang.String access$402(com.facebook.react.devsupport.BundleDownloader$BundleInfo,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: boolean DEBUG
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTimeToLive
com.horcrux.svg.RenderableViewManager$DefsViewManager: void onAfterUpdateTransaction(android.view.View)
org.webrtc.audio.WebRtcAudioTrack: android.media.AudioTrack access$000(org.webrtc.audio.WebRtcAudioTrack)
com.facebook.react.views.scroll.ReactScrollView: void setRemoveClippedSubviews(boolean)
org.webrtc.CameraCapturer: void reportCameraSwitchError(java.lang.String,org.webrtc.CameraVideoCapturer$CameraSwitchHandler)
com.facebook.react.devsupport.interfaces.ErrorCustomizer: android.util.Pair customizeErrorInfo(android.util.Pair)
org.webrtc.Metrics: void nativeEnable()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager)
okio.Pipe: okio.Sink sink()
org.jitsi.meet.sdk.net.NAT64AddrInfo: NAT64AddrInfo(java.lang.String,java.lang.String)
com.facebook.react.devsupport.DevLoadingViewController$2
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
com.horcrux.svg.SvgViewModule: void toDataURL(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.views.image.ImageResizeMethod: com.facebook.react.views.image.ImageResizeMethod[] values()
okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors
okio.RealBufferedSource: long indexOf(okio.ByteString)
org.webrtc.SurfaceTextureHelper: void release()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.RequestBody)
org.webrtc.ThreadUtils$1: ThreadUtils$1(java.lang.Thread)
com.google.android.gms.measurement.AppMeasurementJobService: AppMeasurementJobService()
androidx.fragment.app.FragmentActivity: boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)
org.webrtc.EglBase: int[] CONFIG_RGBA
org.webrtc.ScreenCapturerAndroid: boolean isDisposed
com.horcrux.svg.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
org.jitsi.meet.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
com.horcrux.svg.PatternView: void setVbWidth(float)
okhttp3.OkHttpClient: java.net.Proxy proxy
okhttp3.Handshake: Handshake(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
org.webrtc.CameraCapturer$SwitchState
com.facebook.react.animated.NativeAnimatedModule: void onHostDestroy()
org.jitsi.meet.sdk.R$id: int text
okio.AsyncTimeout: AsyncTimeout()
okhttp3.internal.http2.Http2Writer: int maxFrameSize
org.jitsi.meet.sdk.R$drawable: int tooltip_frame_dark
com.horcrux.svg.R$attr: int actualImageUri
okhttp3.Headers: java.lang.String[] namesAndValues
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.horcrux.svg.R$color: int material_grey_800
okio.Buffer$UnsafeCursor: void close()
org.webrtc.MediaCodecVideoDecoderFactory: org.webrtc.VideoCodecInfo[] getSupportedCodecs()
org.webrtc.RtpParameters$Encoding: java.lang.Integer getMinBitrateBps()
com.facebook.react.modules.network.NetworkingModule: NetworkingModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate)
org.jitsi.meet.R$style: int ThemeOverlay_AppCompat_DayNight_ActionBar
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
com.zmxv.RNSound.RNSoundModule: java.lang.String category
okhttp3.Cache$CacheRequestImpl$1: okhttp3.Cache$CacheRequestImpl this$1
org.webrtc.GlGenericDrawer$ShaderType: org.webrtc.GlGenericDrawer$ShaderType OES
org.jitsi.meet.R$attr: int fontProviderCerts
com.facebook.react.modules.dialog.DialogModule: java.lang.String getName()
okhttp3.internal.huc.OkHttpsURLConnection: void connect()
com.horcrux.svg.R$attr: int buttonBarButtonStyle
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
okhttp3.Cache: int ENTRY_METADATA
org.jitsi.meet.sdk.R$color: int dim_foreground_disabled_material_light
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzjp zzax
com.horcrux.svg.R$styleable: int AppCompatTheme_popupWindowStyle
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)
okhttp3.RequestBody$3: long contentLength()
org.webrtc.LibvpxVp9Decoder
org.jitsi.meet.sdk.R$attr: int thumbTintMode
com.facebook.react.bridge.queue.QueueThreadExceptionHandler: void handleException(java.lang.Exception)
com.horcrux.svg.R$style: int Platform_AppCompat_Light
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableLeftCompat
okhttp3.Cache: int requestCount()
org.jitsi.meet.R$styleable: int TextAppearance_fontVariationSettings
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderWidth(com.facebook.react.views.text.ReactTextView,int,float)
com.facebook.react.modules.blob.BlobModule: java.lang.String store(byte[])
com.google.android.gms.internal.measurement.zzca$zzb: long zzd
okio.ForwardingTimeout: okio.Timeout deadlineNanoTime(long)
org.webrtc.VideoDecoderFallback: VideoDecoderFallback(org.webrtc.VideoDecoder,org.webrtc.VideoDecoder)
org.jitsi.meet.R$interpolator: int btn_radio_to_off_mtrl_animation_interpolator_0
org.jitsi.meet.R$styleable: int FontFamily_fontProviderFetchTimeout
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setSendContentSizeChangeEvents(boolean)
okhttp3.internal.connection.RealConnection: okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl)
com.facebook.react.devsupport.DevServerHelper$1: java.lang.Void doInBackground(java.lang.Void[])
com.facebook.react.devsupport.DebugOverlayController$1
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeIdle()
com.facebook.react.bridge.ModuleHolder: boolean mInitializable
org.jitsi.meet.sdk.R$attr: int searchHintIcon
org.jitsi.meet.R$attr: int textLocale
org.jitsi.meet.R$styleable: int[] GradientColorItem
okhttp3.internal.http2.Settings: int getMaxHeaderListSize(int)
org.webrtc.HardwareVideoEncoder: org.webrtc.VideoCodecStatus encode(org.webrtc.VideoFrame,org.webrtc.VideoEncoder$EncodeInfo)
com.facebook.react.devsupport.DevSupportManagerImpl$JSExceptionLogger: void log(java.lang.Exception)
com.facebook.react.devsupport.DevServerHelper$BundleType: com.facebook.react.devsupport.DevServerHelper$BundleType valueOf(java.lang.String)
com.horcrux.svg.R$attr: int switchMinWidth
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap fromBundle(android.os.Bundle)
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketWriter writer
com.google.android.gms.internal.measurement.zzcd$zzc: int zzc
org.webrtc.EglBase14Impl$Context: EglBase14Impl$Context(android.opengl.EGLContext)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String type
org.jitsi.meet.sdk.JitsiMeetActivityDelegate$1: void invoke(java.lang.Object[])
org.webrtc.VideoEncoder: org.webrtc.VideoEncoder$ScalingSettings getScalingSettings()
com.horcrux.svg.R$styleable: int ActionBar_contentInsetStart
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable: void run()
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_Switch
okhttp3.Request$Builder
org.jitsi.meet.sdk.R$style: int ClockTimePickerStyle
okio.Buffer: int readIntLe()
com.facebook.react.devsupport.DevInternalSettings: void setHotModuleReplacementEnabled(boolean)
org.jitsi.meet.R$style: int Widget_AppCompat_ActionBar_TabText
okhttp3.internal.huc.OutputStreamRequestBody: okhttp3.MediaType contentType()
com.facebook.react.modules.dialog.DialogModule: boolean access$000(com.facebook.react.modules.dialog.DialogModule)
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
com.horcrux.svg.R$string: int catalyst_debug_chrome
com.facebook.common.time.MonotonicClock
org.jitsi.meet.sdk.R$layout: int abc_alert_dialog_material
org.jitsi.meet.R$dimen: int abc_list_item_height_large_material
okhttp3.internal.huc.OkHttpURLConnection: java.net.URL access$102(okhttp3.internal.huc.OkHttpURLConnection,java.net.URL)
com.facebook.react.bridge.JavaOnlyArray$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
org.webrtc.NV21Buffer: void nativeCropAndScale(int,int,int,int,int,int,byte[],int,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)
com.facebook.react.bridge.GuardedResultAsyncTask: void onPostExecute(java.lang.Object)
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat_Light
org.jitsi.meet.sdk.R$id: int topPanel
org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapInterval(int)
org.jitsi.meet.sdk.ReactInstanceManagerHolder: ReactInstanceManagerHolder()
com.facebook.react.bridge.Arguments: java.util.ArrayList toList(com.facebook.react.bridge.ReadableArray)
com.facebook.soloader.SysUtil$LollipopSysdeps: SysUtil$LollipopSysdeps()
org.jitsi.meet.R$attr: int overlayImage
org.webrtc.PeerConnection: org.webrtc.PeerConnection$SignalingState signalingState()
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(com.facebook.react.views.text.ReactTextView,java.lang.Object)
org.jitsi.meet.R$style: int Platform_AppCompat
org.webrtc.GlUtil$GlOutOfMemoryException: GlUtil$GlOutOfMemoryException(java.lang.String)
org.webrtc.PeerConnection$RTCConfiguration: boolean pruneTurnPorts
com.horcrux.svg.R$anim: int catalyst_fade_in
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
com.facebook.react.devsupport.interfaces.DevSupportManager: java.io.File downloadBundleResourceFromUrlSync(java.lang.String,java.io.File)
org.webrtc.RtpParameters$DegradationPreference: org.webrtc.RtpParameters$DegradationPreference[] $VALUES
org.jitsi.meet.sdk.R$id: int tag_screen_reader_focusable
org.webrtc.VideoEncoder$ResolutionBitrateLimits: int maxBitrateBps
com.facebook.react.views.view.ReactViewManager: void setBorderColor(com.facebook.react.views.view.ReactViewGroup,int,java.lang.Integer)
okhttp3.internal.http2.Http2Stream: boolean $assertionsDisabled
org.jitsi.meet.R$raw: int lang_languagessv
okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()
org.jitsi.meet.sdk.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
com.horcrux.svg.R$attr: int actionBarWidgetTheme
org.jitsi.meet.sdk.R$id: int tag_accessibility_heading
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
okio.Buffer: okio.Buffer$UnsafeCursor readUnsafe(okio.Buffer$UnsafeCursor)
org.webrtc.Logging: void enableLogThreads()
org.webrtc.PeerConnection$1
com.facebook.react.bridge.Dynamic
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.gms.measurement.internal.zzam: android.os.Parcelable$Creator CREATOR
org.webrtc.CameraCapturer$7: org.webrtc.CameraVideoCapturer$CameraSwitchHandler val$switchEventsHandler
com.google.android.gms.signin.internal.zah: android.os.Parcelable$Creator CREATOR
com.facebook.jni.MapIteratorHelper: MapIteratorHelper(java.util.Map)
org.webrtc.EglBase10Impl$1FakeSurfaceHolder
com.facebook.react.uimanager.ViewGroupManager: java.lang.Integer getViewZIndex(android.view.View)
org.webrtc.RtcCertificatePem: org.webrtc.RtcCertificatePem nativeGenerateCertificate(org.webrtc.PeerConnection$KeyType,long)
org.jitsi.meet.sdk.R$attr: int drawableTintMode
org.jitsi.meet.sdk.R$id: int contentPanel
org.jitsi.meet.sdk.LogBridgeModule
com.horcrux.svg.R$styleable: int ActionBar_progressBarPadding
okio.ByteString: byte[] data
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
org.webrtc.WrappedNativeVideoEncoder: org.webrtc.VideoEncoder$ScalingSettings getScalingSettings()
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_DEFAULT_CODE
androidx.fragment.app.Fragment: void setSharedElementReturnTransition(java.lang.Object)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_windowFixedHeightMinor
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder eventListenerFactory(okhttp3.EventListener$Factory)
okio.RealBufferedSink: RealBufferedSink(okio.Sink)
com.dropbox.core.v2.files.CreateFolderErrorException
org.webrtc.EglRenderer$2: EglRenderer$2(org.webrtc.EglRenderer)
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Title
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.gms.internal.measurement.zzca$zzb: boolean zzk
okio.SegmentedByteString: java.lang.String string(java.nio.charset.Charset)
okio.Okio$3: void write(okio.Buffer,long)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzid zzae
okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpCodec,long,java.io.IOException)
com.facebook.react.devsupport.DevSupportManagerImpl$8
org.webrtc.MediaCodecUtils: int[] ENCODER_COLOR_FORMATS
org.webrtc.JavaI420Buffer: java.nio.ByteBuffer getDataY()
org.jitsi.meet.sdk.R$drawable: int images_dropboxlogo_square
org.jitsi.meet.R$raw: int lang_mainit
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarItemBackground
org.webrtc.JniHelper: java.lang.Object getValue(java.util.Map$Entry)
okio.Buffer: okio.Buffer clone()
com.facebook.react.bridge.JavaScriptExecutorFactory
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Small_Inverse
org.jitsi.meet.sdk.ListenerUtils: ListenerUtils()
com.facebook.react.devsupport.DevServerHelper$10: com.facebook.react.devsupport.DevServerHelper this$0
org.jitsi.meet.sdk.ConnectionService$ConnectionImpl: void onStateChanged(int)
okhttp3.Challenge: boolean equals(java.lang.Object)
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybrid(long,boolean,int,boolean,com.facebook.hermes.instrumentation.HermesMemoryDumper,long,long)
com.facebook.react.devsupport.StackTraceHelper: com.facebook.react.devsupport.interfaces.StackFrame[] convertJavaStackTrace(java.lang.Throwable)
com.horcrux.svg.R$attr: int placeholderImageScaleType
com.facebook.react.modules.blob.BlobModule: void addNetworkingHandler()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants UNPACKING_JS_BUNDLE_LOADER_BLOCKED
okio.Buffer: okio.ByteString digest(java.lang.String)
okhttp3.HttpUrl$Builder: java.util.List encodedQueryNamesAndValues
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Subhead_Inverse
org.webrtc.MediaStream: boolean nativeAddAudioTrackToNativeStream(long,long)
androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)
org.webrtc.DtmfSender
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderColor(com.facebook.react.views.textinput.ReactEditText,int,java.lang.Integer)
org.jitsi.meet.sdk.R$layout: int notification_template_custom_big
okhttp3.WebSocket: void cancel()
org.jitsi.meet.sdk.R$styleable: int AlertDialog_buttonPanelSideLayout
org.jitsi.meet.sdk.JitsiMeetFragment: void onResume()
org.webrtc.FileVideoCapturer$VideoReaderY4M: int FRAME_DELIMETER_LENGTH
org.jitsi.meet.R$attr: int actionBarSize
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.devsupport.BundleDeltaClient$ClientType getDeltaClientType()
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,int,com.facebook.react.bridge.ReadableArray)
com.dropbox.core.v2.team.SetCustomQuotaErrorException
com.facebook.react.modules.sound.SoundManagerModule
org.webrtc.RendererCommon: RendererCommon()
org.jitsi.meet.sdk.R$attr: int subtitle
com.facebook.react.modules.systeminfo.AndroidInfoModule
okhttp3.HttpUrl: java.lang.String queryParameterName(int)
org.jitsi.meet.sdk.R$raw: int node_modules_entities_lib_maps_decode
com.facebook.react.views.text.ReactRawTextManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.SvgViewManager: void setBbWidth(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
okhttp3.Response: okhttp3.ResponseBody body
okhttp3.internal.ws.WebSocketProtocol: java.lang.String ACCEPT_MAGIC
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.Class,javax.inject.Provider)
okhttp3.OkHttpClient$Builder: okhttp3.Dispatcher dispatcher
com.facebook.react.devsupport.RedBoxHandler$ReportCompletedListener
org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate: android.net.Network[] getAllNetworks()
com.horcrux.svg.R$id: int accessibility_role
com.horcrux.svg.R$styleable: int MenuGroup_android_visible
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetOverflow(long,int)
org.webrtc.HardwareVideoEncoder: int MEDIA_CODEC_RELEASE_TIMEOUT_MS
com.reactnativecommunity.webview.RNCWebViewManager: void setGeolocationEnabled(android.webkit.WebView,java.lang.Boolean)
com.horcrux.svg.ElementType: com.horcrux.svg.ElementType[] values()
org.jitsi.meet.R$raw: int node_modules_entities_lib_maps_legacy
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
org.webrtc.AndroidVideoDecoder$DecodedTextureMetadata: long presentationTimestampUs
com.horcrux.svg.R$id: int line3
org.jitsi.meet.sdk.R$id: int center
com.facebook.react.devsupport.DevSupportManagerImpl$23: com.facebook.react.devsupport.DevSupportManagerImpl this$0
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_colorControlNormal
com.calendarevents.CalendarEvents: java.lang.String ReadableArrayToString(com.facebook.react.bridge.ReadableArray)
com.learnium.RNDeviceInfo.RNDeviceModule: void getDisplay(com.facebook.react.bridge.Promise)
com.facebook.react.devsupport.DevServerHelper: java.lang.String createResourceURL(java.lang.String,java.lang.String)
org.jitsi.meet.R$styleable: int AppCompatTheme_colorButtonNormal
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.bridge.ReactContext mReactContext
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
org.jitsi.meet.sdk.R$id: int expand_activities_button
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String,java.lang.Throwable)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLetterSpacing(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread()
org.webrtc.RtpSender: long nativeGetDtmfSender(long)
org.jitsi.meet.sdk.R$drawable: int abc_btn_check_material
org.jitsi.meet.sdk.R$drawable: int common_google_signin_btn_icon_disabled
org.jitsi.meet.sdk.R$id: int multiply
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper$7: com.facebook.react.bridge.Dynamic extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
com.learnium.RNDeviceInfo.RNDeviceModule: java.math.BigInteger getDirTotalCapacity(android.os.StatFs)
org.jitsi.meet.sdk.R$styleable: int ColorStateListItem_android_alpha
okhttp3.Cookie: java.util.regex.Pattern YEAR_PATTERN
com.horcrux.svg.R$string: int catalyst_sample_profiler_enable
org.webrtc.CameraCapturer: java.lang.String pendingCameraName
org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode: WebRtcAudioTrack$AudioTrackStartErrorCode(java.lang.String,int)
okhttp3.internal.cache.DiskLruCache: java.lang.String REMOVE
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int)
com.horcrux.svg.R$styleable: int FontFamily_fontProviderFetchStrategy
com.horcrux.svg.R$color: int material_grey_300
com.facebook.react.views.image.ReactImageView: void setHeaders(com.facebook.react.bridge.ReadableMap)
com.horcrux.svg.R$styleable: int AppCompatTheme_selectableItemBackground
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode: org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode[] values()
org.jitsi.meet.R$style: int Widget_AppCompat_PopupMenu
org.jitsi.meet.sdk.JitsiMeetView: void enterPictureInPicture()
org.jitsi.meet.MainActivity$1: org.jitsi.meet.MainActivity this$0
org.jitsi.meet.R$drawable: int abc_tab_indicator_mtrl_alpha
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman$Node root
com.facebook.react.modules.timepicker.TimePickerDialogFragment: TimePickerDialogFragment()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DOWNLOAD_END
com.facebook.react.bridge.ModuleHolder: boolean getHasConstants()
org.jitsi.meet.sdk.R$styleable: int[] ViewBackgroundHelper
com.facebook.yoga.YogaNative: void jni_YGConfigFree(long)
org.jitsi.meet.sdk.R$styleable: int MenuItem_android_orderInCategory
com.horcrux.svg.R$layout: int select_dialog_multichoice_material
org.webrtc.HardwareVideoEncoder: org.webrtc.VideoCodecMimeType codecType
com.horcrux.svg.R$attr: int fontProviderFetchTimeout
org.webrtc.voiceengine.WebRtcAudioTrack: boolean DEBUG
org.webrtc.PeerConnectionFactory: org.webrtc.PeerConnectionFactory$Builder builder()
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketReader reader
com.facebook.react.devsupport.InspectorPackagerConnection$Connection$2: org.json.JSONObject val$object
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundBottomStart
com.horcrux.svg.R$attr: int dropdownListPreferredItemHeight
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_borderlessButtonStyle
org.webrtc.PeerConnectionFactory: org.webrtc.AudioSource createAudioSource(org.webrtc.MediaConstraints)
org.webrtc.CameraEnumerationAndroid$CaptureFormat$FramerateRange: java.lang.String toString()
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(com.google.gson.reflect.TypeToken)
com.facebook.react.devsupport.DisabledDevSupportManager: DisabledDevSupportManager()
com.facebook.react.devsupport.RedBoxDialog$StackAdapter: int VIEW_TYPE_COUNT
com.facebook.react.views.view.ReactViewGroup: void access$000(com.facebook.react.views.view.ReactViewGroup,android.view.View)
okhttp3.CacheControl: int minFreshSeconds
com.facebook.imagepipeline.memory.BasePool$InvalidSizeException
org.jitsi.meet.sdk.R$styleable: int TextAppearance_android_typeface
org.jitsi.meet.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
org.jitsi.meet.R$layout: int select_dialog_item_material
com.dropbox.core.util.IOUtil$ReadException
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
org.jitsi.meet.R$drawable: int abc_btn_radio_material
org.jitsi.meet.sdk.R$styleable: int SearchView_android_imeOptions
com.facebook.react.modules.core.ExceptionsManagerModule: void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,int)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_panelBackground
org.jitsi.meet.sdk.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
org.webrtc.RtpParameters$HeaderExtension
com.facebook.react.devsupport.DevServerHelper$10: DevServerHelper$10(com.facebook.react.devsupport.DevServerHelper)
com.facebook.react.devsupport.DevServerHelper$3
org.webrtc.audio.AudioDeviceModule: void setSpeakerMute(boolean)
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ActionBar_TabView
com.horcrux.svg.SvgView: boolean mRendered
org.jitsi.meet.sdk.JitsiMeetFragment: org.jitsi.meet.sdk.JitsiMeetView view
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
org.webrtc.RTCStats: double getTimestampUs()
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableMap access$000(com.learnium.RNDeviceInfo.RNDeviceModule,android.content.Intent)
com.horcrux.svg.SvgViewModule
com.kevinresol.react_native_default_preference.RNDefaultPreferenceModule: android.content.SharedPreferences$Editor getEditor()
androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver,int)
com.horcrux.svg.R$attr: int actionModePopupWindowStyle
com.facebook.react.bridge.queue.MessageQueueThread: void runOnQueue(java.lang.Runnable)
com.facebook.react.bridge.JSIModulePackage
okhttp3.RealCall: okhttp3.internal.connection.StreamAllocation streamAllocation()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.horcrux.svg.R$style: int Widget_AppCompat_Button_Small
com.facebook.react.views.slider.ReactSliderManager: com.facebook.react.views.slider.ReactSlider createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectTextOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
org.jitsi.meet.sdk.JitsiMeetUserInfo
androidx.fragment.app.Fragment: android.view.View mView
org.jitsi.meet.R: R()
okio.SegmentedByteString: void write(java.io.OutputStream)
okhttp3.Callback: void onResponse(okhttp3.Call,okhttp3.Response)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
org.webrtc.PeerConnection$IceServer: org.webrtc.PeerConnection$TlsCertPolicy tlsCertPolicy
org.webrtc.EglRenderer: org.webrtc.EglBase access$000(org.webrtc.EglRenderer)
org.jitsi.meet.sdk.ParticipantInfo: java.lang.String avatarUrl
okio.SegmentedByteString: byte[] toByteArray()
org.jitsi.meet.R$id: int always
org.webrtc.SdpObserver: void onCreateFailure(java.lang.String)
org.webrtc.Camera2Capturer: android.content.Context context
org.jitsi.meet.sdk.R$dimen: int abc_button_inset_horizontal_material
okhttp3.ConnectionSpec: java.lang.String toString()
org.jitsi.meet.R$id: int accessibility_state
org.jitsi.meet.R$id: int search_badge
org.jitsi.meet.R$style: int Base_ThemeOverlay_AppCompat_Dialog
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Inverse
org.webrtc.MediaCodecWrapperFactoryImpl
org.webrtc.PeerConnection$BundlePolicy: org.webrtc.PeerConnection$BundlePolicy MAXCOMPAT
org.jitsi.meet.sdk.R$dimen: int abc_search_view_preferred_height
com.horcrux.svg.R$style: int Widget_AppCompat_ProgressBar
com.horcrux.svg.MaskView: void setMaskUnits(int)
com.horcrux.svg.R$id: int end
org.webrtc.VideoCodecType: int VIDEO_CODEC_AV1
org.jitsi.meet.R$raw: int node_modules_entities_lib_maps_decode
org.jitsi.meet.sdk.R$styleable: int[] ActionBar
org.webrtc.CameraEnumerationAndroid$2: int diff(java.lang.Object)
com.facebook.react.bridge.ReadableNativeArray: java.lang.String getString(int)
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()
org.webrtc.PeerConnection$AdapterType: org.webrtc.PeerConnection$AdapterType ETHERNET
org.jitsi.meet.R$dimen: int abc_text_size_headline_material
okhttp3.internal.platform.OptionalMethod: java.lang.Class[] methodParams
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DOUBLE
okio.Okio$1: java.io.OutputStream val$out
org.webrtc.GlGenericDrawer$ShaderType: org.webrtc.GlGenericDrawer$ShaderType[] $VALUES
okhttp3.internal.http1.Http1Codec: okhttp3.Headers readHeaders()
org.jitsi.meet.R$dimen: int abc_seekbar_track_background_height_material
org.webrtc.Camera2Session: void access$600(org.webrtc.Camera2Session,java.lang.String)
org.jitsi.meet.sdk.JitsiMeetActivityDelegate$1: int[] val$grantResults
okio.Okio: okio.AsyncTimeout timeout(java.net.Socket)
org.jitsi.meet.sdk.DefaultHardwareBackBtnHandlerImpl: android.app.Activity activity
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_autoSizeStepGranularity
org.jitsi.meet.R$drawable: int ic_jitsi_logosvg
com.horcrux.svg.R$drawable: int notification_tile_bg
com.horcrux.svg.R$string: int abc_capital_on
okhttp3.internal.cache.CacheStrategy$Factory: long sentRequestMillis
org.jitsi.meet.sdk.ReactInstanceManagerHolder$1
com.horcrux.svg.R$styleable: int MenuView_subMenuArrow
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Title
com.google.android.gms.common.GooglePlayServicesRepairableException
org.jitsi.meet.sdk.R$id: int standard
org.webrtc.audio.WebRtcAudioRecord: void reportWebRtcAudioRecordError(java.lang.String)
org.jitsi.meet.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
bolts.UnobservedTaskException
okhttp3.MultipartBody: byte[] DASHDASH
com.facebook.react.modules.storage.AsyncStorageModule: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.uimanager.BaseViewManager: void setRenderToHardwareTexture(android.view.View,boolean)
org.jitsi.meet.MainActivity: void onActivityResult(int,int,android.content.Intent)
okhttp3.internal.Util: void closeQuietly(java.io.Closeable)
co.apptailor.googlesignin.RNGoogleSigninModule: java.util.Map getConstants()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
com.facebook.react.devsupport.DevServerHelper$4
org.jitsi.meet.R$string: int catalyst_debug_nuclide
org.jitsi.meet.R$attr: int popupTheme
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
okhttp3.internal.connection.RouteException: java.io.IOException getLastConnectException()
com.facebook.react.bridge.GuardedAsyncTask
com.facebook.react.views.textinput.ReactTextInputShadowNode
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode NO_ERROR
okhttp3.internal.http2.Http2Reader: void readRstStream(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
com.google.android.gms.internal.measurement.zzhr: com.google.android.gms.internal.measurement.zzhr[] values()
okhttp3.internal.tls.BasicTrustRootIndex: int hashCode()
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: java.util.Iterator mIterator
com.facebook.react.uimanager.ViewManager: void updateExtraData(android.view.View,java.lang.Object)
org.jitsi.meet.sdk.R$styleable: int MenuView_android_verticalDivider
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okio.AsyncTimeout$Watchdog
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)
androidx.fragment.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Display4
org.webrtc.BuiltinAudioEncoderFactoryFactory
okio.Okio: okio.Sink sink(java.io.File)
org.jitsi.meet.R$id: int expanded_menu
com.horcrux.svg.R$dimen: int abc_action_bar_content_inset_with_nav
org.jitsi.meet.sdk.DefaultHardwareBackBtnHandlerImpl: void invokeDefaultOnBackPressed()
org.webrtc.VideoCodecMimeType: org.webrtc.VideoCodecMimeType[] $VALUES
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: void handleException(java.lang.Exception)
org.webrtc.AndroidVideoDecoder$DecodedTextureMetadata: AndroidVideoDecoder$DecodedTextureMetadata(long,java.lang.Integer)
org.webrtc.CallSessionFileRotatingLogSink: byte[] nativeGetLogData(java.lang.String)
org.jitsi.meet.R$layout: R$layout()
org.webrtc.SessionDescription$Type: SessionDescription$Type(java.lang.String,int)
com.facebook.react.devsupport.interfaces.DevSupportManager: java.lang.String getDownloadedJSBundleFile()
okio.SegmentedByteString: okio.ByteString substring(int)
com.facebook.react.devsupport.DevServerHelper: java.lang.String createLaunchJSDevtoolsCommandUrl()
org.jitsi.meet.sdk.JitsiMeetActivity: void launch(android.content.Context,org.jitsi.meet.sdk.JitsiMeetConferenceOptions)
org.jitsi.meet.R$styleable: int[] AppCompatSeekBar
com.horcrux.svg.VirtualView: android.graphics.Matrix mInvTransform
okhttp3.internal.tls.OkHostnameVerifier: OkHostnameVerifier()
org.webrtc.Logging: void w(java.lang.String,java.lang.String)
com.horcrux.svg.R$style: int Widget_AppCompat_ActionButton_Overflow
okhttp3.RealCall: java.lang.Object clone()
org.jitsi.meet.R$style: int Widget_AppCompat_Button
org.webrtc.VideoEncoder$CodecSpecificInfoVP8: VideoEncoder$CodecSpecificInfoVP8()
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_22
org.jitsi.meet.R$styleable: int StateListDrawable_android_constantSize
okhttp3.internal.huc.OkHttpsURLConnection: void setChunkedStreamingMode(int)
okhttp3.internal.cache.DiskLruCache: boolean isClosed()
com.rnimmersive.RNImmersiveModule: RNImmersiveModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Response cacheResponse
okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)
okhttp3.Request$Builder: okhttp3.Request$Builder put(okhttp3.RequestBody)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
org.webrtc.TextureBufferImpl: org.webrtc.RefCountDelegate refCountDelegate
org.jitsi.meet.R$styleable: int AppCompatImageView_srcCompat
com.calendarevents.CalendarEvents: com.facebook.react.bridge.WritableNativeArray serializeEvents(android.database.Cursor)
com.facebook.react.animated.NativeAnimatedModule: void clearFrameCallback()
com.horcrux.svg.R$styleable: int StateListDrawable_android_dither
org.jitsi.meet.R$string: int search_description
okhttp3.Response: java.lang.String message()
com.facebook.react.views.view.ReactViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.sdk.ExternalAPIModule: org.jitsi.meet.sdk.BroadcastEmitter broadcastEmitter
com.facebook.react.bridge.JavaOnlyArray: int hashCode()
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV3
org.webrtc.HardwareVideoEncoder: org.webrtc.VideoCodecStatus encodeByteBuffer(org.webrtc.VideoFrame,org.webrtc.VideoFrame$Buffer,int)
org.jitsi.meet.sdk.R$drawable: int btn_checkbox_unchecked_to_checked_mtrl_animation
org.jitsi.meet.sdk.JitsiMeetUncaughtExceptionHandler: void register()
org.jitsi.meet.R$style: int ThemeOverlay_AppCompat_Dialog
okhttp3.internal.Util: java.nio.charset.Charset UTF_16_LE
org.webrtc.VideoSource$1: org.webrtc.VideoSource this$0
okhttp3.WebSocket: okhttp3.Request request()
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: java.lang.String room
com.facebook.react.bridge.CxxCallbackImpl: void nativeInvoke(com.facebook.react.bridge.NativeArray)
org.jitsi.meet.sdk.R$string: int common_signin_button_text_long
com.horcrux.svg.RenderableViewManager: void setMatrix(com.horcrux.svg.VirtualView,com.facebook.react.bridge.Dynamic)
com.oney.WebRTCModule.WebRTCModule: android.util.SparseArray mPeerConnectionObservers
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_searchViewStyle
org.webrtc.voiceengine.WebRtcAudioManager: boolean isDeviceBlacklistedForOpenSLESUsage()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.devsupport.interfaces.DevSupportManager: void registerErrorCustomizer(com.facebook.react.devsupport.interfaces.ErrorCustomizer)
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext,java.lang.Object)
org.webrtc.Metrics: org.webrtc.Metrics nativeGetAndReset()
okhttp3.internal.Util: java.nio.charset.Charset UTF_16_BE
com.facebook.react.views.view.ReactViewGroup: void dispatchDraw(android.graphics.Canvas)
okhttp3.internal.Util: java.util.TimeZone UTC
com.google.android.gms.internal.measurement.zzcd$zzc: long zzg
com.horcrux.svg.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
okhttp3.internal.cache2.FileOperator: void read(long,okio.Buffer,long)
com.google.gson.reflect.TypeToken: boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)
com.facebook.react.devsupport.interfaces.DevSupportManager: void startInspector()
org.jitsi.meet.R$style: int Animation_AppCompat_Tooltip
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String)
org.webrtc.Camera2Session$CaptureSessionCallback: Camera2Session$CaptureSessionCallback(org.webrtc.Camera2Session)
org.jitsi.meet.R$raw: int lang_languageses
com.facebook.react.modules.blob.BlobModule: long getLastModifiedFromUri(android.net.Uri)
com.horcrux.svg.R$styleable: int SwitchCompat_switchPadding
com.facebook.react.views.textinput.ReactTextInputManager: void setPlaceholder(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
org.jitsi.meet.R$styleable: int GradientColor_android_centerColor
org.jitsi.meet.sdk.R$attr: int fontProviderFetchTimeout
org.jitsi.meet.sdk.R$dimen: int abc_action_button_min_width_overflow_material
org.jitsi.meet.R$style: int Widget_AppCompat_SeekBar_Discrete
com.facebook.react.bridge.GuardedResultAsyncTask
org.jitsi.meet.sdk.ExternalAPIModule: void sendEvent(java.lang.String,com.facebook.react.bridge.ReadableMap,java.lang.String)
com.horcrux.svg.R$styleable: int StateListDrawable_android_enterFadeDuration
org.webrtc.NetworkChangeDetector: boolean supportNetworkCallback()
org.webrtc.Camera2Session: void findCaptureFormat()
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action: JitsiMeetOngoingConferenceService$Action(java.lang.String,int,java.lang.String)
com.facebook.react.devsupport.DebugOverlayController: android.widget.FrameLayout mFPSDebugViewContainer
com.facebook.react.views.art.ARTGroupShadowNode
org.webrtc.CameraCapturer$6: void run()
org.jitsi.meet.sdk.R$styleable: int AnimatedStateListDrawableTransition_android_toId
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet access$000(com.facebook.react.bridge.ReactContext)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.facebook.react.common.LifecycleState: com.facebook.react.common.LifecycleState[] values()
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap valueOf(java.lang.String)
org.jitsi.meet.R$color: int abc_hint_foreground_material_light
com.facebook.react.bridge.ReactMarkerConstants
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: boolean getIsReduceMotionEnabledValue()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableArray getArray(int)
okhttp3.internal.ws.WebSocketWriter: void writeControlFrame(int,okio.ByteString)
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
okhttp3.internal.http2.Http2Reader: void readHeaders(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
com.facebook.react.devsupport.DevServerHelper$1
okhttp3.internal.http2.Settings: okhttp3.internal.http2.Settings set(int,int)
okhttp3.internal.io.FileSystem$1
org.jitsi.meet.R$attr: int divider
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodeFromView(int,int)
okio.SegmentedByteString: java.lang.String base64Url()
okhttp3.internal.http1.Http1Codec: void writeRequest(okhttp3.Headers,java.lang.String)
org.jitsi.meet.R$color: int abc_btn_colored_text_material
org.jitsi.meet.sdk.R$anim: int fragment_fade_exit
org.jitsi.meet.R$styleable: int AppCompatTheme_editTextColor
okhttp3.EventListener$1: EventListener$1()
com.facebook.imagepipeline.nativecode.NativeBlurFilter
com.facebook.react.views.scroll.ReactScrollView: void setScrollPerfTag(java.lang.String)
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_EditText
okhttp3.internal.huc.OkHttpsURLConnection: java.security.Principal getLocalPrincipal()
com.horcrux.svg.R$attr: int ratingBarStyleSmall
okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeWithoutCheckedException(java.lang.Object,java.lang.Object[])
org.jitsi.meet.R$drawable: int common_google_signin_btn_text_light_normal
org.webrtc.EncodedImage$Builder: EncodedImage$Builder(org.webrtc.EncodedImage$1)
org.jitsi.meet.R$styleable: int Toolbar_collapseContentDescription
com.horcrux.svg.R$attr: int pressedStateOverlayImage
com.horcrux.svg.R$drawable: int abc_btn_colored_material
okio.Options: okio.ByteString get(int)
org.jitsi.meet.R$color: int highlighted_text_material_light
org.webrtc.PeerConnection$AdapterType: org.webrtc.PeerConnection$AdapterType CELLULAR
org.jitsi.meet.sdk.WiFiStatsModule$1: void run()
com.facebook.react.bridge.ReactMarker$MarkerListener
org.jitsi.meet.sdk.R$raw: int lang_mainde
com.facebook.react.bridge.ReactCallback: void incrementPendingJSCalls()
okio.Buffer: okio.Buffer copyTo(java.io.OutputStream)
com.facebook.react.devsupport.DevServerHelper: java.lang.String createOnChangeEndpointUrl()
org.webrtc.Camera2Session: android.os.Handler cameraThreadHandler
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory
org.webrtc.MediaSource: void runWithReference(java.lang.Runnable)
com.facebook.react.devsupport.DevSupportManagerImpl: java.lang.String RELOAD_APP_ACTION_SUFFIX
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_tooltipFrameBackground
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: ReactQueueConfigurationSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec)
okhttp3.ResponseBody$1: ResponseBody$1(okhttp3.MediaType,long,okio.BufferedSource)
org.jitsi.meet.R$styleable: int AppCompatTheme_windowMinWidthMajor
org.jitsi.meet.sdk.R$string: int abc_shareactionprovider_share_with
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList access$700(com.facebook.react.bridge.CatalystInstanceImpl)
com.horcrux.svg.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
org.webrtc.VideoFrame$TextureBuffer$Type: int getGlTarget()
org.jitsi.meet.sdk.log.JitsiMeetLogger: void v(java.lang.String,java.lang.Object[])
okhttp3.Handshake: int hashCode()
com.horcrux.svg.RenderableView: double saturate(double)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionMenuTextColor
com.facebook.react.bridge.ReactContext: void onHostPause()
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
org.jitsi.meet.R$color: int material_grey_600
org.jitsi.meet.R$anim: int fragment_fade_enter
com.facebook.react.devsupport.DevSupportManagerImpl: void setFpsDebugEnabled(boolean)
org.jitsi.meet.sdk.R$drawable: int common_google_signin_btn_text_light_normal
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.NativeModuleCallExceptionHandler mNativeModuleCallExceptionHandler
okhttp3.internal.http.HttpCodec: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Handshake handshake
org.jitsi.meet.R$attr: int actionModeCloseButtonStyle
org.webrtc.CryptoOptions$Srtp: CryptoOptions$Srtp(org.webrtc.CryptoOptions,boolean,boolean,boolean,org.webrtc.CryptoOptions$1)
org.webrtc.NetworkMonitorAutoDetect: java.lang.String wifiSSID
com.facebook.react.views.view.ReactViewGroup: void removeFromArray(int)
com.horcrux.svg.R$styleable: int AppCompatTheme_switchStyle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_FABRIC_SO_FILE_START
org.webrtc.EglRenderer: java.lang.String name
org.jitsi.meet.sdk.ConnectionService: android.telecom.Connection onCreateIncomingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)
com.horcrux.svg.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
com.facebook.react.devsupport.DevSupportManagerImpl$9: com.facebook.react.devsupport.DevSupportManagerImpl this$0
okhttp3.internal.connection.RealConnection: RealConnection(okhttp3.ConnectionPool,okhttp3.Route)
com.facebook.react.bridge.ReadableNativeMap: boolean getBoolean(java.lang.String)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getServerHost()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.google.android.gms.internal.measurement.zzcd$zzg: long zzi
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
androidx.fragment.app.FragmentActivity: void markFragmentsCreated()
com.facebook.soloader.Api18TraceUtils: Api18TraceUtils()
okhttp3.Connection: java.net.Socket socket()
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible
org.webrtc.RendererCommon: float[] convertMatrixFromAndroidGraphicsMatrix(android.graphics.Matrix)
com.facebook.react.bridge.CatalystInstanceImpl$5: void run()
com.horcrux.svg.R$styleable: int SearchView_android_inputType
androidx.fragment.app.Fragment: int mContainerId
org.jitsi.meet.sdk.BroadcastIntentHelper: BroadcastIntentHelper()
androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
com.facebook.react.animated.NativeAnimatedModule: java.lang.String getName()
com.horcrux.svg.R$dimen: int abc_alert_dialog_button_bar_height
okhttp3.internal.http1.Http1Codec: okio.Sink newFixedLengthSink(long)
com.horcrux.svg.TextProperties$FontStyle: com.horcrux.svg.TextProperties$FontStyle valueOf(java.lang.String)
org.webrtc.PeerConnection$IceConnectionState: org.webrtc.PeerConnection$IceConnectionState[] $VALUES
org.webrtc.PeerConnection$PortPrunePolicy: PeerConnection$PortPrunePolicy(java.lang.String,int)
org.jitsi.meet.sdk.AppInfoModule: java.util.Map getConstants()
org.webrtc.PeerConnection$RTCConfiguration: boolean getPruneTurnPorts()
com.facebook.react.bridge.PromiseImpl: void resolve(java.lang.Object)
org.jitsi.meet.sdk.R$color: int notification_icon_bg_color
org.webrtc.CryptoOptions$1
org.webrtc.VideoCodecStatus: org.webrtc.VideoCodecStatus OK
com.horcrux.svg.R$styleable: int FontFamilyFont_android_fontWeight
com.horcrux.svg.R$styleable: int MenuView_android_windowAnimationStyle
okhttp3.internal.http2.Http2Reader: void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.dropbox.core.InvalidAccessTokenException
com.reactnativecommunity.webview.RNCWebViewModule: com.facebook.react.modules.core.PermissionAwareActivity getPermissionAwareActivity()
org.jitsi.meet.sdk.BroadcastAction: java.util.HashMap getData()
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(com.facebook.react.bridge.ReactApplicationContext)
org.webrtc.NetworkMonitorAutoDetect$WifiDirectManagerDelegate
org.webrtc.VideoProcessor$FrameAdaptationParameters: boolean drop
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.NativeMap getConstants()
org.webrtc.PeerConnectionFactory: void nativeStopInternalTracingCapture()
com.facebook.react.bridge.JsonWriterHelper: void dynamicValue(android.util.JsonWriter,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.R$id: int content
org.jitsi.meet.sdk.R$style: int DialogAnimationFade
okhttp3.MediaType
com.horcrux.svg.R$styleable: int GradientColor_android_centerY
org.webrtc.RtpParameters$Encoding: java.lang.Long ssrc
org.webrtc.PeerConnection$IceConnectionState: org.webrtc.PeerConnection$IceConnectionState CONNECTED
org.jitsi.meet.sdk.ConnectionService: android.telecom.PhoneAccountHandle registerPhoneAccount(android.content.Context,android.net.Uri,java.lang.String)
org.webrtc.SoftwareVideoDecoderFactory: org.webrtc.VideoDecoder createDecoder(org.webrtc.VideoCodecInfo)
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: void setBluetoothAudioRoute(boolean)
com.horcrux.svg.RenderableView: void setFillRule(int)
com.horcrux.svg.R$drawable: int abc_ic_menu_overflow_material
okhttp3.internal.http.HttpDate: java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS
org.jitsi.meet.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source
okhttp3.internal.Util: void closeQuietly(java.net.ServerSocket)
com.calendarevents.CalendarEvents: int addEvent(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap)
com.facebook.react.devsupport.DevSupportManagerImpl$9: DevSupportManagerImpl$9(com.facebook.react.devsupport.DevSupportManagerImpl)
org.jitsi.meet.sdk.R$style: int AppTheme
org.jitsi.meet.R$drawable: int notify_panel_notification_icon_bg
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_5
com.facebook.react.modules.blob.BlobModule: BlobModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.platform.JdkWithJettyBootPlatform
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String getJSModuleName()
okhttp3.Request: java.lang.Object tag(java.lang.Class)
org.jitsi.meet.sdk.R$styleable: int ActivityChooserView_initialActivityCount
com.horcrux.svg.R$attr: int actionModeStyle
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit)
org.webrtc.AudioDecoderFactoryFactory
org.webrtc.RtpTransceiver: org.webrtc.RtpReceiver getReceiver()
com.horcrux.svg.VirtualView: float getCanvasHeight()
org.jitsi.meet.R$style: int Theme_AppCompat
com.horcrux.svg.VirtualView: android.graphics.Region mClipRegion
com.facebook.react.modules.core.JSTimers: void callTimers(com.facebook.react.bridge.WritableArray)
okhttp3.OkHttpClient
com.facebook.react.bridge.Inspector$RemoteConnection: void onDisconnect()
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_roundTopStart
org.webrtc.AndroidVideoDecoder: java.lang.String MEDIA_FORMAT_KEY_STRIDE
com.facebook.yoga.YogaNative: void jni_YGConfigSetExperimentalFeatureEnabled(long,int,boolean)
org.jitsi.meet.sdk.R$id: int src_atop
org.webrtc.VideoDecoder$DecodeInfo: VideoDecoder$DecodeInfo(boolean,long)
org.jitsi.meet.R$styleable: int AppCompatTheme_actionBarPopupTheme
org.jitsi.meet.R$attr: int actionModeBackground
com.facebook.react.views.text.ReactRawTextShadowNode: void setText(java.lang.String)
org.jitsi.meet.sdk.R$color: int accent_material_dark
org.jitsi.meet.R$integer: int react_native_inspector_proxy_port
org.webrtc.VideoCodecMimeType
org.webrtc.audio.JavaAudioDeviceModule$AudioRecordErrorCallback: void onWebRtcAudioRecordStartError(org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode,java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String REACT_CLASS
org.jitsi.meet.sdk.R$dimen: int abc_action_bar_subtitle_top_margin_material
org.jitsi.meet.sdk.R$styleable: int TextAppearance_android_fontFamily
com.facebook.react.views.textinput.ReactTextInputManager: void setBlurOnSubmit(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean)
com.facebook.react.bridge.Arguments$1: Arguments$1(java.lang.Object)
okhttp3.CertificatePinner$Pin: CertificatePinner$Pin(java.lang.String,java.lang.String)
com.horcrux.svg.R$attr: int fontFamily
org.jitsi.meet.R$raw: R$raw()
org.webrtc.voiceengine.WebRtcAudioTrack$ErrorCallback: void onWebRtcAudioTrackError(java.lang.String)
com.horcrux.svg.R$dimen: int abc_text_size_title_material
com.facebook.react.fabric.Binding: com.facebook.jni.HybridData mHybridData
com.facebook.react.views.art.ARTRenderableViewManager: java.lang.Class getShadowNodeClass()
com.facebook.react.modules.storage.AsyncStorageModule: java.lang.String getName()
okio.Pipe$PipeSource: long read(okio.Buffer,long)
okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route)
org.jitsi.meet.sdk.R$layout: int abc_screen_simple
com.facebook.react.devsupport.DevSupportManagerImpl$14
org.jitsi.meet.R$raw: int node_modules_cssselect_lib_procedure
org.webrtc.JavaI420Buffer: int width
org.webrtc.DataChannel$Init: boolean negotiated
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode HTTP_1_1_REQUIRED
okio.Pipe$PipeSource: Pipe$PipeSource(okio.Pipe)
org.jitsi.meet.R$styleable: int AppCompatTheme_actionBarStyle
org.webrtc.HardwareVideoEncoder$YuvFormat: void fillBuffer(java.nio.ByteBuffer,org.webrtc.VideoFrame$Buffer)
com.horcrux.svg.R$styleable: int AppCompatTheme_seekBarStyle
com.facebook.jni.ThreadScopeSupport
org.jitsi.meet.R$drawable: int tooltip_frame_light
com.horcrux.svg.RenderableViewManager$ClipPathViewManager
okhttp3.FormBody: okhttp3.MediaType contentType()
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
com.facebook.react.bridge.ModuleSpec: java.lang.String TAG
okhttp3.OkHttpClient: int readTimeout
com.facebook.yoga.YogaNative: void jni_YGNodeSetStyleInputs(long,float[],int)
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Subhead
com.facebook.react.devsupport.DevServerHelper: void closePackagerConnection()
androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)
org.jitsi.meet.R$style: int Platform_ThemeOverlay_AppCompat_Dark
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Inverse
androidx.fragment.app.Fragment: java.lang.String toString()
com.horcrux.svg.R$attr: int elevation
okhttp3.internal.connection.StreamAllocation: boolean $assertionsDisabled
org.jitsi.meet.sdk.ExternalAPIModule: java.lang.String getName()
com.facebook.react.bridge.JavaJSExecutor$Factory: com.facebook.react.bridge.JavaJSExecutor create()
org.webrtc.Predicate
okhttp3.Address: okhttp3.HttpUrl url
com.facebook.common.file.FileUtils$ParentDirNotFoundException
com.facebook.react.modules.camera.CameraRollManager: void saveToCameraRoll(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
org.jitsi.meet.sdk.R$styleable: int[] GenericDraweeHierarchy
com.facebook.react.jscexecutor.JSCExecutor
org.webrtc.NetworkMonitorAutoDetect$NetworkState
okhttp3.internal.http1.Http1Codec$AbstractSource: okio.Timeout timeout()
org.webrtc.ContextUtils: void initialize(android.content.Context)
org.jitsi.meet.R$layout: int abc_screen_toolbar
com.facebook.react.views.viewpager.ReactViewPagerManager: ReactViewPagerManager()
org.jitsi.meet.R$styleable: int SimpleDraweeView_pressedStateOverlayImage
com.google.android.gms.internal.measurement.zzbv$zzd: java.lang.String zzf
okhttp3.Authenticator$1
com.facebook.react.views.picker.ReactPickerManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.picker.ReactPicker)
com.facebook.react.bridge.ReactCallback: void decrementPendingJSCalls()
org.jitsi.meet.sdk.R$styleable: int RecycleListView_paddingTopNoTitle
com.facebook.react.devsupport.ReactInstanceManagerDevHelper: void onReloadWithJSDebugger(com.facebook.react.bridge.JavaJSExecutor$Factory)
org.webrtc.RtpTransceiver
com.horcrux.svg.RenderableViewManager$EllipseViewManager
okhttp3.internal.connection.RealConnection: okio.BufferedSource source
com.facebook.react.fabric.FabricUIManager: void clearJSResponder()
com.horcrux.svg.Brush$BrushUnits: com.horcrux.svg.Brush$BrushUnits valueOf(java.lang.String)
com.facebook.react.devsupport.DevSupportManagerImpl$11: void onOptionSelected()
org.webrtc.ThreadUtils: ThreadUtils()
org.webrtc.EglBase14Impl$Context: long getNativeEglContext()
org.jitsi.meet.sdk.JitsiMeetActivity: java.lang.String TAG
com.horcrux.svg.R$styleable: int[] ActionMenuView
com.horcrux.svg.SymbolView: void setMinX(float)
okhttp3.Cache: okhttp3.internal.cache.DiskLruCache cache
okhttp3.internal.cache.DiskLruCache: boolean initialized
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase instance
org.jitsi.meet.sdk.R$styleable: int MenuItem_actionViewClass
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate: org.webrtc.NetworkChangeDetector$NetworkInformation networkToInfo(android.net.Network)
org.webrtc.DataChannel: long getNativeDataChannel()
org.webrtc.DataChannel$State: DataChannel$State(java.lang.String,int)
org.webrtc.Camera1Session$SessionState
org.jitsi.meet.R$style: int Platform_AppCompat_Light
org.jitsi.meet.sdk.BroadcastAction: org.jitsi.meet.sdk.BroadcastAction$Type type
okhttp3.HttpUrl: java.lang.String password
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor
okhttp3.RealCall: okhttp3.RealCall newRealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean)
org.jitsi.meet.R$styleable: int AppCompatTheme_tooltipFrameBackground
com.horcrux.svg.R$layout: int notification_action_tombstone
org.webrtc.GlTextureFrameBuffer: int getHeight()
org.jitsi.meet.sdk.R$styleable: int Toolbar_android_gravity
com.learnium.RNDeviceInfo.RNDeviceModule: double getTotalMemorySync()
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric$3: void run()
org.jitsi.meet.R$styleable: int AppCompatTheme_buttonBarStyle
org.jitsi.meet.R$attr: int textAppearanceListItemSecondary
org.webrtc.NetworkChangeDetector$NetworkInformation: org.webrtc.NetworkChangeDetector$ConnectionType underlyingTypeForVpn
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType[] values()
org.jitsi.meet.R$style: int Theme_AppCompat_DayNight_NoActionBar
okhttp3.internal.cache.FaultHidingSink: void write(okio.Buffer,long)
okhttp3.RealCall$1: okhttp3.RealCall this$0
com.horcrux.svg.R$styleable: int Toolbar_navigationContentDescription
org.jitsi.meet.sdk.R$layout: R$layout()
com.facebook.react.devsupport.DevServerHelper$11: void onResponse(okhttp3.Call,okhttp3.Response)
okio.ByteString: long serialVersionUID
org.webrtc.CameraCapturer: org.webrtc.CameraVideoCapturer$CameraStatistics cameraStatistics
com.facebook.react.modules.datepicker.DatePickerDialogFragment
okhttp3.internal.http.CallServerInterceptor: boolean forWebSocket
org.webrtc.NV21Buffer: NV21Buffer(byte[],int,int,java.lang.Runnable)
org.webrtc.EglBase10Impl$1FakeSurfaceHolder: org.webrtc.EglBase10Impl this$0
okhttp3.internal.http2.PushObserver: boolean onHeaders(int,java.util.List,boolean)
com.facebook.react.devsupport.DevSupportManagerImpl: java.util.List mExceptionLoggers
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
okio.Base64: byte[] MAP
com.horcrux.svg.R$attr: int dialogPreferredPadding
org.webrtc.NetworkMonitorAutoDetect$SimpleNetworkCallback: NetworkMonitorAutoDetect$SimpleNetworkCallback(org.webrtc.NetworkMonitorAutoDetect)
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ActionBar_TabBar
org.jitsi.meet.sdk.R$raw: int lang_languagesfr
org.webrtc.VideoEncoder$ResolutionBitrateLimits: int getMaxBitrateBps()
com.zmxv.RNSound.RNSoundModule: void setVolume(java.lang.Double,java.lang.Float,java.lang.Float)
com.calendarevents.CalendarEvents: void getCalendarPermissions(com.facebook.react.bridge.Promise)
org.jitsi.meet.R$id: int fitEnd
org.webrtc.PeerConnectionFactory$1
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
org.jitsi.meet.sdk.JitsiMeetActivityDelegate: com.facebook.react.modules.core.PermissionListener access$000()
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.CookieJarContainer mCookieJarContainer
okhttp3.internal.connection.RealConnection$1: okhttp3.internal.connection.RealConnection this$0
org.jitsi.meet.R$id: int expand_activities_button
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: void updateExtraData(android.view.View,java.lang.Object)
org.webrtc.FileVideoCapturer: java.util.TimerTask tickTask
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_colorControlHighlight
com.horcrux.svg.SvgView: void defineClipPath(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext()
com.horcrux.svg.R$color: int material_grey_850
okio.Buffer: okio.Buffer writeLongLe(long)
okhttp3.internal.cache.DiskLruCache$1: void run()
org.webrtc.EglBase10Impl$1FakeSurfaceHolder: android.graphics.Canvas lockCanvas()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout)
com.facebook.react.devsupport.RedBoxDialog: void setExceptionDetails(java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[])
org.webrtc.H264Utils: java.lang.String H264_PROFILE_CONSTRAINED_HIGH
okhttp3.internal.ws.WebSocketReader: okio.BufferedSource source
com.facebook.react.uimanager.events.TouchEventType: com.facebook.react.uimanager.events.TouchEventType[] values()
org.webrtc.voiceengine.WebRtcAudioTrack: int BUFFERS_PER_SECOND
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService$1: void run()
org.jitsi.meet.sdk.R$style: int ThemeOverlay_AppCompat_ActionBar
com.facebook.imagepipeline.nativecode.NativeBlurFilter: void nativeIterativeBoxBlur(android.graphics.Bitmap,int,int)
org.jitsi.meet.R$anim: int btn_checkbox_to_checked_box_outer_merged_animation
org.webrtc.TextureBufferImpl: int getTextureId()
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.horcrux.svg.VirtualView: double relativeOnOther(com.horcrux.svg.SVGLength)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontFamily(java.lang.String)
org.webrtc.voiceengine.WebRtcAudioEffects: WebRtcAudioEffects()
com.facebook.react.bridge.JSBundleLoader$1
org.jitsi.meet.R$string: int catalyst_hot_reloading_auto_disable
com.facebook.react.modules.core.ExceptionsManagerModule: java.lang.String getName()
okhttp3.Cache$2: boolean canRemove
okhttp3.Headers: java.util.Map toMultimap()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionModeCloseDrawable
org.jitsi.meet.sdk.R$styleable: int GradientColor_android_endColor
org.webrtc.NetworkMonitorAutoDetect$WifiDirectManagerDelegate: void onWifiP2pStateChange(int)
okhttp3.Cache$2: java.lang.Object next()
org.webrtc.AndroidVideoDecoder: int height
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Display2
org.webrtc.audio.JavaAudioDeviceModule: boolean isBuiltInAcousticEchoCancelerSupported()
com.horcrux.svg.R$styleable: int FontFamilyFont_fontStyle
okhttp3.internal.cache.DiskLruCache$Snapshot: void close()
okhttp3.Request$Builder: okhttp3.Request$Builder patch(okhttp3.RequestBody)
org.jitsi.meet.R$styleable: int[] SearchView
com.facebook.jni.NativeRunnable
org.jitsi.meet.R$styleable: int AppCompatTheme_buttonBarButtonStyle
com.facebook.react.bridge.CatalystInstance: void setGlobalVariable(java.lang.String,java.lang.String)
com.reactnativecommunity.webview.RNCWebViewModule: android.net.Uri getOutputUri(java.io.File)
org.webrtc.EglRenderer: android.os.Handler renderThreadHandler
org.jitsi.meet.sdk.R$raw: int lang_mainsk
org.jitsi.meet.sdk.JitsiMeetConferenceOptions
org.jitsi.meet.R$id: int search_edit_frame
org.webrtc.DtmfSender: int interToneGap()
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)
okhttp3.internal.platform.OptionalMethod: boolean isSupported(java.lang.Object)
org.jitsi.meet.R$dimen: int abc_button_inset_horizontal_material
org.webrtc.audio.WebRtcAudioRecord: int logRecordingConfigurations(android.media.AudioRecord,boolean)
org.jitsi.meet.sdk.log.JitsiMeetDefaultLogHandler: void doLog(int,java.lang.String,java.lang.String)
org.jitsi.meet.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
org.webrtc.Camera1Session: org.webrtc.Size findClosestPictureSize(android.hardware.Camera$Parameters,int,int)
org.webrtc.voiceengine.WebRtcAudioRecord: org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordThread audioThread
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
org.jitsi.meet.sdk.R$dimen: int abc_text_size_medium_material
androidx.activity.ComponentActivity: void onBackPressed()
okhttp3.JavaNetCookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)
androidx.appcompat.widget.AppCompatButton
okio.ByteString: void write(okio.Buffer)
com.dropbox.core.DbxWebAuth$BadStateException
com.facebook.react.views.art.ARTRenderableViewManager: com.facebook.react.views.art.ARTRenderableViewManager createARTShapeViewManager()
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer readBuffer
org.jitsi.meet.sdk.log.JitsiMeetLogger: void i(java.lang.Throwable,java.lang.String,java.lang.Object[])
org.jitsi.meet.R$styleable: int AppCompatTextHelper_android_drawableStart
okhttp3.internal.http.RealInterceptorChain: int writeTimeout
com.facebook.react.devsupport.RedBoxDialog$StackAdapter: long getItemId(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: void run()
okhttp3.internal.http2.Http2Connection$Builder: java.net.Socket socket
org.jitsi.meet.sdk.ParticipantInfo: java.lang.String email
com.horcrux.svg.R$styleable: int PopupWindowBackgroundState_state_above_anchor
org.webrtc.RtpParameters$Encoding: RtpParameters$Encoding(java.lang.String,boolean,double,int,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Double,java.lang.Long)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getDeviceNameSync()
org.jitsi.meet.R$styleable: int SwitchCompat_trackTint
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dispatcher(okhttp3.Dispatcher)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_windowMinWidthMinor
org.jitsi.meet.sdk.R$attr: int textColorSearchUrl
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService
org.webrtc.RefCountDelegate
okhttp3.Cache$CacheResponseBody: okio.BufferedSource bodySource
org.jitsi.meet.sdk.R$string: int abc_menu_sym_shortcut_label
org.jitsi.meet.R$layout
org.jitsi.meet.R$raw: int lang_mainhu
org.jitsi.meet.R$color: int common_google_signin_btn_text_dark_pressed
okhttp3.internal.http.HttpCodec: void flushRequest()
com.facebook.react.bridge.Inspector
org.jitsi.meet.sdk.R$id: int rn_frame_method
com.facebook.react.modules.blob.BlobModule: java.lang.String access$200(com.facebook.react.modules.blob.BlobModule,android.net.Uri)
com.horcrux.svg.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzid zzg
org.webrtc.VideoCapturer
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.PeerConnectionFactory$Builder setVideoEncoderFactory(org.webrtc.VideoEncoderFactory)
androidx.fragment.app.Fragment: boolean mCalled
org.webrtc.PeerConnection$SdpSemantics: org.webrtc.PeerConnection$SdpSemantics UNIFIED_PLAN
org.jitsi.meet.R$styleable: int FontFamilyFont_fontStyle
org.jitsi.meet.sdk.R$drawable: int abc_text_select_handle_left_mtrl_light
okio.ForwardingTimeout: long deadlineNanoTime()
org.webrtc.EglRenderer: EglRenderer(java.lang.String,org.webrtc.VideoFrameDrawer)
com.facebook.react.devsupport.DevSupportManagerImpl: void access$900(com.facebook.react.devsupport.DevSupportManagerImpl,java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[],int,com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType)
org.webrtc.EglRenderer: org.webrtc.EglRenderer$EglSurfaceCreation eglSurfaceCreationRunnable
org.jitsi.meet.R$color: int primary_material_light
org.jitsi.meet.sdk.R$style: int Base_V7_Widget_AppCompat_Toolbar
com.facebook.jni.UnknownCppException: UnknownCppException()
okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)
com.facebook.react.views.textinput.ReactTextInputManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText)
org.webrtc.NV12Buffer: org.webrtc.VideoFrame$Buffer cropAndScale(int,int,int,int,int,int)
org.webrtc.PeerConnection: org.webrtc.RtpTransceiver nativeAddTransceiverOfType(org.webrtc.MediaStreamTrack$MediaType,org.webrtc.RtpTransceiver$RtpTransceiverInit)
com.facebook.react.uimanager.UIManagerModule: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
com.calendarevents.CalendarEvents: void saveCalendar(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_panelMenuListWidth
org.jitsi.meet.R$styleable: int Toolbar_titleMarginTop
com.facebook.react.devsupport.DevServerHelper$8: com.facebook.react.devsupport.interfaces.PackagerStatusCallback val$callback
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.GlobalImageLoadListener mGlobalImageLoadListener
com.horcrux.svg.RenderableView: void resetProperties()
org.jitsi.meet.sdk.R$attr: int autoSizeMaxTextSize
com.facebook.react.devsupport.DevSupportManagerFactory: java.lang.String DEVSUPPORT_IMPL_CLASS
org.webrtc.CameraCapturer: org.webrtc.CameraVideoCapturer$CameraEventsHandler eventsHandler
org.jitsi.meet.sdk.R$dimen: int abc_dialog_title_divider_material
org.jitsi.meet.sdk.R$styleable: int SwitchCompat_trackTint
org.webrtc.MediaConstraints: java.util.List mandatory
org.jitsi.meet.sdk.R$style: int Animation_Catalyst_RedBox
com.horcrux.svg.R$attr: int height
okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)
org.webrtc.PeerConnection: long createNativePeerConnectionObserver(org.webrtc.PeerConnection$Observer)
org.webrtc.PeerConnectionDependencies$1
com.facebook.react.uimanager.events.ReactEventEmitter
org.jitsi.meet.sdk.R$styleable: int FontFamilyFont_android_fontStyle
org.jitsi.meet.sdk.JitsiMeetViewListener: void onConferenceJoined(java.util.Map)
org.webrtc.YuvHelper: void I420Copy(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int)
com.dropbox.core.v2.sharing.ListFoldersContinueErrorException
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.Class clientProviderClass
com.horcrux.svg.R$styleable: int LinearLayoutCompat_divider
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomBubblingEventTypeConstants()
androidx.fragment.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
org.webrtc.audio.WebRtcAudioEffects: boolean shouldEnableNs
com.facebook.react.bridge.JavaScriptModuleRegistry: java.util.HashMap mModuleInstances
org.webrtc.CameraVideoCapturer$CameraStatistics: int frameCount
org.webrtc.voiceengine.WebRtcAudioRecord$1
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_progressBarAutoRotateInterval
com.facebook.react.bridge.JSBundleLoaderDelegate
org.jitsi.meet.R$styleable: int CompoundButton_buttonCompat
org.webrtc.PeerConnectionDependencies$Builder: org.webrtc.PeerConnectionDependencies createPeerConnectionDependencies()
okhttp3.internal.cache2.Relay: int SOURCE_UPSTREAM
org.webrtc.PeerConnection: void close()
com.horcrux.svg.R$style: int Base_V28_Theme_AppCompat
com.horcrux.svg.R$styleable: int FontFamilyFont_android_ttcIndex
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_NUMBER_PAD
org.jitsi.meet.sdk.R$drawable: int abc_edit_text_material
okhttp3.OkHttpClient$Builder: java.util.List connectionSpecs
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
okhttp3.internal.connection.StreamAllocation: java.lang.Object callStackTrace
com.facebook.react.ReactRootView: void setRootViewTag(int)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long)
okhttp3.Request: java.util.Map tags
com.horcrux.svg.R$styleable: int[] ActionBarLayout
org.webrtc.PeerConnectionFactory$InitializationOptions: android.content.Context applicationContext
org.jitsi.meet.sdk.R$styleable: int[] LoadingImageView
androidx.fragment.app.Fragment: int getId()
org.webrtc.ThreadUtils$1Result
org.jitsi.meet.R$styleable: int SimpleDraweeView_actualImageUri
com.horcrux.svg.RenderableViewManager: void access$100(com.horcrux.svg.RenderableViewManager,com.horcrux.svg.VirtualView)
org.jitsi.meet.sdk.R$layout: int abc_list_menu_item_icon
okhttp3.Route: java.net.InetSocketAddress socketAddress()
org.jitsi.meet.sdk.R$attr: int backgroundTint
org.webrtc.ScreenCapturerAndroid: long getNumCapturedFrames()
org.webrtc.NetworkMonitorAutoDetect: void setWifiManagerDelegateForTests(org.webrtc.NetworkMonitorAutoDetect$WifiManagerDelegate)
org.webrtc.HardwareVideoEncoder: org.webrtc.HardwareVideoEncoder$BusyCount outputBuffersBusyCount
okhttp3.internal.platform.ConscryptPlatform: okhttp3.internal.platform.ConscryptPlatform buildIfSupported()
com.facebook.react.bridge.CatalystInstanceImpl: void jniRegisterSegment(int,java.lang.String)
com.horcrux.svg.R$drawable: int abc_textfield_default_mtrl_alpha
org.webrtc.FrameDecryptor: long getNativeFrameDecryptor()
com.horcrux.svg.RenderableViewManager: void setStrokeOpacity(com.horcrux.svg.RenderableView,float)
okhttp3.Headers: java.util.Date getDate(java.lang.String)
com.horcrux.svg.R$styleable: int SimpleDraweeView_actualImageUri
org.webrtc.YuvConverter: void release()
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getHeaderFieldKey(int)
org.jitsi.meet.sdk.R$styleable: int GradientColor_android_type
org.webrtc.MediaCodecWrapper: java.nio.ByteBuffer[] getOutputBuffers()
okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)
androidx.fragment.app.Fragment: boolean mDetached
org.jitsi.meet.sdk.ListenerUtils$1
org.webrtc.CameraCapturer$2: void onCameraDisconnected(org.webrtc.CameraSession)
org.webrtc.VideoFrameDrawer: int renderWidth
com.horcrux.svg.TextPathView: void setSharp(java.lang.String)
com.facebook.react.bridge.queue.ReactQueueConfiguration: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
com.horcrux.svg.LinearGradientView: void setY2(com.facebook.react.bridge.Dynamic)
org.jitsi.meet.sdk.R$id: int action_text
org.webrtc.AndroidVideoDecoder: boolean access$100(org.webrtc.AndroidVideoDecoder)
org.jitsi.meet.sdk.JitsiMeetView: void onDetachedFromWindow()
com.facebook.react.bridge.CatalystInstanceImpl: void access$1000(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.Exception)
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
org.webrtc.ThreadUtils: void executeUninterruptibly(org.webrtc.ThreadUtils$BlockingOperation)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableMap getMap(int)
org.jitsi.meet.sdk.R$bool: int abc_allow_stacked_button_bar
org.jitsi.meet.sdk.JitsiMeetActivity: void onBackPressed()
org.webrtc.PeerConnection$IceTransportsType: PeerConnection$IceTransportsType(java.lang.String,int)
org.jitsi.meet.MainActivity
com.horcrux.svg.R$attr: int actionModePasteDrawable
com.horcrux.svg.RadialGradientView: void setFx(com.facebook.react.bridge.Dynamic)
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: void close()
com.facebook.react.modules.image.ImageLoaderModule: ImageLoaderModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http2.Http2: java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[])
org.webrtc.PeerConnection: void nativeClose()
org.webrtc.EglRenderer: long nextFrameTimeNs
com.horcrux.svg.VirtualView: com.horcrux.svg.GroupView mTextRoot
org.webrtc.GlShader: int getAttribLocation(java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setOverflow(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.facebook.react.modules.debug.DevSettingsModule
okhttp3.EventListener: void dnsEnd(okhttp3.Call,java.lang.String,java.util.List)
com.google.android.gms.measurement.AppMeasurement: int getMaxUserProperties(java.lang.String)
com.horcrux.svg.R$attr: int tooltipText
org.webrtc.RendererCommon: android.graphics.Point getDisplaySize(float,float,int,int)
org.jitsi.meet.R$id: int jitsiFragment
org.webrtc.EncodedImage: org.webrtc.EncodedImage$FrameType frameType
org.webrtc.Logging: void v(java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setTextLength(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.google.android.gms.measurement.AppMeasurement: long generateEventId()
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$1: void onSuccess()
com.dropbox.core.DbxWrappedException
org.jitsi.meet.sdk.R$styleable: int FontFamily_fontProviderPackage
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection[] values()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_RC4_40_MD5
com.facebook.react.devsupport.DevServerHelper$BundleType: com.facebook.react.devsupport.DevServerHelper$BundleType[] values()
org.jitsi.meet.sdk.R$string: int common_google_play_services_update_text
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem createBatchMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem[],int,int)
org.webrtc.HardwareVideoEncoder: org.webrtc.HardwareVideoEncoder$YuvFormat yuvFormat
org.jitsi.meet.sdk.AudioModeModule: java.lang.String DEVICE_CHANGE_EVENT
org.webrtc.Camera1Session: void access$200(org.webrtc.Camera1Session)
androidx.appcompat.widget.ActionBarOverlayLayout
okio.Timeout: void waitUntilNotified(java.lang.Object)
okhttp3.internal.platform.Platform: java.util.List alpnProtocolNames(java.util.List)
androidx.lifecycle.SavedStateHandleController$1
com.facebook.react.modules.intent.IntentModule: void openURL(java.lang.String,com.facebook.react.bridge.Promise)
org.webrtc.VideoFrame$TextureBuffer$Type: int glTarget
org.jitsi.meet.R$styleable
org.webrtc.GlRectDrawer
com.facebook.react.bridge.CatalystInstanceImpl: void onNativeException(java.lang.Exception)
com.google.android.gms.internal.measurement.zzca$zza: com.google.android.gms.internal.measurement.zzca$zza zzh
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: java.util.concurrent.Callable val$callable
org.webrtc.Camera1Session: Camera1Session(org.webrtc.CameraSession$Events,boolean,android.content.Context,org.webrtc.SurfaceTextureHelper,int,android.hardware.Camera,android.hardware.Camera$CameraInfo,org.webrtc.CameraEnumerationAndroid$CaptureFormat,long)
okhttp3.Challenge: java.lang.String toString()
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
org.jitsi.meet.R$id: int adjust_width
org.webrtc.audio.WebRtcAudioRecord$1
org.jitsi.meet.R$style: int SpinnerDatePickerStyle
com.facebook.react.views.slider.ReactSlider
com.facebook.react.animated.EventAnimationDriver: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
org.webrtc.PeerConnection: boolean getStats(org.webrtc.StatsObserver,org.webrtc.MediaStreamTrack)
com.horcrux.svg.VirtualView: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.horcrux.svg.RenderableViewManager: void setOpacity(android.view.View,float)
org.webrtc.PeerConnection: org.webrtc.SessionDescription nativeGetLocalDescription()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setFont(com.horcrux.svg.GroupView,com.facebook.react.bridge.ReadableMap)
org.jitsi.meet.R$id: int progress_circular
org.jitsi.meet.R$styleable: int SwitchCompat_android_textOn
org.webrtc.H264Utils: H264Utils()
com.facebook.react.uimanager.events.ReactEventEmitter: void unregister(int)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
org.jitsi.meet.sdk.R$raw: int lang_languagesfrca
org.webrtc.audio.WebRtcAudioManager: java.lang.String TAG
com.facebook.react.modules.statusbar.StatusBarModule: java.lang.String HEIGHT_KEY
com.horcrux.svg.R$styleable: int AppCompatTheme_viewInflaterClass
okhttp3.RealCall$AsyncCall: okhttp3.RealCall this$0
com.dropbox.core.v2.teampolicies.SharedFolderMemberPolicy: com.dropbox.core.v2.teampolicies.SharedFolderMemberPolicy[] values()
com.horcrux.svg.R$dimen: int hint_pressed_alpha_material_dark
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
com.facebook.react.views.checkbox.ReactCheckBoxManager: void setEnabled(com.facebook.react.views.checkbox.ReactCheckBox,boolean)
com.horcrux.svg.R$styleable
okhttp3.Cache$CacheResponseBody: Cache$CacheResponseBody(okhttp3.internal.cache.DiskLruCache$Snapshot,java.lang.String,java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setEventInterceptor(com.google.android.gms.internal.measurement.zzab)
okhttp3.internal.http2.Http2Writer: void close()
com.facebook.react.devsupport.DevInternalSettings: void setBundleDeltasCppEnabled(boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$600(com.learnium.RNDeviceInfo.RNDeviceModule)
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Button
org.jitsi.meet.R$color: int material_grey_50
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder builder()
com.facebook.react.devsupport.DevSupportManagerImpl: void onPackagerConnected()
com.facebook.react.modules.core.Timing: java.util.concurrent.atomic.AtomicBoolean isRunningTasks
com.facebook.react.devsupport.DevInternalSettings: java.lang.String PREFS_JS_MINIFY_DEBUG_KEY
com.dropbox.core.v2.sharing.AddFolderMemberErrorException
org.webrtc.VideoEncoder$ScalingSettings
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor access$100()
com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken valueOf(java.lang.String)
com.horcrux.svg.SvgViewManager: void setVbHeight(com.horcrux.svg.SvgView,float)
okio.ByteString: int indexOf(okio.ByteString)
com.facebook.react.devsupport.BundleDownloader: com.facebook.react.devsupport.BundleDeltaClient getBundleDeltaClient(com.facebook.react.devsupport.BundleDeltaClient$ClientType)
okio.RealBufferedSource$1: okio.RealBufferedSource this$0
com.horcrux.svg.R$layout: int select_dialog_item_material
com.facebook.react.views.picker.ReactPickerManager: ReactPickerManager()
org.jitsi.meet.R$style: int Widget_AppCompat_Light_ActionBar
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
org.jitsi.meet.sdk.R$style: int Base_V7_Widget_AppCompat_EditText
org.jitsi.meet.R$styleable: int AppCompatSeekBar_tickMarkTint
com.facebook.react.views.picker.ReactDialogPickerManager: java.lang.String getName()
com.facebook.react.uimanager.LayoutShadowNode: void setMinWidth(com.facebook.react.bridge.Dynamic)
org.webrtc.RtpReceiver: RtpReceiver(long)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void initialize()
androidx.fragment.app.DialogFragment
org.webrtc.PlatformSoftwareVideoDecoderFactory: org.webrtc.VideoDecoder createDecoder(org.webrtc.VideoCodecInfo)
org.webrtc.EglBase: void swapBuffers()
org.jitsi.meet.sdk.BroadcastEvent$Type: org.jitsi.meet.sdk.BroadcastEvent$Type valueOf(java.lang.String)
com.rnimmersive.RNImmersiveModule: void _addImmersiveListener()
okhttp3.internal.cache.DiskLruCache$Editor$1: okhttp3.internal.cache.DiskLruCache$Editor this$1
org.webrtc.PeerConnection$BundlePolicy
com.reactnativecommunity.webview.RNCWebViewManager: void receiveCommand(android.webkit.WebView,int,com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionBarTabStyle
com.horcrux.svg.R$dimen: int notification_action_text_size
org.webrtc.EglRenderer: android.os.Handler access$302(org.webrtc.EglRenderer,android.os.Handler)
org.jitsi.meet.R$id: int never
com.horcrux.svg.R$id: int line1
com.reactnativecommunity.netinfo.types.CellularGeneration: com.reactnativecommunity.netinfo.types.CellularGeneration valueOf(java.lang.String)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder path(java.lang.String)
org.webrtc.NetworkMonitorAutoDetect: org.webrtc.NetworkChangeDetector$ConnectionType access$400(org.webrtc.NetworkMonitorAutoDetect$NetworkState)
okhttp3.internal.http1.Http1Codec$FixedLengthSink: okio.Timeout timeout()
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService: void onCurrentConferenceChanged(java.lang.String)
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_drawableLeft
com.facebook.react.modules.debug.AnimationsDebugModule: java.lang.String getName()
okhttp3.Cache$Entry: java.lang.String RECEIVED_MILLIS
okhttp3.internal.http2.Settings: boolean isSet(int)
com.facebook.react.views.image.ReactImageView: void setBackgroundColor(int)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: com.facebook.react.bridge.JavaScriptExecutor create()
com.horcrux.svg.R$attr: int progressBarPadding
okhttp3.Response: okhttp3.Response priorResponse
okhttp3.RealCall: RealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean)
org.jitsi.meet.sdk.R$attr: int contentInsetLeft
org.jitsi.meet.R$styleable: int MenuItem_numericModifiers
okhttp3.CacheControl$Builder: int maxStaleSeconds
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: JitsiMeetConferenceOptions(android.os.Parcel,org.jitsi.meet.sdk.JitsiMeetConferenceOptions$1)
com.facebook.react.bridge.WritableArray: void pushDouble(double)
org.jitsi.meet.R$id: int textSpacerNoButtons
org.jitsi.meet.R$integer: int config_tooltipAnimTime
org.webrtc.audio.WebRtcAudioRecord$AudioRecordThread
com.google.android.gms.internal.measurement.zzbv$zza: com.google.android.gms.internal.measurement.zzid zze
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
org.jitsi.meet.sdk.R$styleable: int SearchView_iconifiedByDefault
com.facebook.react.views.slider.ReactSliderManager: android.widget.SeekBar$OnSeekBarChangeListener ON_CHANGE_LISTENER
org.webrtc.PeerConnectionFactory: org.webrtc.PeerConnection createPeerConnection(org.webrtc.PeerConnection$RTCConfiguration,org.webrtc.PeerConnectionDependencies)
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$CandidateNetworkPolicy getCandidateNetworkPolicy()
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Subhead
com.horcrux.svg.R$color: int background_floating_material_light
com.horcrux.svg.R$styleable: int ActionBar_hideOnContentScroll
com.facebook.react.devsupport.DevSupportManagerImpl: void setHotModuleReplacementEnabled(boolean)
okhttp3.internal.http2.Huffman: void buildTree()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_DropDownItem_Spinner
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$TcpCandidatePolicy getTcpCandidatePolicy()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void clearSensitiveData()
org.webrtc.TextureBufferImpl
okhttp3.Response: java.lang.String header(java.lang.String)
org.webrtc.WrappedNativeI420Buffer: long nativeBuffer
okhttp3.OkHttpClient: boolean retryOnConnectionFailure()
okio.ForwardingTimeout: long timeoutNanos()
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeFindDrawable
okhttp3.Challenge
org.jitsi.meet.R$attr: int showTitle
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Integer getStunCandidateKeepaliveInterval()
org.jitsi.meet.R$attr: int maxButtonHeight
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat_Dark
org.webrtc.audio.WebRtcAudioEffects: WebRtcAudioEffects()
com.facebook.react.views.view.ReactViewManager: void receiveCommand(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.ReadableArray)
okio.RealBufferedSource: RealBufferedSource(okio.Source)
com.google.android.gms.internal.measurement.zzbv$zza
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_PREFETCH_FAILURE
com.facebook.react.views.textinput.ReactTextInputManager: int INPUT_TYPE_KEYBOARD_DECIMAL_PAD
com.google.android.gms.internal.measurement.zzcd$zzj: int zzd
com.facebook.react.bridge.JavaScriptContextHolder: void clear()
org.webrtc.HardwareVideoEncoder$YuvFormat: org.webrtc.HardwareVideoEncoder$YuvFormat[] $VALUES
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void readTheList()
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric$1
com.facebook.react.uimanager.UIManagerModule: void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap)
org.jitsi.meet.sdk.ReactInstanceManagerHolder: com.facebook.react.ReactInstanceManager reactInstanceManager
com.facebook.react.devsupport.BundleDownloader: okhttp3.Call access$002(com.facebook.react.devsupport.BundleDownloader,okhttp3.Call)
com.oney.WebRTCModule.WebRTCModule: void mediaStreamAddTrack(java.lang.String,java.lang.String)
okhttp3.EventListener: void requestHeadersStart(okhttp3.Call)
org.webrtc.DynamicBitrateAdjuster: double BITRATE_ADJUSTMENT_MAX_SCALE
okhttp3.internal.ws.WebSocketWriter$FrameSink: void flush()
com.facebook.react.uimanager.LayoutShadowNode: void setWidth(com.facebook.react.bridge.Dynamic)
org.webrtc.EglBase: void swapBuffers(long)
okhttp3.Headers: java.util.List values(java.lang.String)
org.jitsi.meet.R$attr: int windowFixedHeightMajor
org.webrtc.RTCStats: java.lang.String id
org.webrtc.HardwareVideoEncoder$BusyCount: int count
org.webrtc.PeerConnectionFactory: void checkInitializeHasBeenCalled()
org.webrtc.MediaSource$State: org.webrtc.MediaSource$State valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
org.jitsi.meet.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setNativeModuleCallExceptionHandler(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
com.facebook.react.devsupport.JSDevSupport$DevSupportCallback: void onSuccess(java.lang.String)
com.facebook.react.devsupport.DevInternalSettings: void setFpsDebugEnabled(boolean)
com.facebook.react.bridge.JavaModuleWrapper: java.lang.String getName()
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_24
com.facebook.react.devsupport.DevServerHelper$BundleType: com.facebook.react.devsupport.DevServerHelper$BundleType DELTA
androidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)
org.jitsi.meet.sdk.R$styleable: int[] SwitchCompat
com.facebook.react.modules.network.NetworkingModule: java.util.List mResponseHandlers
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map createExportedCustomDirectEventTypeConstants()
org.jitsi.meet.sdk.log.JitsiMeetLogger: void v(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.facebook.react.bridge.JavaOnlyMap
com.horcrux.svg.RenderableViewManager$ClipPathViewManager: RenderableViewManager$ClipPathViewManager()
org.jitsi.meet.R$style: int SplashScreen_Fullscreen
org.webrtc.MediaStream: void removeAudioTrack(long)
androidx.fragment.app.Fragment: java.lang.Object getEnterTransition()
timber.log.Timber$Tree: void prepareLog(int,java.lang.Throwable,java.lang.String,java.lang.Object[])
org.webrtc.SurfaceTextureHelper: void updateTexImage()
org.jitsi.meet.sdk.R$color: int abc_search_url_text_selected
okhttp3.Cache$CacheResponseBody$1: okhttp3.internal.cache.DiskLruCache$Snapshot val$snapshot
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INTERNAL_ERROR
org.jitsi.meet.R$color: int secondary_text_default_material_light
com.facebook.react.uimanager.UIManagerModule: java.lang.String getName()
com.facebook.react.bridge.Arguments$1
com.ocetnik.timer.BackgroundTimerModule: void stop()
com.horcrux.svg.PatternView: void setVbHeight(float)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noTransform()
com.facebook.react.devsupport.RedBoxDialog$4: com.facebook.react.devsupport.RedBoxDialog this$0
org.webrtc.VideoFrame$TextureBuffer$Type: org.webrtc.VideoFrame$TextureBuffer$Type OES
org.jitsi.meet.R$styleable: int GradientColor_android_endColor
com.horcrux.svg.R$style: int Widget_AppCompat_ListView
okio.AsyncTimeout: void enter()
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_FIN
org.jitsi.meet.sdk.R$attr: int alphabeticModifiers
com.facebook.react.devsupport.HMRClient: void enable()
org.webrtc.RtpSender: boolean setParameters(org.webrtc.RtpParameters)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String)
com.horcrux.svg.SvgViewManager: void setMinY(com.horcrux.svg.SvgView,float)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.Boolean acceptsVideo(java.lang.String[])
com.facebook.react.modules.toast.ToastModule: void show(java.lang.String,int)
org.webrtc.audio.JavaAudioDeviceModule$SamplesReadyCallback
com.facebook.react.bridge.JavaScriptModule
okhttp3.CertificatePinner: int hashCode()
org.jitsi.meet.R$attr: int subtitle
org.jitsi.meet.R$styleable: int SimpleDraweeView_viewAspectRatio
com.horcrux.svg.R$color: int primary_material_light
org.webrtc.Camera2Enumerator: java.util.List getSupportedSizes(android.hardware.camera2.CameraCharacteristics)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
com.facebook.react.modules.timepicker.TimePickerDialogModule: java.lang.String ACTION_TIME_SET
com.horcrux.svg.TextProperties$TextPathSpacing: com.horcrux.svg.TextProperties$TextPathSpacing[] values()
com.facebook.yoga.YogaNodeJNIBase: YogaNodeJNIBase()
com.facebook.react.bridge.ModuleSpec: com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.String,javax.inject.Provider)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration()
org.jitsi.meet.sdk.R$attr: int showTitle
androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setRx(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.huc.OkHttpURLConnection: boolean getInstanceFollowRedirects()
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)
org.jitsi.meet.sdk.R$raw: int lang_languagesja
org.jitsi.meet.BuildConfig: boolean GOOGLE_SERVICES_ENABLED
okhttp3.internal.huc.OkHttpsURLConnection: long getHeaderFieldDate(java.lang.String,long)
org.jitsi.meet.sdk.R$raw: int lang_mainmn
org.webrtc.HardwareVideoEncoderFactory: int getKeyFrameIntervalSec(org.webrtc.VideoCodecMimeType)
okhttp3.internal.http2.Http2Writer: boolean closed
com.facebook.react.devsupport.InspectorPackagerConnection: void handleDisconnect(org.json.JSONObject)
com.horcrux.svg.R$styleable: int Toolbar_titleMarginTop
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_7
org.jitsi.meet.sdk.R$id: int auto
com.facebook.soloader.SoLoader$Api14Utils: SoLoader$Api14Utils()
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.util.Map getHeaderFields()
org.jitsi.meet.sdk.R$attr: int titleTextStyle
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.bridge.WritableArray copyWritableArray(com.facebook.react.bridge.WritableArray)
org.jitsi.meet.sdk.R$attr: int placeholderImage
org.jitsi.meet.sdk.LogBridgeModule: void debug(java.lang.String)
okhttp3.ConnectionPool: void evictAll()
org.jitsi.meet.sdk.R$color: int material_grey_800
com.horcrux.svg.R$styleable: int[] FontFamilyFont
org.jitsi.meet.sdk.AudioModeModule: void setAudioDevice(java.lang.String)
com.facebook.react.bridge.UiThreadUtil: void runOnUiThread(java.lang.Runnable)
org.webrtc.HardwareVideoEncoder: org.webrtc.VideoCodecStatus encodeTextureBuffer(org.webrtc.VideoFrame)
org.webrtc.CameraCapturer$4: CameraCapturer$4(org.webrtc.CameraCapturer)
com.facebook.react.devsupport.DevServerHelper$11: com.facebook.react.devsupport.DevServerHelper this$0
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder authenticator(okhttp3.Authenticator)
org.jitsi.meet.sdk.R$attr: int isLightTheme
org.jitsi.meet.sdk.JitsiMeetView: void onExternalAPIEvent(java.lang.String,com.facebook.react.bridge.ReadableMap)
org.webrtc.Camera2Session: long access$1700(org.webrtc.Camera2Session)
org.webrtc.HardwareVideoEncoder: java.lang.String KEY_BITRATE_MODE
com.facebook.react.devsupport.DevSupportManagerImpl$4: void run()
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowUniversalAccessFromFileURLs(android.webkit.WebView,boolean)
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.LifecycleEventListener val$listener
org.webrtc.NV21Buffer: int width
okhttp3.internal.http2.Hpack$Reader: int maxDynamicTableByteCount()
org.webrtc.NativeAndroidVideoTrackSource: long nativeAndroidVideoTrackSource
okhttp3.internal.connection.StreamAllocation: java.lang.String toString()
org.jitsi.meet.sdk.R$attr: int listPreferredItemPaddingStart
com.facebook.react.devsupport.BundleDeltaClient$1
okhttp3.internal.http2.Http2Connection$PingRunnable: void execute()
com.horcrux.svg.R$attr: int colorControlActivated
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
org.webrtc.SurfaceTextureHelper: org.webrtc.TimestampAligner timestampAligner
org.jitsi.meet.sdk.R$id: int custom
org.jitsi.meet.sdk.R$attr: int singleChoiceItemLayout
com.facebook.react.devsupport.DisabledDevSupportManager: com.facebook.react.modules.debug.interfaces.DeveloperSettings getDevSettings()
org.webrtc.StatsReport$Value: java.lang.String toString()
org.jitsi.meet.R$string: int abc_searchview_description_voice
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
org.jitsi.meet.R$styleable: int[] GenericDraweeHierarchy
org.jitsi.meet.sdk.R$string: int common_google_play_services_notification_ticker
org.webrtc.EncodedImage: java.nio.ByteBuffer buffer
okhttp3.JavaNetAuthenticator: java.net.InetAddress getConnectToInetAddress(java.net.Proxy,okhttp3.HttpUrl)
org.webrtc.voiceengine.WebRtcAudioUtils: WebRtcAudioUtils()
org.webrtc.Camera1Session: org.webrtc.Histogram camera1StartTimeMsHistogram
org.webrtc.YuvHelper: void nativeI420Rotate(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setY(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
okhttp3.ConnectionSpec: boolean tls
com.dropbox.core.BadResponseException
com.facebook.react.devsupport.JSDevSupport: void onFailure(int,java.lang.String)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: java.lang.String token
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService: int audioDeviceToRouteInt(java.lang.String)
okhttp3.HttpUrl: java.util.List pathSegments()
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: java.lang.String getToken()
org.jitsi.meet.R$styleable: int ActionBar_homeLayout
okhttp3.Cache$CacheResponseBody: java.lang.String contentType
com.horcrux.svg.R$id: int rn_frame_file
okhttp3.internal.cache.DiskLruCache$Editor: void detach()
org.jitsi.meet.sdk.R$raw: int lang_maines
com.horcrux.svg.SvgView: void drawChildren(android.graphics.Canvas)
org.webrtc.RtpParameters$Codec: org.webrtc.MediaStreamTrack$MediaType kind
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_DES_CBC_SHA
com.facebook.react.modules.websocket.WebSocketModule
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA
androidx.fragment.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)
com.google.android.gms.auth.api.signin.internal.GoogleSignInOptionsExtensionParcelable: android.os.Parcelable$Creator CREATOR
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
com.horcrux.svg.R$string: int catalyst_hot_reloading_auto_disable
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
okhttp3.internal.http1.Http1Codec$ChunkedSink: void close()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String getEffectiveTldPlusOne(java.lang.String)
com.facebook.react.views.view.ReactViewManager: int CMD_HOTSPOT_UPDATE
okhttp3.ConnectionPool: int maxIdleConnections
com.facebook.react.devsupport.RedBoxDialog: com.facebook.react.devsupport.RedBoxHandler$ReportCompletedListener mReportCompletedListener
okhttp3.internal.http2.Http2Writer: void connectionPreface()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.facebook.react.views.checkbox.ReactCheckBoxManager: void setOn(com.facebook.react.views.checkbox.ReactCheckBox,boolean)
okhttp3.internal.http2.Http2Connection: java.net.Socket socket
com.facebook.react.views.textinput.ReactEditText: void setStagedInputType(int)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream$InvalidStreamException
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger: android.media.AudioManager audioManager
okhttp3.internal.huc.DelegatingHttpsURLConnection: int getConnectTimeout()
androidx.fragment.app.Fragment: void performLowMemory()
com.horcrux.svg.R$drawable: int abc_ic_star_half_black_16dp
org.webrtc.WrappedNativeI420Buffer: java.nio.ByteBuffer dataU
org.jitsi.meet.sdk.ConnectionService$ConnectionImpl: ConnectionService$ConnectionImpl(org.jitsi.meet.sdk.ConnectionService)
org.jitsi.meet.sdk.R$styleable: int[] LinearLayoutCompat
org.jitsi.meet.sdk.R$attr: int textColorAlertDialogListItem
com.horcrux.svg.R$attr: int roundBottomLeft
org.jitsi.meet.sdk.AudioModeModule: AudioModeModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
org.jitsi.meet.sdk.R$attr: int logoDescription
okhttp3.internal.huc.OkHttpsURLConnection: java.security.cert.Certificate[] getLocalCertificates()
org.jitsi.meet.sdk.R$drawable: int abc_ic_star_half_black_36dp
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder immutable()
org.webrtc.PeerConnection$Observer
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
org.jitsi.meet.R$styleable: int AppCompatTheme_colorAccent
com.horcrux.svg.RenderableViewManager: void setClipRule(com.horcrux.svg.VirtualView,int)
org.webrtc.AndroidVideoDecoder: org.webrtc.SurfaceTextureHelper createSurfaceTextureHelper()
com.google.android.gms.internal.measurement.zzcd$zzb
com.horcrux.svg.R$xml: R$xml()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_CHACHA20_POLY1305_SHA256
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontSize(float)
okhttp3.WebSocketListener: void onOpen(okhttp3.WebSocket,okhttp3.Response)
com.facebook.react.modules.camera.ImageEditingManager: void access$400(android.graphics.Bitmap,java.lang.String,java.io.File)
org.jitsi.meet.R$styleable: int AppCompatTheme_actionModeBackground
com.facebook.react.devsupport.DevSupportManagerImpl: void hideRedboxDialog()
com.facebook.imagepipeline.platform.PreverificationHelper
com.facebook.react.bridge.ReadableNativeArray: ReadableNativeArray(com.facebook.jni.HybridData)
com.rnimmersive.RNImmersiveModule: void onCatalystInstanceDestroy()
com.google.android.gms.internal.measurement.zzc: android.os.IBinder asBinder()
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: long bytesRead
com.facebook.react.modules.camera.ImageEditingManager: java.lang.String NAME
org.jitsi.meet.sdk.R$dimen: int tooltip_precise_anchor_extra_offset
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats
com.facebook.react.modules.image.ImageLoaderModule: void onHostPause()
okhttp3.internal.http2.PushObserver$1: boolean onData(int,okio.BufferedSource,int,boolean)
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Spinner_Underlined
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] values()
com.facebook.react.views.art.ARTRenderableViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.devsupport.DevInternalSettings: java.lang.String PREFS_INSPECTOR_DEBUG_KEY
com.oney.WebRTCModule.WebRTCModule: void peerConnectionRemoveStreamAsync(java.lang.String,int)
com.facebook.react.modules.timepicker.TimePickerDialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.timepicker.TimePickerDialogModule)
com.horcrux.svg.RNSVGRenderableManager: java.lang.String getName()
org.jitsi.meet.sdk.R$id: int search_voice_btn
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.view.accessibility.AccessibilityManager mAccessibilityManager
okhttp3.internal.http2.Http2Stream$FramingSource: void updateConnectionFlowControl(long)
com.facebook.react.views.checkbox.ReactCheckBoxManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.learnium.RNDeviceInfo.RNDeviceModule: void getUsedMemory(com.facebook.react.bridge.Promise)
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.PeerConnectionFactory$Builder setNetworkControllerFactoryFactory(org.webrtc.NetworkControllerFactoryFactory)
org.webrtc.voiceengine.WebRtcAudioManager: boolean aAudio
org.jitsi.meet.R$styleable: int Fragment_android_id
org.webrtc.WrappedNativeI420Buffer: int strideV
com.facebook.react.devsupport.DevSupportManagerImpl$21
com.horcrux.svg.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
org.jitsi.meet.R$interpolator: int fast_out_slow_in
com.facebook.react.views.text.ReactTextView: com.facebook.react.bridge.ReactContext getReactContext()
okhttp3.internal.http2.Http2Stream: int id
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
org.jitsi.meet.sdk.R$styleable: int[] StateListDrawableItem
org.webrtc.GlGenericDrawer: java.lang.String vertexShader
org.jitsi.meet.sdk.R$raw: int lang_languageseo
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Display3
okhttp3.internal.cache2.Relay: okio.ByteString PREFIX_DIRTY
okhttp3.Cache$Entry: int code
org.jitsi.meet.sdk.R$string: int catalyst_debug_nuclide_error
com.facebook.react.views.image.ReactImageManager: void setLoadHandlersRegistered(com.facebook.react.views.image.ReactImageView,boolean)
okhttp3.RequestBody$1
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getRequestMethod()
org.jitsi.meet.R$attr: int closeItemLayout
com.facebook.react.devsupport.DevSupportManagerImpl: void reloadJSInProxyMode()
com.facebook.react.bridge.CatalystInstanceImpl$Builder
com.google.android.gms.internal.measurement.zzcd$zzb: com.google.android.gms.internal.measurement.zzcd$zzb zzf
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Class getShadowNodeClass()
org.webrtc.GlRectDrawer: java.lang.String FRAGMENT_SHADER
com.facebook.react.modules.fresco.FrescoModule: java.lang.String getName()
com.horcrux.svg.R$id: int action_mode_close_button
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
okhttp3.Address: javax.net.SocketFactory socketFactory()
com.facebook.react.views.view.ReactViewGroup: int ARRAY_CAPACITY_INCREMENT
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setChunkedStreamingMode(int)
org.jitsi.meet.sdk.AudioModeModule$3: AudioModeModule$3(org.jitsi.meet.sdk.AudioModeModule,java.lang.String)
org.jitsi.meet.R$style: int Widget_AppCompat_ActionButton_Overflow
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setX(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
org.jitsi.meet.sdk.R$string: int tablist_description
org.jitsi.meet.sdk.R$attr
com.facebook.react.devsupport.DevSupportManagerImpl: boolean mDevLoadingViewVisible
com.facebook.react.views.unimplementedview.ReactUnimplementedView: void setName(java.lang.String)
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
org.jitsi.meet.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
okhttp3.internal.ws.RealWebSocket: int receivedCloseCode
org.jitsi.meet.R$id: int search_close_btn
org.webrtc.VideoTrack: long nativeWrapSink(org.webrtc.VideoSink)
okio.RealBufferedSource: int readIntLe()
com.reactnativecommunity.webview.RNCWebViewModule$MimeType: com.reactnativecommunity.webview.RNCWebViewModule$MimeType valueOf(java.lang.String)
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
org.webrtc.Metrics: void enable()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_ratingBarStyle
okhttp3.EventListener: void connectionReleased(okhttp3.Call,okhttp3.Connection)
okhttp3.internal.cache.DiskLruCache: java.util.regex.Pattern LEGAL_KEY_PATTERN
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
org.jitsi.meet.sdk.log.JitsiMeetLogger: void d(java.lang.Throwable,java.lang.String,java.lang.Object[])
org.webrtc.CameraVideoCapturer$CameraStatistics: java.lang.String TAG
org.webrtc.voiceengine.WebRtcAudioTrack: android.media.AudioTrack access$000(org.webrtc.voiceengine.WebRtcAudioTrack)
okhttp3.internal.Util: int decodeHexDigit(char)
okhttp3.internal.huc.OutputStreamRequestBody
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()
org.jitsi.meet.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
okhttp3.internal.http.HttpHeaders: java.lang.String readToken(okio.Buffer)
org.jitsi.meet.R$attr: int actionModePopupWindowStyle
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMinX(com.horcrux.svg.MarkerView,float)
com.horcrux.svg.R$style: int ClockTimePickerDialog
androidx.lifecycle.ViewModel: ViewModel()
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_ACTIVE
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule getModule()
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_CLEAR_HISTORY
org.jitsi.meet.sdk.R$xml: int rn_dev_preferences
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry mTurboModuleRegistry
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_2
org.jitsi.meet.sdk.R$drawable: int common_google_signin_btn_icon_light_normal_background
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Integer getIceCheckIntervalStrongConnectivity()
org.jitsi.meet.R$styleable: int LoadingImageView_imageAspectRatioAdjust
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_progressBarAutoRotateInterval
com.horcrux.svg.R$attr: int textAllCaps
org.jitsi.meet.sdk.AudioModeModule$1: AudioModeModule$1(org.jitsi.meet.sdk.AudioModeModule)
okio.DeflaterSink: okio.Timeout timeout()
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http1.Http1Codec: okio.Sink newChunkedSink()
okio.Okio$3: void flush()
org.jitsi.meet.R$attr: int alertDialogCenterButtons
org.jitsi.meet.sdk.R$attr: int roundTopEnd
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: ReactHorizontalScrollViewManager()
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)
com.dropbox.core.v2.files.AlphaGetMetadataErrorException
org.webrtc.ContextUtils
okio.Buffer: okio.BufferedSink writeInt(int)
org.webrtc.CameraCapturer: org.webrtc.CameraSession$Events cameraSessionEventsHandler
com.facebook.react.devsupport.DevSupportManagerImpl$25: DevSupportManagerImpl$25(com.facebook.react.devsupport.DevSupportManagerImpl,boolean)
com.dropbox.core.json.JsonReader$FileLoadException$JsonError
com.facebook.react.bridge.CatalystInstance: void initialize()
com.google.android.gms.internal.measurement.zzii: com.google.android.gms.internal.measurement.zzii[] values()
org.webrtc.PeerConnection$TcpCandidatePolicy: org.webrtc.PeerConnection$TcpCandidatePolicy DISABLED
com.facebook.react.devsupport.DevSupportManagerImpl$2
com.facebook.yoga.YogaOverflow
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.OkHttpClient client
okhttp3.Headers: int hashCode()
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_INJECT_JAVASCRIPT
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.Throwable)
okhttp3.OkUrlFactory: OkUrlFactory(okhttp3.OkHttpClient)
okhttp3.Protocol: okhttp3.Protocol[] $VALUES
org.jitsi.meet.sdk.R$attr: int autoSizeTextType
org.jitsi.meet.R$styleable: int AlertDialog_listLayout
com.horcrux.svg.R$style: int Theme_FullScreenDialog
com.horcrux.svg.ClipPathView
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String FRAGMENT_TAG
com.facebook.react.views.scroll.ReactHorizontalScrollView: boolean getRemoveClippedSubviews()
okhttp3.internal.huc.OkHttpsURLConnection: int getContentLength()
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
com.facebook.react.uimanager.LayoutShadowNode: void setHeight(com.facebook.react.bridge.Dynamic)
org.webrtc.Logging: void nativeEnableLogToDebugOutput(int)
okhttp3.internal.huc.OkHttpURLConnection: java.io.OutputStream getOutputStream()
okio.Buffer: byte readByte()
okhttp3.OkHttpClient: okhttp3.Cache cache
org.jitsi.meet.R$layout: int abc_activity_chooser_view
com.horcrux.svg.R$styleable: int CompoundButton_buttonTintMode
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
org.webrtc.VideoEncoderWrapper: org.webrtc.VideoEncoder$Callback createEncoderCallback(long)
com.facebook.react.bridge.CatalystInstanceImpl: void jniSetSourceURL(java.lang.String)
org.jitsi.meet.sdk.PictureInPictureModule: java.lang.String NAME
okhttp3.internal.http2.Huffman$Node: int symbol
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getAffectedRange(int,int)
com.facebook.react.bridge.BaseActivityEventListener: void onActivityResult(int,int,android.content.Intent)
okhttp3.internal.http1.Http1Codec$FixedLengthSink: void write(okio.Buffer,long)
okhttp3.internal.io.FileSystem: void delete(java.io.File)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long)
com.facebook.common.util.TriState: com.facebook.common.util.TriState[] values()
org.jitsi.meet.sdk.R$styleable: int ViewStubCompat_android_inflatedId
com.facebook.react.devsupport.JSDevSupport: int ERROR_CODE_VIEW_NOT_FOUND
androidx.fragment.app.Fragment: java.lang.String getString(int)
okio.AsyncTimeout: void exit(boolean)
okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)
okhttp3.HttpUrl$Builder: int effectivePort()
org.jitsi.meet.sdk.R$styleable: int[] AlertDialog
com.facebook.react.uimanager.ViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.R$dimen: int notification_subtext_size
okhttp3.internal.ws.WebSocketProtocol: int CLOSE_CLIENT_GOING_AWAY
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ActionBar_TabView
org.jitsi.meet.R$drawable: int abc_text_select_handle_middle_mtrl_dark
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundWithOverlayColor
okio.BufferedSource: boolean rangeEquals(long,okio.ByteString)
org.webrtc.PeerConnection$ContinualGatheringPolicy: PeerConnection$ContinualGatheringPolicy(java.lang.String,int)
com.facebook.react.devsupport.DevSupportManagerImpl$3
com.facebook.react.uimanager.ViewGroupManager: void removeView(android.view.ViewGroup,android.view.View)
com.horcrux.svg.SvgViewModule: SvgViewModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode createShadowNodeInstance()
org.jitsi.meet.sdk.R$dimen: int abc_text_size_title_material_toolbar
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeShareDrawable
com.horcrux.svg.R$drawable: int abc_ab_share_pack_mtrl_alpha
com.facebook.react.uimanager.events.ReactEventEmitter: void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap)
org.jitsi.meet.sdk.R$dimen: int highlight_alpha_material_light
org.jitsi.meet.sdk.R$layout: int abc_action_bar_up_container
org.jitsi.meet.R$color: int switch_thumb_disabled_material_light
okhttp3.Response$Builder: okhttp3.Response$Builder priorResponse(okhttp3.Response)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: Http2Connection$ReaderRunnable$1(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],okhttp3.internal.http2.Http2Stream)
org.jitsi.meet.sdk.R$styleable: int[] AppCompatTextView
okhttp3.internal.http.RealResponseBody: long contentLength
org.jitsi.meet.sdk.R$layout: int select_dialog_item_material
com.facebook.react.bridge.LifecycleEventListener: void onHostDestroy()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder secure()
okhttp3.internal.connection.RealConnection: java.lang.String toString()
com.facebook.react.devsupport.DebugOverlayController: boolean hasPermission(android.content.Context,java.lang.String)
org.webrtc.audio.WebRtcAudioRecord: long nativeAudioRecord
com.facebook.react.devsupport.DevSupportManagerImpl$20: void run()
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] mLocalArray
okhttp3.internal.JavaNetHeaders: JavaNetHeaders()
org.jitsi.meet.sdk.R$attr: int drawableEndCompat
com.oney.WebRTCModule.WebRTCModule: void peerConnectionSetConfigurationAsync(com.facebook.react.bridge.ReadableMap,int)
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_Light
org.webrtc.HardwareVideoEncoderFactory: org.webrtc.VideoCodecInfo[] getSupportedCodecs()
org.webrtc.CameraVideoCapturer$CameraSwitchHandler: void onCameraSwitchError(java.lang.String)
androidx.core.app.RemoteActionCompat
org.jitsi.meet.R$style: int Base_Widget_AppCompat_Button_Small
org.jitsi.meet.R$styleable: int[] View
org.jitsi.meet.R$attr: int state_above_anchor
com.horcrux.svg.R$styleable: int AppCompatTheme_editTextColor
org.jitsi.meet.R$dimen: int abc_dialog_corner_radius_material
com.oney.WebRTCModule.WebRTCModule: com.oney.WebRTCModule.GetUserMediaImpl getUserMediaImpl
com.reactnativecommunity.webview.RNCWebViewModule: void setDownloadRequest(android.app.DownloadManager$Request)
org.webrtc.EglBase14Impl: android.opengl.EGLDisplay eglDisplay
com.facebook.react.devsupport.DevSupportManagerImpl$5: java.lang.String val$message
com.facebook.react.devsupport.DevSupportManagerImpl: boolean mIsSamplingProfilerEnabled
com.facebook.react.modules.blob.BlobModule: void initialize()
org.webrtc.FileVideoCapturer: org.webrtc.CapturerObserver capturerObserver
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzp
androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)
org.jitsi.meet.R$styleable: int AppCompatTheme_panelMenuListWidth
okhttp3.Cookie: java.lang.String value()
org.jitsi.meet.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
org.jitsi.meet.sdk.BaseReactView: BaseReactView(android.content.Context)
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Display2
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSide(com.horcrux.svg.TextPathView,java.lang.String)
org.jitsi.meet.R$color: int ripple_material_dark
org.jitsi.meet.R$drawable: int common_google_signin_btn_icon_dark_normal
okhttp3.internal.connection.StreamAllocation: okhttp3.Route route
org.jitsi.meet.R$color: int bright_foreground_disabled_material_light
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeSplitBackground
org.jitsi.meet.sdk.R$color: int material_grey_100
org.jitsi.meet.R$drawable: int abc_text_select_handle_left_mtrl_light
com.facebook.react.views.view.ReactViewGroup: int getBackgroundColor()
org.jitsi.meet.R$id: int accessibility_action_clickable_span
com.horcrux.svg.R$string: int menu_description
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Large
org.webrtc.audio.WebRtcAudioUtils: java.lang.String deviceTypeToString(int)
okhttp3.internal.http2.Http2Connection: void start()
org.jitsi.meet.R$drawable: int images_btn_google_signin_dark_normal
com.facebook.react.devsupport.DevSupportManagerImpl: void onPackagerDevMenuCommand()
okhttp3.internal.cache.DiskLruCache$Entry: DiskLruCache$Entry(okhttp3.internal.cache.DiskLruCache,java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
com.facebook.react.devsupport.DevSupportManagerImpl$8: com.facebook.react.devsupport.DevSupportManagerImpl this$0
com.facebook.react.devsupport.RedBoxDialog$2
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA
org.webrtc.NativeAndroidVideoTrackSource: org.webrtc.VideoProcessor$FrameAdaptationParameters nativeAdaptFrame(long,int,int,int,long)
org.jitsi.meet.sdk.R$drawable: int abc_spinner_textfield_background_material
org.webrtc.SurfaceViewRenderer: void pauseVideo()
com.horcrux.svg.TextProperties$FontStyle: com.horcrux.svg.TextProperties$FontStyle[] values()
okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.horcrux.svg.RenderableViewManager$LineViewManager: void onDropViewInstance(android.view.View)
org.jitsi.meet.sdk.BroadcastAction$Type: org.jitsi.meet.sdk.BroadcastAction$Type TOGGLE_SCREEN_SHARE
com.facebook.react.bridge.JSInstance
org.jitsi.meet.R$raw: int lang_maintr
com.reactnativecommunity.webview.RNCWebViewManager: java.util.Map getCommandsMap()
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_TITLE
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundBottomRight
org.jitsi.meet.sdk.R$raw: int lang_mainro
org.webrtc.audio.VolumeLogger$LogVolumeTask: VolumeLogger$LogVolumeTask(org.webrtc.audio.VolumeLogger,int,int)
org.jitsi.meet.sdk.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
okhttp3.internal.http.StatusLine: int HTTP_TEMP_REDIRECT
okhttp3.Cookie$Builder: boolean persistent
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactTextInputManager: void setMultiline(com.facebook.react.views.textinput.ReactEditText,boolean)
com.horcrux.svg.RenderableViewManager$PatternManager: void setPatternContentUnits(com.horcrux.svg.PatternView,int)
okhttp3.internal.platform.Platform: Platform()
org.webrtc.audio.WebRtcAudioTrack: void logBufferCapacityInFrames()
com.facebook.react.devsupport.JSDevSupport$JSDevSupportModule: void getJSHierarchy(int)
com.facebook.react.views.image.ReactImageManager: com.facebook.react.views.image.ReactImageView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.webrtc.PeerConnection: org.webrtc.RtpTransceiver addTransceiver(org.webrtc.MediaStreamTrack$MediaType)
okhttp3.internal.http2.Http2Reader$Handler: void rstStream(int,okhttp3.internal.http2.ErrorCode)
okhttp3.internal.ws.WebSocketWriter: void writePing(okio.ByteString)
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.RedBoxDialog access$602(com.facebook.react.devsupport.DevSupportManagerImpl,com.facebook.react.devsupport.RedBoxDialog)
com.facebook.react.bridge.BaseJavaModule: java.util.Map getConstants()
org.jitsi.meet.R$attr: int actionBarPopupTheme
okhttp3.internal.connection.RouteSelector: okhttp3.Address address
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService: JitsiMeetOngoingConferenceService()
com.facebook.react.bridge.Dynamic: double asDouble()
androidx.core.app.RemoteActionCompatParcelizer
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAspectRatio(long,float)
org.jitsi.meet.R$id: int text2
org.jitsi.meet.sdk.R$id: int accessibility_label
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(com.facebook.react.views.textinput.ReactEditText)
okhttp3.internal.tls.DistinguishedNameParser: java.lang.String dn
com.horcrux.svg.PatternView: void setHeight(com.facebook.react.bridge.Dynamic)
org.jitsi.meet.sdk.R$styleable: int MenuItem_android_numericShortcut
com.facebook.react.views.textinput.ReactEditText
com.facebook.react.devsupport.DevSupportManagerImpl$16: void onClick(android.content.DialogInterface,int)
com.dropbox.core.RetryException
org.webrtc.GlGenericDrawer: int inPosLocation
org.webrtc.voiceengine.WebRtcAudioUtils: boolean useWebRtcBasedAutomaticGainControl()
com.facebook.react.devsupport.JSDebuggerWebSocketClient: okhttp3.WebSocket mWebSocket
com.facebook.react.views.slider.ReactSlider: int getTotalSteps()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: com.facebook.react.views.drawer.ReactDrawerLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.CacheControl$Builder: boolean noTransform
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_progressBarImageScaleType
org.webrtc.HardwareVideoEncoder: org.webrtc.GlRectDrawer textureDrawer
org.webrtc.Camera2Enumerator: java.util.List getSupportedFormats(android.hardware.camera2.CameraManager,java.lang.String)
org.webrtc.SurfaceViewRenderer: void setEnableHardwareScaler(boolean)
org.jitsi.meet.R$drawable: int abc_cab_background_internal_bg
com.horcrux.svg.R$styleable: int AppCompatImageView_tintMode
okio.HashingSource: HashingSource(okio.Source,java.lang.String)
org.jitsi.meet.R$attr: int showAsAction
org.jitsi.meet.sdk.R$attr: int roundAsCircle
org.webrtc.CameraEnumerator: boolean isFrontFacing(java.lang.String)
org.webrtc.VideoCodecStatus: org.webrtc.VideoCodecStatus[] values()
com.facebook.react.modules.camera.ImageEditingManager: int getDecodeSampleSize(int,int,int,int)
okhttp3.ResponseBody: ResponseBody()
com.dropbox.core.v2.team.GroupDeleteErrorException
okhttp3.internal.ws.WebSocketWriter: boolean isClient
okhttp3.internal.ws.WebSocketWriter$FrameSink: boolean closed
org.webrtc.JavaI420Buffer: java.nio.ByteBuffer getDataV()
com.horcrux.svg.R$styleable: int FontFamilyFont_font
org.jitsi.meet.sdk.ConnectionService: boolean isSamsungDevice()
com.horcrux.svg.LinearGradientView: void setX2(com.facebook.react.bridge.Dynamic)
okhttp3.internal.http.HttpDate: HttpDate()
com.facebook.react.devsupport.DevServerHelper$4: DevServerHelper$4(com.facebook.react.devsupport.DevServerHelper)
okhttp3.internal.URLFilter: void checkURLPermitted(java.net.URL)
org.jitsi.meet.R$attr: int colorError
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ListView_Menu
com.horcrux.svg.MarkerView: void setMarkerHeight(com.facebook.react.bridge.Dynamic)
org.jitsi.meet.R$attr: int dialogCornerRadius
org.jitsi.meet.sdk.R$string: int toolbar_description
org.jitsi.meet.sdk.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
com.facebook.react.views.text.ReactVirtualTextViewManager: com.facebook.react.views.text.ReactVirtualTextShadowNode createShadowNodeInstance()
org.jitsi.meet.R$styleable: int FontFamilyFont_fontVariationSettings
org.webrtc.MediaConstraints$KeyValuePair: int hashCode()
org.webrtc.PeerConnection$ContinualGatheringPolicy: org.webrtc.PeerConnection$ContinualGatheringPolicy[] $VALUES
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.horcrux.svg.R$dimen: int abc_button_inset_horizontal_material
org.jitsi.meet.sdk.R$styleable: int DrawerArrowToggle_barLength
org.jitsi.meet.R$styleable: int MenuItem_android_enabled
com.google.android.gms.common.SignInButton: void setEnabled(boolean)
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator()
com.horcrux.svg.R$dimen: int disabled_alpha_material_light
org.jitsi.meet.sdk.R$dimen: int abc_edit_text_inset_bottom_material
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
org.webrtc.audio.WebRtcAudioEffects: void assertTrue(boolean)
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException$1
okhttp3.internal.http2.Http2Writer: void headers(int,java.util.List)
com.reactnativecommunity.webview.RNCWebViewManager: RNCWebViewManager()
org.webrtc.MediaCodecUtils$1
okhttp3.ResponseBody: long contentLength()
org.webrtc.Priority: int VERY_LOW
org.webrtc.VideoCapturer: void initialize(org.webrtc.SurfaceTextureHelper,android.content.Context,org.webrtc.CapturerObserver)
okhttp3.internal.huc.OkHttpsURLConnection: java.util.Map getRequestProperties()
org.jitsi.meet.R$styleable: int SimpleDraweeView_roundBottomStart
com.horcrux.svg.VirtualView: android.graphics.Path mStrokePath
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator: boolean hasNextKey()
org.jitsi.meet.sdk.R$color: int abc_search_url_text_normal
okhttp3.internal.http2.Hpack$Reader: int maxDynamicTableByteCount
org.webrtc.PeerConnection$SdpSemantics: PeerConnection$SdpSemantics(java.lang.String,int)
org.jitsi.meet.sdk.R$attr: int numericModifiers
org.jitsi.meet.R$id: int showHome
okio.RealBufferedSource$1: java.lang.String toString()
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.NativeModule getModule(java.lang.Class)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType NEW_BACKGROUND
com.horcrux.svg.R$style: int Base_Widget_AppCompat_PopupWindow
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String getName()
okhttp3.internal.http2.Http2Codec: okhttp3.Response$Builder readHttp2HeadersList(okhttp3.Headers,okhttp3.Protocol)
com.facebook.react.bridge.JavaScriptExecutor: JavaScriptExecutor(com.facebook.jni.HybridData)
org.jitsi.meet.R$styleable: int SignInButton_scopeUris
androidx.fragment.app.FragmentActivity: java.lang.String FRAGMENTS_TAG
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteSelector routeSelector
org.webrtc.Metrics
okhttp3.OkHttpClient$Builder: java.net.Proxy proxy
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
okhttp3.Protocol: okhttp3.Protocol HTTP_1_1
okhttp3.internal.http1.Http1Codec: int STATE_WRITING_REQUEST_BODY
org.webrtc.NativeAndroidVideoTrackSource: org.webrtc.VideoProcessor$FrameAdaptationParameters adaptFrame(org.webrtc.VideoFrame)
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_roundTopLeft
org.webrtc.VideoEncoder: long createNativeVideoEncoder()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getCommandsMap()
com.facebook.react.bridge.DynamicFromMap: double asDouble()
com.horcrux.svg.R$attr: int contentInsetStartWithNavigation
org.jitsi.meet.R$string: int common_google_play_services_unknown_issue
org.jitsi.meet.R$styleable: int AppCompatTextHelper_android_textAppearance
com.horcrux.svg.R$attr: int theme
com.facebook.react.bridge.ModuleSpec: java.lang.String mName
com.facebook.hermes.reactexecutor.HermesExecutor: com.facebook.jni.HybridData initHybridDefaultConfig()
okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors()
com.facebook.react.bridge.ReactContextBaseJavaModule
org.webrtc.PeerConnectionFactory: long nativeCreateAudioTrack(long,java.lang.String,long)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSource source
org.webrtc.EglRenderer$EglSurfaceCreation: org.webrtc.EglRenderer this$0
com.horcrux.svg.R$styleable: int[] SwitchCompat
org.webrtc.voiceengine.WebRtcAudioEffects: boolean shouldEnableAec
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String binarySearchBytes(byte[],byte[][],int)
okhttp3.internal.http2.Http2Stream: void receiveFin()
com.horcrux.svg.R$styleable: int AppCompatTheme_spinnerStyle
org.jitsi.meet.R$integer: int google_play_services_version
org.jitsi.meet.R$styleable: int AppCompatTextView_textLocale
org.jitsi.meet.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
org.webrtc.PeerConnection: long getNativePeerConnection()
org.jitsi.meet.sdk.R$drawable: int abc_list_selector_background_transition_holo_light
com.facebook.react.devsupport.RedBoxHandler$ErrorType: com.facebook.react.devsupport.RedBoxHandler$ErrorType[] $VALUES
org.jitsi.meet.sdk.JitsiMeetActivityDelegate: JitsiMeetActivityDelegate()
com.facebook.react.views.art.ARTSurfaceViewShadowNode
okhttp3.internal.huc.OutputStreamRequestBody: long contentLength()
org.webrtc.HardwareVideoEncoder$YuvFormat$2: HardwareVideoEncoder$YuvFormat$2(java.lang.String,int)
org.jitsi.meet.R$color: int foreground_material_light
org.webrtc.SurfaceTextureHelper: org.webrtc.VideoFrame$I420Buffer textureToYuv(org.webrtc.VideoFrame$TextureBuffer)
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration valueOf(java.lang.String)
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ActionBar
org.jitsi.meet.sdk.R$raw: int lang_mainengb
org.webrtc.VideoProcessor$FrameAdaptationParameters: int scaleWidth
org.webrtc.Predicate$2: org.webrtc.Predicate this$0
okhttp3.internal.cache.CacheStrategy: okhttp3.Request networkRequest
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator authenticator
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
org.jitsi.meet.R$attr: int buttonPanelSideLayout
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_checkedTextViewStyle
com.horcrux.svg.ImageView: void setX(com.facebook.react.bridge.Dynamic)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2
org.jitsi.meet.sdk.OngoingConferenceTracker: void onExternalAPIEvent(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.WritableMap: void putNull(java.lang.String)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void onDropViewInstance(android.view.View)
org.webrtc.PeerConnectionFactory: java.lang.String nativeFindFieldTrialsFullName(java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMeetOrSlice(com.horcrux.svg.PatternView,int)
org.webrtc.voiceengine.WebRtcAudioEffects: boolean setNS(boolean)
org.webrtc.EglBase: void detachCurrent()
com.facebook.react.devsupport.DevSupportManagerImpl$18: DevSupportManagerImpl$18(com.facebook.react.devsupport.DevSupportManagerImpl)
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric$2: void onAudioDevicesAdded(android.media.AudioDeviceInfo[])
org.jitsi.meet.R$id: int light
com.horcrux.svg.R$styleable: int ActionBar_homeAsUpIndicator
com.horcrux.svg.R$styleable: int ActionBarLayout_android_layout_gravity
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat
com.facebook.react.bridge.DynamicFromMap
com.horcrux.svg.VirtualView: android.graphics.RectF getClientRect()
org.jitsi.meet.R$attr: int hideOnContentScroll
org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordThread: boolean keepAlive
org.webrtc.voiceengine.WebRtcAudioUtils: void setWebRtcBasedAcousticEchoCanceler(boolean)
org.jitsi.meet.R$attr: int failureImage
org.jitsi.meet.sdk.BaseReactView: org.jitsi.meet.sdk.BaseReactView findViewByExternalAPIScope(java.lang.String)
com.facebook.react.modules.blob.BlobModule: java.lang.String NAME
org.webrtc.NetworkMonitorAutoDetect: org.webrtc.NetworkMonitorAutoDetect$WifiManagerDelegate wifiManagerDelegate
okio.RealBufferedSource: okio.ByteString readByteString(long)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ButtonBar
com.facebook.react.views.art.ARTTextShadowNode: void setAlignment(int)
com.facebook.react.bridge.ContextBaseJavaModule: android.content.Context getContext()
org.jitsi.meet.R$styleable: int SearchView_closeIcon
org.jitsi.meet.R$anim: int fragment_fast_out_extra_slow_in
org.webrtc.Camera2Session: void stopInternal()
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_DYNAMIC
com.facebook.react.bridge.PromiseImpl
org.webrtc.Camera1Session: org.webrtc.CameraEnumerationAndroid$CaptureFormat findClosestCaptureFormat(android.hardware.Camera$Parameters,int,int,int)
org.webrtc.VideoDecoder: java.lang.String getImplementationName()
com.facebook.react.views.textinput.ReactTextInputManager: void setFontStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_alertDialogCenterButtons
okhttp3.OkHttpClient$Builder: int writeTimeout
com.horcrux.svg.R$id: int activity_chooser_view_content
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
org.webrtc.EglBase14Impl: void detachCurrent()
org.jitsi.meet.sdk.R$styleable: int ViewStubCompat_android_layout
com.learnium.RNDeviceInfo.RNDeviceModule: void hasSystemFeature(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.http2.Settings: void clear()
com.facebook.react.modules.statusbar.StatusBarModule: void setColor(int,boolean)
com.reactnativecommunity.webview.RNCWebViewFileProvider
org.webrtc.Camera1Session: int cameraId
org.jitsi.meet.sdk.R$attr: int elevation
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isReduceMotionEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler: DefaultNativeModuleCallExceptionHandler()
org.jitsi.meet.sdk.R$id: int home
org.jitsi.meet.sdk.R$drawable: int abc_btn_colored_material
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundBottomEnd
okio.RealBufferedSource: int read(byte[])
com.facebook.react.bridge.JavaMethodWrapper$10: JavaMethodWrapper$10()
okio.Util: void sneakyThrow2(java.lang.Throwable)
org.jitsi.meet.sdk.R$style: int Theme_FullScreenDialogAnimatedFade
org.webrtc.Camera1Capturer: void dispose()
com.facebook.react.modules.camera.ImageEditingManager: java.io.File createTempFile(android.content.Context,java.lang.String)
org.webrtc.CameraSession$CreateSessionCallback: void onDone(org.webrtc.CameraSession)
org.jitsi.meet.sdk.R$styleable: int MenuGroup_android_orderInCategory
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,int)
org.webrtc.NetworkMonitorAutoDetect: org.webrtc.NetworkChangeDetector$ConnectionType getUnderlyingConnectionTypeForVpn(org.webrtc.NetworkMonitorAutoDetect$NetworkState)
org.webrtc.HardwareVideoEncoder: int adjustedBitrate
org.jitsi.meet.sdk.R$dimen: int abc_list_item_padding_horizontal_material
org.jitsi.meet.sdk.DropboxModule: java.lang.String NAME
com.facebook.react.bridge.Promise: void reject(java.lang.Throwable)
okio.SegmentedByteString: okio.ByteString toAsciiLowercase()
com.facebook.react.bridge.NativeModule: java.lang.String getName()
okhttp3.ConnectionPool: long keepAliveDurationNs
com.google.firebase.installations.FirebaseInstallationsException
org.webrtc.HardwareVideoEncoder: org.webrtc.VideoEncoder$Callback callback
okio.Util: boolean arrayRangeEquals(byte[],int,byte[],int,int)
com.horcrux.svg.RenderableViewManager: void setStrokeDashoffset(com.horcrux.svg.RenderableView,float)
okhttp3.internal.http2.Header: okio.ByteString name
com.facebook.react.bridge.ReadableArray: java.util.ArrayList toArrayList()
org.webrtc.ScreenCapturerAndroid: android.media.projection.MediaProjection access$302(org.webrtc.ScreenCapturerAndroid,android.media.projection.MediaProjection)
okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)
okhttp3.internal.http2.Header: okio.ByteString PSEUDO_PREFIX
org.jitsi.meet.sdk.ConnectionService$ConnectionImpl: org.jitsi.meet.sdk.ConnectionService this$0
org.jitsi.meet.R$id: int rn_redbox_line_separator
org.jitsi.meet.sdk.R$attr: int panelMenuListWidth
okhttp3.Response: okhttp3.Response cacheResponse()
okhttp3.internal.http.HttpHeaders: HttpHeaders()
com.horcrux.svg.R$layout: int notification_action
org.webrtc.RTCStats: java.lang.String toString()
com.horcrux.svg.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
okhttp3.HttpUrl: java.util.List queryNamesAndValues
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap)
okhttp3.internal.Util: java.lang.String format(java.lang.String,java.lang.Object[])
org.webrtc.PeerConnection$ContinualGatheringPolicy
okhttp3.internal.http.RetryAndFollowUpInterceptor: RetryAndFollowUpInterceptor(okhttp3.OkHttpClient,boolean)
androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
org.jitsi.meet.R$attr: int layout
org.webrtc.CameraCapturer$8: CameraCapturer$8(org.webrtc.CameraCapturer,org.webrtc.CameraVideoCapturer$CameraSwitchHandler,java.lang.String)
org.jitsi.meet.sdk.BroadcastEvent$Type: java.lang.String CONFERENCE_JOINED_NAME
com.horcrux.svg.R$style: int Platform_ThemeOverlay_AppCompat_Light
okio.GzipSource: void updateCrc(okio.Buffer,long,long)
org.jitsi.meet.R$dimen: int abc_search_view_preferred_width
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
com.facebook.react.devsupport.RedBoxDialog$StackAdapter: boolean areAllItemsEnabled()
com.google.android.gms.internal.measurement.zzcd$zzg: int zzaa
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
org.jitsi.meet.R$attr: int windowFixedWidthMinor
okhttp3.Cookie: boolean secure
org.webrtc.Camera1Session: long constructionTimeNs
com.facebook.react.bridge.DynamicFromObject: java.lang.Object mObject
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_128_CBC_SHA
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String getName()
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Body1
org.webrtc.SoftwareVideoEncoderFactory: SoftwareVideoEncoderFactory()
com.horcrux.svg.R$attr: int indeterminateProgressStyle
okhttp3.Protocol: okhttp3.Protocol SPDY_3
org.webrtc.SurfaceTextureHelper: SurfaceTextureHelper(org.webrtc.EglBase$Context,android.os.Handler,boolean,org.webrtc.YuvConverter,org.webrtc.SurfaceTextureHelper$FrameRefMonitor,org.webrtc.SurfaceTextureHelper$1)
org.jitsi.meet.R$color: int tooltip_background_dark
org.webrtc.voiceengine.WebRtcAudioRecord: void setOnAudioSamplesReady(org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordSamplesReadyCallback)
com.facebook.react.bridge.ReadableType: ReadableType(java.lang.String,int)
com.facebook.react.devsupport.WebsocketJavaScriptExecutor: void setGlobalVariable(java.lang.String,java.lang.String)
okhttp3.internal.tls.OkHostnameVerifier: java.util.List allSubjectAltNames(java.security.cert.X509Certificate)
com.zmxv.RNSound.RNSoundModule: void onAudioFocusChange(int)
org.webrtc.VideoFrameDrawer$YuvUploader: int[] getYuvTextures()
org.webrtc.HardwareVideoEncoder: int width
org.jitsi.meet.R$dimen: int abc_select_dialog_padding_start_material
com.facebook.react.devsupport.DisabledDevSupportManager: void registerErrorCustomizer(com.facebook.react.devsupport.interfaces.ErrorCustomizer)
org.jitsi.meet.sdk.R$styleable: int MenuItem_android_titleCondensed
com.facebook.react.bridge.JavaOnlyArray: void pushBoolean(boolean)
com.facebook.react.bridge.JSIModuleSpec: com.facebook.react.bridge.JSIModuleProvider getJSIModuleProvider()
com.horcrux.svg.RenderableViewManager: void setDisplay(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.bridge.CallbackImpl: int mCallbackId
org.jitsi.meet.R$color: int button_material_dark
com.facebook.react.views.art.ARTSurfaceViewManager: void setBackgroundColor(android.view.View,int)
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: boolean inputExhausted
androidx.appcompat.widget.ActivityChooserView$InnerLayout
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_Light_PopupMenu
org.webrtc.EglRenderer: void createEglSurface(android.graphics.SurfaceTexture)
org.jitsi.meet.R$drawable: int abc_btn_radio_material_anim
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
com.calendarevents.CalendarEvents: void createRemindersForEvent(android.content.ContentResolver,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.BaseViewManager: void setScaleY(android.view.View,float)
org.webrtc.NV12Buffer: org.webrtc.VideoFrame$I420Buffer toI420()
okhttp3.OkHttpClient: java.util.List interceptors
org.jitsi.meet.sdk.R$raw: int lang_mainfa
com.horcrux.svg.R$drawable: int abc_ic_search_api_material
com.horcrux.svg.R$styleable: int TextAppearance_android_fontFamily
com.facebook.react.modules.websocket.WebSocketModule: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
org.webrtc.VideoEncoder$Settings: int maxFramerate
com.facebook.react.devsupport.RedBoxDialog: android.widget.ProgressBar access$200(com.facebook.react.devsupport.RedBoxDialog)
com.facebook.react.views.text.ReactTextViewManager
com.facebook.react.devsupport.DevSupportManagerImpl$8: void onOptionSelected()
org.jitsi.meet.R$styleable: int AnimatedStateListDrawableCompat_android_visible
org.jitsi.meet.sdk.AudioModeModule$3: org.jitsi.meet.sdk.AudioModeModule this$0
org.webrtc.VideoDecoder: org.webrtc.VideoCodecStatus release()
okio.GzipSink: java.util.zip.Deflater deflater
org.jitsi.meet.sdk.R$attr: int panelBackground
org.jitsi.meet.R$styleable: int[] Fragment
okhttp3.internal.ws.RealWebSocket$PingRunnable
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_buttonStyleSmall
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier
com.horcrux.svg.R$attr: int dialogCornerRadius
com.facebook.react.uimanager.LayoutShadowNode: void setAlignContent(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String access$200()
org.webrtc.MediaStream: long getNativeMediaStream()
okio.BufferedSink: okio.BufferedSink write(okio.ByteString)
com.horcrux.svg.R$styleable: int Toolbar_android_gravity
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Medium
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
org.webrtc.RtpReceiver$Observer
org.jitsi.meet.sdk.R$attr: int arrowShaftLength
androidx.fragment.app.Fragment: void onAttach(android.content.Context)
org.jitsi.meet.sdk.JitsiMeetActivity: void access$000(org.jitsi.meet.sdk.JitsiMeetActivity,android.content.Intent)
org.jitsi.meet.sdk.R$styleable: int CompoundButton_buttonTint
com.facebook.react.devsupport.DevSupportManagerImpl$1: com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatus getBundleStatus()
com.horcrux.svg.R$style: int Base_Animation_AppCompat_DropDownUp
com.facebook.react.modules.storage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext)
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Widget_Button
org.jitsi.meet.sdk.R$attr: int track
org.jitsi.meet.R$raw: int node_modules_i18nisocountries_langs_en
org.jitsi.meet.sdk.R$styleable: int[] Fragment
org.webrtc.MediaStreamTrack: long getNativeMediaStreamTrack()
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
com.horcrux.svg.R$string: int menubar_description
org.jitsi.meet.R$style: int Theme_FullScreenDialogAnimatedFade
org.jitsi.meet.R$string: int catalyst_perf_monitor
org.webrtc.DefaultVideoDecoderFactory: DefaultVideoDecoderFactory(org.webrtc.EglBase$Context)
com.horcrux.svg.R$dimen: int notification_content_margin_start
com.facebook.react.bridge.CatalystInstanceImpl$5: CatalystInstanceImpl$5(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.internal.cache.DiskLruCache: boolean hasJournalErrors
org.webrtc.NativeCapturerObserver: org.webrtc.NativeAndroidVideoTrackSource nativeAndroidVideoTrackSource
okhttp3.internal.http2.Header: Header(java.lang.String,java.lang.String)
org.jitsi.meet.sdk.R$string: int catalyst_sample_profiler_disable
okhttp3.Request$Builder: okhttp3.RequestBody body
org.webrtc.RtpSender: java.lang.String id()
org.jitsi.meet.sdk.R$styleable: int Toolbar_menu
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder setFeatureFlag(java.lang.String,boolean)
com.horcrux.svg.RenderableView: java.util.ArrayList mOriginProperties
org.jitsi.meet.R$layout: int custom_dialog
org.jitsi.meet.R$styleable: int SimpleDraweeView_roundBottomEnd
org.webrtc.EglBase: int surfaceHeight()
org.webrtc.RtpTransceiver: boolean nativeStopped(long)
com.horcrux.svg.R$string: int abc_action_bar_up_description
org.jitsi.meet.sdk.BroadcastAction$Type: org.jitsi.meet.sdk.BroadcastAction$Type access$000(java.lang.String)
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
org.webrtc.VideoCodecStatus: org.webrtc.VideoCodecStatus ERR_PARAMETER
com.corbt.keepawake.KCKeepAwake
okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)
com.horcrux.svg.R$styleable: int ActivityChooserView_initialActivityCount
com.facebook.react.devsupport.DevSupportManagerImpl: java.util.Map customCommandHandlers()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: CatalystInstanceImpl$Builder()
com.horcrux.svg.R$id: int bottom
org.webrtc.CameraVideoCapturer$CameraEventsHandler: void onCameraOpening(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.Class getShadowNodeClass()
com.learnium.RNDeviceInfo.RNDeviceModule: void isEmulator(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setHref(com.horcrux.svg.TextPathView,java.lang.String)
com.facebook.react.modules.debug.AnimationsDebugModule: java.lang.String NAME
okhttp3.ConnectionSpec: ConnectionSpec(okhttp3.ConnectionSpec$Builder)
org.webrtc.PeerConnection$RTCConfiguration: int getAudioJitterBufferMaxPackets()
org.jitsi.meet.sdk.R$styleable: int AppCompatTextHelper_android_drawableLeft
com.facebook.react.devsupport.FpsView: com.facebook.react.modules.debug.FpsDebugFrameCallback mFrameCallback
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarSize
org.jitsi.meet.sdk.net.NAT64AddrInfo: java.lang.String getIPv6Address(java.lang.String)
org.webrtc.voiceengine.WebRtcAudioManager: int getMinOutputFrameSize(int,int)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostPause()
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$Builder setUseStereoOutput(boolean)
okio.Buffer: okio.ByteString snapshot()
okhttp3.Address: okhttp3.Dns dns()
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskContentUnits(com.horcrux.svg.MaskView,int)
com.facebook.react.bridge.WritableMap: void putBoolean(java.lang.String,boolean)
okhttp3.internal.ws.WebSocketWriter: okio.BufferedSink sink
okhttp3.Cache: void trackConditionalCacheHit()
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Body1
org.webrtc.NativeLibrary: boolean libraryLoaded
okhttp3.internal.http2.Header
okhttp3.internal.http2.Http2Reader: void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
org.webrtc.Camera1Session
com.facebook.react.devsupport.DevSupportManagerImpl$7
org.jitsi.meet.sdk.R$interpolator: int btn_radio_to_on_mtrl_animation_interpolator_0
com.facebook.react.views.textinput.ReactEditText: void setMostRecentEventCount(int)
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorCallbackFuture: java.lang.Throwable mCause
org.webrtc.NetworkMonitorAutoDetect$SimpleNetworkCallback: void onLost(android.net.Network)
com.facebook.react.devsupport.DevServerHelper$4: java.lang.Object doInBackground(java.lang.Object[])
org.jitsi.meet.sdk.R$style
org.jitsi.meet.sdk.R$layout: int abc_action_bar_title_item
com.facebook.react.devsupport.DevSupportManagerImpl$11: DevSupportManagerImpl$11(com.facebook.react.devsupport.DevSupportManagerImpl)
okhttp3.RequestBody: okhttp3.MediaType contentType()
org.jitsi.meet.sdk.R$layout: int abc_list_menu_item_radio
org.jitsi.meet.sdk.AudioModeModule: void access$200(org.jitsi.meet.sdk.AudioModeModule)
org.jitsi.meet.sdk.R$drawable: int common_google_signin_btn_icon_light
org.jitsi.meet.sdk.R$attr: int failureImage
org.webrtc.VideoFrameDrawer: android.graphics.Point renderSize
com.horcrux.svg.R$attr: int colorControlNormal
com.horcrux.svg.UseView: void setY(com.facebook.react.bridge.Dynamic)
okio.GzipSource: void close()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setFixedLengthStreamingMode(int)
org.webrtc.GlGenericDrawer: int inTcLocation
org.webrtc.CameraCapturer: org.webrtc.CameraSession$CreateSessionCallback access$1900(org.webrtc.CameraCapturer)
com.reactnativecommunity.netinfo.NetInfoModule: java.lang.String NAME
org.webrtc.MediaCodecUtils: boolean codecSupportsType(android.media.MediaCodecInfo,org.webrtc.VideoCodecMimeType)
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Tooltip
com.facebook.react.bridge.queue.NativeRunnableDeprecated: void run()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
org.jitsi.meet.R$anim: int abc_tooltip_enter
com.facebook.react.devsupport.DevSupportManagerImpl$10
com.facebook.jni.MapIteratorHelper
com.google.android.gms.measurement.internal.zzkw: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMBER_PAD
org.webrtc.SessionDescription$Type: org.webrtc.SessionDescription$Type ROLLBACK
org.webrtc.MediaStreamTrack: long nativeTrack
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableArray asArray()
okio.ForwardingTimeout: boolean hasDeadline()
org.jitsi.meet.sdk.AudioModeModule$2: AudioModeModule$2(org.jitsi.meet.sdk.AudioModeModule)
org.webrtc.VideoEncoder$ResolutionBitrateLimits
com.facebook.react.devsupport.RedBoxHandler$ErrorType
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_START
org.jitsi.meet.R$style: int Base_V28_Theme_AppCompat
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
org.webrtc.EglRenderer: void logStatistics()
com.facebook.react.bridge.JSBundleLoader$3: JSBundleLoader$3(java.lang.String,java.lang.String)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,com.facebook.react.bridge.WritableMap)
com.facebook.react.bridge.JSIModuleRegistry: void notifyJSInstanceDestroy()
okio.Buffer: java.util.List segmentSizes()
org.webrtc.RtpReceiver: org.webrtc.RtpParameters getParameters()
org.jitsi.meet.R$string: int abc_menu_delete_shortcut_label
org.webrtc.EglRenderer$1
org.jitsi.meet.sdk.R$dimen: int notification_big_circle_margin
com.facebook.react.devsupport.BundleDeltaClient: boolean canHandle(com.facebook.react.devsupport.BundleDeltaClient$ClientType)
com.google.android.gms.internal.measurement.zzci$zzb: int zzd
androidx.fragment.app.Fragment: boolean mMenuVisible
com.facebook.react.fabric.Binding: void startSurface(int,java.lang.String,com.facebook.react.bridge.NativeMap)
com.horcrux.svg.R$style: int Platform_Widget_AppCompat_Spinner
com.horcrux.svg.RNSVGMarkerType: com.horcrux.svg.RNSVGMarkerType[] values()
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager getNodesManager()
org.webrtc.NetworkMonitorAutoDetect: org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate connectivityManagerDelegate
androidx.fragment.app.Fragment: android.os.Bundle mArguments
com.facebook.react.modules.core.Timing: java.lang.String getName()
org.webrtc.StatsReport$Value: java.lang.String name
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
org.webrtc.NV12Buffer: int getWidth()
org.jitsi.meet.sdk.log.JitsiMeetBaseLogHandler: java.lang.String getDefaultTag()
com.horcrux.svg.R$dimen: int highlight_alpha_material_dark
org.webrtc.LibvpxVp9Decoder: boolean nativeIsSupported()
com.facebook.react.views.view.ReactViewManager: int getChildCount(android.view.ViewGroup)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.views.view.ReactViewManager: void setFocusable(com.facebook.react.views.view.ReactViewGroup,boolean)
com.facebook.react.views.text.ReactTextView
com.facebook.react.views.view.ReactViewGroup: void requestLayout()
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_tooltipForegroundColor
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextDecorationLine(java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder pingInterval(java.time.Duration)
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec COMPATIBLE_TLS
org.jitsi.meet.sdk.R$id: int line3
com.horcrux.svg.RenderableViewManager$UseViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
org.jitsi.meet.R$styleable: int AppCompatTextHelper_android_drawableRight
com.google.firebase.crashlytics.CrashlyticsRegistrar
com.horcrux.svg.SvgViewManager: void runWhenViewIsAvailable(int,java.lang.Runnable)
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_TOP_KEY
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadMessage(okio.ByteString)
org.webrtc.SessionDescription: java.lang.String getTypeInCanonicalForm()
org.jitsi.meet.sdk.R$styleable: int ViewBackgroundHelper_android_background
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean access$000(com.reactnativecommunity.asyncstorage.AsyncStorageModule)
org.jitsi.meet.R$attr: int backgroundStacked
com.facebook.react.bridge.CatalystInstance: void registerSegment(int,java.lang.String)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: android.os.Bundle featureFlags
com.facebook.react.devsupport.DevSupportManagerImpl$12
com.horcrux.svg.R$attr: int dropDownListViewStyle
org.jitsi.meet.sdk.R$id: int centerCrop
org.jitsi.meet.R$attr: int paddingTopNoTitle
okhttp3.internal.http2.Hpack$Reader: void readIndexedHeader(int)
com.facebook.drawee.view.SimpleDraweeView: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getControllerBuilder()
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String REACT_CLASS
org.webrtc.HardwareVideoEncoder: java.lang.Thread outputThread
org.jitsi.meet.R$styleable: int PopupWindow_overlapAnchor
com.facebook.react.devsupport.InspectorPackagerConnection$1: java.lang.String val$pageId
com.facebook.react.devsupport.WindowOverlayCompat: int TYPE_APPLICATION_OVERLAY
okhttp3.FormBody$Builder: okhttp3.FormBody build()
org.jitsi.meet.R$anim: int abc_fade_in
org.webrtc.audio.WebRtcAudioTrack: long access$400(org.webrtc.audio.WebRtcAudioTrack)
org.webrtc.PeerConnection$AdapterType: org.webrtc.PeerConnection$AdapterType VPN
org.jitsi.meet.R$styleable: int[] ListPopupWindow
okhttp3.internal.JavaNetHeaders: java.util.Map toMultimap(okhttp3.Headers,java.lang.String)
org.webrtc.NetworkMonitorAutoDetect: org.webrtc.NetworkChangeDetector$ConnectionType getConnectionType(org.webrtc.NetworkMonitorAutoDetect$NetworkState)
org.webrtc.SurfaceViewRenderer: int surfaceWidth
okhttp3.internal.connection.RealConnection: boolean supportsUrl(okhttp3.HttpUrl)
okhttp3.CertificatePinner$Pin
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getCipherSuite()
com.google.android.gms.internal.measurement.zzcd$zzb: com.google.android.gms.internal.measurement.zzjp zzg
com.facebook.react.bridge.ModuleHolder: java.lang.String mName
org.jitsi.meet.R$color: int material_blue_grey_900
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String getHeaderField(int)
co.apptailor.googlesignin.RNGoogleSigninModule: java.lang.String PLAY_SERVICES_NOT_AVAILABLE
androidx.fragment.app.Fragment: void startPostponedEnterTransition()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
org.webrtc.Histogram: long nativeCreateCounts(java.lang.String,int,int,int)
com.facebook.react.bridge.CxxModuleWrapperBase: void onCatalystInstanceDestroy()
org.webrtc.Camera1Session: void stopInternal()
org.webrtc.DynamicBitrateAdjuster: int BITRATE_ADJUSTMENT_STEPS
org.webrtc.voiceengine.WebRtcAudioRecord: android.media.AudioRecord audioRecord
org.jitsi.meet.sdk.R$dimen: int tooltip_vertical_padding
org.webrtc.AndroidVideoDecoder$FrameInfo: long decodeStartTimeMs
com.facebook.react.modules.timepicker.TimePickerDialogModule
com.facebook.react.views.text.ReactTextAnchorViewManager: ReactTextAnchorViewManager()
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setWidth(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.cache.DiskLruCache: java.io.File journalFileBackup
org.jitsi.meet.R$styleable: int AppCompatTheme_actionDropDownStyle
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: okhttp3.OkHttpClient mHttpClient
org.jitsi.meet.sdk.R$styleable: int TextAppearance_android_shadowRadius
okio.ByteString: okio.ByteString substring(int)
org.webrtc.Camera2Session: boolean access$1900(org.webrtc.Camera2Session)
okhttp3.internal.http2.Http2Codec: void writeRequestHeaders(okhttp3.Request)
okhttp3.Dispatcher: java.lang.Runnable idleCallback
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
org.jitsi.meet.sdk.JitsiMeetActivityDelegate$1: java.lang.String[] val$permissions
org.jitsi.meet.R$attr: int track
okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.Cache$Entry: okhttp3.Protocol protocol
org.webrtc.VideoCodecMimeType: org.webrtc.VideoCodecMimeType H264
org.webrtc.voiceengine.WebRtcAudioRecord: void reportWebRtcAudioRecordStartError(org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode,java.lang.String)
com.facebook.react.fabric.ReactNativeConfig: boolean getBool(java.lang.String)
org.webrtc.audio.WebRtcAudioTrack: int getStreamVolume()
com.horcrux.svg.R$style: int Theme_AppCompat_CompactMenu
androidx.fragment.app.Fragment: void setEnterTransition(java.lang.Object)
org.webrtc.voiceengine.WebRtcAudioRecord: org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordSamplesReadyCallback audioSamplesReadyCallback
com.facebook.react.views.textinput.ReactTextInputManager: void setAutofillHints(com.facebook.react.views.textinput.ReactEditText,java.lang.String[])
com.horcrux.svg.R$id: int normal
org.webrtc.PeerConnection$AdapterType: org.webrtc.PeerConnection$AdapterType CELLULAR_5G
okhttp3.CacheControl: int maxAgeSeconds
org.webrtc.PeerConnection$CandidateNetworkPolicy: org.webrtc.PeerConnection$CandidateNetworkPolicy LOW_COST
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: java.lang.String access$402(org.jitsi.meet.sdk.JitsiMeetConferenceOptions,java.lang.String)
okhttp3.Response: void close()
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2: boolean access$200(com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2)
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundingBorderColor
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2: boolean didSendResult
org.webrtc.EglBase14Impl: void swapBuffers()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ScheduledExecutorService access$200(okhttp3.internal.http2.Http2Connection)
com.facebook.react.devsupport.RedBoxDialog$OpenStackFrameTask
org.jitsi.meet.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
com.facebook.react.devsupport.DevSupportManagerImpl$24: void onFailure(java.lang.Exception)
com.horcrux.svg.R$attr: int titleMarginTop
com.facebook.react.bridge.JavaMethodWrapper: void processArguments()
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: java.lang.Object x509TrustManagerExtensions
com.facebook.react.bridge.JavaModuleWrapper
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setHeight(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
okio.Buffer: okio.Segment head
com.horcrux.svg.R$drawable: int abc_list_divider_mtrl_alpha
org.jitsi.meet.MainActivity$1: MainActivity$1(org.jitsi.meet.MainActivity)
com.facebook.react.devsupport.interfaces.DevSupportManager: void stopInspector()
org.jitsi.meet.sdk.R$drawable: int tooltip_frame_light
org.jitsi.meet.R$id: int home
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
okhttp3.internal.Util: java.util.regex.Pattern VERIFY_AS_IP_ADDRESS
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mJSQueueThreadSpec
com.facebook.react.modules.camera.ImageEditingManager: void cropImage(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
org.webrtc.PeerConnection$IceTransportsType: org.webrtc.PeerConnection$IceTransportsType RELAY
androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)
org.jitsi.meet.sdk.R$layout: int launch_screen
org.jitsi.meet.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
org.jitsi.meet.sdk.R$string: int abc_menu_enter_shortcut_label
org.jitsi.meet.R$layout: int abc_action_bar_title_item
com.facebook.react.devsupport.interfaces.DevSupportManager
org.webrtc.SurfaceViewRenderer: org.webrtc.SurfaceEglRenderer eglRenderer
org.jitsi.meet.sdk.R$raw: int lang_languagesnl
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeStyle
org.jitsi.meet.sdk.BroadcastEvent$Type: org.jitsi.meet.sdk.BroadcastEvent$Type[] values()
org.jitsi.meet.sdk.R$styleable: int AlertDialog_showTitle
org.jitsi.meet.sdk.R$styleable: int DrawerArrowToggle_color
com.horcrux.svg.R$styleable: int[] GenericDraweeHierarchy
com.facebook.react.devsupport.RedBoxHandler$ErrorType: com.facebook.react.devsupport.RedBoxHandler$ErrorType[] values()
com.facebook.react.views.checkbox.ReactCheckBoxManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.checkbox.ReactCheckBox)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.horcrux.svg.RenderableView: void setFill(com.facebook.react.bridge.Dynamic)
org.webrtc.VideoFileRenderer: int outputFileWidth
co.apptailor.googlesignin.RNGoogleSigninButtonViewManager
org.webrtc.SurfaceTextureHelper: void forceFrame()
okhttp3.Request$Builder: okhttp3.Request$Builder get()
com.facebook.react.devsupport.DevSupportManagerImpl: void access$1400(com.facebook.react.devsupport.DevSupportManagerImpl)
okhttp3.internal.http2.Http2Writer: okio.BufferedSink sink
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.TurnCustomizer getTurnCustomizer()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar)
org.jitsi.meet.sdk.R$attr: int actionModeSelectAllDrawable
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: CatalystInstanceImpl$BridgeCallback(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.devsupport.DevSupportManagerImpl: void access$500(com.facebook.react.devsupport.DevSupportManagerImpl,java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[],int,com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType)
okhttp3.internal.Version: Version()
org.webrtc.RtpParameters$Rtcp: RtpParameters$Rtcp(java.lang.String,boolean)
org.webrtc.MediaCodecWrapper: int dequeueInputBuffer(long)
org.webrtc.VideoCapturer: boolean isScreencast()
org.jitsi.meet.R$style: int Base_V22_Theme_AppCompat
okhttp3.internal.ws.RealWebSocket: java.lang.String key
org.webrtc.audio.WebRtcAudioRecord: java.util.concurrent.ScheduledExecutorService executor
org.webrtc.PeerConnection$PeerConnectionState: org.webrtc.PeerConnection$PeerConnectionState[] values()
org.webrtc.PeerConnectionFactory$InitializationOptions: PeerConnectionFactory$InitializationOptions(android.content.Context,java.lang.String,boolean,org.webrtc.NativeLibraryLoader,java.lang.String,org.webrtc.Loggable,org.webrtc.Logging$Severity,org.webrtc.PeerConnectionFactory$1)
org.jitsi.meet.sdk.ParticipantsService$ParticipantsInfoCallback: void onReceived(java.util.List)
com.facebook.react.bridge.NativeArray
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzan
co.apptailor.googlesignin.RNGoogleSigninModule
org.webrtc.CameraCapturer: java.lang.String access$1502(org.webrtc.CameraCapturer,java.lang.String)
androidx.core.graphics.drawable.IconCompatParcelizer
org.webrtc.NativeCapturerObserver: void onCapturerStopped()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2: void execute()
org.webrtc.RtpParameters: java.util.List getCodecs()
org.webrtc.NetworkChangeDetector$ConnectionType
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
org.webrtc.Camera2Session: int access$2100(org.webrtc.Camera2Session)
com.facebook.react.devsupport.DevSupportManagerImpl: int mLastErrorCookie
org.jitsi.meet.R$styleable: int[] DrawerArrowToggle
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService: void abort(android.content.Context)
com.google.android.gms.internal.measurement.zzbv$zzf: int zzc
com.facebook.react.views.checkbox.ReactCheckBoxManager: ReactCheckBoxManager()
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()
org.jitsi.meet.sdk.R$layout: int abc_select_dialog_material
okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)
okio.ByteString: boolean startsWith(byte[])
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: android.os.Bundle asProps()
org.jitsi.meet.sdk.R$raw: int node_modules_csstree_node_modules_mdndata_css_properties
com.horcrux.svg.RenderableView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzau
com.facebook.yoga.YogaDimension
com.horcrux.svg.R$attr: int customNavigationLayout
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean mShuttingDown
org.webrtc.SurfaceViewRenderer: SurfaceViewRenderer(android.content.Context)
com.horcrux.svg.RenderableViewManager: void setFillRule(com.horcrux.svg.RenderableView,int)
com.horcrux.svg.R$string: int rn_tab_description
okhttp3.MultipartBody: okhttp3.MediaType MIXED
org.webrtc.ScreenCapturerAndroid: android.media.projection.MediaProjection$Callback access$400(org.webrtc.ScreenCapturerAndroid)
org.jitsi.meet.R$color: int abc_decor_view_status_guard_light
org.jitsi.meet.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
org.jitsi.meet.R$styleable: int ActionBar_contentInsetStartWithNavigation
org.webrtc.PeerConnection$RTCConfiguration: boolean surfaceIceCandidatesOnIceTransportTypeChanged
com.facebook.react.modules.core.Timing: void setChoreographerCallback()
com.oney.WebRTCModule.WebRTCModule: void peerConnectionInit(com.facebook.react.bridge.ReadableMap,int)
com.facebook.react.views.viewpager.ReactViewPagerManager: java.lang.String REACT_CLASS
org.jitsi.meet.sdk.R$style: int Animation_AppCompat_DropDownUp
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.View,java.lang.Object)
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector instance()
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: void setY(com.horcrux.svg.ForeignObjectView,com.facebook.react.bridge.Dynamic)
org.webrtc.NetworkMonitor: void access$200(org.webrtc.NetworkMonitor,org.webrtc.NetworkChangeDetector$NetworkInformation)
org.webrtc.PeerConnection$AdapterType: org.webrtc.PeerConnection$AdapterType WIFI
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$PortPrunePolicy getTurnPortPrunePolicy()
org.jitsi.meet.sdk.R$color: int primary_material_dark
com.facebook.react.views.scroll.ReactScrollViewManager: void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$SdpSemantics sdpSemantics
com.facebook.yoga.YogaNative: long jni_YGNodeClone(long)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSnapToStart(boolean)
com.facebook.react.devsupport.interfaces.StackFrame
org.jitsi.meet.sdk.R$styleable: int[] GradientColor
org.webrtc.CameraCapturer: org.webrtc.CameraVideoCapturer$CameraStatistics access$802(org.webrtc.CameraCapturer,org.webrtc.CameraVideoCapturer$CameraStatistics)
okhttp3.internal.cache.CacheInterceptor$1: boolean cacheRequestClosed
org.jitsi.meet.sdk.BaseReactView: void setListener(java.lang.Object)
org.webrtc.audio.WebRtcAudioRecord: int BUFFER_SIZE_FACTOR
org.webrtc.NetworkChangeDetector$NetworkInformation: long handle
org.jitsi.meet.R$styleable: int AppCompatTheme_actionBarTabTextStyle
com.facebook.react.views.image.ReactImageManager: void setFadeDuration(com.facebook.react.views.image.ReactImageView,int)
org.jitsi.meet.R$styleable: int AppCompatTheme_colorError
okio.Timeout: long timeoutNanos()
com.squareup.duktape.DuktapeException: java.lang.String getErrorMessage(java.lang.String)
org.webrtc.ScreenCapturerAndroid$2
org.jitsi.meet.sdk.AudioModeModule$AudioDeviceHandlerInterface: void start(org.jitsi.meet.sdk.AudioModeModule)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDataCollectionEnabled(boolean)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus[] values()
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_RatingBar
org.webrtc.SdpObserver: void onCreateSuccess(org.webrtc.SessionDescription)
org.jitsi.meet.sdk.R$styleable: int View_paddingEnd
com.facebook.react.devsupport.DevServerHelper$10: void onResponse(okhttp3.Call,okhttp3.Response)
okhttp3.HttpUrl: void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
org.webrtc.PeerConnectionDependencies: org.webrtc.PeerConnection$Observer getObserver()
com.horcrux.svg.VirtualView: android.graphics.Region mStrokeRegion
com.facebook.react.bridge.JSBundleLoader$2: boolean val$loadSynchronously
androidx.fragment.app.Fragment: boolean isAdded()
com.facebook.react.fabric.Binding: void renderTemplateToSurface(int,java.lang.String)
com.facebook.react.views.art.ARTVirtualNode: void setOpacity(float)
androidx.fragment.app.Fragment: java.lang.String mTag
org.webrtc.Logging$TraceLevel: org.webrtc.Logging$TraceLevel[] $VALUES
org.webrtc.RtpReceiver: long nativeGetTrack(long)
com.facebook.jni.HybridData$Destructor: void deleteNative(long)
com.facebook.yoga.YogaStyleInputs: YogaStyleInputs()
org.webrtc.PeerConnectionFactory: org.webrtc.VideoSource createVideoSource(boolean,boolean)
org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate: boolean supportNetworkCallback()
org.jitsi.meet.R$attr: int colorAccent
okhttp3.internal.http2.Http2Stream: void checkOutNotClosed()
com.facebook.react.modules.appstate.AppStateModule: java.lang.String APP_STATE_BACKGROUND
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
com.facebook.react.uimanager.IllegalViewOperationException
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Inverse
com.horcrux.svg.RenderableViewManager: void invalidateSvgView(com.horcrux.svg.VirtualView)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()
com.facebook.react.devsupport.DevSupportManagerImpl$11
com.facebook.react.bridge.JavaModuleWrapper: void invoke(int,com.facebook.react.bridge.ReadableNativeArray)
okio.ByteString: boolean rangeEquals(int,okio.ByteString,int,int)
com.horcrux.svg.LinearGradientView: void setY1(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundTopRight
org.jitsi.meet.sdk.R$id: int edit_query
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
com.google.android.gms.internal.measurement.zzbv$zzb: boolean zzg
okhttp3.Request: okhttp3.Headers headers
com.facebook.react.views.scroll.ReactScrollView: void setBorderRadius(float)
okhttp3.internal.huc.OkHttpURLConnection: java.net.Proxy proxy
org.webrtc.DataChannel$State: org.webrtc.DataChannel$State CONNECTING
com.facebook.react.bridge.JavaModuleWrapper: JavaModuleWrapper(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ModuleHolder)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionBarSize
androidx.drawerlayout.widget.DrawerLayout: void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl
com.facebook.react.bridge.ReactMarkerConstants: ReactMarkerConstants(java.lang.String,int)
com.horcrux.svg.R$id: int group_divider
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ActionBar_Solid
com.horcrux.svg.R$id: int view_tag_instance_handle
org.webrtc.audio.JavaAudioDeviceModule$Builder: int audioSource
org.jitsi.meet.R$id: int rn_redbox_dismiss_button
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void emitUpdateDimensionsEvent()
com.horcrux.svg.R$attr: int multiChoiceItemLayout
com.horcrux.svg.R$styleable: int MenuItem_contentDescription
org.jitsi.meet.R$style: int Widget_AppCompat_Light_ListPopupWindow
org.webrtc.CameraSession$Events: void onCameraOpening()
okhttp3.internal.huc.OutputStreamRequestBody: OutputStreamRequestBody()
okhttp3.HttpUrl: java.lang.String PASSWORD_ENCODE_SET
okhttp3.Route: java.lang.String toString()
org.jitsi.meet.sdk.OngoingConferenceTracker: void removeListener(org.jitsi.meet.sdk.OngoingConferenceTracker$OngoingConferenceListener)
com.facebook.react.views.view.ReactViewGroup: void onLayout(boolean,int,int,int,int)
org.jitsi.meet.R$styleable: int SimpleDraweeView_placeholderImage
org.webrtc.VideoTrack: void nativeAddSink(long,long)
org.jitsi.meet.R$attr: int selectableItemBackground
com.horcrux.svg.R$id: int submenuarrow
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getName()
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Medium
com.facebook.react.bridge.InvalidIteratorException
org.webrtc.voiceengine.WebRtcAudioRecord: java.lang.String TAG
okio.SegmentedByteString: java.nio.ByteBuffer asByteBuffer()
com.facebook.react.ReactRootView: int getRootViewTag()
okhttp3.CipherSuite$1: int compare(java.lang.Object,java.lang.Object)
com.horcrux.svg.R$attr: int background
org.jitsi.meet.sdk.R$drawable: int notification_template_icon_low_bg
com.facebook.react.views.modal.ReactModalHostManager
com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType: DevSupportManagerImpl$ErrorType(java.lang.String,int)
okhttp3.internal.tls.BasicCertificateChainCleaner: okhttp3.internal.tls.TrustRootIndex trustRootIndex
org.webrtc.voiceengine.WebRtcAudioTrack: void nativeCacheDirectBufferAddress(java.nio.ByteBuffer,long)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
com.horcrux.svg.MarkerView: void setMeetOrSlice(int)
org.webrtc.MediaStream: java.util.List audioTracks
com.horcrux.svg.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
okhttp3.internal.huc.OkHttpsURLConnection: void setIfModifiedSince(long)
com.oney.WebRTCModule.WebRTCModule: org.webrtc.PeerConnection$IceServer createIceServer(java.lang.String)
com.google.android.gms.internal.measurement.zzcd$zza: int zzd
okio.Buffer: java.lang.String readUtf8LineStrict(long)
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Class,java.lang.Object)
org.jitsi.meet.sdk.R$attr: int color
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Headline
org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordErrorCallback
com.horcrux.svg.R$styleable: int TextAppearance_textLocale
org.webrtc.VideoProcessor$FrameAdaptationParameters: long timestampNs
okhttp3.internal.http2.Hpack$Writer: void setHeaderTableSizeSetting(int)
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String name
org.jitsi.meet.sdk.R$id: int default_activity_button
com.facebook.react.bridge.UIManager: void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap)
org.webrtc.RtpParameters$DegradationPreference: org.webrtc.RtpParameters$DegradationPreference BALANCED
org.jitsi.meet.R$styleable: int Toolbar_subtitleTextAppearance
com.facebook.react.views.textinput.ReactTextInputManager: void setAllowFontScaling(com.facebook.react.views.textinput.ReactEditText,boolean)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA
org.webrtc.PeerConnectionDependencies: org.webrtc.PeerConnectionDependencies$Builder builder(org.webrtc.PeerConnection$Observer)
com.facebook.react.modules.camera.ImageEditingManager: java.lang.String getName()
org.webrtc.Camera2Enumerator: java.util.Map cachedSupportedFormats
okhttp3.internal.http2.PushObserver: okhttp3.internal.http2.PushObserver CANCEL
okhttp3.internal.platform.JdkWithJettyBootPlatform: JdkWithJettyBootPlatform(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class)
com.horcrux.svg.R$drawable: int abc_ic_star_black_36dp
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem removeMountItem(int,int,int)
org.jitsi.meet.sdk.R$styleable: int ActionMode_closeItemLayout
com.horcrux.svg.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
com.facebook.react.views.view.ReactViewGroup: android.view.View getChildAtWithSubviewClippingEnabled(int)
com.facebook.react.bridge.ReactContextBaseJavaModule: ReactContextBaseJavaModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.core.Timing: void deleteTimer(int)
com.learnium.RNDeviceInfo.RNDeviceModule: void access$700(com.learnium.RNDeviceInfo.RNDeviceModule,com.facebook.react.bridge.ReactContext,java.lang.String,java.lang.Object)
okhttp3.WebSocketListener: void onClosed(okhttp3.WebSocket,int,java.lang.String)
okhttp3.internal.ws.RealWebSocket$Close
org.jitsi.meet.sdk.JitsiMeetUserInfo: java.lang.String displayName
com.facebook.react.devsupport.DevServerHelper$OnServerContentChangeListener
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl build()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setPathSegment(int,java.lang.String)
androidx.fragment.app.Fragment: boolean getAllowEnterTransitionOverlap()
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
org.jitsi.meet.R$raw: int lang_mainfa
org.jitsi.meet.R$id: int edit_query
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_Solid
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
okhttp3.OkHttpClient$Builder: okhttp3.ConnectionPool connectionPool
com.horcrux.svg.R$color: int material_grey_50
org.jitsi.meet.sdk.DefaultHardwareBackBtnHandlerImpl: DefaultHardwareBackBtnHandlerImpl(android.app.Activity)
org.jitsi.meet.sdk.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String,long)
com.horcrux.svg.R$dimen: int abc_action_bar_subtitle_top_margin_material
okhttp3.internal.Util$1: int compare(java.lang.Object,java.lang.Object)
org.jitsi.meet.sdk.R$attr: int switchPadding
org.jitsi.meet.R$attr: int dividerHorizontal
org.jitsi.meet.sdk.R$color: int material_blue_grey_900
okhttp3.TlsVersion: okhttp3.TlsVersion SSL_3_0
com.facebook.react.views.view.ReactViewGroup: void setBorderStyle(java.lang.String)
com.google.android.gms.dynamite.DynamiteModule$LoadingException
org.webrtc.CameraEnumerationAndroid$1: int val$requestedFps
com.horcrux.svg.R$attr: int homeLayout
com.facebook.react.modules.blob.FileReaderModule: FileReaderModule(com.facebook.react.bridge.ReactApplicationContext)
org.webrtc.EglRenderer: void createEglSurface(android.view.Surface)
com.facebook.react.uimanager.ViewManager: android.view.View createView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.touch.JSResponderHandler)
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskUnits(com.horcrux.svg.MaskView,int)
com.oney.WebRTCModule.WebRTCModule: void peerConnectionCreateAnswer(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JavaOnlyMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
org.webrtc.FileVideoCapturer: java.lang.String TAG
org.jitsi.meet.sdk.R$string: int abc_menu_delete_shortcut_label
org.jitsi.meet.R$drawable: int abc_ic_go_search_api_material
org.webrtc.voiceengine.WebRtcAudioUtils: void logIsStreamMute(java.lang.String,android.media.AudioManager,int,java.lang.StringBuilder)
com.dropbox.core.v2.teamlog.GetTeamEventsContinueErrorException
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDsoNative(java.lang.String,java.lang.String)
com.horcrux.svg.SvgView$Events: java.lang.String toString()
androidx.savedstate.SavedStateRegistry$1
com.horcrux.svg.R$color: int material_grey_900
okio.RealBufferedSource: void require(long)
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatusProvider mBundlerStatusProvider
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void windowUpdate(int,long)
org.jitsi.meet.R$styleable: int ActionBarLayout_android_layout_gravity
org.webrtc.PeerConnectionFactory$InitializationOptions: org.webrtc.PeerConnectionFactory$InitializationOptions$Builder builder(android.content.Context)
org.jitsi.meet.sdk.ExternalAPIModule: org.jitsi.meet.sdk.BroadcastReceiver broadcastReceiver
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,java.lang.Throwable)
org.webrtc.NativeCapturerObserver: void onFrameCaptured(org.webrtc.VideoFrame)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5
com.horcrux.svg.RenderableViewManager$UseViewManager: void setOpacity(android.view.View,float)
org.webrtc.audio.WebRtcAudioTrack: int DEFAULT_USAGE
okio.Buffer$1: okio.Buffer this$0
okio.BufferedSource: java.lang.String readString(java.nio.charset.Charset)
org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode: org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode valueOf(java.lang.String)
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType CM
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus valueOf(java.lang.String)
com.horcrux.svg.R$attr: int showAsAction
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_LAYOUT_END
okhttp3.internal.ws.RealWebSocket: int sentPingCount()
org.jitsi.meet.R$style: int Base_Widget_AppCompat_Button
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
org.webrtc.EglBase$ConfigBuilder: boolean isRecordable
org.jitsi.meet.sdk.R$style: int Base_ThemeOverlay_AppCompat_Light
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarDivider
org.jitsi.meet.sdk.R$styleable: int AlertDialog_android_layout
org.webrtc.voiceengine.WebRtcAudioTrack: long nativeAudioTrack
okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)
org.webrtc.HardwareVideoEncoder: int MAX_ENCODER_Q_SIZE
org.jitsi.meet.R$styleable: int SwitchCompat_switchMinWidth
okhttp3.internal.http2.Hpack$Writer: void writeInt(int,int,int)
com.facebook.react.views.image.ReactImageManager: void setTintColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer)
org.webrtc.audio.VolumeLogger: java.lang.String TAG
okhttp3.Request: okhttp3.HttpUrl url
org.jitsi.meet.sdk.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
okhttp3.Dispatcher: int getMaxRequests()
com.horcrux.svg.RenderableView: int JOIN_BEVEL
org.jitsi.meet.R$raw: int lang_mainar
org.jitsi.meet.R$attr: int drawerArrowStyle
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(android.net.Uri)
org.webrtc.voiceengine.WebRtcAudioManager: boolean isNoiseSuppressorSupported()
com.facebook.react.views.textinput.ReactTextInputManager: void setKeyboardType(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
org.jitsi.meet.R$styleable: int AlertDialog_singleChoiceItemLayout
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Toolbar
org.webrtc.SurfaceTextureHelper: void access$600(org.webrtc.SurfaceTextureHelper)
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectable(com.facebook.react.views.text.ReactTextView,boolean)
org.webrtc.RtpParameters$HeaderExtension: java.lang.String getUri()
org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate: org.webrtc.NetworkChangeDetector$NetworkInformation access$300(org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate,android.net.Network)
org.webrtc.PeerConnection: org.webrtc.RtpSender addTrack(org.webrtc.MediaStreamTrack)
androidx.fragment.app.Fragment: void setAllowReturnTransitionOverlap(boolean)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getJSQueueThreadSpec()
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinX(com.horcrux.svg.SymbolView,float)
org.webrtc.voiceengine.WebRtcAudioRecord: java.nio.ByteBuffer access$200(org.webrtc.voiceengine.WebRtcAudioRecord)
com.rnimmersive.RNImmersiveModule: boolean _isImmersiveOn
com.oney.WebRTCModule.WebRTCModule: org.webrtc.MediaStreamTrack getTrack(java.lang.String)
com.facebook.react.bridge.DynamicFromObject: java.lang.String asString()
org.jitsi.meet.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
com.facebook.react.bridge.JavaOnlyArray: int size()
com.horcrux.svg.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
org.jitsi.meet.R$attr: int textAppearanceListItemSmall
com.calendarevents.CalendarEvents: com.facebook.react.bridge.WritableNativeMap findCalendarById(java.lang.String)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
com.google.android.gms.internal.measurement.zzcd$zzd
okio.Pipe$PipeSource: void close()
okhttp3.Response: long receivedResponseAtMillis
com.facebook.react.uimanager.ViewManager
com.facebook.react.bridge.NativeDeltaClient: com.facebook.jni.HybridData initHybrid()
org.webrtc.SurfaceTextureHelper$1: android.os.Handler val$handler
org.jitsi.meet.R$attr: int colorControlActivated
org.jitsi.meet.sdk.ProximityModule: ProximityModule(com.facebook.react.bridge.ReactApplicationContext)
org.webrtc.audio.WebRtcAudioRecord: void nativeDataIsRecorded(long,int)
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackgroundGuarded()
org.jitsi.meet.R$styleable: int SearchView_commitIcon
com.horcrux.svg.MarkerView: void setRefY(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getPointAtLength(int,com.facebook.react.bridge.ReadableMap)
org.jitsi.meet.R$id: int custom
com.facebook.react.uimanager.UIManagerModule: void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.huc.OkHttpsURLConnection: void setAllowUserInteraction(boolean)
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: MessageQueueThreadPerfStats()
com.horcrux.svg.R$attr: int searchViewStyle
com.facebook.react.views.text.ReactBaseTextShadowNode: void setTextBreakStrategy(java.lang.String)
org.webrtc.voiceengine.WebRtcAudioManager: boolean useStereoInput
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_START
com.facebook.react.bridge.CatalystInstance: void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
okhttp3.internal.tls.DistinguishedNameParser: int length
org.webrtc.CameraVideoCapturer$CameraStatistics: org.webrtc.SurfaceTextureHelper surfaceTextureHelper
com.facebook.react.modules.network.NetworkingModule: java.lang.String USER_AGENT_HEADER_NAME
com.facebook.react.devsupport.interfaces.DevSupportManager: com.facebook.react.devsupport.interfaces.StackFrame[] getLastErrorStack()
com.facebook.react.modules.camera.ImageEditingManager: int access$600(int,int,int,int)
androidx.fragment.app.Fragment: boolean isMenuVisible()
org.jitsi.meet.R$attr: int colorBackgroundFloating
org.webrtc.CameraCapturer: java.lang.Runnable openCameraTimeoutRunnable
org.webrtc.Camera2Session: int width
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostResume()
org.webrtc.Camera2Session$CameraStateCallback: void onError(android.hardware.camera2.CameraDevice,int)
okhttp3.internal.cache2.Relay: long upstreamPos
com.reactnativecommunity.webview.RNCWebViewModule$MimeType: com.reactnativecommunity.webview.RNCWebViewModule$MimeType[] values()
org.jitsi.meet.sdk.R$attr: int roundTopStart
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void access$000(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,boolean)
okio.DeflaterSink: void flush()
com.facebook.react.views.view.ReactViewGroup: void setTranslucentBackgroundDrawable(android.graphics.drawable.Drawable)
org.webrtc.SurfaceEglRenderer: boolean isFirstFrameRendered
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
co.apptailor.googlesignin.RNGoogleSigninModule: void configure(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
okio.ByteString: boolean endsWith(okio.ByteString)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_Button_Borderless
okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getSecurityPatchSync()
org.webrtc.SurfaceEglRenderer: void logD(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
okhttp3.internal.http2.Http2Reader$ContinuationSource
org.webrtc.PeerConnectionFactory: org.webrtc.PeerConnectionFactory$ThreadInfo staticSignalingThread
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$3: void run()
com.horcrux.svg.R$styleable: int MenuView_android_itemBackground
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE_TEMP
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getDefaultOrigin(java.lang.String)
org.webrtc.PeerConnection$RTCConfiguration: boolean getDisableIpv6()
okhttp3.internal.http2.Http2Stream$FramingSource: void receive(okio.BufferedSource,long)
org.webrtc.EglBase: void releaseSurface()
com.horcrux.svg.R$attr: int buttonBarNeutralButtonStyle
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache create(okhttp3.internal.io.FileSystem,java.io.File,int,int,long)
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_RELOAD
org.jitsi.meet.sdk.R$id: int uniform
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Widget_Button
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String access$000(okhttp3.internal.cache.DiskLruCache$Snapshot)
com.facebook.react.devsupport.BundleDownloader: okhttp3.Call mDownloadBundleFromURLCall
com.facebook.react.devsupport.DevSupportManagerImpl$1: DevSupportManagerImpl$1(com.facebook.react.devsupport.DevSupportManagerImpl)
okhttp3.internal.http1.Http1Codec: okio.Source newChunkedSource(okhttp3.HttpUrl)
org.webrtc.TextureBufferImpl: org.webrtc.VideoFrame$TextureBuffer$Type type
com.facebook.react.modules.debug.DevSettingsModule: void setLiveReloadEnabled(boolean)
org.webrtc.PeerConnection$PeerConnectionState: PeerConnection$PeerConnectionState(java.lang.String,int)
org.jitsi.meet.sdk.R$styleable: int AlertDialog_multiChoiceItemLayout
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$Builder setSampleRate(int)
org.webrtc.CameraCapturer$8
org.webrtc.SurfaceTextureHelper: int frameRotation
org.webrtc.VideoDecoderWrapper: VideoDecoderWrapper()
com.horcrux.svg.R$layout: int abc_action_menu_layout
org.jitsi.meet.sdk.R$styleable: int ActionMode_height
org.webrtc.VideoFrame$TextureBuffer: int getTextureId()
okhttp3.Call: boolean isCanceled()
com.facebook.react.bridge.Systrace: void setEnabled(boolean)
org.jitsi.meet.R$attr: int roundingBorderColor
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
org.jitsi.meet.sdk.R$anim: int abc_slide_out_top
org.jitsi.meet.sdk.ParticipantsService: java.lang.String TAG
co.apptailor.googlesignin.RNGoogleSigninModule: void access$500(co.apptailor.googlesignin.RNGoogleSigninModule,com.google.android.gms.tasks.Task,com.facebook.react.bridge.Promise)
okhttp3.internal.ws.WebSocketReader: boolean isClient
okhttp3.internal.tls.OkHostnameVerifier
org.jitsi.meet.sdk.R$attr: int placeholderImageScaleType
com.learnium.RNDeviceInfo.RNDeviceModule: android.net.wifi.WifiInfo getWifiInfo()
com.horcrux.svg.R$styleable: int AppCompatTheme_android_windowIsFloating
org.webrtc.TextureBufferImpl$1
org.jitsi.meet.R$styleable: int FontFamilyFont_fontWeight
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule$ContentHandler mWebSocketContentHandler
okhttp3.Address: java.util.List connectionSpecs
org.jitsi.meet.R$color: int bright_foreground_disabled_material_dark
org.webrtc.SurfaceEglRenderer: int frameRotation
org.webrtc.RtpParameters: org.webrtc.RtpParameters$Rtcp rtcp
org.jitsi.meet.R$attr: int menu
com.horcrux.svg.R$attr: int buttonBarStyle
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Integer getIceCheckMinInterval()
org.jitsi.meet.R$styleable: int GradientColor_android_centerY
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.Object getContent()
org.webrtc.Histogram: long nativeCreateEnumeration(java.lang.String,int)
org.webrtc.Camera2Session$CaptureSessionCallback: Camera2Session$CaptureSessionCallback(org.webrtc.Camera2Session,org.webrtc.Camera2Session$1)
org.webrtc.EglRenderer: java.lang.Object layoutLock
com.horcrux.svg.R$styleable: int GradientColor_android_type
com.facebook.react.bridge.WritableArray: void pushBoolean(boolean)
org.jitsi.meet.R$raw: int node_modules_domserializer_foreignnames
com.horcrux.svg.SvgView: android.graphics.Rect getCanvasBounds()
org.webrtc.Camera1Session: int access$900(org.webrtc.Camera1Session)
org.jitsi.meet.sdk.JitsiMeetView: java.lang.String url
co.apptailor.googlesignin.RNGoogleSigninModule: void playServicesAvailable(boolean,com.facebook.react.bridge.Promise)
org.webrtc.Camera2Capturer: void initialize(org.webrtc.SurfaceTextureHelper,android.content.Context,org.webrtc.CapturerObserver)
com.horcrux.svg.LinearGradientView: void setGradient(com.facebook.react.bridge.ReadableArray)
org.webrtc.audio.WebRtcAudioEffects: java.util.UUID AOSP_NOISE_SUPPRESSOR
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(android.view.View)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,int,boolean,boolean)
org.webrtc.RendererCommon: void adjustOrigin(float[])
org.webrtc.RtpParameters$Encoding
com.horcrux.svg.TextProperties$TextPathMethod: com.horcrux.svg.TextProperties$TextPathMethod valueOf(java.lang.String)
org.webrtc.voiceengine.WebRtcAudioUtils: java.lang.String[] BLACKLISTED_OPEN_SL_ES_MODELS
com.facebook.react.bridge.JsonWriterHelper: JsonWriterHelper()
org.jitsi.meet.R$styleable: int AppCompatTheme_popupMenuStyle
org.webrtc.HardwareVideoDecoderFactory
okhttp3.Handshake: okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Type: com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Type valueOf(java.lang.String)
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.AudioDecoderFactoryFactory audioDecoderFactoryFactory
org.jitsi.meet.sdk.LogBridgeModule: void warn(java.lang.String)
com.facebook.react.uimanager.ViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.internal.ws.RealWebSocket: java.lang.String receivedCloseReason
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)
okio.AsyncTimeout: okio.Source source(okio.Source)
com.facebook.react.animated.NativeAnimatedModule: void removeAnimatedEventFromView(int,java.lang.String,int)
com.horcrux.svg.RenderableViewManager$GroupViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.slider.ReactSliderManager: long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode)
com.facebook.react.views.textinput.ReactTextInputManager: int parseNumericFontWeight(java.lang.String)
org.webrtc.HardwareVideoDecoderFactory$1
okhttp3.CookieJar: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
org.jitsi.meet.sdk.R$attr: int thickness
org.webrtc.GlShader: GlShader(java.lang.String,java.lang.String)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_NULL_SHA
okhttp3.internal.ws.WebSocketProtocol: int CLOSE_NO_STATUS_CODE
okhttp3.internal.ws.RealWebSocket: void initReaderAndWriter(java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams)
org.jitsi.meet.sdk.R$attr: int buttonPanelSideLayout
timber.log.Timber$Tree: void v(java.lang.String,java.lang.Object[])
com.facebook.react.devsupport.interfaces.DevSupportManager: java.lang.String getJSBundleURLForRemoteDebugging()
com.dropbox.core.v2.team.ExcludedUsersListContinueErrorException
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor currentEditor
okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.SSLSocketFactory)
org.jitsi.meet.R$color: int abc_color_highlight_material
okhttp3.internal.JavaNetHeaders$1: JavaNetHeaders$1()
com.horcrux.svg.R$styleable: int SimpleDraweeView_progressBarImageScaleType
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetBorder(long,int,float)
okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.reflect.Method openMethod
org.webrtc.PeerConnectionFactory: void initializeInternalTracer()
com.horcrux.svg.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.learnium.RNDeviceInfo.RNDeviceModule: double access$800(com.learnium.RNDeviceInfo.RNDeviceModule)
com.facebook.react.views.art.ARTGroupViewManager
okio.RealBufferedSource: long indexOf(byte,long,long)
org.webrtc.DtmfSender: java.lang.String nativeTones(long)
okhttp3.Dispatcher: int queuedCallsCount()
com.facebook.react.uimanager.ViewGroupManager: java.lang.Class getShadowNodeClass()
org.webrtc.NetworkMonitor: void startMonitoring(android.content.Context)
org.jitsi.meet.R$attr: int ttcIndex
androidx.appcompat.widget.Toolbar: void setTitle(int)
org.jitsi.meet.R$attr: int textColorSearchUrl
org.jitsi.meet.sdk.R$attr: int searchIcon
okhttp3.internal.huc.OkHttpsURLConnection: OkHttpsURLConnection(java.net.URL,okhttp3.OkHttpClient,okhttp3.internal.URLFilter)
org.jitsi.meet.sdk.JitsiMeetView: java.util.Map LISTENER_METHODS
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)
com.facebook.react.modules.camera.ImageEditingManager: java.lang.String TEMP_FILE_PREFIX
okhttp3.internal.http2.Http2Stream$StreamTimeout: Http2Stream$StreamTimeout(okhttp3.internal.http2.Http2Stream)
org.webrtc.CameraEnumerationAndroid$CaptureFormat$FramerateRange
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem updateStateMountItem(int,java.lang.Object)
com.dropbox.core.BadResponseCodeException
com.horcrux.svg.R$styleable: int Toolbar_titleMarginBottom
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostResume()
okhttp3.internal.http.RealResponseBody: long contentLength()
com.facebook.react.modules.dialog.DialogModule: java.lang.String ACTION_BUTTON_CLICKED
org.webrtc.SurfaceTextureHelper: java.lang.Runnable setListenerRunnable
okio.Buffer: short readShort()
org.jitsi.meet.R$id: int textSpacerNoTitle
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionSpecs(java.util.List)
com.facebook.react.uimanager.UIManagerModule: void onCatalystInstanceDestroy()
com.facebook.react.bridge.CatalystInstance: boolean hasRunJSBundle()
com.horcrux.svg.R$style: int Widget_AppCompat_ImageButton
org.jitsi.meet.R$string: int common_google_play_services_install_text
org.jitsi.meet.sdk.R$string: int common_google_play_services_notification_channel_name
com.facebook.react.modules.websocket.WebSocketModule: void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,int)
okio.RealBufferedSink: okio.BufferedSink writeShort(int)
okhttp3.Headers: java.util.Set names()
okhttp3.internal.huc.OkHttpsURLConnection: java.net.URL getURL()
com.horcrux.svg.R$dimen: int abc_dialog_fixed_height_major
org.jitsi.meet.R$attr: int actionModeShareDrawable
com.facebook.react.uimanager.ViewGroupManager: void removeAllViews(android.view.ViewGroup)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.internal.cache.CacheInterceptor$1: okhttp3.internal.cache.CacheInterceptor this$0
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean,com.facebook.imagepipeline.core.ImagePipelineConfig)
org.jitsi.meet.R$style: int DialogAnimationFade
com.learnium.RNDeviceInfo.RNDeviceModule: com.learnium.RNDeviceInfo.resolver.DeviceIdResolver deviceIdResolver
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionModeShareDrawable
org.webrtc.voiceengine.BuildInfo
org.jitsi.meet.R$style: int Base_Widget_AppCompat_Spinner_Underlined
org.webrtc.RtpTransceiver$RtpTransceiverDirection: org.webrtc.RtpTransceiver$RtpTransceiverDirection[] values()
org.jitsi.meet.R$style: int Base_DialogWindowTitle_AppCompat
org.jitsi.meet.sdk.R$id: int search_edit_frame
com.horcrux.svg.R
com.calendarevents.CalendarEvents: int addCalendar(com.facebook.react.bridge.ReadableMap)
org.jitsi.meet.R$drawable: int abc_btn_colored_material
com.horcrux.svg.SvgView: boolean notRendered()
org.jitsi.meet.sdk.R$style: int SplashScreen_SplashTheme
okhttp3.Route: Route(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)
org.webrtc.MediaSource$State: org.webrtc.MediaSource$State fromNativeIndex(int)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget
org.webrtc.audio.WebRtcAudioUtils: void logDeviceInfo(java.lang.String)
com.horcrux.svg.R$color: int foreground_material_light
com.facebook.react.bridge.Inspector$LocalConnection: void sendMessage(java.lang.String)
com.horcrux.svg.PathView: void setD(java.lang.String)
org.webrtc.voiceengine.WebRtcAudioTrack: android.media.AudioManager audioManager
okhttp3.internal.cache2.Relay: void writeMetadata(long)
com.facebook.react.bridge.OnBatchCompleteListener: void onBatchComplete()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExecutor(com.facebook.react.bridge.JavaScriptExecutor)
com.facebook.react.modules.network.NetworkingModule
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_LONG_KEY
com.horcrux.svg.RenderableViewManager$SVGClass: com.horcrux.svg.RenderableViewManager$SVGClass[] values()
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$BroadcastReceiver: JitsiMeetOngoingConferenceService$BroadcastReceiver(org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService)
org.webrtc.CameraEnumerator
org.webrtc.PeerConnection: org.webrtc.DataChannel createDataChannel(java.lang.String,org.webrtc.DataChannel$Init)
org.jitsi.meet.sdk.JitsiMeetActivityDelegate: com.facebook.react.modules.core.PermissionListener access$002(com.facebook.react.modules.core.PermissionListener)
okhttp3.internal.http2.Http2Stream$StreamTimeout: void timedOut()
org.jitsi.meet.sdk.R$styleable: int MenuItem_actionProviderClass
com.facebook.react.bridge.NativeModule$NativeMethod: java.lang.String getType()
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_9
org.webrtc.SurfaceViewRenderer: void postOrRun(java.lang.Runnable)
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_0
org.jitsi.meet.R$styleable: int SearchView_voiceIcon
org.webrtc.Camera1Capturer: void createCameraSession(org.webrtc.CameraSession$CreateSessionCallback,org.webrtc.CameraSession$Events,android.content.Context,org.webrtc.SurfaceTextureHelper,java.lang.String,int,int,int)
org.jitsi.meet.sdk.R$raw: int lang_mainptbr
com.google.android.gms.internal.measurement.zzca$zza: int zzc
org.webrtc.PeerConnection$IceGatheringState: org.webrtc.PeerConnection$IceGatheringState fromNativeIndex(int)
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetJustifyContent(long)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
okhttp3.HttpUrl$Builder: void pop()
org.webrtc.CameraSession$FailureType: org.webrtc.CameraSession$FailureType valueOf(java.lang.String)
org.jitsi.meet.sdk.R$dimen: int abc_dialog_fixed_width_minor
org.jitsi.meet.R$styleable: int View_android_focusable
com.reactnativecommunity.webview.RNCWebViewModule: void onNewIntent(android.content.Intent)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
org.jitsi.meet.R$id: int rn_redbox_report_button
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle valueOf(java.lang.String)
org.webrtc.CameraEnumerator: org.webrtc.CameraVideoCapturer createCapturer(java.lang.String,org.webrtc.CameraVideoCapturer$CameraEventsHandler)
com.facebook.react.uimanager.UIManagerModule: java.util.List mListeners
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_roundTopLeft
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem deleteMountItem(int)
com.horcrux.svg.R$attr: int spinnerStyle
okhttp3.internal.http.RetryAndFollowUpInterceptor: int MAX_FOLLOW_UPS
org.webrtc.PeerConnectionFactory$Options: int ADAPTER_TYPE_UNKNOWN
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_viewInflaterClass
org.webrtc.RtpParameters: java.util.List headerExtensions
org.jitsi.meet.sdk.R$attr: int itemPadding
org.jitsi.meet.sdk.OngoingConferenceTracker: java.util.Collection listeners
okhttp3.HttpUrl: void percentDecode(okio.Buffer,java.lang.String,int,int,boolean)
com.horcrux.svg.R: R()
org.webrtc.audio.WebRtcAudioRecord: android.media.AudioManager audioManager
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.String)
org.jitsi.meet.R$raw: int lang_languagessc
com.horcrux.svg.R$styleable: int[] ActionMenuItemView
org.webrtc.MediaStream: void checkMediaStreamExists()
org.webrtc.SurfaceEglRenderer: void updateFrameDimensionsAndReportEvents(org.webrtc.VideoFrame)
org.jitsi.meet.R$layout: int dev_loading_view
org.webrtc.NativeAndroidVideoTrackSource: void setState(boolean)
org.jitsi.meet.R$string: int tablist_description
org.webrtc.audio.WebRtcAudioUtils: void logIsStreamMute(java.lang.String,android.media.AudioManager,int,java.lang.StringBuilder)
com.horcrux.svg.R$styleable: int Spinner_android_prompt
org.jitsi.meet.sdk.R$drawable: int abc_ab_share_pack_mtrl_alpha
com.learnium.RNDeviceInfo.RNDeviceModule: int getApiLevelSync()
org.jitsi.meet.sdk.R$attr: int iconTint
com.horcrux.svg.R$styleable: int ColorStateListItem_alpha
org.webrtc.CameraCapturer$4: void onCameraDisconnected()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: boolean needsCustomLayoutForChildren()
org.jitsi.meet.sdk.R$attr: int imageAspectRatioAdjust
org.jitsi.meet.sdk.R$id: int activity_chooser_view_content
androidx.fragment.app.Fragment: void onLowMemory()
org.jitsi.meet.sdk.log.JitsiMeetLogger: void e(java.lang.String,java.lang.Object[])
org.webrtc.PeerConnection$SignalingState: org.webrtc.PeerConnection$SignalingState fromNativeIndex(int)
okhttp3.Handshake: java.util.List peerCertificates()
okhttp3.internal.http2.Http2Connection: void pushRequestLater(int,java.util.List)
co.apptailor.googlesignin.RNGoogleSigninModule: RNGoogleSigninModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.fragment.app.FragmentActivity: FragmentActivity(int)
okio.RealBufferedSink: boolean isOpen()
org.jitsi.meet.R$attr: int colorButtonNormal
org.jitsi.meet.R$styleable: int AppCompatTheme_actionModeStyle
com.horcrux.svg.R$id: int uniform
org.webrtc.CryptoOptions$Srtp: boolean enableEncryptedRtpHeaderExtensions
org.jitsi.meet.R$layout: int abc_activity_chooser_view_list_item
com.dropbox.core.v2.team.GroupUpdateErrorException
com.horcrux.svg.R$anim: int abc_popup_enter
org.webrtc.FileVideoCapturer: java.util.Timer timer
com.facebook.react.bridge.NativeModuleRegistry
org.webrtc.CameraVideoCapturer$MediaRecorderHandler: void onMediaRecorderSuccess()
org.webrtc.audio.WebRtcAudioRecord: org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStateCallback stateCallback
com.facebook.react.devsupport.DevSupportManagerImpl: void onNewReactContextCreated(com.facebook.react.bridge.ReactContext)
org.webrtc.TextureBufferImpl$1: void onRelease(org.webrtc.TextureBufferImpl)
com.zmxv.RNSound.RNSoundModule: com.facebook.react.bridge.ReactApplicationContext context
org.webrtc.VideoSource: org.webrtc.NativeAndroidVideoTrackSource access$000(org.webrtc.VideoSource)
com.facebook.react.devsupport.BundleDownloader$1: java.io.File val$outputFile
com.google.android.gms.measurement.AppMeasurement: java.util.Map getUserPropertiesAs(java.lang.String,java.lang.String,java.lang.String,boolean)
com.facebook.react.modules.camera.CameraRollManager: void getPhotos(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: com.facebook.react.bridge.queue.QueueThreadExceptionHandler mExceptionHandler
com.facebook.react.devsupport.DevLoadingViewController: void access$200(com.facebook.react.devsupport.DevLoadingViewController)
org.webrtc.Logging: void e(java.lang.String,java.lang.String)
org.webrtc.audio.JavaAudioDeviceModule: void setPreferredInputDevice(android.media.AudioDeviceInfo)
org.jitsi.meet.R$attr: int autoSizeTextType
org.webrtc.CameraCapturer: void stopCapture()
com.facebook.react.modules.vibration.VibrationModule: void cancel()
com.facebook.react.devsupport.MultipartStreamReader$ChunkListener
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType[] values()
com.facebook.react.modules.core.Timing: android.util.SparseArray mTimerIdsToTimers
com.google.firebase.components.ComponentDiscoveryService
com.dropbox.core.v2.files.ListFolderLongpollErrorException
okio.HashingSink: javax.crypto.Mac mac
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments
com.facebook.react.devsupport.BundleDownloader$BundleInfo: com.facebook.react.devsupport.BundleDownloader$BundleInfo fromJSONString(java.lang.String)
org.jitsi.meet.R$style: int ThemeOverlay_AppCompat_Light
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.facebook.react.devsupport.DevServerHelper$11
okhttp3.internal.huc.DelegatingHttpsURLConnection: javax.net.ssl.SSLSocketFactory getSSLSocketFactory()
org.jitsi.meet.R$id: int action_image
org.webrtc.VideoDecoder: long createNativeVideoDecoder()
okhttp3.Cache$CacheResponseBody: okhttp3.MediaType contentType()
okhttp3.Response: java.util.List challenges()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder fragment(java.lang.String)
org.webrtc.YuvConverter$ShaderCallbacks: float[] uCoeffs
org.jitsi.meet.sdk.R$raw: int lang_mainar
com.facebook.react.bridge.NativeModule: void onCatalystInstanceDestroy()
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder
com.horcrux.svg.R$drawable: int tooltip_frame_dark
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String uiMode()
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)
org.webrtc.CameraEnumerationAndroid$1: int diff(org.webrtc.CameraEnumerationAndroid$CaptureFormat$FramerateRange)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$1: org.jitsi.meet.sdk.JitsiMeetConferenceOptions createFromParcel(android.os.Parcel)
org.jitsi.meet.sdk.JitsiMeetActivityDelegate: void onHostPause(android.app.Activity)
okhttp3.HttpUrl$Builder: java.lang.String scheme
com.facebook.react.modules.websocket.WebSocketModule: void setContentHandler(int,com.facebook.react.modules.websocket.WebSocketModule$ContentHandler)
org.webrtc.CameraEnumerator: java.lang.String[] getDeviceNames()
org.webrtc.audio.WebRtcAudioRecord: void access$100(boolean)
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String JAVASCRIPT_INTERFACE
okhttp3.HttpUrl: int defaultPort(java.lang.String)
okhttp3.internal.http2.Hpack$Writer: void adjustDynamicTableByteCount()
org.jitsi.meet.sdk.R$style: int TextAppearance_Compat_Notification
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Connection this$0
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_1
com.horcrux.svg.R$style: int DialogAnimationFade
okio.InflaterSource: void releaseInflatedBytes()
okhttp3.internal.ws.RealWebSocket$Message: RealWebSocket$Message(int,okio.ByteString)
com.facebook.react.bridge.JsonWriterHelper$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
com.facebook.react.devsupport.DevServerHelper$1$3
okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)
org.jitsi.meet.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
org.webrtc.CapturerObserver
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: com.facebook.react.views.unimplementedview.ReactUnimplementedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.jitsi.meet.sdk.R$anim: int abc_fade_in
com.horcrux.svg.R$styleable: int ActionMode_closeItemLayout
com.facebook.yoga.YogaNative: void jni_YGConfigSetShouldDiffLayoutWithoutLegacyStretchBehaviour(long,boolean)
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key()
com.horcrux.svg.R$styleable: int[] LinearLayoutCompat
okhttp3.internal.ws.RealWebSocket$Streams: RealWebSocket$Streams(boolean,okio.BufferedSource,okio.BufferedSink)
com.oney.WebRTCModule.WebRTCModule: org.webrtc.MediaStreamTrack getLocalTrack(org.webrtc.MediaStream,java.lang.String)
org.jitsi.meet.sdk.R$attr: int icon
androidx.fragment.app.Fragment: int getTargetRequestCode()
org.webrtc.voiceengine.WebRtcAudioRecord: int BUFFERS_PER_SECOND
com.facebook.react.bridge.JavaMethodWrapper$9: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okhttp3.OkHttpClient: java.util.List connectionSpecs()
org.jitsi.meet.sdk.R$style: int Theme_Catalyst_RedBox
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableItem_android_id
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_Spinner
org.jitsi.meet.sdk.DropboxModule: java.lang.String clientId
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: javax.net.ssl.X509TrustManager trustManager
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Caption
org.webrtc.NetworkMonitorAutoDetect$SimpleNetworkCallback: void onAvailable(android.net.Network)
org.webrtc.VideoFrameDrawer: void release()
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory valueOf(java.lang.String)
org.webrtc.MediaSource$State
okhttp3.Protocol: okhttp3.Protocol H2_PRIOR_KNOWLEDGE
com.dropbox.core.v2.teampolicies.SharedFolderMemberPolicy: com.dropbox.core.v2.teampolicies.SharedFolderMemberPolicy valueOf(java.lang.String)
org.webrtc.EglRenderer: long minRenderPeriodNs
okhttp3.internal.http2.Hpack: okio.ByteString checkLowercase(okio.ByteString)
okhttp3.EventListener: void callEnd(okhttp3.Call)
org.webrtc.RendererCommon$ScalingType: org.webrtc.RendererCommon$ScalingType[] values()
okhttp3.internal.Util$1: Util$1()
org.webrtc.EglBase10Impl: void createSurfaceInternal(java.lang.Object)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_256_CBC_SHA
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$1
org.webrtc.HardwareVideoEncoder: long forcedKeyFrameNs
org.webrtc.RtpTransceiver: org.webrtc.RtpSender getSender()
org.webrtc.CameraCapturer: void checkIsOnCameraThread()
androidx.fragment.app.Fragment: boolean mUserVisibleHint
com.horcrux.svg.R$attr: int fontProviderFetchStrategy
org.webrtc.VideoTrack: void removeSink(org.webrtc.VideoSink)
com.facebook.react.bridge.WritableNativeArray: void pushMap(com.facebook.react.bridge.ReadableMap)
okhttp3.ResponseBody: java.io.Reader reader
org.jitsi.meet.R$dimen: int abc_text_size_title_material_toolbar
org.webrtc.Logging: void injectLoggable(org.webrtc.Loggable,org.webrtc.Logging$Severity)
org.webrtc.JavaI420Buffer: int height
com.facebook.react.bridge.UIManager: int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String)
com.facebook.react.uimanager.UIManagerModule: void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
org.webrtc.MediaStreamTrack$State: org.webrtc.MediaStreamTrack$State[] values()
com.reactnativecommunity.webview.RNCWebViewManager: void setCacheEnabled(android.webkit.WebView,boolean)
org.jitsi.meet.R$attr: int textAppearanceListItem
com.facebook.react.bridge.JavaMethodWrapper$1
com.horcrux.svg.R$string: int abc_action_mode_done
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA
org.jitsi.meet.sdk.R$attr: int dividerPadding
org.jitsi.meet.sdk.R$attr: int autoCompleteTextViewStyle
org.jitsi.meet.sdk.R$id: int textSpacerNoButtons
okhttp3.Request$Builder: okhttp3.Headers$Builder headers
org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode
org.jitsi.meet.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState
org.jitsi.meet.R$attr: int progressBarPadding
com.google.android.gms.internal.measurement.zzbv$zzf: com.google.android.gms.internal.measurement.zzjp zzi
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_Empty
okhttp3.internal.JavaNetHeaders$1
org.jitsi.meet.R$styleable: int AppCompatTheme_selectableItemBackground
org.jitsi.meet.sdk.JitsiMeetView: android.os.Bundle mergeProps(android.os.Bundle,android.os.Bundle)
org.webrtc.AndroidVideoDecoder: void access$200(org.webrtc.AndroidVideoDecoder)
org.webrtc.audio.WebRtcAudioTrack: boolean isVolumeFixed()
org.jitsi.meet.R$color: int secondary_text_disabled_material_dark
com.horcrux.svg.TextProperties$TextPathSpacing: com.horcrux.svg.TextProperties$TextPathSpacing valueOf(java.lang.String)
okhttp3.internal.platform.AndroidPlatform: boolean supportsAlpn()
com.reactnativecommunity.webview.RNCWebViewModule: void isFileUploadSupported(com.facebook.react.bridge.Promise)
org.jitsi.meet.R$style: int Widget_AppCompat_RatingBar
okhttp3.TlsVersion
com.horcrux.svg.R$styleable: int SimpleDraweeView_retryImage
com.horcrux.svg.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
timber.log.Timber$Tree: void w(java.lang.Throwable)
org.jitsi.meet.R$styleable: int ActionMode_closeItemLayout
org.jitsi.meet.sdk.R$attr: int imageAspectRatio
com.google.android.gms.auth.GooglePlayServicesAvailabilityException
com.facebook.react.bridge.CatalystInstanceImpl$2
org.webrtc.VideoFrame: long timestampNs
org.jitsi.meet.sdk.incoming_call.IncomingCallView: java.util.Map LISTENER_METHODS
okio.RealBufferedSource: java.io.InputStream inputStream()
com.facebook.react.bridge.ReadableNativeArray$1
com.facebook.react.devsupport.JSDebuggerWebSocketClient: java.lang.String TAG
com.facebook.react.bridge.WritableMap: void merge(com.facebook.react.bridge.ReadableMap)
org.jitsi.meet.R$styleable: int LinearLayoutCompat_dividerPadding
org.webrtc.NetworkMonitorAutoDetect: android.content.Context context
org.webrtc.DefaultVideoEncoderFactory: org.webrtc.VideoEncoder createEncoder(org.webrtc.VideoCodecInfo)
org.webrtc.DefaultVideoDecoderFactory: org.webrtc.VideoDecoderFactory hardwareVideoDecoderFactory
org.jitsi.meet.R$attr: int title
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.ReactApplicationContext access$900(com.learnium.RNDeviceInfo.RNDeviceModule)
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean forWebSocket
org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger: int TIMER_PERIOD_IN_SECONDS
com.horcrux.svg.R$styleable: int MenuGroup_android_orderInCategory
org.jitsi.meet.R$dimen: int abc_text_size_body_2_material
com.facebook.hermes.reactexecutor.HermesExecutor: boolean canLoadFile(java.lang.String)
org.jitsi.meet.sdk.R$drawable: int abc_item_background_holo_dark
com.facebook.react.bridge.CatalystInstanceImpl: boolean mJSBundleHasLoaded
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: java.lang.String toString()
com.horcrux.svg.R$drawable: int abc_list_selector_disabled_holo_light
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: boolean access$400(org.jitsi.meet.sdk.AudioDeviceHandlerGeneric)
com.horcrux.svg.R$color: int switch_thumb_disabled_material_light
okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)
org.jitsi.meet.R$id: int customPanel
com.google.android.gms.internal.measurement.zzci$zzb: com.google.android.gms.internal.measurement.zzjp zzl
org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger: void stop()
org.jitsi.meet.R$dimen: int abc_action_button_min_width_overflow_material
com.facebook.yoga.YogaPrintOptions: com.facebook.yoga.YogaPrintOptions[] values()
okhttp3.internal.Internal: int code(okhttp3.Response$Builder)
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: java.lang.String getMethod()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_START
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
org.jitsi.meet.R$styleable: int AppCompatTextView_drawableRightCompat
com.dropbox.core.v2.sharing.CreateSharedLinkErrorException
org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStateCallback
org.jitsi.meet.sdk.DropboxModule: java.lang.String generateClientId()
org.jitsi.meet.sdk.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
com.horcrux.svg.R$styleable: int GradientColor_android_endY
com.facebook.react.fabric.ReactNativeConfig: java.lang.String getString(java.lang.String)
org.webrtc.RtpTransceiver$RtpTransceiverInit: int getDirectionNativeIndex()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setRequestMethod(java.lang.String)
org.webrtc.WrappedNativeVideoDecoder: java.lang.String getImplementationName()
org.jitsi.meet.sdk.JitsiMeetFragment: org.jitsi.meet.sdk.JitsiMeetView getJitsiView()
org.jitsi.meet.sdk.R$bool
org.jitsi.meet.BuildConfig: boolean LIBRE_BUILD
com.oney.WebRTCModule.WebRTCModule: void peerConnectionAddICECandidateAsync(com.facebook.react.bridge.ReadableMap,int,com.facebook.react.bridge.Callback)
com.horcrux.svg.RenderableViewManager: void setName(com.horcrux.svg.VirtualView,java.lang.String)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mName
com.horcrux.svg.RenderableViewManager$UseViewManager: void setX(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric$2: AudioDeviceHandlerGeneric$2(org.jitsi.meet.sdk.AudioDeviceHandlerGeneric)
com.horcrux.svg.R$attr: int textAppearanceListItem
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorCallbackFuture: void onSuccess(java.lang.String)
okhttp3.Cache: okhttp3.internal.cache.InternalCache internalCache
org.jitsi.meet.R$styleable: int TextAppearance_android_typeface
com.facebook.react.ReactRootView: android.view.ViewGroup getRootViewGroup()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPagingEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
org.jitsi.meet.R$style: int Widget_AppCompat_ActionMode
com.google.android.gms.internal.measurement.zzca$zzc: int zzc
org.jitsi.meet.R$id: int action_bar
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source()
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener mChildrenLayoutChangeListener
com.facebook.react.views.textinput.ReactTextInputManager: void updateStagedInputTypeFlag(com.facebook.react.views.textinput.ReactEditText,int,int)
okhttp3.HttpUrl: java.util.List queryStringToNamesAndValues(java.lang.String)
org.jitsi.meet.sdk.R$drawable: int btn_checkbox_unchecked_mtrl
okhttp3.internal.http1.Http1Codec$AbstractSource: okhttp3.internal.http1.Http1Codec this$0
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_MESSAGE
okhttp3.ConnectionSpec$Builder: java.lang.String[] cipherSuites
org.webrtc.audio.WebRtcAudioRecord: void assertTrue(boolean)
org.webrtc.NetworkMonitor: void startMonitoring(android.content.Context,long)
org.webrtc.EncodedImage: org.webrtc.EncodedImage$Builder builder()
com.facebook.react.modules.storage.AsyncStorageModule: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isLocationEnabledSync()
org.webrtc.VideoFrame: org.webrtc.VideoFrame$Buffer buffer
org.jitsi.meet.R$styleable: int ButtonBarLayout_allowStacking
com.facebook.systrace.TraceListener
org.jitsi.meet.R$anim: int abc_tooltip_exit
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
org.jitsi.meet.R$attr: int itemPadding
com.facebook.react.views.scroll.ReactScrollView: void setSnapInterval(int)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
com.google.android.gms.internal.measurement.zzcd$zza
okhttp3.internal.huc.OkHttpsURLConnection: void setFixedLengthStreamingMode(int)
org.webrtc.VideoEncoderWrapper: VideoEncoderWrapper()
okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route)
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec codec()
com.facebook.react.devsupport.DevServerHelper$11: void onFailure(okhttp3.Call,java.io.IOException)
com.facebook.react.devsupport.RedBoxDialog: com.facebook.react.devsupport.DoubleTapReloadRecognizer mDoubleTapReloadRecognizer
okhttp3.internal.http2.Http2Reader: java.util.List readHeaderBlock(int,short,byte,int)
org.jitsi.meet.sdk.R$anim: int catalyst_push_up_out
com.facebook.react.devsupport.JSDevSupport$JSDevSupportModule
com.facebook.react.modules.intent.IntentModule: void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
org.webrtc.voiceengine.WebRtcAudioManager: boolean isAAudioSupported()
com.facebook.react.bridge.Inspector$Page: Inspector$Page(int,java.lang.String,java.lang.String)
org.jitsi.meet.R$attr: int actionModeCutDrawable
org.webrtc.voiceengine.WebRtcAudioUtils: boolean isDefaultSampleRateOverridden
okio.Segment: Segment()
com.facebook.react.modules.fabric.ReactFabric: void unmountComponentAtNode(int)
org.jitsi.meet.sdk.R$id: int view_tag_instance_handle
com.horcrux.svg.R$drawable: int redbox_top_border_background
org.jitsi.meet.sdk.R$styleable: int AppCompatTextHelper_android_drawableTop
com.facebook.react.devsupport.DevSupportManagerImpl$26: com.facebook.react.devsupport.DevSupportManagerImpl this$0
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.Dynamic getDynamic(int)
okhttp3.internal.ws.WebSocketWriter: void writeMessageFrame(int,long,boolean,boolean)
org.webrtc.EglBase14Impl: void releaseSurface()
org.webrtc.EglBase14Impl: org.webrtc.EglBase14Impl$Context getEglBaseContext()
okhttp3.internal.connection.RouteException: RouteException(java.io.IOException)
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableArray mArray
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearMeasurementEnabled(long)
org.webrtc.NetworkMonitorAutoDetect: android.net.ConnectivityManager$NetworkCallback allNetworkCallback
org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordErrorCallback: void onWebRtcAudioRecordInitError(java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void setGlobalVariable(java.lang.String,java.lang.String)
org.jitsi.meet.R$attr: int actionBarTabStyle
timber.log.Timber$Tree: void i(java.lang.Throwable)
okio.RealBufferedSource: int readUtf8CodePoint()
timber.log.Timber$Tree: void wtf(java.lang.Throwable)
org.webrtc.JniCommon: JniCommon()
okhttp3.internal.ws.RealWebSocket$PingRunnable: okhttp3.internal.ws.RealWebSocket this$0
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.devsupport.DevServerHelper$6: void onResponse(okhttp3.Call,okhttp3.Response)
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: void onAudioFocusChange(int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
com.facebook.react.uimanager.BaseViewManager: void setZIndex(android.view.View,float)
com.facebook.react.bridge.DynamicFromObject
okhttp3.CacheControl$Builder: int minFreshSeconds
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void runOnQueue(java.lang.Runnable)
org.webrtc.PeerConnection$ContinualGatheringPolicy: org.webrtc.PeerConnection$ContinualGatheringPolicy valueOf(java.lang.String)
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_progressBarAutoRotateInterval
org.jitsi.meet.R$id: int listMode
org.webrtc.Priority
org.jitsi.meet.sdk.R$styleable: int PopupWindow_overlapAnchor
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactHorizontalScrollView,float)
com.horcrux.svg.R$string: int timer_description
org.webrtc.audio.WebRtcAudioRecord: void reportWebRtcAudioRecordInitError(java.lang.String)
com.horcrux.svg.VirtualView: android.graphics.Matrix mMatrix
com.facebook.react.views.unimplementedview.ReactUnimplementedView
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
com.facebook.react.devsupport.DevSupportManagerImpl$14: com.facebook.react.devsupport.DevSupportManagerImpl this$0
org.webrtc.EglRenderer: void addFrameListener(org.webrtc.EglRenderer$FrameListener,float)
org.jitsi.meet.sdk.R$raw: int lang_languagesro
okhttp3.internal.http.HttpHeaders: java.util.Set varyFields(okhttp3.Response)
okhttp3.CipherSuite: java.util.Comparator ORDER_BY_NAME
com.horcrux.svg.R$layout: int notification_template_part_chronometer
okio.ForwardingTimeout: okio.ForwardingTimeout setDelegate(okio.Timeout)
org.jitsi.meet.R$attr: int radioButtonStyle
org.jitsi.meet.sdk.R$attr: int borderlessButtonStyle
com.horcrux.svg.RenderableViewManager$TSpanViewManager: RenderableViewManager$TSpanViewManager()
com.facebook.react.devsupport.DevServerHelper: java.lang.String access$600(com.facebook.react.devsupport.DevServerHelper,android.content.Context,java.lang.String)
org.jitsi.meet.R$attr: int dividerVertical
org.jitsi.meet.sdk.R$style: int AlertDialog_AppCompat_Light
okhttp3.internal.http.StatusLine: okhttp3.Protocol protocol
org.jitsi.meet.sdk.R$attr: int toolbarNavigationButtonStyle
com.facebook.react.modules.dialog.DialogModule
okhttp3.internal.http2.Http2Connection: boolean client
org.webrtc.MediaCodecVideoDecoderFactory: android.media.MediaCodecInfo findCodecForType(org.webrtc.VideoCodecMimeType)
com.dropbox.core.v2.teamlog.GetTeamEventsErrorException
okhttp3.Response$Builder: okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String)
org.jitsi.meet.sdk.R$dimen: int tooltip_horizontal_padding
com.horcrux.svg.R$style: int Theme_Catalyst_RedBox
org.webrtc.HardwareVideoEncoder$1
org.webrtc.RtpReceiver: java.lang.String id()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: com.facebook.react.bridge.JavaScriptExecutor create()
org.jitsi.meet.sdk.R$dimen: int abc_edit_text_inset_horizontal_material
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
org.webrtc.EglBase14Impl: int EGLExt_SDK_VERSION
okhttp3.Request: java.lang.String toString()
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_NoActionBar
com.horcrux.svg.R$style: int Base_V21_Theme_AppCompat_Dialog
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String NAME
okhttp3.Cache: int readInt(okio.BufferedSource)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
org.jitsi.meet.sdk.net.NAT64AddrInfoModule: java.lang.String getName()
com.rnimmersive.RNImmersiveModule: boolean access$000(com.rnimmersive.RNImmersiveModule)
org.webrtc.audio.WebRtcAudioEffects: void release()
org.webrtc.Logging: java.lang.String getStackTraceString(java.lang.Throwable)
org.jitsi.meet.R$raw: int node_modules_csstree_data_patch
com.horcrux.svg.R$styleable: int AppCompatTextView_autoSizeStepGranularity
okhttp3.internal.platform.ConscryptPlatform: ConscryptPlatform()
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger mPendingJSCalls
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
okhttp3.internal.http1.Http1Codec: int STATE_OPEN_REQUEST_BODY
org.jitsi.meet.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
com.horcrux.svg.R$styleable: int LinearLayoutCompat_android_gravity
com.horcrux.svg.R$styleable: int GradientColor_android_endX
okio.BufferedSource: void skip(long)
com.facebook.react.views.text.ReactTextViewManager: com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.oney.WebRTCModule.RTCVideoViewManager: void setZOrder(com.oney.WebRTCModule.WebRTCView,int)
okhttp3.OkHttpClient$Builder: int readTimeout
com.facebook.react.bridge.CatalystInstanceImpl$1$1
okhttp3.internal.Internal: void setCache(okhttp3.OkHttpClient$Builder,okhttp3.internal.cache.InternalCache)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
com.horcrux.svg.R$drawable: int abc_scrubber_primary_mtrl_alpha
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
okhttp3.internal.connection.RealConnection: void establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector,int,okhttp3.Call,okhttp3.EventListener)
org.jitsi.meet.sdk.R$string: int abc_action_mode_done
okhttp3.internal.io.FileSystem$1: okio.Source source(java.io.File)
okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()
com.horcrux.svg.RenderableView: int vectorEffect
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightPercent(long,float)
okio.Timeout$1: okio.Timeout deadlineNanoTime(long)
com.facebook.react.animated.NativeAnimatedModule: void startAnimatingNode(int,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: java.lang.String getName()
org.jitsi.meet.sdk.log.JitsiMeetLogger: void addHandler(org.jitsi.meet.sdk.log.JitsiMeetBaseLogHandler)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
org.jitsi.meet.sdk.AudioModeModule: java.util.Set access$000(org.jitsi.meet.sdk.AudioModeModule)
org.webrtc.CallSessionFileRotatingLogSink: byte[] getLogData(java.lang.String)
com.horcrux.svg.R$style: int Widget_AppCompat_Spinner_Underlined
androidx.drawerlayout.widget.DrawerLayout
org.jitsi.meet.R$styleable: int[] AlertDialog
okhttp3.internal.http.RetryAndFollowUpInterceptor
okhttp3.internal.ws.RealWebSocket$2: okhttp3.internal.ws.RealWebSocket this$0
okhttp3.Request$Builder: okhttp3.Request$Builder delete(okhttp3.RequestBody)
com.horcrux.svg.TextView: void setMethod(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewModule: int PICKER_LEGACY
org.webrtc.ThreadUtils$1Result: ThreadUtils$1Result()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String)
okio.AsyncTimeout: boolean exit()
com.horcrux.svg.R$styleable: int FontFamilyFont_android_font
org.webrtc.PeerConnection: java.util.List nativeGetSenders()
org.jitsi.meet.sdk.R$integer: int cancel_button_image_alpha
org.webrtc.RtpParameters$Encoding: java.lang.Integer numTemporalLayers
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
org.webrtc.audio.WebRtcAudioTrack: void nativeGetPlayoutData(long,int)
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
org.webrtc.voiceengine.WebRtcAudioManager: boolean getStereoInput()
com.horcrux.svg.R$styleable: int GradientColor_android_centerX
okhttp3.internal.connection.RealConnection: void connectTunnel(int,int,int,okhttp3.Call,okhttp3.EventListener)
com.horcrux.svg.R$integer: int react_native_inspector_proxy_port
org.webrtc.VideoCodecStatus: org.webrtc.VideoCodecStatus ERR_REQUEST_SLI
com.horcrux.svg.R$attr: int dividerPadding
com.squareup.duktape.Duktape: long get(long,java.lang.String,java.lang.Object[])
com.dropbox.core.ProtocolException
org.jitsi.meet.R$drawable: int abc_switch_track_mtrl_alpha
com.facebook.react.devsupport.JSDebuggerWebSocketClient: void sendMessage(int,java.lang.String)
org.webrtc.FileVideoCapturer: FileVideoCapturer(java.lang.String)
com.facebook.react.devsupport.interfaces.DevSupportManager: void reloadSettings()
org.jitsi.meet.sdk.R$string: int header_description
okhttp3.FormBody$Builder: FormBody$Builder()
org.webrtc.HardwareVideoEncoder$YuvFormat$1: void fillBuffer(java.nio.ByteBuffer,org.webrtc.VideoFrame$Buffer)
com.horcrux.svg.R$style: int Base_Theme_AppCompat_DialogWhenLarge
org.jitsi.meet.R$style: int Widget_Compat_NotificationActionContainer
com.calendarevents.CalendarEvents: com.facebook.react.bridge.WritableNativeMap findEventInstanceById(java.lang.String)
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Response response
okhttp3.internal.http2.Http2Reader: java.util.logging.Logger logger
org.jitsi.meet.sdk.R$attr: int actionModePopupWindowStyle
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void onHostResume()
org.jitsi.meet.R$attr: int actionModeSplitBackground
org.webrtc.PeerConnection: org.webrtc.RtpSender nativeCreateSender(java.lang.String,java.lang.String)
com.horcrux.svg.R$attr: int placeholderImage
com.facebook.yoga.YogaNative: void jni_YGNodeInsertChild(long,long,int)
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(java.lang.String,int)
okio.GzipSource: void checkEqual(java.lang.String,int,int)
com.facebook.hermes.unicode.AndroidUnicodeUtils: AndroidUnicodeUtils()
com.horcrux.svg.R$styleable: int StateListDrawableItem_android_drawable
com.facebook.react.bridge.queue.MessageQueueThreadHandler: void dispatchMessage(android.os.Message)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
org.webrtc.TextureBufferImpl: int unscaledHeight
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarTabBarStyle
com.facebook.react.bridge.ReadableArray: boolean isNull(int)
com.learnium.RNDeviceInfo.RNDeviceModule: void getType(com.facebook.react.bridge.Promise)
com.horcrux.svg.R$style: int Base_V23_Theme_AppCompat_Light
okhttp3.internal.http1.Http1Codec$AbstractSource: boolean closed
com.facebook.react.devsupport.DevServerHelper: boolean getDevMode()
org.webrtc.EglBase: int[] CONFIG_PIXEL_BUFFER
com.facebook.react.views.checkbox.ReactCheckBoxManager
org.jitsi.meet.R$id: int useLogo
org.jitsi.meet.sdk.R$dimen: int abc_control_padding_material
org.webrtc.audio.WebRtcAudioUtils: java.lang.String audioSourceToString(int)
org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode: WebRtcAudioRecord$AudioRecordStartErrorCode(java.lang.String,int)
okhttp3.Interceptor$Chain: okhttp3.Call call()
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache$Editor edit()
com.facebook.react.bridge.JavaMethodWrapper$4: java.lang.Integer extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.bridge.ReactMarker: java.util.List sFabricMarkerListeners
org.webrtc.Camera2Session: void stop()
androidx.fragment.app.Fragment: boolean mInLayout
com.facebook.react.modules.blob.FileReaderModule
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String mLastBatteryState
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void updateExtraData(android.view.View,java.lang.Object)
okio.RealBufferedSource: java.lang.String readString(java.nio.charset.Charset)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzw)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.horcrux.svg.R$attr: int windowMinWidthMajor
com.horcrux.svg.R$styleable: int[] CompoundButton
com.calendarevents.CalendarEvents: CalendarEvents(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.uimanager.ViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.CipherSuite: java.lang.String toString()
com.horcrux.svg.R$anim: int abc_shrink_fade_out_from_bottom
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_android_windowIsFloating
okhttp3.Response: okhttp3.Response networkResponse()
com.facebook.react.bridge.queue.MessageQueueThreadSpec: MessageQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String)
okhttp3.Cache: int requestCount
org.webrtc.CameraEnumerationAndroid$CaptureFormat: int frameSize(int,int,int)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void swapLeftAndRightInRTL(boolean)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSink sink
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_Light_NoActionBar
org.webrtc.EglRenderer: void logW(java.lang.String)
okhttp3.internal.http2.Hpack$Reader: int dynamicTableByteCount
org.jitsi.meet.sdk.R$styleable: int Toolbar_subtitle
org.webrtc.TimestampAligner: long nativeTimestampAligner
okio.BufferedSource: long indexOf(byte,long)
org.jitsi.meet.R$attr: int actionModeSelectAllDrawable
org.webrtc.audio.WebRtcAudioUtils: java.lang.String getThreadInfo()
com.horcrux.svg.R$drawable: int abc_text_select_handle_middle_mtrl_light
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.facebook.react.views.textinput.ReactTextInputManager: void setColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
com.facebook.react.uimanager.LayoutShadowNode: void setFlexBasis(com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.LayoutShadowNode: void setMaxHeight(com.facebook.react.bridge.Dynamic)
org.jitsi.meet.R$attr: int thumbTint
com.facebook.react.devsupport.InspectorPackagerConnection
com.facebook.react.devsupport.StackTraceHelper: com.facebook.react.devsupport.interfaces.StackFrame[] convertJsStackTrace(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void startListeningToAnimatedNodeValue(int)
org.webrtc.audio.WebRtcAudioRecord: void reportWebRtcAudioRecordStartError(org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode,java.lang.String)
org.jitsi.meet.R$attr: int titleMarginEnd
org.webrtc.PeerConnection$TcpCandidatePolicy: org.webrtc.PeerConnection$TcpCandidatePolicy valueOf(java.lang.String)
com.horcrux.svg.TextView: void setPositionX(com.facebook.react.bridge.Dynamic)
com.facebook.react.devsupport.DevServerHelper$5: void onPostExecute(java.lang.Boolean)
okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)
kotlin.TypeCastException: TypeCastException()
okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection,boolean)
org.jitsi.meet.R$style: int ClockTimePickerDialog
org.webrtc.VideoCodecInfo: boolean equals(java.lang.Object)
okhttp3.CacheControl: int sMaxAgeSeconds()
org.webrtc.voiceengine.WebRtcAudioRecord: int channelCountToConfiguration(int)
org.jitsi.meet.sdk.R$id: int off
com.facebook.react.modules.datepicker.DatePickerMode: com.facebook.react.modules.datepicker.DatePickerMode[] values()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverflow(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
org.webrtc.VideoEncoderFactory$VideoEncoderSelector: org.webrtc.VideoCodecInfo onEncoderBroken()
org.webrtc.EglRenderer: boolean usePresentationTimeStamp
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: java.lang.String subject
org.webrtc.RendererCommon$1: int[] $SwitchMap$org$webrtc$RendererCommon$ScalingType
androidx.core.os.OperationCanceledException: OperationCanceledException()
org.webrtc.PeerConnectionFactory$InitializationOptions$Builder: boolean enableInternalTracer
com.horcrux.svg.RenderableViewManager$SymbolManager: void setMinY(com.horcrux.svg.SymbolView,float)
org.jitsi.meet.sdk.BroadcastEvent$Type: org.jitsi.meet.sdk.BroadcastEvent$Type CONFERENCE_JOINED
org.jitsi.meet.R$dimen: int tooltip_precise_anchor_extra_offset
com.dropbox.core.v2.files.GetThumbnailBatchErrorException
okhttp3.internal.http2.Http2Reader: int lengthWithoutPadding(int,byte,short)
org.webrtc.SurfaceTextureHelper: void access$200(org.webrtc.SurfaceTextureHelper)
com.horcrux.svg.R$styleable: int SearchView_queryHint
okio.RealBufferedSink
com.facebook.react.modules.image.ImageLoaderModule: android.util.SparseArray mEnqueuedRequests
org.webrtc.PeerConnection$SignalingState: org.webrtc.PeerConnection$SignalingState HAVE_LOCAL_PRANSWER
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_roundingBorderPadding
com.facebook.react.devsupport.InspectorPackagerConnection: void handleProxyMessage(org.json.JSONObject)
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactScrollView,java.lang.String)
org.jitsi.meet.R$attr: int subtitleTextColor
org.jitsi.meet.R$styleable: int Toolbar_contentInsetEnd
org.jitsi.meet.R$id: int activity_chooser_view_content
org.webrtc.audio.WebRtcAudioRecord: void doAudioRecordStateCallback(int)
org.webrtc.PeerConnectionFactory: java.lang.String VIDEO_CAPTURER_THREAD_NAME
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean getDoInput()
com.google.android.gms.internal.measurement.zzcd$zzk: long zzd
okhttp3.ConnectionPool: long cleanup(long)
org.jitsi.meet.R$styleable: int ActionMode_titleTextStyle
com.google.gson.reflect.TypeToken: TypeToken()
org.jitsi.meet.sdk.BroadcastEmitter: void sendBroadcast(java.lang.String,com.facebook.react.bridge.ReadableMap)
okhttp3.internal.connection.RealConnection: int MAX_TUNNEL_ATTEMPTS
com.facebook.jni.MapIteratorHelper: java.lang.Object mKey
com.reactnativecommunity.webview.RNCWebViewManager: void setMessagingEnabled(android.webkit.WebView,boolean)
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType valueOf(java.lang.String)
okhttp3.RealCall: okhttp3.OkHttpClient client
org.jitsi.meet.R$attr: int thumbTintMode
com.horcrux.svg.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
org.jitsi.meet.sdk.R$id: int src_in
org.webrtc.GlGenericDrawer$ShaderType: org.webrtc.GlGenericDrawer$ShaderType RGB
org.jitsi.meet.R$styleable: int MenuItem_tooltipText
org.webrtc.SoftwareVideoDecoderFactory: org.webrtc.VideoCodecInfo[] supportedCodecs()
com.horcrux.svg.R$string: int catalyst_debug_connecting
okhttp3.internal.ws.RealWebSocket$1
org.webrtc.PeerConnectionFactory$InitializationOptions: org.webrtc.Loggable loggable
org.jitsi.meet.R$string: int catalyst_settings_title
org.webrtc.PeerConnectionFactory: boolean internalTracerInitialized
okhttp3.Cache: java.io.File directory()
okhttp3.TlsVersion: java.util.List forJavaNames(java.lang.String[])
org.jitsi.meet.R$raw: int lang_languagesengb
org.webrtc.Camera2Session: android.hardware.camera2.CameraDevice access$702(org.webrtc.Camera2Session,android.hardware.camera2.CameraDevice)
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setRegistry(com.facebook.react.bridge.NativeModuleRegistry)
org.webrtc.Predicate$1: boolean test(java.lang.Object)
org.webrtc.Camera1Capturer: void switchCamera(org.webrtc.CameraVideoCapturer$CameraSwitchHandler,java.lang.String)
org.jitsi.meet.BuildConfig: int VERSION_CODE
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
org.jitsi.meet.sdk.R$style: int Theme_Catalyst
org.webrtc.SurfaceTextureHelper: android.graphics.SurfaceTexture surfaceTexture
okhttp3.internal.tls.TrustRootIndex
org.webrtc.audio.WebRtcAudioTrack: org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStateCallback stateCallback
okhttp3.internal.http.RealInterceptorChain: int writeTimeoutMillis()
okhttp3.internal.cache.DiskLruCache$Editor$1: void onException(java.io.IOException)
org.webrtc.RendererCommon$VideoLayoutMeasure: float visibleFractionMismatchOrientation
org.webrtc.MediaStreamTrack: org.webrtc.MediaStreamTrack createMediaStreamTrack(long)
org.jitsi.meet.R$attr: int defaultQueryHint
org.jitsi.meet.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
com.horcrux.svg.R$dimen: int tooltip_precise_anchor_extra_offset
com.facebook.react.uimanager.RootViewManager
com.horcrux.svg.R$style: int Base_V23_Theme_AppCompat
com.facebook.react.devsupport.RedBoxDialog$StackAdapter$FrameViewHolder
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
org.webrtc.audio.WebRtcAudioTrack: void reportWebRtcAudioTrackStartError(org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode,java.lang.String)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
com.horcrux.svg.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setSrc(com.horcrux.svg.ImageView,com.facebook.react.bridge.ReadableMap)
org.webrtc.Priority: int MEDIUM
okio.RealBufferedSink: long writeAll(okio.Source)
com.facebook.react.uimanager.ViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
okhttp3.Request: java.lang.String method()
com.facebook.react.views.art.ARTShapeShadowNode: void setFill(com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setMostRecentEventCount(int)
org.webrtc.PeerConnection$IceServer: org.webrtc.PeerConnection$IceServer$Builder builder(java.lang.String)
com.facebook.react.bridge.ModuleHolder: void doInitialize(com.facebook.react.bridge.NativeModule)
okhttp3.internal.cache.DiskLruCache: java.io.File journalFileTmp
com.facebook.react.bridge.DynamicFromObject: int asInt()
com.dropbox.core.ServerException
okhttp3.Cache$2: boolean hasNext()
org.webrtc.PeerConnection$RtcpMuxPolicy
org.jitsi.meet.sdk.net.NAT64AddrInfo: java.lang.String suffix
org.webrtc.NativeLibrary: boolean isLoaded()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
com.horcrux.svg.R$color: int secondary_text_default_material_light
org.jitsi.meet.R$attr: int actionModeFindDrawable
org.webrtc.audio.WebRtcAudioRecord: WebRtcAudioRecord(android.content.Context,java.util.concurrent.ScheduledExecutorService,android.media.AudioManager,int,int,org.webrtc.audio.JavaAudioDeviceModule$AudioRecordErrorCallback,org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStateCallback,org.webrtc.audio.JavaAudioDeviceModule$SamplesReadyCallback,boolean,boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
com.facebook.react.bridge.WindowFocusChangeListener: void onWindowFocusChange(boolean)
com.facebook.react.views.art.ARTRenderableViewManager
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandlerWrapper
org.webrtc.SessionDescription$Type: org.webrtc.SessionDescription$Type valueOf(java.lang.String)
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: NativeJpegTranscoderFactory(int,boolean)
com.facebook.react.bridge.NativeArrayInterface
okio.Pipe$PipeSink
org.webrtc.voiceengine.WebRtcAudioRecord: void setMicrophoneMute(boolean)
com.facebook.react.views.image.ReactImageManager: java.lang.Object getCallerContext()
org.jitsi.meet.sdk.R$dimen: int compat_control_corner_material
org.webrtc.RtpParameters$Encoding: java.lang.String rid
org.webrtc.SurfaceTextureHelper
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.String getName()
okhttp3.RealCall: okio.AsyncTimeout timeout
co.apptailor.googlesignin.RNGoogleSigninModule: void signIn(com.facebook.react.bridge.Promise)
okhttp3.internal.ws.RealWebSocket: void runWriter()
org.webrtc.VideoEncoderFallback: org.webrtc.VideoEncoder primary
okio.GzipSource: byte SECTION_BODY
org.jitsi.meet.sdk.R$string: int catalyst_dismiss_button
org.jitsi.meet.R$attr: int listPreferredItemHeight
okhttp3.Cache: long size()
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getContentEncoding()
okhttp3.internal.cache.DiskLruCache$3
org.webrtc.WrappedNativeI420Buffer: org.webrtc.VideoFrame$I420Buffer toI420()
com.dropbox.core.DbxApiException
com.google.android.gms.internal.measurement.zzca$zzb: com.google.android.gms.internal.measurement.zzid zzh
org.webrtc.HardwareVideoEncoder: org.webrtc.VideoCodecStatus initEncodeInternal()
org.webrtc.audio.WebRtcAudioTrack$AudioTrackThread: int writeBytes(android.media.AudioTrack,java.nio.ByteBuffer,int)
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Small
org.webrtc.voiceengine.WebRtcAudioManager: void assertTrue(boolean)
com.facebook.react.modules.fresco.FrescoModule: void clearSensitiveData()
com.facebook.react.modules.core.Timing: void onHeadlessJsTaskStart(int)
org.jitsi.meet.R$color: int primary_material_dark
com.horcrux.svg.R$id: int tag_unhandled_key_listeners
com.facebook.react.modules.timepicker.TimePickerDialogModule: java.lang.String ACTION_DISMISSED
com.facebook.react.views.textinput.ReactTextInputManager: void setFontSize(com.facebook.react.views.textinput.ReactEditText,float)
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_roundBottomStart
org.jitsi.meet.sdk.R$styleable: int ActionBar_subtitle
org.jitsi.meet.R$style: int AlertDialog_AppCompat_Light
com.facebook.react.views.art.ARTSurfaceViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.webrtc.audio.WebRtcAudioUtils: java.lang.String streamTypeToString(int)
okio.AsyncTimeout: long remainingNanos(long)
okhttp3.internal.http.HttpDate: java.lang.String format(java.util.Date)
org.webrtc.Camera1Session: void create(org.webrtc.CameraSession$CreateSessionCallback,org.webrtc.CameraSession$Events,boolean,android.content.Context,org.webrtc.SurfaceTextureHelper,java.lang.String,int,int,int)
org.jitsi.meet.R$styleable: int Toolbar_titleMarginEnd
okhttp3.internal.http.RealInterceptorChain: java.util.List interceptors
com.facebook.react.bridge.JSBundleLoader$4
com.google.android.gms.internal.measurement.zzcd$zzf
org.webrtc.PeerConnection: void nativeSetAudioRecording(boolean)
com.horcrux.svg.R$styleable: int ViewBackgroundHelper_backgroundTintMode
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean)
com.horcrux.svg.R$attr: int actionModeCutDrawable
com.horcrux.svg.CircleView
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ActionBar_TabView
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String)
org.jitsi.meet.R$style: int Widget_AppCompat_TextView
org.webrtc.Camera2Session: android.view.Surface surface
org.webrtc.EglBase10Impl: void createDummyPbufferSurface()
org.jitsi.meet.sdk.R$attr: int editTextStyle
org.jitsi.meet.sdk.R$id: int end
org.webrtc.DefaultVideoDecoderFactory: org.webrtc.VideoCodecInfo[] getSupportedCodecs()
okio.GzipSource: okio.InflaterSource inflaterSource
okhttp3.internal.http1.Http1Codec$FixedLengthSource: okhttp3.internal.http1.Http1Codec this$0
org.jitsi.meet.R$attr: int progressBarAutoRotateInterval
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
org.webrtc.SurfaceTextureHelper: void tryDeliverTextureFrame()
org.webrtc.voiceengine.WebRtcAudioRecord: void releaseAudioResources()
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableArray getSupported64BitAbisSync()
okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()
org.jitsi.meet.sdk.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
com.facebook.react.devsupport.DevSupportManagerImpl: java.util.Map mCustomPackagerCommandHandlers
com.horcrux.svg.TextPathView: void setSpacing(java.lang.String)
org.webrtc.PeerConnectionFactory$Options: int ADAPTER_TYPE_WIFI
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256
okhttp3.RealCall: boolean executed
org.webrtc.Camera1Session$SessionState: Camera1Session$SessionState(java.lang.String,int)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
com.horcrux.svg.R$attr: int toolbarNavigationButtonStyle
com.horcrux.svg.RenderableView: android.graphics.Region getRegion(android.graphics.Path,android.graphics.RectF)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
com.horcrux.svg.SvgView: void setBbWidth(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.VirtualView: android.graphics.RectF mBox
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PERCENTAGE
com.google.android.gms.common.SignInButton: void setScopes(com.google.android.gms.common.api.Scope[])
org.webrtc.PeerConnectionFactory: void nativeInitializeAndroidGlobals()
com.facebook.react.views.art.ARTTextViewManager: ARTTextViewManager()
com.oney.WebRTCModule.WebRTCModule: void mediaStreamTrackSetEnabledAsync(java.lang.String,boolean)
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Integer iceCheckIntervalStrongConnectivityMs
com.horcrux.svg.UseView: void setHeight(com.facebook.react.bridge.Dynamic)
org.jitsi.meet.R$drawable: int abc_list_pressed_holo_dark
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight valueOf(java.lang.String)
org.jitsi.meet.sdk.R$drawable: int googleg_disabled_color_18
org.jitsi.meet.R$style: int Widget_AppCompat_Spinner
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService: boolean isAudioMuted
org.jitsi.meet.sdk.ParticipantsService$2
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
com.google.android.gms.common.api.ApiException
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.ReactInstanceManagerDevHelper access$1100(com.facebook.react.devsupport.DevSupportManagerImpl)
com.oney.WebRTCModule.WebRTCModule: void enumerateDevices(com.facebook.react.bridge.Callback)
org.jitsi.meet.sdk.R$attr: int textAppearanceListItem
org.jitsi.meet.sdk.BroadcastEvent$Type: java.lang.String CHAT_TOGGLED_NAME
androidx.appcompat.widget.AppCompatImageButton
org.webrtc.Camera2Session: org.webrtc.Histogram camera2StartTimeMsHistogram
org.jitsi.meet.R$style: int Base_V7_Widget_AppCompat_EditText
com.facebook.react.devsupport.RedBoxHandler$ErrorType: java.lang.String getName()
okhttp3.internal.http2.Http2Connection: boolean receivedInitialPeerSettings
okhttp3.internal.tls.DistinguishedNameParser: int end
okhttp3.internal.huc.DelegatingHttpsURLConnection: DelegatingHttpsURLConnection(java.net.HttpURLConnection)
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
com.horcrux.svg.RenderableView: float strokeOpacity
com.facebook.jni.UnknownCppException: UnknownCppException(java.lang.String)
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
org.jitsi.meet.R$attr: int actualImageResource
org.webrtc.RTCStats: java.util.Map members
com.facebook.react.modules.permissions.PermissionsModule: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
org.webrtc.YuvConverter$ShaderCallbacks: void setPlaneU()
okhttp3.Cookie: boolean pathMatch(okhttp3.HttpUrl,java.lang.String)
okio.Buffer: long writeAll(okio.Source)
com.facebook.react.bridge.WritableNativeMap: void putDouble(java.lang.String,double)
com.horcrux.svg.R$style: int Animation_AppCompat_Dialog
org.webrtc.audio.WebRtcAudioManager
org.jitsi.meet.R$attr: int drawableBottomCompat
com.horcrux.svg.R$string: int abc_menu_ctrl_shortcut_label
okio.Segment: Segment(byte[],int,int,boolean,boolean)
org.webrtc.EglBase14Impl: void checkIsNotReleased()
org.webrtc.EglBase: int[] CONFIG_PIXEL_RGBA_BUFFER
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType String
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action: org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action[] values()
com.facebook.react.devsupport.DevSupportManagerImpl$25: boolean val$isHotModuleReplacementEnabled
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.bridge.NativeModule)
org.jitsi.meet.R$dimen: int compat_button_inset_horizontal_material
org.jitsi.meet.sdk.R$id: int notification_background
org.jitsi.meet.sdk.R$dimen: int abc_action_bar_elevation_material
org.webrtc.SurfaceTextureHelper$3: org.webrtc.SurfaceTextureHelper this$0
com.horcrux.svg.R$id: int message
org.jitsi.meet.sdk.R$integer: int config_tooltipAnimTime
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener
com.horcrux.svg.R$string: int catalyst_change_bundle_location
com.google.android.gms.internal.measurement.zzcd$zzj: com.google.android.gms.internal.measurement.zzie zze
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.devsupport.InspectorPackagerConnection mInspectorPackagerConnection
com.facebook.react.devsupport.RedBoxDialog: android.view.View access$500(com.facebook.react.devsupport.RedBoxDialog)
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
org.jitsi.meet.sdk.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isHeadphonesConnectedSync()
org.jitsi.meet.R$attr: int backgroundTint
com.horcrux.svg.R$styleable: int AppCompatTheme_actionButtonStyle
com.facebook.common.references.SharedReference$NullReferenceException: SharedReference$NullReferenceException()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long)
okhttp3.internal.http.RealResponseBody
com.horcrux.svg.SvgViewManager: SvgViewManager()
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableType getType(java.lang.String)
com.facebook.react.bridge.ModuleSpec: java.lang.Class mType
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzab
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String mName
com.facebook.react.modules.fresco.FrescoModule: boolean hasBeenInitialized()
androidx.core.app.ComponentActivity: androidx.collection.SimpleArrayMap mExtraDataMap
org.jitsi.meet.R$styleable: int SearchView_iconifiedByDefault
com.dropbox.core.v2.teamcommon.MemberSpaceLimitType: com.dropbox.core.v2.teamcommon.MemberSpaceLimitType valueOf(java.lang.String)
okio.Pipe$PipeSink: okio.Timeout timeout()
org.jitsi.meet.R$style: int Theme_Catalyst
com.facebook.react.modules.storage.AsyncStorageModule: int MAX_SQL_KEYS
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
okio.Okio: okio.Source source(java.net.Socket)
org.jitsi.meet.sdk.R$color: int bright_foreground_disabled_material_light
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
okhttp3.OkUrlFactory: java.net.URLStreamHandler createURLStreamHandler(java.lang.String)
org.jitsi.meet.sdk.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
com.horcrux.svg.R$attr: int roundingBorderWidth
com.facebook.yoga.YogaUnit
org.webrtc.MediaStreamTrack: java.lang.String AUDIO_TRACK_KIND
org.jitsi.meet.sdk.ProximityModule: android.os.PowerManager$WakeLock access$000(org.jitsi.meet.sdk.ProximityModule)
org.webrtc.PlatformSoftwareVideoDecoderFactory: PlatformSoftwareVideoDecoderFactory(org.webrtc.EglBase$Context)
org.webrtc.CameraSession$FailureType: org.webrtc.CameraSession$FailureType[] $VALUES
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.packagerconnection.JSPackagerClient access$002(com.facebook.react.devsupport.DevServerHelper,com.facebook.react.packagerconnection.JSPackagerClient)
org.jitsi.meet.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()
org.jitsi.meet.R$styleable: int AppCompatTheme_textAppearanceListItem
com.horcrux.svg.R$styleable: int Toolbar_titleTextColor
org.webrtc.audio.JavaAudioDeviceModule$Builder: java.util.concurrent.ScheduledExecutorService scheduler
com.facebook.react.devsupport.DevSupportManagerImpl: void reloadJSFromServer(java.lang.String)
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$BroadcastReceiver: org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService this$0
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
com.google.android.gms.internal.measurement.zzcd$zza: int zzc
org.jitsi.meet.R$styleable: int SimpleDraweeView_actualImageScaleType
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem updateLocalDataMountItem(int,com.facebook.react.bridge.ReadableMap)
okhttp3.HttpUrl: java.lang.String encodedUsername()
org.webrtc.NV12Buffer: java.nio.ByteBuffer buffer
org.jitsi.meet.sdk.ReactInstanceManagerHolder: android.app.Activity getCurrentActivity()
okhttp3.Connection
okhttp3.internal.http2.Http2Connection$Builder: boolean client
com.facebook.react.views.slider.ReactSliderManager: void setThumbTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer)
okhttp3.internal.http.CallServerInterceptor: CallServerInterceptor(boolean)
org.jitsi.meet.sdk.R$attr: int tintMode
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_textColorSearchUrl
org.webrtc.PeerConnection$PortPrunePolicy
com.facebook.react.bridge.UiThreadUtil: UiThreadUtil()
co.apptailor.googlesignin.RNGoogleSigninModule: android.app.Activity access$700(co.apptailor.googlesignin.RNGoogleSigninModule)
org.webrtc.MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl: java.nio.ByteBuffer[] getOutputBuffers()
com.horcrux.svg.R$attr: int selectableItemBackground
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response,okhttp3.Route)
com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType: com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType NATIVE
org.jitsi.meet.sdk.R$raw: int lang_languagessv
org.jitsi.meet.R$id: int fitBottomStart
org.webrtc.PeerConnection$RTCConfiguration: int getIceBackupCandidatePairPingInterval()
org.webrtc.CameraCapturer$9: CameraCapturer$9(org.webrtc.CameraCapturer,org.webrtc.CameraSession)
okio.Buffer: int select(okio.Options)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
org.webrtc.RtpSender: java.lang.String nativeGetId(long)
org.webrtc.audio.JavaAudioDeviceModule$AudioTrackErrorCallback: void onWebRtcAudioTrackInitError(java.lang.String)
com.horcrux.svg.R$style: int Platform_ThemeOverlay_AppCompat
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_GO_FORWARD
org.jitsi.meet.sdk.JitsiMeetFragment: void onStop()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followSslRedirects(boolean)
org.jitsi.meet.R$color: int common_google_signin_btn_text_light_default
com.horcrux.svg.R$styleable: int FontFamily_fontProviderCerts
com.horcrux.svg.R$styleable: int FontFamilyFont_fontVariationSettings
org.webrtc.MediaStream: boolean nativeAddVideoTrackToNativeStream(long,long)
org.webrtc.MediaStreamTrack: java.lang.String id()
com.horcrux.svg.R$id: int expand_activities_button
org.jitsi.meet.sdk.ConnectionService: android.telecom.Connection onCreateOutgoingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)
org.jitsi.meet.sdk.R$styleable: int[] MenuView
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String REACT_CLASS
okhttp3.RealCall: okhttp3.Response execute()
okhttp3.internal.http1.Http1Codec$FixedLengthSource: Http1Codec$FixedLengthSource(okhttp3.internal.http1.Http1Codec,long)
okhttp3.CacheControl: int minFreshSeconds()
org.jitsi.meet.sdk.R$string: int common_google_play_services_unsupported_text
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowFileAccess(android.webkit.WebView,java.lang.Boolean)
org.jitsi.meet.sdk.R$dimen: int notification_large_icon_height
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$Builder setScheduler(java.util.concurrent.ScheduledExecutorService)
com.facebook.react.devsupport.DevSupportManagerImpl$10: com.facebook.react.devsupport.DevSupportManagerImpl this$0
com.kevinresol.react_native_default_preference.RNDefaultPreferenceModule: void set(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
org.jitsi.meet.R$styleable: int SimpleDraweeView_progressBarImage
com.facebook.react.bridge.ReactMarker: void removeListener(com.facebook.react.bridge.ReactMarker$MarkerListener)
okhttp3.internal.huc.OkHttpsURLConnection: okhttp3.internal.huc.OkHttpURLConnection delegate
com.facebook.react.fabric.FabricUIManager: com.facebook.react.fabric.mounting.mountitems.MountItem createMountItem(java.lang.String,com.facebook.react.bridge.ReadableMap,java.lang.Object,int,int,boolean)
okio.Buffer$2: int read()
org.webrtc.audio.VolumeLogger$LogVolumeTask: void run()
org.jitsi.meet.R$style: int Platform_ThemeOverlay_AppCompat_Light
org.webrtc.CameraCapturer$8: void run()
okhttp3.OkHttpClient: java.util.List protocols
org.webrtc.PlatformSoftwareVideoDecoderFactory
com.horcrux.svg.R$styleable: int ActionBar_homeLayout
okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
org.webrtc.DtmfSender: int nativeDuration(long)
org.webrtc.FrameEncryptor: long getNativeFrameEncryptor()
com.learnium.RNDeviceInfo.RNDeviceModule: long getTotalAvailableBlocks(android.os.StatFs,java.lang.Boolean)
org.webrtc.Logging$TraceLevel: org.webrtc.Logging$TraceLevel TRACE_ERROR
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType UIManager
okhttp3.internal.http1.Http1Codec: int STATE_READING_RESPONSE_BODY
org.webrtc.Logging: void nativeEnableLogThreads()
org.webrtc.PeerConnection$IceConnectionState: org.webrtc.PeerConnection$IceConnectionState DISCONNECTED
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$1: com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback val$callback
org.jitsi.meet.sdk.R$id: int tag_accessibility_actions
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
androidx.core.os.OperationCanceledException
okio.Pipe$PipeSource: okio.Timeout timeout()
org.jitsi.meet.R$styleable: int CompoundButton_buttonTint
co.apptailor.googlesignin.RNGoogleSigninModule: java.lang.String SHOULD_RECOVER
org.jitsi.meet.sdk.BroadcastIntentHelper: android.content.Intent buildSetAudioMutedIntent(boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService
org.webrtc.PeerConnectionFactory: boolean nativeStartInternalTracingCapture(java.lang.String)
com.horcrux.svg.R$id: int action_container
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
org.webrtc.voiceengine.WebRtcAudioManager: int getSampleRateForApiLevel()
okhttp3.Connection: okhttp3.Route route()
okhttp3.ResponseBody$BomAwareReader: void close()
com.horcrux.svg.RenderableViewManager$UseViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
com.facebook.react.bridge.ReadableNativeArray: int getJNIPassCounter()
com.facebook.react.bridge.CxxCallbackImpl: CxxCallbackImpl(com.facebook.jni.HybridData)
org.webrtc.CameraSession$FailureType: org.webrtc.CameraSession$FailureType ERROR
org.webrtc.NetworkChangeDetectorFactory: org.webrtc.NetworkChangeDetector create(org.webrtc.NetworkChangeDetector$Observer,android.content.Context)
com.facebook.react.devsupport.DevServerHelper: boolean getJSMinifyMode()
com.horcrux.svg.R$style: int Base_V28_Theme_AppCompat_Light
com.oney.WebRTCModule.WebRTCView: void setZOrder(int)
com.facebook.react.bridge.DynamicFromMap: java.lang.String mName
com.google.android.gms.measurement.AppMeasurement
org.jitsi.meet.sdk.ExternalAPIModule: java.lang.String NAME
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
org.webrtc.CryptoOptions$Builder: org.webrtc.CryptoOptions$Builder setEnableAes128Sha1_32CryptoCipher(boolean)
org.jitsi.meet.sdk.R$id: int tag_unhandled_key_event_manager
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_START
org.webrtc.audio.WebRtcAudioTrack: void doAudioTrackStateCallback(int)
org.webrtc.CameraVideoCapturer$CameraSwitchHandler
org.jitsi.meet.sdk.R$raw: int node_modules_reactnative_package
com.facebook.react.devsupport.DevSupportManagerImpl$26: void run()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA
timber.log.Timber$Tree: void i(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.horcrux.svg.RenderableViewManager: void setMask(com.horcrux.svg.VirtualView,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void quitSynchronous()
com.horcrux.svg.R$color: int notification_icon_bg_color
com.facebook.react.bridge.JsonWriterHelper: void readableArrayValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableArray)
org.webrtc.HardwareVideoEncoder: int VIDEO_AVC_PROFILE_HIGH
com.facebook.react.views.text.ReactTextView: void setGravityVertical(int)
org.jitsi.meet.R$attr: int drawableEndCompat
org.webrtc.NV21Buffer: org.webrtc.RefCountDelegate refCountDelegate
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Button_Small
org.jitsi.meet.sdk.R$id: int select_dialog_listview
org.webrtc.PeerConnection: org.webrtc.RtcCertificatePem getCertificate()
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()
okhttp3.CacheControl: boolean noStore
org.jitsi.meet.R$color: int material_grey_100
com.facebook.react.views.text.ReactTextAnchorViewManager: void setDisabled(com.facebook.react.views.text.ReactTextView,boolean)
org.jitsi.meet.R$attr: int spinBars
com.horcrux.svg.R$drawable: int abc_list_pressed_holo_dark
okhttp3.internal.http2.Hpack$Writer
com.facebook.react.devsupport.DevInternalSettings: boolean isAnimationFpsDebugEnabled()
org.jitsi.meet.sdk.R$id
com.learnium.RNDeviceInfo.RNDeviceModule: android.content.BroadcastReceiver headphoneConnectionReceiver
com.facebook.react.bridge.CatalystInstanceImpl: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidth(long,float)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket)
okhttp3.internal.publicsuffix.PublicSuffixDatabase
org.jitsi.meet.sdk.R$id: int action_mode_bar_stub
com.google.android.gms.internal.measurement.zzcd$zzg: long zzas
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
org.jitsi.meet.R$id: int FUNCTION
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MC_MODULE_GET_METADATA_END
org.webrtc.BuiltinAudioDecoderFactoryFactory: long nativeCreateBuiltinAudioDecoderFactory()
okhttp3.Response$Builder: okhttp3.Response$Builder code(int)
okio.AsyncTimeout$2: okio.Timeout timeout()
okhttp3.OkHttpClient: int pingIntervalMillis()
org.webrtc.JavaI420Buffer: void checkCapacity(java.nio.ByteBuffer,int,int,int)
org.webrtc.Camera2Session: android.hardware.camera2.CameraCaptureSession access$100(org.webrtc.Camera2Session)
org.webrtc.PeerConnection: void nativeFreeOwnedPeerConnection(long)
okhttp3.internal.huc.OkHttpsURLConnection: javax.net.ssl.HostnameVerifier getHostnameVerifier()
okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)
com.facebook.react.views.view.ReactViewGroup: void getClippingRect(android.graphics.Rect)
okhttp3.Interceptor$Chain: int connectTimeoutMillis()
com.horcrux.svg.R$anim: int abc_slide_out_bottom
org.webrtc.audio.WebRtcAudioRecord: org.webrtc.audio.JavaAudioDeviceModule$AudioRecordErrorCallback errorCallback
org.jitsi.meet.R$styleable: int[] SignInButton
org.webrtc.JniCommon: void nativeReleaseRef(long)
org.jitsi.meet.R$id: int accessibility_actions
org.jitsi.meet.R$drawable: int common_google_signin_btn_text_dark_normal_background
com.facebook.react.bridge.CatalystInstance: com.facebook.react.turbomodule.core.interfaces.JSCallInvokerHolder getJSCallInvokerHolder()
com.facebook.react.devsupport.BundleDeltaClient$BundleDeltaJavaClient: int setModules(android.util.JsonReader,java.util.TreeMap)
org.jitsi.meet.sdk.R$raw: int lang_mainca
org.webrtc.YuvConverter$ShaderCallbacks: float stepSize
org.webrtc.WebRtcClassLoader: java.lang.Object getClassLoader()
org.webrtc.voiceengine.WebRtcAudioUtils: java.lang.String[] BLACKLISTED_AEC_MODELS
androidx.fragment.app.Fragment: int RESUMED
org.jitsi.meet.R$color: int catalyst_redbox_background
org.jitsi.meet.R$styleable: int[] ActionBar
org.webrtc.AndroidVideoDecoder: org.webrtc.VideoFrame$Buffer copyI420Buffer(java.nio.ByteBuffer,int,int,int,int)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CANCEL
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsent(android.os.Bundle,long)
com.facebook.react.views.slider.ReactSliderManager: void setMinimumValue(com.facebook.react.views.slider.ReactSlider,double)
org.jitsi.meet.R$style: int Widget_AppCompat_Button_Borderless_Colored
org.webrtc.PeerConnectionFactory: java.lang.String fieldTrialsFindFullName(java.lang.String)
com.facebook.common.time.RealtimeSinceBootClock: RealtimeSinceBootClock()
androidx.fragment.app.Fragment: boolean mHasMenu
okio.RealBufferedSink: okio.BufferedSink writeHexadecimalUnsignedLong(long)
org.jitsi.meet.sdk.R$attr: int dialogPreferredPadding
com.facebook.react.views.viewpager.ReactViewPagerManager: android.view.View getChildAt(android.view.ViewGroup,int)
org.jitsi.meet.sdk.ConnectionService$ConnectionImpl: java.lang.String KEY_HAS_VIDEO
org.jitsi.meet.sdk.incoming_call.IncomingCallInfo: boolean hasVideo()
com.facebook.react.bridge.WritableNativeArray: WritableNativeArray()
com.facebook.react.modules.clipboard.ClipboardModule: ClipboardModule(android.content.Context)
okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])
com.horcrux.svg.R$id: int action_bar_container
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_progressBarImageScaleType
com.facebook.proguard.annotations.KeepGettersAndSetters
okio.Buffer: okio.Buffer copyTo(okio.Buffer,long,long)
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
com.facebook.react.bridge.GuardedResultAsyncTask: java.lang.Object doInBackground(java.lang.Void[])
okio.ByteString: boolean equals(java.lang.Object)
org.webrtc.ScreenCapturerAndroid: android.media.projection.MediaProjection getMediaProjection()
com.horcrux.svg.RenderableView: void setStrokeDashoffset(float)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: JavaMethodWrapper$ArgumentExtractor()
org.webrtc.RtpTransceiver: boolean nativeSetDirection(long,org.webrtc.RtpTransceiver$RtpTransceiverDirection)
okio.AsyncTimeout$2: AsyncTimeout$2(okio.AsyncTimeout,okio.Source)
okhttp3.Credentials
org.webrtc.NetworkChangeDetector$ConnectionType: org.webrtc.NetworkChangeDetector$ConnectionType CONNECTION_BLUETOOTH
okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)
androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
com.horcrux.svg.R$styleable: int AppCompatImageView_android_src
okhttp3.internal.ws.WebSocketWriter$FrameSink
org.webrtc.Camera1Session: boolean firstFrameReported
org.webrtc.AudioTrack: long getNativeAudioTrack()
com.facebook.react.bridge.NativeModuleRegistry: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
org.jitsi.meet.sdk.R$id: int fitCenter
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance mCatalystInstance
org.webrtc.EglBase$Context: long NO_CONTEXT
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric$3: org.jitsi.meet.sdk.AudioDeviceHandlerGeneric this$0
org.webrtc.audio.WebRtcAudioTrack: android.content.Context context
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ButtonBar
org.jitsi.meet.R$attr: int fontWeight
org.jitsi.meet.sdk.R$styleable: int TextAppearance_textAllCaps
org.webrtc.RtpParameters$HeaderExtension: boolean encrypted
org.jitsi.meet.R$integer: int abc_config_activityShortDur
org.webrtc.audio.WebRtcAudioTrack: android.media.AudioTrack audioTrack
com.facebook.react.devsupport.DevSupportManagerImpl: void reloadSettings()
org.webrtc.SurfaceViewRenderer: int rotatedFrameHeight
org.jitsi.meet.R$raw: int lang_languagesit
org.webrtc.NetworkMonitorAutoDetect$WifiDirectManagerDelegate: org.webrtc.NetworkChangeDetector$Observer observer
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String getHeaderField(java.lang.String)
org.jitsi.meet.MainActivity: MainActivity()
com.horcrux.svg.R$styleable: int[] AppCompatImageView
com.facebook.react.devsupport.WebsocketJavaScriptExecutor
org.jitsi.meet.sdk.BroadcastEvent$Type: java.lang.String CONFERENCE_WILL_JOIN_NAME
androidx.fragment.app.Fragment: android.view.View getAnimatingAway()
org.jitsi.meet.R$dimen: int notification_small_icon_size_as_large
com.horcrux.svg.R$layout: int abc_popup_menu_header_item_layout
okhttp3.internal.http2.Http2Connection: void setSettings(okhttp3.internal.http2.Settings)
androidx.fragment.app.Fragment: void setAllowEnterTransitionOverlap(boolean)
okhttp3.CacheControl: boolean noCache()
org.webrtc.EncodedImage$Builder: org.webrtc.EncodedImage$Builder setQp(java.lang.Integer)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
org.webrtc.PeerConnection$RTCConfiguration: boolean disableIpv6
org.webrtc.MediaConstraints: java.util.List getOptional()
com.horcrux.svg.R$id: int action_image
okhttp3.internal.http2.Huffman$Node: Huffman$Node()
okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor
org.jitsi.meet.R$id: int scrollView
okhttp3.RequestBody$3: java.io.File val$file
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: java.net.URL getServerURL()
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.database.ContentObserver animationScaleObserver
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
org.jitsi.meet.R$raw: int node_modules_csstree_node_modules_mdndata_css_syntaxes
org.webrtc.Camera2Session: org.webrtc.Histogram camera2ResolutionHistogram
okio.Buffer: okio.BufferedSink writeUtf8CodePoint(int)
org.webrtc.HardwareVideoEncoder$YuvFormat: HardwareVideoEncoder$YuvFormat(java.lang.String,int)
com.facebook.react.devsupport.DevServerHelper$1$4: void onDisconnected()
okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)
com.horcrux.svg.R$styleable: int GradientColorItem_android_offset
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray)
okhttp3.Cache$Entry: java.lang.String message
com.horcrux.svg.TextProperties$FontVariantLigatures: com.horcrux.svg.TextProperties$FontVariantLigatures valueOf(java.lang.String)
org.webrtc.HardwareVideoEncoder$1: void run()
com.horcrux.svg.R$styleable: int[] Toolbar
com.facebook.react.devsupport.InspectorPackagerConnection$Connection$1: InspectorPackagerConnection$Connection$1(com.facebook.react.devsupport.InspectorPackagerConnection$Connection)
okio.DeflaterSink: void finishDeflate()
com.facebook.react.devsupport.RedBoxDialog: android.widget.TextView mReportTextView
com.horcrux.svg.R$dimen: int abc_dialog_fixed_height_minor
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_viewAspectRatio
com.horcrux.svg.RenderableView: void setFillOpacity(float)
com.google.android.gms.internal.measurement.zzbv$zzd: com.google.android.gms.internal.measurement.zzbv$zzd zzi
org.webrtc.voiceengine.WebRtcAudioManager: boolean DEBUG
org.webrtc.RtpTransceiver: org.webrtc.RtpReceiver cachedReceiver
com.horcrux.svg.MarkerView: void setOrient(java.lang.String)
okhttp3.Response$Builder: okhttp3.Response$Builder removeHeader(java.lang.String)
org.jitsi.meet.sdk.R$raw: int node_modules_entities_lib_maps_xml
org.webrtc.voiceengine.WebRtcAudioTrack: void setErrorCallback(org.webrtc.voiceengine.WebRtcAudioTrack$WebRtcAudioTrackErrorCallback)
org.webrtc.YuvConverter: org.webrtc.VideoFrameDrawer videoFrameDrawer
org.webrtc.NetworkMonitorAutoDetect$NetworkState: NetworkMonitorAutoDetect$NetworkState(boolean,int,int,int,int)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA
org.webrtc.DataChannel$State
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.horcrux.svg.SvgView: com.horcrux.svg.Brush getDefinedBrush(java.lang.String)
org.jitsi.meet.R$style: int SpinnerTimePickerDialog
org.webrtc.CameraVideoCapturer$CameraStatistics$1: org.webrtc.CameraVideoCapturer$CameraStatistics this$0
org.webrtc.RtpTransceiver: void stopInternal()
okio.Okio$1: void write(okio.Buffer,long)
com.facebook.react.uimanager.ViewManager: void updateProperties(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap)
org.jitsi.meet.R$styleable: int AppCompatTextHelper_android_drawableTop
okhttp3.internal.cache.DiskLruCache$Snapshot: long[] lengths
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.AudioEncoderFactoryFactory audioEncoderFactoryFactory
okhttp3.WebSocketListener: WebSocketListener()
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$ResponseHandler mNetworkingResponseHandler
org.webrtc.JavaI420Buffer: org.webrtc.VideoFrame$Buffer cropAndScaleI420(org.webrtc.VideoFrame$I420Buffer,int,int,int,int,int,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
org.webrtc.RendererCommon: float BALANCED_VISIBLE_FRACTION
okhttp3.internal.platform.Jdk9Platform: java.lang.reflect.Method setProtocolMethod
org.jitsi.meet.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
org.jitsi.meet.sdk.R$styleable: int FontFamilyFont_android_font
com.facebook.react.devsupport.DevServerHelper: boolean access$800(com.facebook.react.devsupport.DevServerHelper)
com.facebook.react.views.view.ReactViewGroup: android.graphics.Path mPath
kotlin.TypeCastException
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.horcrux.svg.R$dimen: int abc_dialog_fixed_width_major
org.jitsi.meet.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
org.jitsi.meet.sdk.BroadcastEvent: BroadcastEvent(android.content.Intent)
org.webrtc.Camera2Session$CameraStateCallback: org.webrtc.Camera2Session this$0
okhttp3.OkHttpClient$1: boolean equalsNonHost(okhttp3.Address,okhttp3.Address)
org.jitsi.meet.R$styleable: int SimpleDraweeView_failureImage
com.dropbox.core.v2.files.GetTemporaryLinkErrorException
com.facebook.react.bridge.Dynamic: boolean asBoolean()
com.horcrux.svg.R$attr: int retryImageScaleType
org.jitsi.meet.R$anim: int catalyst_slide_up
com.horcrux.svg.R$color: int ripple_material_dark
com.horcrux.svg.R$drawable: int notification_icon_background
okhttp3.HttpUrl: java.lang.String QUERY_ENCODE_SET
org.webrtc.CameraVideoCapturer$CameraSwitchHandler: void onCameraSwitchDone(boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isPinOrFingerprintSetSync()
com.horcrux.svg.TextProperties$TextDecoration: com.horcrux.svg.TextProperties$TextDecoration[] values()
com.horcrux.svg.R$style: int Base_Animation_AppCompat_Dialog
com.facebook.react.views.textinput.ReactTextInputManager: void setEditable(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Object[] mArguments
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewBackgroundDrawable mReactBackgroundDrawable
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableTint
okhttp3.OkHttpClient$Builder
com.horcrux.svg.RenderableViewManager$ImageViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
org.jitsi.meet.sdk.R$styleable: int[] StateListDrawable
com.horcrux.svg.CircleView: void setR(com.facebook.react.bridge.Dynamic)
org.jitsi.meet.sdk.R$id: int rn_redbox_dismiss_button
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
org.webrtc.PeerConnection$RTCConfiguration: boolean getEnableDscp()
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,java.lang.String,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.R$attr: int borderlessButtonStyle
com.horcrux.svg.R$string: int spinbutton_description
com.horcrux.svg.RadialGradientView: void setCy(com.facebook.react.bridge.Dynamic)
org.webrtc.voiceengine.WebRtcAudioManager: int sampleRate
org.webrtc.NetworkMonitorAutoDetect$SimpleNetworkCallback: org.webrtc.NetworkMonitorAutoDetect this$0
okhttp3.Response$Builder: okhttp3.Response$Builder sentRequestAtMillis(long)
org.webrtc.voiceengine.WebRtcAudioTrack: android.media.AudioTrack audioTrack
org.webrtc.RtpParameters$Encoding: java.lang.Integer maxFramerate
com.facebook.react.devsupport.RedBoxDialog$StackAdapter: int VIEW_TYPE_TITLE
okhttp3.internal.Internal: boolean isInvalidHttpUrlHost(java.lang.IllegalArgumentException)
com.horcrux.svg.VirtualView: void clearChildCache()
org.jitsi.meet.sdk.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
androidx.fragment.app.Fragment: void setReenterTransition(java.lang.Object)
org.webrtc.voiceengine.WebRtcAudioTrack: long access$300(org.webrtc.voiceengine.WebRtcAudioTrack)
org.jitsi.meet.sdk.R$drawable: int common_google_signin_btn_icon_light_focused
com.horcrux.svg.R$attr: int textColorSearchUrl
com.horcrux.svg.RadialGradientView
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_android_textAppearance
org.webrtc.CameraVideoCapturer$CameraStatistics: int access$002(org.webrtc.CameraVideoCapturer$CameraStatistics,int)
org.jitsi.meet.R$string: int image_description
com.facebook.react.uimanager.UIManagerModule: void initialize()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void onAfterUpdateTransaction(android.view.View)
org.jitsi.meet.sdk.AudioModeModule: int access$400(org.jitsi.meet.sdk.AudioModeModule)
com.facebook.react.bridge.CatalystInstanceImpl$4: void run()
com.facebook.react.bridge.NativeArgumentsParseException: NativeArgumentsParseException(java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeightAuto(long)
org.webrtc.ScreenCapturerAndroid: int VIRTUAL_DISPLAY_DPI
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_ActionBar
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ARG_MINDATE
org.jitsi.meet.R$anim
org.webrtc.PlatformSoftwareVideoDecoderFactory$1: PlatformSoftwareVideoDecoderFactory$1()
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setCx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
org.jitsi.meet.sdk.JitsiMeetActivity: void requestPermissions(java.lang.String[],int,com.facebook.react.modules.core.PermissionListener)
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_4
com.horcrux.svg.R$attr: int track
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URL)
com.facebook.react.devsupport.RedBoxDialog$2: com.facebook.react.devsupport.RedBoxDialog this$0
org.webrtc.FileVideoCapturer$VideoReaderY4M: long videoStart
timber.log.Timber$Tree: void d(java.lang.Throwable)
com.horcrux.svg.R$attr: int activityChooserViewStyle
com.reactnativecommunity.netinfo.NetInfoModule: com.reactnativecommunity.netinfo.ConnectivityReceiver mConnectivityReceiver
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: boolean unsupported
com.facebook.react.bridge.JavaOnlyArray$1
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA
okhttp3.internal.platform.Platform: void configureSslSocketFactory(javax.net.ssl.SSLSocketFactory)
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$Builder setAudioTrackStateCallback(org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStateCallback)
com.facebook.react.bridge.JavaOnlyMap: void putString(java.lang.String,java.lang.String)
org.jitsi.meet.R$styleable: int ColorStateListItem_android_alpha
okhttp3.internal.Internal: okhttp3.Call newWebSocketCall(okhttp3.OkHttpClient,okhttp3.Request)
com.horcrux.svg.TextView: void setInlineSize(com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long getStackSize()
okhttp3.internal.http2.Hpack$Writer: int headerCount
com.facebook.react.devsupport.BundleDeltaClient$ClientType: com.facebook.react.devsupport.BundleDeltaClient$ClientType NONE
com.facebook.yoga.YogaNative: void jni_YGNodeCopyStyle(long,long)
org.jitsi.meet.sdk.R$styleable: int StateListDrawable_android_visible
org.webrtc.voiceengine.WebRtcAudioRecord$AudioSamples: byte[] getData()
com.facebook.react.bridge.SoftAssertions
org.jitsi.meet.R$styleable: int TextAppearance_android_textColorHint
org.webrtc.CameraVideoCapturer$MediaRecorderHandler: void onMediaRecorderError(java.lang.String)
okio.Timeout: okio.Timeout deadline(long,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$Builder setInputSampleRate(int)
com.horcrux.svg.R$dimen: int abc_action_bar_stacked_max_height
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
org.webrtc.PeerConnectionFactory$InitializationOptions: java.lang.String nativeLibraryName
okio.ByteString: okio.ByteString of(java.nio.ByteBuffer)
okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)
com.horcrux.svg.VirtualView: float canvasWidth
org.jitsi.meet.R$color: int abc_search_url_text
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType mLastErrorType
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
okhttp3.HttpUrl: char[] HEX_DIGITS
org.jitsi.meet.R$drawable: int abc_ic_star_half_black_16dp
org.jitsi.meet.R$style: int Base_V21_Theme_AppCompat_Dialog
com.facebook.react.views.view.ReactViewManager: android.view.View getChildAt(android.view.ViewGroup,int)
org.jitsi.meet.sdk.ParticipantsService: java.lang.String REQUEST_ID
org.jitsi.meet.sdk.R$drawable: int abc_ic_ab_back_material
com.facebook.react.devsupport.DevSupportManagerImpl: void showDevOptionsDialog()
okhttp3.internal.cache.DiskLruCache: void evictAll()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setShowsHorizontalScrollIndicator(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
okhttp3.Dispatcher: void cancelAll()
org.webrtc.CameraEnumerationAndroid$CaptureFormat: org.webrtc.CameraEnumerationAndroid$CaptureFormat$FramerateRange framerate
org.jitsi.meet.BuildConfig: BuildConfig()
org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode: org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode[] values()
org.jitsi.meet.R$attr: int suggestionRowLayout
com.facebook.react.devsupport.DevSupportManagerImpl: android.content.BroadcastReceiver mReloadAppBroadcastReceiver
com.facebook.common.time.MonotonicClock: long now()
org.jitsi.meet.sdk.PictureInPictureModule: void enterPictureInPicture(com.facebook.react.bridge.Promise)
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getRequestProperty(java.lang.String)
org.jitsi.meet.R$drawable: int abc_ic_voice_search_api_material
com.google.android.gms.internal.measurement.zzcd$zzg: long zzat
org.jitsi.meet.R$styleable: int AppCompatTheme_textColorSearchUrl
org.webrtc.CryptoOptions$SFrame: CryptoOptions$SFrame(org.webrtc.CryptoOptions,boolean)
org.webrtc.VideoEncoder$ScalingSettings: VideoEncoder$ScalingSettings(boolean)
org.webrtc.VideoFrameDrawer$YuvUploader: VideoFrameDrawer$YuvUploader(org.webrtc.VideoFrameDrawer$1)
com.facebook.react.uimanager.layoutanimation.InterpolatorType: com.facebook.react.uimanager.layoutanimation.InterpolatorType[] values()
okhttp3.internal.cache2.Relay
com.facebook.react.modules.dialog.AlertFragment: AlertFragment()
org.webrtc.Camera1Enumerator
com.facebook.react.devsupport.DisabledDevSupportManager: void showNewJavaError(java.lang.String,java.lang.Throwable)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Listener listener
okio.RealBufferedSink: okio.BufferedSink writeShortLe(int)
org.webrtc.HardwareVideoEncoder$YuvFormat: org.webrtc.HardwareVideoEncoder$YuvFormat I420
okhttp3.internal.ws.WebSocketReader: void readMessage()
org.jitsi.meet.sdk.R$style: int TextAppearance_Compat_Notification_Line2
okhttp3.internal.http.RetryAndFollowUpInterceptor: void setCallStackTrace(java.lang.Object)
com.horcrux.svg.R$styleable: int[] PopupWindowBackgroundState
com.horcrux.svg.R$drawable: int abc_ic_voice_search_api_material
com.facebook.react.modules.network.NetworkingModule: java.util.Set mRequestIds
org.webrtc.EglRenderer: long statisticsStartTimeNs
org.webrtc.voiceengine.WebRtcAudioEffects: android.media.audiofx.AcousticEchoCanceler aec
okio.Buffer: okio.Buffer writeByte(int)
com.oney.WebRTCModule.RTCVideoViewManager: com.oney.WebRTCModule.WebRTCView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
timber.log.Timber$Tree: void log(int,java.lang.Throwable,java.lang.String,java.lang.Object[])
com.google.android.gms.internal.measurement.zzgd: int zza
okhttp3.OkHttpClient$1: okhttp3.Call newWebSocketCall(okhttp3.OkHttpClient,okhttp3.Request)
org.jitsi.meet.sdk.R$layout: int abc_alert_dialog_button_bar_material
com.horcrux.svg.R$string: int abc_capital_off
androidx.fragment.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)
com.horcrux.svg.RenderableViewManager: void onDropViewInstance(com.horcrux.svg.VirtualView)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec mNativeModulesQueueThreadSpec
com.learnium.RNDeviceInfo.RNDeviceModule: void getMaxMemory(com.facebook.react.bridge.Promise)
com.facebook.react.modules.network.NetworkingModule: java.lang.String CONTENT_ENCODING_HEADER_NAME
com.google.android.gms.internal.measurement.zzca$zzb: java.lang.String zzj
com.facebook.react.views.text.ReactTextViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
org.webrtc.CameraCapturer: org.webrtc.SurfaceTextureHelper surfaceHelper
com.facebook.react.bridge.ContextBaseJavaModule
com.google.android.gms.internal.measurement.zzbv$zzf: com.google.android.gms.internal.measurement.zzbv$zzf zzh
org.webrtc.CameraCapturer$9: void run()
org.jitsi.meet.R$styleable: int AppCompatTheme_colorControlActivated
org.webrtc.RtpParameters$Encoding: int networkPriority
org.jitsi.meet.sdk.BroadcastAction$Type: org.jitsi.meet.sdk.BroadcastAction$Type HANG_UP
com.squareup.duktape.Duktape: java.lang.Object evaluate(long,java.lang.String,java.lang.String)
com.google.android.gms.internal.measurement.zzbv$zzc: com.google.android.gms.internal.measurement.zzbv$zzd zze
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setColors(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.ReadableArray)
com.facebook.react.devsupport.DevServerHelper: java.lang.String access$400(com.facebook.react.devsupport.DevServerHelper)
org.jitsi.meet.sdk.R$styleable: int AppCompatSeekBar_tickMark
com.facebook.react.views.textinput.ReactEditText: boolean getDisableFullscreenUI()
okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)
com.horcrux.svg.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
com.facebook.react.views.view.ReactViewGroup: void dispatchOverflowDraw(android.graphics.Canvas)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.views.modal.ReactModalHostView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.Throwable)
org.jitsi.meet.R$style: int Platform_Widget_AppCompat_Spinner
androidx.fragment.app.Fragment: void onStop()
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
okhttp3.internal.ws.WebSocketReader: void readMessageFrame()
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback getExecutorConnectCallback(com.facebook.react.common.futures.SimpleSettableFuture)
com.facebook.imagepipeline.producers.JobScheduler$JobState: com.facebook.imagepipeline.producers.JobScheduler$JobState[] values()
com.facebook.react.uimanager.events.ReactEventEmitter: android.util.SparseArray mEventEmitters
com.facebook.react.uimanager.RootViewManager: java.lang.String REACT_CLASS
org.jitsi.meet.sdk.AudioModeModule: void runInAudioThread(java.lang.Runnable)
com.facebook.react.devsupport.DevSupportManagerImpl$24$2: void run()
com.horcrux.svg.R$attr: int tooltipFrameBackground
com.horcrux.svg.R$styleable: int AppCompatTheme_checkboxStyle
org.webrtc.PeerConnection$Observer: void onStandardizedIceConnectionChange(org.webrtc.PeerConnection$IceConnectionState)
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map mModules
okhttp3.Request$Builder: okhttp3.Request build()
androidx.core.app.ComponentActivity: void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
okio.Buffer: okio.ByteString sha512()
org.jitsi.meet.R$dimen: int abc_action_bar_elevation_material
com.horcrux.svg.R$styleable: int DrawerArrowToggle_spinBars
okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)
com.horcrux.svg.SvgView
org.webrtc.audio.WebRtcAudioRecord: boolean microphoneMute
com.facebook.react.bridge.CxxModuleWrapperBase: void resetModule(com.facebook.jni.HybridData)
com.facebook.react.views.textinput.ReactTextInputManager
okhttp3.internal.platform.OptionalMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])
org.jitsi.meet.sdk.R$anim: int catalyst_fade_out
com.facebook.react.modules.camera.CameraRollManager: java.lang.String ASSET_TYPE_ALL
okhttp3.Request$Builder: java.util.Map tags
org.webrtc.Camera2Session$CameraStateCallback: java.lang.String getErrorDescription(int)
org.jitsi.meet.sdk.R$integer: R$integer()
org.jitsi.meet.sdk.R$drawable: int common_google_signin_btn_icon_dark_normal
org.webrtc.ThreadUtils: boolean awaitUninterruptibly(java.util.concurrent.CountDownLatch,long)
com.horcrux.svg.R$styleable: int TextAppearance_textAllCaps
com.facebook.react.animated.EventAnimationDriver: com.facebook.react.animated.ValueAnimatedNode mValueNode
org.jitsi.meet.R$string: int catalyst_heap_capture
okhttp3.internal.http2.Http2Codec: void finishRequest()
okhttp3.Handshake: java.util.List localCertificates()
org.jitsi.meet.sdk.AudioModeModule: int mode
org.jitsi.meet.sdk.R$dimen: int abc_text_size_large_material
okio.GzipSink: void write(okio.Buffer,long)
org.webrtc.GlUtil: int generateTexture(int)
org.jitsi.meet.sdk.R$id: int split_action_bar
com.facebook.react.bridge.ProxyJavaScriptExecutor: void close()
okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)
com.facebook.react.bridge.WritableNativeMap
org.jitsi.meet.R$drawable: int abc_btn_check_to_on_mtrl_015
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_MODULE_START
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String BATTERY_STATE
com.calendarevents.CalendarEvents: boolean shouldShowRequestPermissionRationale()
okio.Okio$1
org.jitsi.meet.R$attr: int alertDialogTheme
com.facebook.react.bridge.NativeDeltaClient: void processDelta(java.nio.channels.ReadableByteChannel)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
com.facebook.react.devsupport.DevSupportManagerImpl: void setRemoteJSDebugEnabled(boolean)
com.horcrux.svg.R$styleable: int SearchView_suggestionRowLayout
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Boolean getCombinedAudioVideoBwe()
org.jitsi.meet.R$interpolator: R$interpolator()
org.webrtc.VideoCodecInfo
okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)
org.webrtc.NetworkMonitorAutoDetect: android.net.ConnectivityManager$NetworkCallback mobileNetworkCallback
org.jitsi.meet.sdk.LocaleDetector: LocaleDetector(com.facebook.react.bridge.ReactApplicationContext)
org.jitsi.meet.R$id: int standard
com.facebook.react.views.modal.ReactModalHostManager: void onDropViewInstance(com.facebook.react.views.modal.ReactModalHostView)
com.facebook.react.devsupport.DevSupportManagerImpl$9$1: DevSupportManagerImpl$9$1(com.facebook.react.devsupport.DevSupportManagerImpl$9,android.widget.EditText)
okhttp3.internal.http.CallServerInterceptor$CountingSink
com.calendarevents.CalendarEvents: int access$300(com.calendarevents.CalendarEvents,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_colorPrimaryDark
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable
org.jitsi.meet.R$string: int menu_description
org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordThread: void stopThread()
com.facebook.react.bridge.ProxyJavaScriptExecutor
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_roundBottomStart
com.horcrux.svg.R$id: int catalyst_redbox_title
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_ASSETS_MODULE_END
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean)
org.jitsi.meet.R$styleable: int SwitchCompat_switchPadding
com.facebook.react.devsupport.DevSupportManagerImpl$6: com.facebook.react.devsupport.DevSupportManagerImpl this$0
org.webrtc.EglRenderer$FrameListenerAndParams: EglRenderer$FrameListenerAndParams(org.webrtc.EglRenderer$FrameListener,float,org.webrtc.RendererCommon$GlDrawer,boolean)
com.ocetnik.timer.BackgroundTimerModule: com.facebook.react.bridge.ReactApplicationContext access$300(com.ocetnik.timer.BackgroundTimerModule)
com.facebook.react.bridge.CatalystInstance: boolean hasNativeModule(java.lang.Class)
okhttp3.internal.http.CallServerInterceptor$CountingSink: CallServerInterceptor$CountingSink(okio.Sink)
org.jitsi.meet.sdk.R$styleable: int LoadingImageView_imageAspectRatio
okhttp3.Cookie: java.lang.String path
org.jitsi.meet.sdk.AudioModeModule$3
com.facebook.react.devsupport.StackTraceHelper: com.facebook.react.devsupport.interfaces.StackFrame[] convertJsStackTrace(com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
com.horcrux.svg.R$attr: int roundedCornerRadius
com.horcrux.svg.RNSVGMarkerType: com.horcrux.svg.RNSVGMarkerType valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzm
com.facebook.react.views.textinput.ReactTextInputManager: void setBorderRadius(com.facebook.react.views.textinput.ReactEditText,int,float)
org.jitsi.meet.sdk.R$style: int Base_V22_Theme_AppCompat
org.jitsi.meet.sdk.R$id: int rn_redbox_loading_indicator
org.jitsi.meet.sdk.R$styleable: int PopupWindow_android_popupBackground
org.webrtc.Logging: void w(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2$1: void onFailure(java.lang.Throwable)
org.jitsi.meet.sdk.R$attr: int colorControlHighlight
androidx.fragment.app.Fragment: int ATTACHED
com.facebook.react.devsupport.JSException
org.webrtc.FecControllerFactoryFactoryInterface: long createNative()
org.webrtc.voiceengine.WebRtcAudioTrack: void logBufferCapacityInFrames()
com.horcrux.svg.R$styleable: int[] PopupWindow
com.horcrux.svg.R$styleable: int MenuView_android_headerBackground
com.facebook.react.devsupport.DevSupportManagerImpl$24
org.jitsi.meet.R$styleable: int SimpleDraweeView_roundingBorderPadding
org.jitsi.meet.sdk.R$string: int common_google_play_services_enable_text
org.webrtc.PeerConnectionFactory: void nativeInjectLoggable(org.webrtc.JNILogging,int)
org.jitsi.meet.R$id: int tag_unhandled_key_event_manager
org.jitsi.meet.sdk.AudioModeModule: void setAudioDeviceHandler()
com.facebook.react.bridge.JSBundleLoader$1: JSBundleLoader$1(android.content.Context,java.lang.String,boolean)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegments(java.lang.String)
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isRecoverable(java.io.IOException,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String access$400(com.learnium.RNDeviceInfo.RNDeviceModule)
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure UI_HIDDEN
okhttp3.Dispatcher: int maxRequestsPerHost
okhttp3.internal.http2.Http2Connection: void start(boolean)
com.facebook.yoga.YogaLogger: void log(com.facebook.yoga.YogaNode,com.facebook.yoga.YogaLogLevel,java.lang.String)
okhttp3.internal.http2.Hpack$Reader: java.util.List headerList
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Map
com.facebook.react.views.art.ARTSurfaceViewManager: com.facebook.react.views.art.ARTSurfaceViewShadowNode createShadowNodeInstance()
com.horcrux.svg.R$dimen
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(com.facebook.react.views.textinput.ReactEditText,java.lang.Object)
org.webrtc.Camera2Session$CameraStateCallback: void onOpened(android.hardware.camera2.CameraDevice)
com.horcrux.svg.R$styleable: int ActionBar_contentInsetStartWithNavigation
org.webrtc.NetworkMonitorAutoDetect$SimpleNetworkCallback: void onLosing(android.net.Network,int)
org.jitsi.meet.sdk.R$attr: int contentInsetRight
org.webrtc.voiceengine.WebRtcAudioEffects: boolean setAEC(boolean)
okio.Buffer: long readLong()
org.webrtc.DataChannel$Init: int getMaxRetransmitTimeMs()
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithoutIndexingNewName()
org.webrtc.CameraSession$Events: void onCameraError(org.webrtc.CameraSession,java.lang.String)
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getBBox(int,com.facebook.react.bridge.ReadableMap)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setScrollPerfTag(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
com.facebook.react.modules.camera.CameraRollManager: void access$300(android.content.ContentResolver,android.database.Cursor,com.facebook.react.bridge.WritableMap,int)
okhttp3.internal.http2.PushObserver: boolean onRequest(int,java.util.List)
org.webrtc.Camera2Session: boolean access$1600(org.webrtc.Camera2Session)
com.facebook.react.bridge.ReadableArray: double getDouble(int)
okhttp3.internal.connection.RouteException
com.facebook.react.bridge.ReadableNativeMap: double getDouble(java.lang.String)
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Boolean
com.rnimmersive.RNImmersiveModule: java.lang.String ERROR_NO_ACTIVITY
org.jitsi.meet.R$styleable: int DrawerArrowToggle_color
com.oney.WebRTCModule.WebRTCModule: void dataChannelClose(int,int)
org.jitsi.meet.R$id: int default_activity_button
org.jitsi.meet.R$attr: int homeAsUpIndicator
org.webrtc.PeerConnection$IceServer$Builder: java.util.List tlsEllipticCurves
org.webrtc.SoftwareVideoEncoderFactory: org.webrtc.VideoEncoder createEncoder(org.webrtc.VideoCodecInfo)
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.fabric.FabricUIManager mUIManager
org.jitsi.meet.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
com.facebook.react.devsupport.DevLoadingViewController: android.widget.PopupWindow mDevLoadingPopup
com.facebook.react.common.LifecycleState
com.facebook.react.views.art.ARTSurfaceViewManager: com.facebook.yoga.YogaMeasureFunction MEASURE_FUNCTION
org.webrtc.PeerConnectionFactory: org.webrtc.PeerConnectionFactory$ThreadInfo signalingThread
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager
com.kevinresol.react_native_default_preference.RNDefaultPreferenceModule: void getAll(com.facebook.react.bridge.Promise)
org.webrtc.voiceengine.WebRtcAudioManager: int getLowLatencyOutputFramesPerBuffer()
com.facebook.react.ReactRootView: java.lang.String getInitialUITemplate()
okhttp3.internal.huc.OkHttpURLConnection: java.lang.Object lock
com.facebook.react.uimanager.UIManagerModule: void profileNextBatch()
org.jitsi.meet.sdk.R$styleable: int CompoundButton_buttonTintMode
org.webrtc.PeerConnection$IceServer$Builder: org.webrtc.PeerConnection$IceServer$Builder setTlsCertPolicy(org.webrtc.PeerConnection$TlsCertPolicy)
org.jitsi.meet.sdk.JitsiMeetActivity: void join(java.lang.String)
com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener: void onCaptureHeapCommand(com.facebook.react.packagerconnection.Responder)
org.jitsi.meet.R$attr: int imageAspectRatioAdjust
com.facebook.react.devsupport.DevSupportManagerImpl: void updateJSError(java.lang.String,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
org.jitsi.meet.R$dimen: int abc_text_size_title_material
org.jitsi.meet.sdk.PictureInPictureModule: java.lang.String getName()
org.webrtc.CameraCapturer: java.lang.String TAG
org.webrtc.MediaStreamTrack$MediaType: MediaStreamTrack$MediaType(java.lang.String,int,int)
org.jitsi.meet.R$raw: int node_modules_csstree_node_modules_mdndata_css_properties
org.jitsi.meet.sdk.BroadcastEvent$Type: org.jitsi.meet.sdk.BroadcastEvent$Type PARTICIPANT_LEFT
com.google.gson.reflect.TypeToken: java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[])
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ExecutorService listenerExecutor
org.jitsi.meet.R$attr: int listPreferredItemPaddingEnd
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMaxWidth(long)
com.facebook.react.bridge.JSApplicationIllegalArgumentException
com.horcrux.svg.R$attr: int actionMenuTextAppearance
org.webrtc.MediaConstraints$KeyValuePair: java.lang.String value
org.webrtc.Logging$TraceLevel: org.webrtc.Logging$TraceLevel TRACE_NONE
com.google.android.gms.internal.measurement.zzu: com.google.android.gms.internal.measurement.zzv asInterface(android.os.IBinder)
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$proxySourceURL
com.facebook.react.modules.camera.CameraRollManager: java.lang.String NAME
com.facebook.react.bridge.JSIModule: void onCatalystInstanceDestroy()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()
org.webrtc.audio.JavaAudioDeviceModule$AudioSamples: int channelCount
org.jitsi.meet.R$drawable: int notification_bg_low_pressed
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.ReadableArray getArray(java.lang.String)
org.jitsi.meet.R$string: int common_google_play_services_update_text
org.jitsi.meet.sdk.R$attr: int multiChoiceItemLayout
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_checkboxStyle
org.jitsi.meet.sdk.ConnectionService$ConnectionImpl: android.telecom.PhoneAccountHandle getPhoneAccountHandle()
okio.Segment
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_actualImageScaleType
org.jitsi.meet.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setAlign(com.horcrux.svg.ImageView,java.lang.String)
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.reflect.Method removeMethod
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver,com.facebook.react.uimanager.UIImplementationProvider,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.dropbox.core.v2.async.PollErrorException
org.webrtc.CryptoOptions: CryptoOptions(boolean,boolean,boolean,boolean,org.webrtc.CryptoOptions$1)
org.jitsi.meet.sdk.R$styleable: int Toolbar_logo
com.facebook.react.devsupport.interfaces.DevSupportManager: void onReactInstanceDestroyed(com.facebook.react.bridge.ReactContext)
com.facebook.react.devsupport.DevSettingsActivity: void onCreate(android.os.Bundle)
org.jitsi.meet.R$styleable: int LinearLayoutCompat_measureWithLargestChild
org.webrtc.FileVideoCapturer$VideoReaderY4M: java.io.RandomAccessFile mediaFile
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionMode
org.jitsi.meet.sdk.R$dimen: int notification_small_icon_size_as_large
com.facebook.react.devsupport.DisabledDevSupportManager: void onReactInstanceDestroyed(com.facebook.react.bridge.ReactContext)
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder()
okhttp3.internal.http2.Http2Stream$StreamTimeout: okhttp3.internal.http2.Http2Stream this$0
org.webrtc.audio.JavaAudioDeviceModule$AudioRecordErrorCallback: void onWebRtcAudioRecordError(java.lang.String)
com.facebook.react.modules.toast.ToastModule: java.lang.String GRAVITY_BOTTOM_KEY
org.webrtc.CandidatePairChangeEvent: int lastDataReceivedMs
org.webrtc.EglBase: int surfaceWidth()
org.webrtc.PeerConnectionFactory$InitializationOptions$Builder: org.webrtc.Logging$Severity loggableSeverity
com.horcrux.svg.R$styleable: int TextAppearance_android_textColorLink
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
org.webrtc.VideoEncoder$EncodeInfo: org.webrtc.EncodedImage$FrameType[] frameTypes
androidx.fragment.app.FragmentActivity: boolean mStartedActivityFromFragment
com.facebook.react.devsupport.DevSupportManagerImpl$14: DevSupportManagerImpl$14(com.facebook.react.devsupport.DevSupportManagerImpl)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
com.facebook.react.uimanager.LayoutShadowNode: void setFlexGrow(float)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.webrtc.audio.JavaAudioDeviceModule: java.lang.String TAG
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ListMenuView
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$Builder setAudioRecordErrorCallback(org.webrtc.audio.JavaAudioDeviceModule$AudioRecordErrorCallback)
com.horcrux.svg.R$id: int rn_redbox_line_separator
org.jitsi.meet.sdk.RNConnectionService: void updateCall(java.lang.String,com.facebook.react.bridge.ReadableMap)
org.jitsi.meet.R$drawable: int common_google_signin_btn_icon_light_focused
org.jitsi.meet.sdk.R$anim: int abc_slide_out_bottom
com.facebook.react.uimanager.events.RCTEventEmitter: void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.facebook.react.devsupport.RedBoxDialog: android.widget.Button mDismissButton
okio.ByteString: okio.ByteString hmacSha256(okio.ByteString)
org.webrtc.PeerConnection$RTCConfiguration: PeerConnection$RTCConfiguration(java.util.List)
org.jitsi.meet.R$styleable: int ActionBar_contentInsetLeft
okhttp3.Request$Builder: Request$Builder(okhttp3.Request)
com.horcrux.svg.R$id: int chronometer
okhttp3.internal.http2.Http2Stream$FramingSource: okhttp3.internal.http2.Http2Stream this$0
org.webrtc.RtpTransceiver: org.webrtc.RtpTransceiver$RtpTransceiverDirection getCurrentDirection()
okio.Buffer: okio.Buffer writeTo(java.io.OutputStream)
com.horcrux.svg.R$dimen: int notification_subtext_size
org.jitsi.meet.sdk.R$string: int catalyst_debug_nuclide
com.facebook.react.bridge.ReactBridge
com.dropbox.core.v2.team.MembersRemoveErrorException
com.facebook.react.uimanager.UIManagerModule: UIManagerModule(com.facebook.react.bridge.ReactApplicationContext,java.util.List,com.facebook.react.uimanager.UIImplementationProvider,int)
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.Headers,okhttp3.RequestBody)
com.facebook.react.uimanager.ViewGroupManager: void setViewZIndex(android.view.View,int)
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float)
org.jitsi.meet.MainActivity: void onDestroy()
org.webrtc.audio.WebRtcAudioRecord: boolean isAudioConfigVerified()
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_SearchResult
org.jitsi.meet.R$raw: int node_modules_csstree_node_modules_mdndata_css_atrules
com.facebook.react.views.text.ReactTextView: void setNotifyOnInlineViewLayout(boolean)
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.interfaces.DeveloperSettings mCatalystSettings
org.webrtc.EglBase10Impl: EglBase10Impl(javax.microedition.khronos.egl.EGLContext,int[])
com.facebook.react.bridge.CatalystInstanceImpl: void jniExtendNativeModules(java.util.Collection,java.util.Collection)
com.facebook.react.devsupport.BundleDeltaClient$ClientType: com.facebook.react.devsupport.BundleDeltaClient$ClientType DEV_SUPPORT
org.webrtc.audio.WebRtcAudioUtils: java.lang.String audioEncodingToString(int)
com.horcrux.svg.R$id: int action_bar_subtitle
com.horcrux.svg.PatternView
org.webrtc.voiceengine.WebRtcAudioEffects: android.media.audiofx.AudioEffect$Descriptor[] getAvailableEffects()
org.jitsi.meet.R$drawable: R$drawable()
org.webrtc.Camera2Session$CaptureSessionCallback: org.webrtc.Camera2Session this$0
com.facebook.react.views.scroll.ReactScrollView: void setSnapOffsets(java.util.List)
androidx.fragment.app.Fragment: androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData
com.facebook.react.bridge.ModuleHolder: boolean mIsInitializing
com.reactnativecommunity.asyncstorage.AsyncStorageModule: boolean ensureDatabase()
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setCx(com.horcrux.svg.CircleView,com.facebook.react.bridge.Dynamic)
org.jitsi.meet.sdk.AudioModeModule$4: AudioModeModule$4(org.jitsi.meet.sdk.AudioModeModule,int,com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactTextInputManager: void setReturnKeyLabel(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeightPercent(long,float)
org.webrtc.PeerConnectionFactory: org.webrtc.MediaStream createLocalMediaStream(java.lang.String)
com.horcrux.svg.R$string: int catalyst_report_button
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Spinner_Underlined
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.horcrux.svg.PatternView: void setX(com.facebook.react.bridge.Dynamic)
okhttp3.RealCall$AsyncCall: okhttp3.Callback responseCallback
com.horcrux.svg.R$layout: int select_dialog_singlechoice_material
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener
com.facebook.react.views.text.ReactVirtualTextViewManager
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: void setAudioRoute(java.lang.String)
okhttp3.MediaType: java.lang.String QUOTED
com.horcrux.svg.R$anim: int abc_grow_fade_in_from_bottom
org.jitsi.meet.sdk.R$drawable: int abc_btn_check_to_on_mtrl_015
org.webrtc.Camera1Enumerator: java.util.List convertSizes(java.util.List)
com.facebook.react.modules.camera.ImageEditingManager: java.util.List LOCAL_URI_PREFIXES
okhttp3.FormBody: long contentLength()
org.jitsi.meet.sdk.ReactInstanceManagerHolder$1: ReactInstanceManagerHolder$1()
org.jitsi.meet.sdk.R$styleable: int GradientColorItem_android_offset
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler mNetworkingRequestBodyHandler
okio.InflaterSource: boolean refill()
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY1(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
org.webrtc.HardwareVideoEncoder: java.lang.String getImplementationName()
org.webrtc.NetworkChangeDetector$ConnectionType: org.webrtc.NetworkChangeDetector$ConnectionType CONNECTION_UNKNOWN
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
org.jitsi.meet.R$styleable: int AppCompatTheme_listMenuViewStyle
org.webrtc.SurfaceTextureHelper: void setFrameRotation(int)
org.jitsi.meet.R$color: int abc_search_url_text_normal
org.webrtc.voiceengine.WebRtcAudioTrack$WebRtcAudioTrackErrorCallback
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String getResponseMessage()
okio.GzipSource: byte SECTION_DONE
androidx.appcompat.widget.SearchView
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void resetPerfStats()
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_fontFamily
okhttp3.RequestBody: void writeTo(okio.BufferedSink)
com.google.android.gms.internal.measurement.zzcd$zzi: com.google.android.gms.internal.measurement.zzie zzd
org.webrtc.CameraEnumerationAndroid$CaptureFormat: int height
com.horcrux.svg.R$styleable: int AppCompatTheme_windowMinWidthMinor
okhttp3.MultipartBody: long contentLength()
org.webrtc.AndroidVideoDecoder: org.webrtc.VideoCodecStatus initDecodeInternal(int,int)
okio.InflaterSource: java.util.zip.Inflater inflater
org.jitsi.meet.R$string: int link_description
org.webrtc.NetEqFactoryFactory
org.jitsi.meet.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: int getLine()
org.webrtc.audio.JavaAudioDeviceModule: JavaAudioDeviceModule(android.content.Context,android.media.AudioManager,org.webrtc.audio.WebRtcAudioRecord,org.webrtc.audio.WebRtcAudioTrack,int,int,boolean,boolean,org.webrtc.audio.JavaAudioDeviceModule$1)
com.facebook.react.views.scroll.ReactScrollViewManager: void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_failureImageScaleType
org.jitsi.meet.sdk.R$string: int ongoing_notification_text
org.jitsi.meet.sdk.R$anim: R$anim()
org.webrtc.voiceengine.WebRtcAudioManager: WebRtcAudioManager(long)
org.webrtc.HardwareVideoDecoderFactory$1: boolean test(android.media.MediaCodecInfo)
com.facebook.react.bridge.JavaOnlyMap: java.util.Map mBackingMap
org.jitsi.meet.R$dimen: int notification_small_icon_background_padding
com.facebook.react.devsupport.BundleDeltaClient$ClientType: com.facebook.react.devsupport.BundleDeltaClient$ClientType NATIVE
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setEnabled(boolean)
com.dropbox.core.v2.team.GroupMembersRemoveErrorException
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_MAP
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setInjectedJavaScriptBeforeContentLoaded(java.lang.String)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel valueOf(java.lang.String)
org.webrtc.voiceengine.WebRtcAudioRecord: void reportWebRtcAudioRecordInitError(java.lang.String)
org.jitsi.meet.sdk.R$attr: int listChoiceBackgroundIndicator
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setAllowUserInteraction(boolean)
org.jitsi.meet.R$xml: int file_provider_paths
androidx.fragment.app.Fragment: android.os.Bundle requireArguments()
org.webrtc.SurfaceEglRenderer: SurfaceEglRenderer(java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxySelector(java.net.ProxySelector)
org.jitsi.meet.sdk.R$drawable: int googleg_standard_color_18
okhttp3.internal.http.HttpHeaders: int skipAll(okio.Buffer,byte)
org.webrtc.VideoCodecStatus: VideoCodecStatus(java.lang.String,int,int)
okhttp3.internal.http2.Http2Connection$2: long val$unacknowledgedBytesRead
org.devio.rn.splashscreen.SplashScreenModule: java.lang.String getName()
okio.SegmentedByteString: java.lang.String hex()
com.horcrux.svg.R$styleable: int TextAppearance_android_textFontWeight
okhttp3.internal.http1.Http1Codec: int HEADER_LIMIT
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ActionButton
org.jitsi.meet.sdk.R$attr: int actualImageUri
org.webrtc.CameraCapturer: android.content.Context access$2100(org.webrtc.CameraCapturer)
org.jitsi.meet.sdk.BroadcastEvent$Type: org.jitsi.meet.sdk.BroadcastEvent$Type ENDPOINT_TEXT_MESSAGE_RECEIVED
com.facebook.react.modules.camera.CameraRollManager
org.webrtc.PeerConnection$RTCConfiguration: boolean enableRtpDataChannel
org.jitsi.meet.sdk.R$styleable: int[] PopupWindowBackgroundState
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
okio.Okio: okio.Source source(java.io.InputStream)
com.horcrux.svg.SvgView: void onDraw(android.graphics.Canvas)
com.horcrux.svg.R$attr: int autoSizeMaxTextSize
org.webrtc.SurfaceTextureHelper$1: SurfaceTextureHelper$1(org.webrtc.EglBase$Context,android.os.Handler,boolean,org.webrtc.YuvConverter,org.webrtc.SurfaceTextureHelper$FrameRefMonitor,java.lang.String)
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory
okhttp3.internal.cache.FaultHidingSink: void flush()
org.webrtc.PeerConnection: long getNativeOwnedPeerConnection()
org.jitsi.meet.sdk.AudioModeModule: android.media.AudioManager audioManager
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonBarButtonStyle
org.jitsi.meet.R$style: R$style()
com.horcrux.svg.R$drawable: int abc_ic_ab_back_material
org.webrtc.voiceengine.BuildInfo: java.lang.String getAndroidBuildId()
org.webrtc.RtpTransceiver$RtpTransceiverInit: RtpTransceiver$RtpTransceiverInit(org.webrtc.RtpTransceiver$RtpTransceiverDirection,java.util.List,java.util.List)
com.horcrux.svg.TextProperties$TextPathMidLine: com.horcrux.svg.TextProperties$TextPathMidLine[] values()
okhttp3.internal.http2.Huffman$Node: int terminalBits
okhttp3.internal.huc.OkHttpsURLConnection: int getConnectTimeout()
com.horcrux.svg.R$styleable: int Toolbar_contentInsetStart
com.facebook.react.views.modal.ReactModalHostView: android.app.Activity getCurrentActivity()
org.jitsi.meet.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
com.facebook.react.devsupport.JSCHeapCapture: void captureComplete(java.lang.String,java.lang.String)
com.horcrux.svg.R$styleable: int SearchView_voiceIcon
org.jitsi.meet.sdk.R$style: int Base_V28_Theme_AppCompat
org.jitsi.meet.R$id: int tabMode
com.facebook.jni.IteratorHelper: IteratorHelper(java.util.Iterator)
org.jitsi.meet.sdk.BroadcastIntentHelper
org.webrtc.PeerConnection$RTCConfiguration: int iceBackupCandidatePairPingInterval
com.google.android.gms.internal.measurement.zzcd$zzg: int zze
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2: com.facebook.react.devsupport.WebsocketJavaScriptExecutor this$0
com.horcrux.svg.R$styleable: int GradientColor_android_tileMode
androidx.viewpager.widget.ViewPager
okhttp3.ConnectionPool$1
com.horcrux.svg.R$id: int image
org.jitsi.meet.sdk.incoming_call.IncomingCallInfo: IncomingCallInfo(java.lang.String,java.lang.String,boolean)
org.webrtc.EglRenderer$ErrorCallback: void onGlOutOfMemory()
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService: void stop()
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$BroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)
okio.AsyncTimeout$1
androidx.fragment.app.FragmentActivity: java.lang.String NEXT_CANDIDATE_REQUEST_INDEX_TAG
org.webrtc.ThreadUtils: java.lang.StackTraceElement[] concatStackTraces(java.lang.StackTraceElement[],java.lang.StackTraceElement[])
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,boolean)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: int describeContents()
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: java.lang.String mFile
com.dropbox.core.v2.sharing.ListFilesContinueErrorException
org.jitsi.meet.sdk.R$color: int bright_foreground_inverse_material_dark
org.webrtc.Camera2Session: android.hardware.camera2.CameraCaptureSession captureSession
com.horcrux.svg.R$attr: int actionModeSplitBackground
org.webrtc.RtpParameters: java.util.List getHeaderExtensions()
org.webrtc.CameraEnumerationAndroid$CaptureFormat
com.facebook.drawee.view.SimpleDraweeView
org.jitsi.meet.R$styleable: int Toolbar_title
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.facebook.react.views.modal.ReactModalHostManager: java.lang.String REACT_CLASS
com.horcrux.svg.CircleView: void setCy(com.facebook.react.bridge.Dynamic)
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Boolean enableDtlsSrtp
org.jitsi.meet.sdk.BroadcastEvent$Type
org.webrtc.VideoEncoder$Capabilities: boolean lossNotification
com.facebook.react.devsupport.InspectorPackagerConnection$1
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Large
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_CompoundButton_Switch
org.jitsi.meet.R$styleable: int AppCompatTheme_alertDialogStyle
com.facebook.yoga.YogaEdge
org.webrtc.audio.WebRtcAudioTrack: void logMainParameters()
org.webrtc.JavaI420Buffer: java.nio.ByteBuffer dataV
org.jitsi.meet.R$style: int Base_Theme_AppCompat_CompactMenu
org.jitsi.meet.sdk.JitsiMeetActivity: void registerForBroadcastMessages()
okhttp3.internal.http1.Http1Codec$FixedLengthSource: long read(okio.Buffer,long)
okhttp3.internal.http2.Http2Connection$Listener: void onStream(okhttp3.internal.http2.Http2Stream)
org.jitsi.meet.R$id: int accessibility_custom_action_10
org.webrtc.PeerConnection$SdpSemantics: org.webrtc.PeerConnection$SdpSemantics[] $VALUES
com.horcrux.svg.R$styleable: int AppCompatTheme_dividerVertical
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData access$900(com.facebook.react.bridge.CatalystInstanceImpl)
org.webrtc.SurfaceTextureHelper: org.webrtc.SurfaceTextureHelper$FrameRefMonitor frameRefMonitor
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_dialogTheme
com.horcrux.svg.RenderableViewManager$GroupViewManager: void onAfterUpdateTransaction(android.view.View)
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel valueOf(java.lang.String)
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_25
org.jitsi.meet.sdk.R$color: int dim_foreground_material_dark
org.webrtc.NV21Buffer: void release()
okhttp3.internal.JavaNetHeaders: java.util.Comparator FIELD_NAME_COMPARATOR
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedFragment(java.lang.String)
org.jitsi.meet.R$styleable: int MenuItem_android_onClick
org.jitsi.meet.sdk.R$string: int scrollbar_description
com.facebook.react.devsupport.JSDebuggerWebSocketClient: java.util.concurrent.ConcurrentHashMap mCallbacks
com.horcrux.svg.R$styleable: int AppCompatTheme_colorError
com.facebook.react.views.progressbar.ReactProgressBarViewManager: android.widget.ProgressBar createProgressBar(android.content.Context,int)
org.webrtc.NetworkMonitor: org.webrtc.NetworkChangeDetectorFactory networkChangeDetectorFactory
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionBarItemBackground
com.horcrux.svg.R$string
org.jitsi.meet.sdk.BroadcastAction$Type
okhttp3.internal.http2.Http2Stream: boolean isLocallyInitiated()
com.facebook.react.bridge.ReadableMapKeySetIterator: java.lang.String nextKey()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants I18N_MODULE_CONSTANTS_CONVERT_START
org.webrtc.CameraEnumerationAndroid$CaptureFormat: CameraEnumerationAndroid$CaptureFormat(int,int,org.webrtc.CameraEnumerationAndroid$CaptureFormat$FramerateRange)
org.webrtc.TextureBufferImpl: org.webrtc.YuvConverter yuvConverter
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_Button_Small
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_progressBarImage
com.facebook.react.devsupport.BundleDownloader: com.facebook.react.devsupport.BundleDeltaClient mBundleDeltaClient
com.horcrux.svg.R$styleable: int AppCompatTheme_windowActionBar
org.webrtc.Camera1Session$2: Camera1Session$2(org.webrtc.Camera1Session)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
okio.BufferedSource: boolean exhausted()
okhttp3.internal.huc.OkHttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)
okhttp3.internal.ws.WebSocketReader: WebSocketReader(boolean,okio.BufferedSource,okhttp3.internal.ws.WebSocketReader$FrameCallback)
org.webrtc.GlShader: void setVertexAttribArray(java.lang.String,int,java.nio.FloatBuffer)
org.jitsi.meet.sdk.BuildConfig: BuildConfig()
org.jitsi.meet.sdk.R$drawable: int abc_switch_thumb_material
com.facebook.react.modules.debug.SourceCodeModule: java.lang.String NAME
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback access$100(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.devsupport.DevLoadingViewController$2: void run()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry
org.jitsi.meet.R$anim: int btn_radio_to_on_mtrl_ring_outer_animation
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.PeerConnectionFactory createPeerConnectionFactory()
com.facebook.react.uimanager.UIManagerModule: void replaceExistingNonRootView(int,int)
org.jitsi.meet.R$id: int accessibility_custom_action_26
org.jitsi.meet.sdk.R$attr: int listPopupWindowStyle
com.horcrux.svg.R$color: int bright_foreground_material_light
org.jitsi.meet.sdk.BuildConfig: boolean LIBRE_BUILD
org.jitsi.meet.sdk.R$color: int secondary_text_default_material_dark
org.webrtc.NetworkMonitor: void access$400(org.webrtc.NetworkMonitor,java.util.List,int)
org.webrtc.MediaStreamTrack: org.webrtc.MediaStreamTrack$State state()
okhttp3.OkHttpClient$Builder: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
org.webrtc.DataChannel: long nativeObserver
com.horcrux.svg.R$attr: int buttonTint
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder hostOnlyDomain(java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followRedirects(boolean)
okhttp3.internal.tls.BasicTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
org.webrtc.FileVideoCapturer$1: org.webrtc.FileVideoCapturer this$0
org.webrtc.VideoDecoder: boolean getPrefersLateDecoding()
org.jitsi.meet.R$xml
org.webrtc.voiceengine.WebRtcAudioManager
org.webrtc.AudioDecoderFactoryFactory: long createNativeAudioDecoderFactory()
okhttp3.Cookie: java.util.regex.Pattern DAY_OF_MONTH_PATTERN
com.facebook.react.bridge.CatalystInstanceImpl: void setTurboModuleManager(com.facebook.react.bridge.JSIModule)
org.webrtc.PeerConnection$IceServer: java.util.List urls
org.jitsi.meet.R$style: int Widget_AppCompat_Toolbar
org.jitsi.meet.MainActivity$1
org.webrtc.RtpTransceiver$RtpTransceiverDirection: org.webrtc.RtpTransceiver$RtpTransceiverDirection RECV_ONLY
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getIncrementalSync()
org.webrtc.YuvConverter: org.webrtc.GlTextureFrameBuffer i420TextureFrameBuffer
com.horcrux.svg.R$drawable: int abc_list_divider_material
org.jitsi.meet.sdk.R$style: int Base_ThemeOverlay_AppCompat_Dialog
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_10
org.jitsi.meet.R$attr: int buttonSize
com.horcrux.svg.R$color: int secondary_text_disabled_material_light
okio.Okio: okio.Source source(java.io.File)
com.horcrux.svg.R$string: int abc_action_menu_overflow_description
com.horcrux.svg.R$drawable: int abc_list_selector_background_transition_holo_light
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Dialog_Alert
org.webrtc.DataChannel$Init: DataChannel$Init()
org.jitsi.meet.sdk.AudioModeModule$AudioDeviceHandlerInterface: boolean setMode(int)
com.facebook.react.uimanager.LayoutShadowNode: void setMinHeight(com.facebook.react.bridge.Dynamic)
okhttp3.internal.huc.DelegatingHttpsURLConnection: int getResponseCode()
org.jitsi.meet.sdk.R$styleable: int SignInButton_buttonSize
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
okhttp3.internal.http2.Hpack$Reader: okio.BufferedSource source
com.horcrux.svg.R$attr: int listChoiceBackgroundIndicator
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
okhttp3.internal.http2.Http2Writer: void frameHeader(int,int,byte,byte)
okhttp3.HttpUrl: java.lang.String password()
org.webrtc.MediaCodecWrapper: java.nio.ByteBuffer[] getInputBuffers()
org.jitsi.meet.sdk.R$xml
org.webrtc.audio.WebRtcAudioEffects: boolean setNS(boolean)
org.jitsi.meet.R$dimen: int abc_text_size_menu_header_material
org.jitsi.meet.sdk.R$styleable: int AnimatedStateListDrawableCompat_android_dither
co.apptailor.googlesignin.RNGoogleSigninModule: void getCurrentUser(com.facebook.react.bridge.Promise)
com.facebook.react.modules.camera.CameraRollManager: boolean putImageInfo(android.content.ContentResolver,android.database.Cursor,com.facebook.react.bridge.WritableMap,int,int,int,int,int)
org.jitsi.meet.sdk.JitsiMeetActivity: org.jitsi.meet.sdk.JitsiMeetView getJitsiView()
com.facebook.react.devsupport.DevSupportManagerImpl$9$1: android.widget.EditText val$input
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void generateEventId(com.google.android.gms.internal.measurement.zzw)
org.webrtc.PeerConnectionFactory: void stopAecDump()
com.facebook.react.modules.image.ImageLoaderModule: void onHostResume()
org.webrtc.PeerConnection: PeerConnection(org.webrtc.NativePeerConnectionFactory)
okhttp3.internal.cache.FaultHidingSink
com.google.android.gms.common.SignInButton
com.google.android.gms.internal.measurement.zzbv$zzc: com.google.android.gms.internal.measurement.zzbv$zzc zzh
org.webrtc.voiceengine.WebRtcAudioRecord: boolean enableBuiltInNS(boolean)
org.jitsi.meet.sdk.R$style: int Platform_V21_AppCompat_Light
org.jitsi.meet.sdk.R$styleable: int GradientColor_android_centerX
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory
org.webrtc.Camera2Session$CaptureSessionCallback: void onConfigured(android.hardware.camera2.CameraCaptureSession)
org.jitsi.meet.R$drawable: int abc_ic_star_black_16dp
org.webrtc.voiceengine.WebRtcAudioManager: boolean isLowLatencyOutputSupported()
com.horcrux.svg.R$attr: int windowFixedHeightMinor
org.jitsi.meet.sdk.AudioModeModule: java.util.concurrent.ExecutorService executor
org.webrtc.MediaCodecUtils: java.lang.String TAG
org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordThread: org.webrtc.voiceengine.WebRtcAudioRecord this$0
org.jitsi.meet.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
androidx.fragment.app.FragmentActivity: int allocateRequestIndex(androidx.fragment.app.Fragment)
com.horcrux.svg.R$dimen: int compat_notification_large_icon_max_width
com.facebook.react.devsupport.DevSupportManagerImpl$25
org.jitsi.meet.sdk.incoming_call.IncomingCallView: void setIncomingCallInfo(org.jitsi.meet.sdk.incoming_call.IncomingCallInfo)
okhttp3.internal.http.RealInterceptorChain: int calls
com.horcrux.svg.R$drawable: int notification_template_icon_low_bg
com.facebook.react.views.scroll.ReactScrollView: void setOverflow(java.lang.String)
org.webrtc.VideoFrame$Buffer: org.webrtc.VideoFrame$Buffer cropAndScale(int,int,int,int,int,int)
com.horcrux.svg.R$attr: int failureImageScaleType
com.horcrux.svg.R$style: int Widget_Compat_NotificationActionContainer
org.jitsi.meet.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
com.horcrux.svg.R$layout: int abc_alert_dialog_button_bar_material
okhttp3.Response: okhttp3.CacheControl cacheControl()
okio.Buffer: okio.Buffer buffer()
org.webrtc.voiceengine.WebRtcAudioManager: void setStereoInput(boolean)
okhttp3.internal.http2.Header: java.lang.String TARGET_METHOD_UTF8
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1
okhttp3.internal.Util: int indexOfControlOrNonAscii(java.lang.String)
okhttp3.internal.io.FileSystem$1: void rename(java.io.File,java.io.File)
okhttp3.FormBody: java.lang.String encodedName(int)
okio.RealBufferedSource: long read(okio.Buffer,long)
com.facebook.react.bridge.ReactContext: void addActivityEventListener(com.facebook.react.bridge.ActivityEventListener)
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_VISIBLE_PASSWORD
okhttp3.Cookie: boolean hostOnly()
org.webrtc.CryptoOptions
org.jitsi.meet.R$raw: int lang_languagesfi
org.jitsi.meet.sdk.WiFiStatsModule$1: com.facebook.react.bridge.Promise val$promise
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Large_Inverse
okhttp3.internal.NamedRunnable
org.jitsi.meet.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
org.webrtc.VideoFileRenderer: VideoFileRenderer(java.lang.String,int,int,org.webrtc.EglBase$Context)
com.horcrux.svg.R$styleable: int LinearLayoutCompat_showDividers
org.jitsi.meet.sdk.JitsiMeetActivity: void onUserLeaveHint()
com.facebook.react.views.checkbox.ReactCheckBoxManager: int getThemeColor(android.content.Context,java.lang.String)
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Medium_Inverse
org.jitsi.meet.MainActivity$1: void onReceive(android.content.Context,android.content.Intent)
okhttp3.internal.cache.DiskLruCache$Editor: void abortUnlessCommitted()
okhttp3.internal.http2.Http2Connection$6: int val$streamId
okhttp3.internal.tls.DistinguishedNameParser: java.lang.String findMostSpecific(java.lang.String)
org.jitsi.meet.sdk.AudioModeModule$2: org.jitsi.meet.sdk.AudioModeModule this$0
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.OptionalMethod setAlpnProtocols
com.facebook.react.views.scroll.ReactScrollViewManager: void setDecelerationRate(com.facebook.react.views.scroll.ReactScrollView,float)
com.facebook.jni.Countable: Countable()
com.facebook.react.bridge.ReactContext: java.lang.ref.WeakReference mCurrentActivity
org.webrtc.RtpTransceiver$RtpTransceiverDirection: org.webrtc.RtpTransceiver$RtpTransceiverDirection[] $VALUES
com.horcrux.svg.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ping(boolean,int,int)
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ListMenuView
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_SeekBar_Discrete
org.jitsi.meet.R$id: int content
com.horcrux.svg.VirtualView: int CLIP_RULE_NONZERO
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorCallbackFuture: void onFailure(java.lang.Throwable)
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService: android.media.AudioManager audioManager
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(okhttp3.ConnectionSpec)
org.webrtc.PeerConnectionFactory$InitializationOptions
org.webrtc.audio.JavaAudioDeviceModule$AudioTrackErrorCallback: void onWebRtcAudioTrackStartError(org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode,java.lang.String)
com.facebook.react.bridge.JavaJSExecutor: void setGlobalVariable(java.lang.String,java.lang.String)
okhttp3.Dispatcher: Dispatcher(java.util.concurrent.ExecutorService)
okio.BufferedSource: java.lang.String readUtf8(long)
org.webrtc.MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl: void start()
org.webrtc.GlGenericDrawer: java.lang.String INPUT_VERTEX_COORDINATE_NAME
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] values()
com.google.android.gms.internal.measurement.zzbv$zzc: java.lang.String zzg
org.jitsi.meet.sdk.R$id: int action_bar_title
okhttp3.internal.connection.RouteSelector
com.facebook.react.modules.camera.CameraRollManager: void access$400(android.database.Cursor,com.facebook.react.bridge.WritableMap,int)
com.facebook.react.devsupport.DevServerHelper$BundleType: DevServerHelper$BundleType(java.lang.String,int,java.lang.String)
org.webrtc.voiceengine.WebRtcAudioManager: boolean useStereoOutput
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter getEventEmitter()
com.facebook.react.bridge.JavaOnlyArray: void pushMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.queue.MessageQueueThread: void assertIsOnThread()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_editTextStyle
org.jitsi.meet.sdk.JitsiMeetUncaughtExceptionHandler: java.lang.Thread$UncaughtExceptionHandler defaultUncaughtExceptionHandler
com.facebook.yoga.YogaMeasureMode: com.facebook.yoga.YogaMeasureMode[] values()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_START
org.webrtc.MediaConstraints$KeyValuePair
com.facebook.react.devsupport.DevSupportManagerImpl$19: com.facebook.react.devsupport.DevSupportManagerImpl this$0
com.facebook.react.bridge.DynamicFromMap: java.lang.ThreadLocal sPool
okhttp3.internal.huc.OkHttpsURLConnection: void addRequestProperty(java.lang.String,java.lang.String)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_alertDialogTheme
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType EMS
org.jitsi.meet.sdk.R$id: int action_menu_divider
com.google.android.gms.internal.measurement.zzbv$zze: boolean zzg
com.facebook.react.views.viewpager.ReactViewPagerManager: void addView(android.view.ViewGroup,android.view.View,int)
androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
org.webrtc.TextureBufferImpl$2: void onDestroy(org.webrtc.TextureBufferImpl)
org.jitsi.meet.sdk.R$raw: int lang_mainsv
org.jitsi.meet.R$styleable: int AppCompatTheme_windowFixedWidthMajor
com.facebook.common.internal.DoNotStrip
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_I18N_MODULE_CONSTANTS_START
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_18
org.jitsi.meet.sdk.JitsiMeet: org.jitsi.meet.sdk.JitsiMeetConferenceOptions defaultConferenceOptions
org.webrtc.PeerConnection$CandidateNetworkPolicy: org.webrtc.PeerConnection$CandidateNetworkPolicy[] values()
okhttp3.Interceptor$Chain: okhttp3.Request request()
com.calendarevents.CalendarEvents: com.facebook.react.bridge.WritableNativeArray findAttendeesByEventId(java.lang.String)
com.facebook.react.bridge.ReactContext: void onWindowFocusChange(boolean)
com.facebook.react.devsupport.MultipartStreamReader: boolean readAllParts(com.facebook.react.devsupport.MultipartStreamReader$ChunkListener)
com.google.firebase.crashlytics.internal.common.DeliveryMechanism: com.google.firebase.crashlytics.internal.common.DeliveryMechanism valueOf(java.lang.String)
com.facebook.react.views.viewpager.ReactViewPagerManager: void addView(com.facebook.react.views.viewpager.ReactViewPager,android.view.View,int)
com.facebook.react.packagerconnection.RequestOnlyHandler: java.lang.String TAG
org.webrtc.audio.JavaAudioDeviceModule$AudioSamples: byte[] getData()
org.webrtc.voiceengine.WebRtcAudioTrack: void logUnderrunCount()
co.apptailor.googlesignin.RNGoogleSigninModule: void access$300(co.apptailor.googlesignin.RNGoogleSigninModule)
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats: long wallTime
org.webrtc.MediaCodecUtils: java.util.Map getCodecProperties(org.webrtc.VideoCodecMimeType,boolean)
org.jitsi.meet.R$attr: int initialActivityCount
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Number
org.jitsi.meet.R$attr: int toolbarStyle
org.jitsi.meet.R$dimen: int abc_dialog_fixed_width_major
org.jitsi.meet.sdk.BroadcastEvent$Type: org.jitsi.meet.sdk.BroadcastEvent$Type CONFERENCE_WILL_JOIN
org.jitsi.meet.sdk.R$styleable: int GradientColor_android_centerY
org.webrtc.PeerConnection: void stopRtcEventLog()
com.horcrux.svg.R$dimen: int compat_control_corner_material
org.webrtc.EglBase: void createDummyPbufferSurface()
com.facebook.hermes.unicode.AndroidUnicodeUtils: int localeCompare(java.lang.String,java.lang.String)
org.jitsi.meet.R$id: int action_menu_divider
com.horcrux.svg.R$attr: int colorError
org.webrtc.VideoTrack: void dispose()
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
org.webrtc.VideoFrameDrawer$1
okhttp3.internal.Util: boolean discard(okio.Source,int,java.util.concurrent.TimeUnit)
org.webrtc.VideoFrame$TextureBuffer$Type: org.webrtc.VideoFrame$TextureBuffer$Type valueOf(java.lang.String)
org.jitsi.meet.sdk.R$dimen: int abc_text_size_headline_material
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer
org.webrtc.RefCounted
com.facebook.yoga.YogaWrap: com.facebook.yoga.YogaWrap[] values()
org.jitsi.meet.sdk.R$raw: int lang_languagesesus
com.horcrux.svg.R$string: int abc_menu_alt_shortcut_label
org.jitsi.meet.sdk.R$raw: int lang_languagespl
org.webrtc.AndroidVideoDecoder: java.lang.String getImplementationName()
org.jitsi.meet.R$drawable: int images_jitsilogo_square
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStateCallback audioTrackStateCallback
androidx.activity.ComponentActivity$2
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
org.jitsi.meet.sdk.R$attr: int listItemLayout
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Subhead
org.jitsi.meet.sdk.R$layout: int abc_cascading_menu_item_layout
org.jitsi.meet.R$raw: int lang_mainko
com.reactnativecommunity.webview.RNCWebViewModule: void downloadFile()
org.webrtc.Camera1Session: org.webrtc.CameraSession$Events events
org.jitsi.meet.sdk.DropboxModule: void onHostPause()
okhttp3.HttpUrl: java.lang.String fragment()
com.horcrux.svg.R$string: int abc_menu_shift_shortcut_label
com.learnium.RNDeviceInfo.RNDeviceModule: com.facebook.react.bridge.WritableMap getAvailableLocationProvidersSync()
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.OptionalMethod setHostname
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()
org.jitsi.meet.sdk.BroadcastIntentHelper: android.content.Intent buildHangUpIntent()
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
org.webrtc.AndroidVideoDecoder: org.webrtc.ThreadUtils$ThreadChecker access$002(org.webrtc.AndroidVideoDecoder,org.webrtc.ThreadUtils$ThreadChecker)
com.facebook.react.devsupport.DevServerHelper$2: com.facebook.react.devsupport.DevServerHelper this$0
org.webrtc.WrappedNativeI420Buffer: WrappedNativeI420Buffer(int,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,long)
okhttp3.internal.platform.Platform
com.facebook.react.views.text.ReactTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
okhttp3.internal.http2.Http2Connection$4: void execute()
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$Builder setAudioFormat(int)
org.webrtc.Camera2Session$CameraStateCallback: void onDisconnected(android.hardware.camera2.CameraDevice)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEventAndBundle(java.lang.String,java.lang.String,android.os.Bundle,com.google.android.gms.internal.measurement.zzw,long)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
com.reactnativecommunity.webview.RNCWebViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.webkit.WebView)
com.facebook.common.util.ExceptionWithNoStacktrace
com.facebook.react.bridge.JSInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
org.webrtc.voiceengine.WebRtcAudioManager: int getNativeOutputSampleRate()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: int TYPE_USB_HEADSET
com.facebook.react.devsupport.DevSupportManagerImpl$23: DevSupportManagerImpl$23(com.facebook.react.devsupport.DevSupportManagerImpl,com.facebook.react.common.futures.SimpleSettableFuture)
org.jitsi.meet.sdk.AudioModeModule: void resetSelectedDevice()
org.jitsi.meet.R$id: int center
org.jitsi.meet.sdk.ParticipantInfo: boolean isLocal
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService: boolean access$202(org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService,boolean)
com.horcrux.svg.R$dimen: int abc_alert_dialog_button_dimen
okio.RealBufferedSink: void close()
okhttp3.ResponseBody$1: okio.BufferedSource source()
com.horcrux.svg.R$styleable: int AppCompatTheme_toolbarStyle
co.apptailor.googlesignin.RNGoogleSigninModule: void getTokens(com.facebook.react.bridge.Promise)
org.webrtc.HardwareVideoEncoder$YuvFormat: org.webrtc.HardwareVideoEncoder$YuvFormat valueOf(java.lang.String)
com.facebook.react.bridge.GuardedAsyncTask: java.lang.Void doInBackground(java.lang.Object[])
okhttp3.internal.Util: byte[] EMPTY_BYTE_ARRAY
org.jitsi.meet.sdk.R$dimen: int abc_dialog_padding_top_material
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getHostSync()
org.jitsi.meet.sdk.ProximityModule: android.os.PowerManager$WakeLock wakeLock
com.facebook.react.modules.appregistry.AppRegistry: void unmountApplicationComponentAtRootTag(int)
okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)
org.webrtc.PeerConnection$PortPrunePolicy: org.webrtc.PeerConnection$PortPrunePolicy valueOf(java.lang.String)
org.jitsi.meet.sdk.R$styleable: int Toolbar_android_minHeight
com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatus: long updateTimestamp
org.webrtc.voiceengine.WebRtcAudioRecord: void access$600(org.webrtc.voiceengine.WebRtcAudioRecord,int,long)
org.webrtc.RTCStats: java.util.Map getMembers()
com.facebook.react.modules.sound.SoundManagerModule: void playTouchSound()
org.jitsi.meet.R$styleable: int AppCompatTheme_actionBarTheme
org.webrtc.Camera2Session: int framerate
com.facebook.react.devsupport.DisabledDevSupportManager: java.lang.String getSourceUrl()
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object)
com.horcrux.svg.R$attr: int actionOverflowButtonStyle
org.webrtc.audio.VolumeLogger: android.media.AudioManager access$000(org.webrtc.audio.VolumeLogger)
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingNewName()
org.webrtc.audio.JavaAudioDeviceModule: long getNativeAudioDeviceModulePointer()
org.jitsi.meet.sdk.R$attr: int fontProviderCerts
org.webrtc.VideoFileRenderer: void release()
com.facebook.react.views.view.ReactViewManager: java.util.Map getCommandsMap()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_dialogPreferredPadding
org.jitsi.meet.R$styleable: R$styleable()
com.facebook.react.bridge.WritableMap: void putInt(java.lang.String,int)
org.jitsi.meet.R$style: int Widget_AppCompat_ProgressBar
org.jitsi.meet.R$dimen: int abc_action_bar_default_padding_end_material
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite()
org.webrtc.MediaSource: org.webrtc.MediaSource$State nativeGetState(long)
org.jitsi.meet.R$color: int ic_launcher_background
org.jitsi.meet.sdk.R$anim: int fragment_open_exit
org.jitsi.meet.R$styleable: int Toolbar_subtitleTextColor
com.facebook.react.modules.storage.AsyncStorageModule: void onCatalystInstanceDestroy()
org.jitsi.meet.R$attr: int actionMenuTextAppearance
com.facebook.react.devsupport.DevLoadingViewController$3: com.facebook.react.devsupport.DevLoadingViewController this$0
com.horcrux.svg.R$style: int Theme_AppCompat
org.webrtc.BitrateAdjuster: int getCodecConfigFramerate()
org.webrtc.EglRenderer: java.lang.Object access$200(org.webrtc.EglRenderer)
org.webrtc.audio.WebRtcAudioRecord: java.nio.ByteBuffer access$300(org.webrtc.audio.WebRtcAudioRecord)
org.jitsi.meet.R$layout: int abc_tooltip
org.jitsi.meet.R$attr: int tickMark
com.facebook.react.modules.appstate.AppStateModule: java.lang.String mAppState
okhttp3.Response: boolean isSuccessful()
org.jitsi.meet.sdk.R$color: int abc_tint_switch_track
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
com.facebook.react.devsupport.DevServerHelper$BundleType: com.facebook.react.devsupport.DevServerHelper$BundleType[] $VALUES
okhttp3.internal.http2.Http2Reader: int readMedium(okio.BufferedSource)
okhttp3.internal.cache.CacheInterceptor$1: void close()
okhttp3.internal.http2.Settings: void merge(okhttp3.internal.http2.Settings)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String DEFAULT_STYLE
org.jitsi.meet.sdk.LogBridgeModule: LogBridgeModule(com.facebook.react.bridge.ReactApplicationContext)
org.webrtc.PeerConnection$IceServer$Builder: PeerConnection$IceServer$Builder(java.util.List,org.webrtc.PeerConnection$1)
com.facebook.react.bridge.NativeArray: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
okhttp3.internal.http2.Settings: boolean getEnablePush(boolean)
org.webrtc.voiceengine.WebRtcAudioManager: boolean blacklistDeviceForOpenSLESUsage
okhttp3.CertificatePinner: java.util.Set pins
org.webrtc.PeerConnectionFactory$InitializationOptions$Builder: org.webrtc.PeerConnectionFactory$InitializationOptions createInitializationOptions()
com.facebook.react.bridge.CxxModuleWrapper: com.facebook.react.bridge.CxxModuleWrapper makeDso(java.lang.String,java.lang.String)
org.webrtc.MediaCodecVideoDecoderFactory: java.lang.String TAG
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
okhttp3.Cache$1: void update(okhttp3.Response,okhttp3.Response)
okio.Buffer$2: void close()
com.horcrux.svg.R$color: int abc_tint_seek_thumb
com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding valueOf(java.lang.String)
org.webrtc.AndroidVideoDecoder$DecodedTextureMetadata
com.facebook.react.devsupport.WindowOverlayCompat: int TYPE_SYSTEM_ALERT
org.jitsi.meet.R$id: int action_text
org.jitsi.meet.sdk.log.JitsiMeetLogger: void removeHandler(org.jitsi.meet.sdk.log.JitsiMeetBaseLogHandler)
com.facebook.react.views.textinput.ReactTextInputManager: void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,int)
com.facebook.react.modules.camera.CameraRollManager: java.lang.String SELECTION_BUCKET
okhttp3.internal.http1.Http1Codec: okhttp3.OkHttpClient client
org.webrtc.RendererCommon$GlDrawer: void release()
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: com.facebook.react.bridge.CatalystInstance mCatalystInstance
org.webrtc.NetworkPreference: int NEUTRAL
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants valueOf(java.lang.String)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressViewOffset(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,float)
org.webrtc.IceCandidate: java.lang.String getSdpMid()
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform PLATFORM
com.facebook.react.devsupport.StackTraceHelper$1
com.google.android.gms.internal.measurement.zzcd$zzc: java.lang.String zze
okhttp3.TlsVersion: TlsVersion(java.lang.String,int,java.lang.String)
org.webrtc.PeerConnection: org.webrtc.RtpSender addTrack(org.webrtc.MediaStreamTrack,java.util.List)
okhttp3.MultipartBody: long contentLength
com.facebook.react.devsupport.DevLoadingViewController: void updateProgress(java.lang.String,java.lang.Integer,java.lang.Integer)
com.facebook.react.views.picker.ReactDropdownPickerManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okio.Buffer: boolean rangeEquals(okio.Segment,int,okio.ByteString,int,int)
okhttp3.internal.cache2.Relay: okio.Source upstream
org.jitsi.meet.R$bool: int abc_action_bar_embed_tabs
org.jitsi.meet.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
org.webrtc.GlRectDrawer$ShaderCallbacks
com.horcrux.svg.R$id: int textSpacerNoButtons
org.jitsi.meet.R$dimen: int notification_media_narrow_margin
androidx.fragment.app.Fragment: java.lang.Object getReturnTransition()
com.facebook.react.bridge.queue.MessageQueueThread: java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable)
com.horcrux.svg.RenderableViewManager$RectViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzaf
com.horcrux.svg.RenderableViewManager$TextViewManager: void setMethod(com.horcrux.svg.TextView,java.lang.String)
com.horcrux.svg.SvgView: float mMinY
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ActionMode
com.facebook.react.modules.core.Timing
com.horcrux.svg.R$dimen: int abc_disabled_alpha_material_light
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mOrigin
com.horcrux.svg.R$id: int submit_area
com.facebook.react.uimanager.BaseViewManager: void setImportantForAccessibility(android.view.View,java.lang.String)
okio.Source: long read(okio.Buffer,long)
androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)
com.horcrux.svg.R$styleable: int ActionBar_navigationMode
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableType getType()
com.facebook.react.views.textinput.ReactTextInputManager: int BLUR_TEXT_INPUT
com.horcrux.svg.RenderableViewManager$PathViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
org.webrtc.TextureBufferImpl$1: TextureBufferImpl$1(java.lang.Runnable)
org.webrtc.CameraVideoCapturer$MediaRecorderHandler
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatusProvider access$500(com.facebook.react.devsupport.DevServerHelper)
com.horcrux.svg.R$styleable: int FontFamily_fontProviderAuthority
org.jitsi.meet.R$drawable: int abc_scrubber_track_mtrl_alpha
org.webrtc.PeerConnection$KeyType: org.webrtc.PeerConnection$KeyType[] $VALUES
com.horcrux.svg.R$dimen: int compat_button_padding_vertical_material
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PRODUCT_PACKAGE_START
org.webrtc.NetworkMonitor$2: void onNetworkDisconnect(long)
com.horcrux.svg.R$style: int Base_V7_Theme_AppCompat_Dialog
org.jitsi.meet.MainActivity: void onConferenceTerminated(java.util.HashMap)
org.webrtc.EglRenderer: java.lang.Object fpsReductionLock
okhttp3.internal.http2.Settings: int MAX_CONCURRENT_STREAMS
okhttp3.internal.http2.PushObserver: boolean onData(int,okio.BufferedSource,int,boolean)
org.jitsi.meet.R$styleable: int GradientColor_android_startX
com.horcrux.svg.R$attr: int textAppearanceSearchResultTitle
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService: void onCreate()
com.facebook.react.views.progressbar.ProgressBarShadowNode
org.jitsi.meet.R$raw: int lang_languageszhtw
okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)
org.webrtc.TurnCustomizer: long nativeTurnCustomizer
org.jitsi.meet.sdk.RNConnectionService: org.jitsi.meet.sdk.RNConnectionService$CallAudioStateListener callAudioStateListener
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService
androidx.fragment.app.FragmentContainerView
org.jitsi.meet.R$style: int TextAppearance_Compat_Notification
org.webrtc.Camera1Enumerator: java.util.List cachedSupportedFormats
com.learnium.RNDeviceInfo.RNDeviceModule: void sendEvent(com.facebook.react.bridge.ReactContext,java.lang.String,java.lang.Object)
com.horcrux.svg.R$styleable: int FontFamilyFont_android_fontStyle
org.jitsi.meet.sdk.R$id: int rn_redbox_stack
com.horcrux.svg.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
com.horcrux.svg.VirtualView: void onLayout(boolean,int,int,int,int)
org.webrtc.VideoFileRenderer$1: org.webrtc.EglBase$Context val$sharedContext
org.webrtc.TimestampAligner: long nativeCreateTimestampAligner()
com.horcrux.svg.R$dimen: int abc_dialog_fixed_width_minor
androidx.fragment.app.Fragment: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
com.facebook.react.views.view.ReactViewGroup: void updateDrawingOrder()
org.webrtc.PeerConnection$RTCConfiguration: boolean disableIPv6OnWifi
com.horcrux.svg.R$attr: int buttonTintMode
org.jitsi.meet.sdk.R$styleable: int AppCompatSeekBar_tickMarkTint
com.horcrux.svg.R$styleable: int ActionBar_logo
okio.SegmentedByteString: okio.ByteString toByteString()
org.jitsi.meet.sdk.R$attr: int subtitleTextAppearance
androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory
com.facebook.react.bridge.ModuleHolder: void markInitializable()
org.jitsi.meet.sdk.R$attr: int textAppearanceSearchResultTitle
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: com.facebook.react.bridge.JavaModuleWrapper this$0
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap computeConstantsForViewManager(java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegment(java.lang.String)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addUnsafeNonAscii(java.lang.String,java.lang.String)
com.horcrux.svg.R$style: int Base_AlertDialog_AppCompat
com.horcrux.svg.R$styleable: int MenuView_android_verticalDivider
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
org.webrtc.DtmfSender: boolean nativeInsertDtmf(long,java.lang.String,int,int)
okio.Okio$3: void close()
org.jitsi.meet.R$attr: int circleCrop
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setStartOffset(com.horcrux.svg.TextPathView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: int getJSArgumentsNeeded()
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)
org.jitsi.meet.sdk.R$attr: int buttonBarButtonStyle
okhttp3.internal.platform.OptionalMethod
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CHANGE_THREAD_PRIORITY
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String servedDateString
com.horcrux.svg.R$drawable: int abc_ic_star_black_16dp
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
com.zmxv.RNSound.RNSoundModule: android.media.MediaPlayer createMediaPlayer(java.lang.String)
com.facebook.react.devsupport.RedBoxDialog: boolean isReporting
com.facebook.react.animated.NativeAnimatedModule: NativeAnimatedModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.slider.ReactSliderManager: int STYLE
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderRadius(com.facebook.react.views.scroll.ReactScrollView,int,float)
com.facebook.react.views.art.ARTTextViewManager
okhttp3.OkUrlFactory: okhttp3.internal.URLFilter urlFilter
org.webrtc.DataChannel$Init: int getMaxRetransmits()
androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.google.android.gms.internal.measurement.zzbv$zzc
org.webrtc.RtpReceiver: org.webrtc.MediaStreamTrack cachedTrack
com.facebook.react.devsupport.DevSupportManagerImpl$4: com.facebook.react.devsupport.DevSupportManagerImpl this$0
org.jitsi.meet.sdk.R$drawable: int notification_bg_low
okhttp3.internal.tls.BasicCertificateChainCleaner
org.jitsi.meet.sdk.R$layout: int select_dialog_singlechoice_material
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.reactnativecommunity.netinfo.NetInfoModule
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action: java.lang.String getName()
org.webrtc.VideoCodecInfo: VideoCodecInfo(int,java.lang.String,java.util.Map)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Medium
com.facebook.react.bridge.JavaMethodWrapper: java.lang.Class[] mParameterTypes
org.jitsi.meet.R$drawable: int abc_text_select_handle_left_mtrl_dark
org.jitsi.meet.R$styleable: int[] FontFamily
org.jitsi.meet.sdk.R$styleable: int Toolbar_titleTextAppearance
com.facebook.react.bridge.Dynamic: java.lang.String asString()
com.facebook.react.bridge.Promise: void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap)
com.horcrux.svg.R$styleable: int[] AppCompatTheme
org.jitsi.meet.sdk.R$string: int catalyst_perf_monitor
com.horcrux.svg.R$styleable: int SearchView_searchIcon
org.jitsi.meet.sdk.R$attr: int listPreferredItemPaddingLeft
org.webrtc.VideoFrame$I420Buffer
okhttp3.internal.tls.DistinguishedNameParser: int beg
com.facebook.react.fabric.events.FabricEventEmitter: android.util.Pair removeTouchesAtIndices(com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
org.jitsi.meet.sdk.R$styleable: int MenuItem_contentDescription
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: java.lang.Boolean audioMuted
com.horcrux.svg.LinearGradientView: void setGradientUnits(int)
org.webrtc.PeerConnection$IceServer$Builder: PeerConnection$IceServer$Builder(java.util.List)
androidx.fragment.app.Fragment: void postponeEnterTransition(long,java.util.concurrent.TimeUnit)
org.jitsi.meet.R$styleable: int[] ColorStateListItem
com.horcrux.svg.R$id: int search_close_btn
com.facebook.react.devsupport.WebsocketJavaScriptExecutor: com.facebook.react.devsupport.JSDebuggerWebSocketClient mWebSocketClient
com.horcrux.svg.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
com.dropbox.core.NoThrowInputStream$HiddenException
org.jitsi.meet.sdk.R$string: int abc_menu_ctrl_shortcut_label
okhttp3.OkHttpClient$Builder: okhttp3.EventListener$Factory eventListenerFactory
com.facebook.jni.CppSystemErrorException
com.horcrux.svg.RenderableView: boolean setupFillPaint(android.graphics.Paint,float)
com.facebook.react.views.viewpager.ReactViewPager: void setScrollEnabled(boolean)
org.webrtc.EncodedImage: EncodedImage(java.nio.ByteBuffer,java.lang.Runnable,int,int,long,org.webrtc.EncodedImage$FrameType,int,java.lang.Integer,org.webrtc.EncodedImage$1)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)
org.jitsi.meet.sdk.R$styleable: int SwitchCompat_switchMinWidth
com.facebook.react.modules.systeminfo.AndroidInfoModule: AndroidInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.gms.internal.measurement.zzcd$zzg: long zzu
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice valueOf(java.lang.String)
com.horcrux.svg.R$drawable: int abc_scrubber_track_mtrl_alpha
okio.Timeout: void throwIfReached()
okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)
com.reactnativecommunity.webview.RNCWebViewManager: void setTextZoom(android.webkit.WebView,int)
okhttp3.internal.http2.Hpack: java.util.Map nameToFirstIndex()
org.jitsi.meet.sdk.R$color: int abc_primary_text_disable_only_material_dark
org.jitsi.meet.sdk.R$interpolator: int btn_radio_to_off_mtrl_animation_interpolator_0
org.jitsi.meet.R$style: int SpinnerTimePickerStyle
okio.Okio$2: long read(okio.Buffer,long)
org.jitsi.meet.sdk.R$style: int Base_ThemeOverlay_AppCompat
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_START
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator()
org.jitsi.meet.R$id: int react_test_id
com.facebook.react.modules.camera.ImageStoreManager: java.lang.String convertInputStreamToBase64OutputStream(java.io.InputStream)
org.jitsi.meet.R$attr: int buttonStyleSmall
org.webrtc.PeerConnection$IceServer: java.util.List tlsEllipticCurves
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollPerfTag(java.lang.String)
com.horcrux.svg.BuildConfig
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3: void execute()
org.webrtc.PeerConnectionFactory$Builder
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String BATTERY_LEVEL
org.jitsi.meet.sdk.R$attr: int ratingBarStyle
org.webrtc.YuvConverter
okhttp3.OkHttpClient$Builder: boolean followRedirects
okhttp3.HttpUrl: int hashCode()
org.jitsi.meet.sdk.R$attr: int contentInsetStart
org.webrtc.VideoProcessor$FrameAdaptationParameters: int cropX
okhttp3.internal.http2.Hpack$Reader
org.jitsi.meet.sdk.JitsiMeet: void showDevOptions()
com.horcrux.svg.SvgViewManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
org.jitsi.meet.sdk.R$styleable: int DrawerArrowToggle_arrowShaftLength
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ListPopupWindow
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetHeight(long)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_END
com.ocetnik.timer.BackgroundTimerModule
com.horcrux.svg.R$attr: int backgroundSplit
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeCopyDrawable
androidx.fragment.app.Fragment: void setExitTransition(java.lang.Object)
com.horcrux.svg.R$styleable: int LinearLayoutCompat_android_weightSum
co.apptailor.googlesignin.RNGoogleSigninModule: co.apptailor.googlesignin.PromiseWrapper access$400(co.apptailor.googlesignin.RNGoogleSigninModule)
org.webrtc.Camera1Enumerator: boolean isFrontFacing(java.lang.String)
com.horcrux.svg.R$attr: int switchPadding
com.facebook.react.bridge.ObjectAlreadyConsumedException: ObjectAlreadyConsumedException(java.lang.String)
org.webrtc.RendererCommon$ScalingType: org.webrtc.RendererCommon$ScalingType[] $VALUES
org.jitsi.meet.R$string: int catalyst_hot_reloading
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int)
com.horcrux.svg.SvgView: int hitTest(float,float)
com.horcrux.svg.R$bool
org.webrtc.AndroidVideoDecoder: org.webrtc.VideoFrame$Buffer copyNV12ToI420Buffer(java.nio.ByteBuffer,int,int,int,int)
com.google.firebase.components.MissingDependencyException
com.facebook.react.modules.network.NetworkingModule: void abortRequest(int)
com.facebook.react.devsupport.DevSupportManagerImpl$22
org.jitsi.meet.sdk.R$color: int androidx_core_secondary_text_default_material_light
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Small
org.jitsi.meet.sdk.JitsiMeetView: void setProps(android.os.Bundle)
okio.Okio$4: Okio$4(java.net.Socket)
com.horcrux.svg.R$drawable: int abc_list_selector_disabled_holo_dark
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment requireParentFragment()
okio.RealBufferedSource: okio.Source source
com.calendarevents.CalendarEvents: int PERMISSION_REQUEST_CODE
org.webrtc.HardwareVideoEncoder$YuvFormat
org.webrtc.AndroidVideoDecoder: java.lang.String TAG
org.jitsi.meet.sdk.BroadcastEvent$Type: org.jitsi.meet.sdk.BroadcastEvent$Type access$000(java.lang.String)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
okhttp3.internal.http2.Http2Connection$Builder: int pingIntervalMillis
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_roundingBorderWidth
com.facebook.react.devsupport.InspectorPackagerConnection: java.util.Map access$100(com.facebook.react.devsupport.InspectorPackagerConnection)
com.facebook.react.devsupport.DevServerHelper$8: void onFailure(okhttp3.Call,java.io.IOException)
com.facebook.react.devsupport.DevSupportManagerImpl: void access$1700(com.facebook.react.devsupport.DevSupportManagerImpl,com.facebook.react.packagerconnection.Responder)
org.jitsi.meet.R$styleable: int[] TextAppearance
okhttp3.Cookie: okhttp3.Cookie parse(long,okhttp3.HttpUrl,java.lang.String)
org.jitsi.meet.sdk.ParticipantInfo: java.lang.String name
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode FLOW_CONTROL_ERROR
com.facebook.react.devsupport.DevLoadingViewController$2: java.lang.Integer val$done
com.facebook.react.devsupport.DevSupportManagerImpl: void showNewJavaError(java.lang.String,java.lang.Throwable)
com.horcrux.svg.VirtualView: java.lang.String mMarkerMid
okhttp3.internal.http1.Http1Codec$FixedLengthSink: boolean closed
org.webrtc.PeerConnectionFactory$Options: int networkIgnoreMask
okio.BufferedSink: okio.BufferedSink writeShort(int)
com.horcrux.svg.R$style: int Base_Widget_AppCompat_RatingBar_Small
com.facebook.imagepipeline.memory.NativeMemoryChunk: long nativeAllocate(int)
okhttp3.internal.Util: java.lang.String trimSubstring(java.lang.String,int,int)
com.horcrux.svg.R$dimen: int notification_top_pad_large_text
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap toHashMap()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_popupWindowStyle
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableArray asArray()
okhttp3.Address: java.util.List protocols()
com.google.android.gms.internal.measurement.zzcd$zzb: int zzc
org.webrtc.HardwareVideoEncoder: org.webrtc.BitrateAdjuster bitrateAdjuster
org.jitsi.meet.sdk.R$drawable: int abc_seekbar_track_material
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
org.jitsi.meet.sdk.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
com.facebook.react.devsupport.DevServerHelper$11: DevServerHelper$11(com.facebook.react.devsupport.DevServerHelper)
com.oney.WebRTCModule.RTCVideoViewManager: RTCVideoViewManager()
org.jitsi.meet.sdk.R$dimen: int abc_text_size_subtitle_material_toolbar
org.webrtc.HardwareVideoEncoderFactory: android.media.MediaCodecInfo findCodecForType(org.webrtc.VideoCodecMimeType)
com.horcrux.svg.TextView: void setVerticalAlign(java.lang.String)
okio.Buffer$UnsafeCursor: int seek(long)
androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)
com.horcrux.svg.RenderableViewManager$MaskManager: void setWidth(com.horcrux.svg.MaskView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.R$styleable: int MenuView_android_itemIconDisabledAlpha
okhttp3.internal.http1.Http1Codec: int STATE_CLOSED
com.facebook.react.bridge.CatalystInstanceImpl: void setSourceURLs(java.lang.String,java.lang.String)
com.horcrux.svg.RenderableViewManager$CircleViewManager: void setOpacity(android.view.View,float)
androidx.fragment.app.Fragment: boolean mIsCreated
com.facebook.react.devsupport.DevSupportManagerImpl: void isPackagerRunning(com.facebook.react.devsupport.interfaces.PackagerStatusCallback)
com.calendarevents.CalendarEvents: java.lang.String RNC_PREFS
com.horcrux.svg.RenderableViewManager$PathViewManager: void setD(com.horcrux.svg.PathView,java.lang.String)
org.webrtc.PeerConnection$Observer: void onIceConnectionChange(org.webrtc.PeerConnection$IceConnectionState)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
com.horcrux.svg.R$attr: int paddingBottomNoButtons
org.webrtc.Camera2Enumerator: boolean isSupported(android.content.Context)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ListView_DropDown
org.webrtc.EglRenderer: void setLayoutAspectRatio(float)
okio.BufferedSink: okio.BufferedSink writeUtf8CodePoint(int)
org.webrtc.voiceengine.WebRtcAudioTrack$WebRtcAudioTrackErrorCallback: void onWebRtcAudioTrackStartError(java.lang.String)
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole: com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole valueOf(java.lang.String)
org.webrtc.EglBase10Impl$1FakeSurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)
org.webrtc.RTCStatsReport: java.lang.String toString()
org.jitsi.meet.R$style: int ThemeOverlay_AppCompat
org.webrtc.EglBase$ConfigBuilder: EglBase$ConfigBuilder()
okio.Timeout: okio.Timeout deadlineNanoTime(long)
org.jitsi.meet.R$string: int ongoing_notification_action_unmute
com.facebook.react.views.view.ReactViewGroup: void setBorderRadius(float,int)
com.facebook.react.devsupport.DevServerHelper$2
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: java.lang.Boolean access$702(org.jitsi.meet.sdk.JitsiMeetConferenceOptions,java.lang.Boolean)
com.rnimmersive.RNImmersiveModule: java.lang.String ERROR_NO_ACTIVITY_MESSAGE
com.reactnativecommunity.webview.RNCWebViewManager: int SHOULD_OVERRIDE_URL_LOADING_TIMEOUT
org.webrtc.MediaCodecWrapper: void stop()
com.horcrux.svg.R$styleable: int AppCompatTheme_windowMinWidthMajor
org.jitsi.meet.sdk.R$attr: int overlayImage
org.webrtc.audio.WebRtcAudioRecord: boolean isAcousticEchoCancelerSupported()
org.jitsi.meet.sdk.JitsiMeetActivityDelegate: com.facebook.react.modules.core.PermissionListener permissionListener
org.jitsi.meet.sdk.R$drawable: int abc_tab_indicator_material
com.learnium.RNDeviceInfo.RNDeviceModule: boolean hasGmsSync()
com.horcrux.svg.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
okhttp3.internal.http2.Http2
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: java.lang.Boolean audioOnly
org.jitsi.meet.R$drawable: int notification_tile_bg
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowFileAccessFromFileURLs(android.webkit.WebView,boolean)
com.facebook.react.views.text.ReactTextViewManager: java.lang.String getName()
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.Boolean acceptsVideo(java.lang.String)
okhttp3.internal.http.StatusLine: int code
org.jitsi.meet.sdk.R$attr: int actionButtonStyle
org.jitsi.meet.sdk.R$attr: int barLength
org.webrtc.PeerConnection$IceConnectionState: org.webrtc.PeerConnection$IceConnectionState fromNativeIndex(int)
org.webrtc.VideoFrame$TextureBuffer$Type: org.webrtc.VideoFrame$TextureBuffer$Type RGB
com.horcrux.svg.R$styleable: int SwitchCompat_trackTint
org.webrtc.DataChannel: int nativeId()
org.webrtc.HardwareVideoEncoder: long lastKeyFrameNs
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.JavaMethodWrapper$2: JavaMethodWrapper$2()
org.jitsi.meet.R$id: int accessibility_custom_action_19
org.webrtc.VideoCodecInfo: VideoCodecInfo(java.lang.String,java.util.Map)
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonStyle
okio.Buffer: okio.Buffer$UnsafeCursor readUnsafe()
okio.SegmentedByteString: int lastIndexOf(byte[],int)
org.jitsi.meet.R$id: int fragment_container_view_tag
androidx.fragment.app.Fragment: int hashCode()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String)
org.jitsi.meet.R$attr: int textColorAlertDialogListItem
com.facebook.react.bridge.ReactContext: android.app.Activity getCurrentActivity()
com.facebook.react.views.picker.ReactPickerManager: void setItems(com.facebook.react.views.picker.ReactPicker,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.io.FileSystem: okio.Sink appendingSink(java.io.File)
okhttp3.Cache$1: Cache$1(okhttp3.Cache)
org.jitsi.meet.R$drawable: int abc_btn_check_to_on_mtrl_000
org.jitsi.meet.sdk.R$dimen: int abc_control_inset_material
com.horcrux.svg.R$style: int Theme_AppCompat_Light_Dialog
org.webrtc.PeerConnectionFactory: void nativeStopAecDump(long)
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String DENIED
com.facebook.react.bridge.ModuleHolder: javax.inject.Provider mProvider
org.jitsi.meet.sdk.R$styleable: int MenuItem_android_visible
com.horcrux.svg.R$dimen: int abc_dialog_list_padding_top_no_title
com.facebook.jni.ThreadScopeSupport: void runStdFunctionImpl(long)
okhttp3.internal.http1.Http1Codec: int state
com.horcrux.svg.EllipseView: void setRx(com.facebook.react.bridge.Dynamic)
okhttp3.internal.cache.CacheInterceptor$1: CacheInterceptor$1(okhttp3.internal.cache.CacheInterceptor,okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink)
okhttp3.internal.http.UnrepeatableRequestBody
org.jitsi.meet.sdk.R$anim: int btn_checkbox_to_checked_box_outer_merged_animation
com.google.android.gms.internal.measurement.zzcd$zzd: com.google.android.gms.internal.measurement.zzcd$zzd zzf
com.facebook.react.devsupport.DevLoadingViewController: void showInternal(java.lang.String)
okhttp3.internal.http.HttpMethod: boolean invalidatesCache(java.lang.String)
org.webrtc.VideoSource: void setVideoProcessor(org.webrtc.VideoProcessor)
org.jitsi.meet.R$color: int material_blue_grey_950
com.facebook.react.bridge.queue.NativeRunnable: void run()
okhttp3.OkHttpClient$Builder: okhttp3.internal.cache.InternalCache internalCache
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetFlexWrap(long)
com.google.android.gms.internal.measurement.zzcd$zzk: float zzh
com.learnium.RNDeviceInfo.RNDeviceModule: void isLocationEnabled(com.facebook.react.bridge.Promise)
org.webrtc.Camera2Session: void access$300(org.webrtc.Camera2Session)
org.webrtc.voiceengine.WebRtcAudioRecord$AudioSamples: WebRtcAudioRecord$AudioSamples(android.media.AudioRecord,byte[],org.webrtc.voiceengine.WebRtcAudioRecord$1)
com.facebook.react.views.art.ARTGroupViewManager: ARTGroupViewManager()
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure CRITICAL
org.jitsi.meet.R$styleable: int AppCompatTheme_checkedTextViewStyle
com.horcrux.svg.R$styleable: int AppCompatTextView_autoSizeMinTextSize
okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: void getDevice(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableViewManager$TextPathViewManager: void setSpacing(com.horcrux.svg.TextPathView,java.lang.String)
com.facebook.react.devsupport.MultipartStreamReader: okio.BufferedSource mSource
org.webrtc.voiceengine.WebRtcAudioTrack: java.nio.ByteBuffer byteBuffer
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
org.webrtc.audio.WebRtcAudioTrack: android.media.AudioManager audioManager
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noStore()
org.webrtc.PeerConnection: java.util.List receivers
okio.SegmentPool: okio.Segment next
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
com.horcrux.svg.R$styleable: int AppCompatTextView_android_textAppearance
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_DECIMAL_PAD
com.facebook.yoga.YogaPositionType: com.facebook.yoga.YogaPositionType valueOf(java.lang.String)
org.webrtc.PeerConnectionFactory$InitializationOptions$Builder: org.webrtc.PeerConnectionFactory$InitializationOptions$Builder setInjectableLogger(org.webrtc.Loggable,org.webrtc.Logging$Severity)
org.jitsi.meet.R$attr: int retryImageScaleType
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionButton
com.google.android.datatransport.cct.CctBackendFactory
org.webrtc.HardwareVideoEncoder: java.util.Map params
com.horcrux.svg.RenderableViewManager: android.util.SparseArray mTagToRunnable
com.facebook.react.modules.network.NetworkingModule: void initialize()
okhttp3.ResponseBody: okio.BufferedSource source()
okhttp3.internal.platform.JdkWithJettyBootPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
org.jitsi.meet.R$drawable: int abc_item_background_holo_dark
com.facebook.react.bridge.NativeModule: void initialize()
com.horcrux.svg.R$attr: int colorControlHighlight
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()
org.jitsi.meet.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
org.webrtc.VideoDecoderFallback: long nativeCreateDecoder(org.webrtc.VideoDecoder,org.webrtc.VideoDecoder)
com.fasterxml.jackson.core.JsonParser$Feature: com.fasterxml.jackson.core.JsonParser$Feature valueOf(java.lang.String)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void isTouchExplorationEnabled(com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper
org.webrtc.audio.JavaAudioDeviceModule: JavaAudioDeviceModule(android.content.Context,android.media.AudioManager,org.webrtc.audio.WebRtcAudioRecord,org.webrtc.audio.WebRtcAudioTrack,int,int,boolean,boolean)
okhttp3.internal.http2.Http2Stream$FramingSource: void close()
org.jitsi.meet.R$attr: int dividerPadding
okhttp3.HttpUrl: java.lang.String FORM_ENCODE_SET
org.jitsi.meet.sdk.incoming_call.IncomingCallViewListener
org.jitsi.meet.R$styleable: int TextAppearance_android_textStyle
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode
okhttp3.Cache$Entry: void writeCertList(okio.BufferedSink,java.util.List)
com.facebook.react.modules.fresco.FrescoModule: java.lang.String NAME
com.horcrux.svg.RenderableViewManager$LineViewManager: void setY2(com.horcrux.svg.LineView,com.facebook.react.bridge.Dynamic)
com.facebook.react.devsupport.BundleDeltaClient$BundleDeltaNativeClient
org.webrtc.VideoDecoderWrapper: org.webrtc.VideoDecoder$Callback createDecoderCallback(long)
com.horcrux.svg.R$styleable: int Spinner_android_entries
org.jitsi.meet.sdk.R$drawable: int abc_btn_switch_to_on_mtrl_00012
com.oney.WebRTCModule.WebRTCModule: void peerConnectionGetStats(int,com.facebook.react.bridge.Promise)
org.webrtc.PeerConnection$PortPrunePolicy: org.webrtc.PeerConnection$PortPrunePolicy[] $VALUES
com.horcrux.svg.R$style: int Widget_AppCompat_RatingBar
okio.RealBufferedSource: short readShortLe()
org.webrtc.AndroidVideoDecoder: void onFrame(org.webrtc.VideoFrame)
com.facebook.react.devsupport.JSDebuggerWebSocketClient: void onOpen(okhttp3.WebSocket,okhttp3.Response)
com.facebook.react.views.textinput.ReactTextInputManager: void setNumLines(com.facebook.react.views.textinput.ReactEditText,int)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
org.webrtc.PeerConnection: boolean nativeSetBitrate(java.lang.Integer,java.lang.Integer,java.lang.Integer)
org.webrtc.voiceengine.WebRtcAudioUtils: boolean useWebRtcBasedAcousticEchoCanceler()
com.facebook.react.views.art.ARTRenderableViewManager: java.lang.String getName()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
org.jitsi.meet.R$id: int message
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.webrtc.RtpSender: void setStreams(java.util.List)
okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: AndroidPlatform$AndroidTrustRootIndex(javax.net.ssl.X509TrustManager,java.lang.reflect.Method)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMeasurementEnabled(boolean,long)
org.jitsi.meet.sdk.JitsiMeetActivity$1: org.jitsi.meet.sdk.JitsiMeetActivity this$0
org.jitsi.meet.R$style: int Widget_AppCompat_SearchView_ActionBar
com.horcrux.svg.RenderableViewManager$PathViewManager: RenderableViewManager$PathViewManager()
org.jitsi.meet.R$attr: int actionBarTabBarStyle
com.facebook.react.devsupport.DevInternalSettings: boolean isElementInspectorEnabled()
org.jitsi.meet.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
com.google.android.gms.measurement.internal.zzw: android.os.Parcelable$Creator CREATOR
com.zmxv.RNSound.RNSoundModule: java.lang.Boolean mixWithOthers
org.webrtc.PeerConnection$IceServer: java.util.List getUrls()
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod valueOf(java.lang.String)
org.webrtc.RtpParameters$DegradationPreference: org.webrtc.RtpParameters$DegradationPreference DISABLED
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.facebook.react.devsupport.WebsocketJavaScriptExecutor: void connect(java.lang.String,com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback)
org.webrtc.PeerConnection$IceServer$Builder: org.webrtc.PeerConnection$IceServer createIceServer()
org.jitsi.meet.sdk.R$drawable: int common_google_signin_btn_text_dark_focused
org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger$LogVolumeTask: int maxRingVolume
com.reactnativecommunity.webview.RNCWebViewModule$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState: com.reactnativecommunity.webview.RNCWebViewModule$ShouldOverrideUrlLoadingLock$ShouldOverrideCallbackState valueOf(java.lang.String)
com.facebook.react.modules.blob.BlobModule: java.lang.String getName()
org.webrtc.ThreadUtils$2: java.util.concurrent.CountDownLatch val$latch
com.google.android.gms.internal.measurement.zzcd$zzj: com.google.android.gms.internal.measurement.zzcd$zzj zzf
org.webrtc.voiceengine.WebRtcAudioUtils
com.horcrux.svg.R$attr: int buttonBarNegativeButtonStyle
com.horcrux.svg.R$styleable: int Toolbar_contentInsetEnd
org.jitsi.meet.R$styleable: int AppCompatTheme_windowFixedHeightMajor
com.facebook.react.fabric.events.FabricEventEmitter: android.util.Pair touchSubsequence(com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray)
com.horcrux.svg.RenderableViewManager$TextViewManager
okhttp3.internal.ws.WebSocketWriter$FrameSink: okhttp3.internal.ws.WebSocketWriter this$0
org.webrtc.NetworkMonitorAutoDetect: org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate access$200(org.webrtc.NetworkMonitorAutoDetect)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.String[] getAcceptedMimeType(java.lang.String[])
co.apptailor.googlesignin.RNGoogleSigninModule: void clearCachedToken(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_256_GCM_SHA384
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
org.webrtc.audio.AudioDeviceModule: void release()
org.jitsi.meet.R$id: int view_tag_instance_handle
org.jitsi.meet.sdk.BuildConfig: boolean GOOGLE_SERVICES_ENABLED
okio.RealBufferedSink$1: void close()
com.facebook.react.devsupport.DisabledDevSupportManager: java.io.File downloadBundleResourceFromUrlSync(java.lang.String,java.io.File)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3
org.webrtc.EglRenderer: org.webrtc.EglBase eglBase
com.facebook.react.modules.network.NetworkingModule: void removeResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA
org.webrtc.Metrics: java.lang.String TAG
org.jitsi.meet.sdk.incoming_call.IncomingCallInfo: java.lang.String callerAvatarURL
okhttp3.internal.huc.OkHttpsURLConnection: long getIfModifiedSince()
com.horcrux.svg.R$attr: int numericModifiers
com.facebook.react.views.checkbox.ReactCheckBoxManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.facebook.react.views.textinput.ReactEditText: void setDisableFullscreenUI(boolean)
org.webrtc.H264Utils: java.lang.String H264_FMTP_PACKETIZATION_MODE
com.facebook.react.views.slider.ReactSliderManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.views.checkbox.ReactCheckBoxManager: com.facebook.react.views.checkbox.ReactCheckBox createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.view.ReactViewManager: void setTVPreferredFocus(com.facebook.react.views.view.ReactViewGroup,boolean)
co.apptailor.googlesignin.RNGoogleSigninModule: co.apptailor.googlesignin.PromiseWrapper getPromiseWrapper()
org.webrtc.Camera2Enumerator: android.hardware.camera2.CameraCharacteristics getCameraCharacteristics(java.lang.String)
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontWeight(java.lang.String)
com.horcrux.svg.R$styleable: int TextAppearance_android_shadowDy
com.horcrux.svg.DefsView
org.jitsi.meet.sdk.R$string: int state_mixed_description
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)
androidx.lifecycle.FullLifecycleObserverAdapter
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException
com.facebook.react.uimanager.ViewGroupManager: boolean needsCustomLayoutForChildren()
okio.Buffer: okio.Buffer emitCompleteSegments()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
okhttp3.RealCall: okhttp3.internal.http.RetryAndFollowUpInterceptor retryAndFollowUpInterceptor
com.horcrux.svg.R$style: int Theme_ReactNative_AppCompat_Light
com.horcrux.svg.R$color: int abc_primary_text_disable_only_material_dark
okhttp3.internal.http.HttpDate: long MAX_DATE
com.facebook.react.views.picker.ReactPickerManager: void setPrompt(com.facebook.react.views.picker.ReactPicker,java.lang.String)
com.oney.WebRTCModule.WebRTCView
com.google.android.gms.internal.measurement.zzcd$zzh: int zzc
org.webrtc.VideoDecoder$Callback
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
org.jitsi.meet.R$attr: int allowStacking
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDirection(long,int)
com.horcrux.svg.R$style: int SpinnerDatePickerStyle
com.horcrux.svg.R$string: int header_description
okhttp3.Response: okhttp3.Protocol protocol
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_failureImage
org.jitsi.meet.sdk.R$color: int bright_foreground_disabled_material_dark
com.facebook.react.uimanager.UIManagerModule: void onHostDestroy()
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
com.facebook.react.bridge.ReadableNativeArray: int getInt(int)
com.facebook.react.bridge.JavaMethodWrapper$6
okhttp3.internal.cache.DiskLruCache: void processJournal()
okhttp3.Headers
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Display3
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
okhttp3.HttpUrl$Builder: HttpUrl$Builder()
okio.AsyncTimeout: java.io.IOException exit(java.io.IOException)
org.webrtc.PeerConnection$IceConnectionState: org.webrtc.PeerConnection$IceConnectionState CLOSED
com.google.gson.JsonIOException
com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry
org.webrtc.TextureBufferImpl$2: TextureBufferImpl$2(org.webrtc.TextureBufferImpl)
org.jitsi.meet.R$dimen: int notification_content_margin_start
okhttp3.HttpUrl: int pathSize()
com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken[] values()
org.webrtc.SurfaceEglRenderer: boolean isRenderingPaused
org.jitsi.meet.sdk.R$dimen: int abc_dropdownitem_text_padding_left
org.webrtc.PeerConnection: boolean nativeSetConfiguration(org.webrtc.PeerConnection$RTCConfiguration)
org.jitsi.meet.R$styleable: int ActionBar_subtitleTextStyle
com.horcrux.svg.SvgViewManager: void setSvgView(int,com.horcrux.svg.SvgView)
com.facebook.react.devsupport.BundleDownloader
org.webrtc.RtpTransceiver$RtpTransceiverInit: org.webrtc.RtpTransceiver$RtpTransceiverDirection direction
org.webrtc.PeerConnection$PeerConnectionState: org.webrtc.PeerConnection$PeerConnectionState DISCONNECTED
org.jitsi.meet.R$anim: int btn_checkbox_to_unchecked_box_inner_merged_animation
com.dropbox.core.v2.team.MembersUnsuspendErrorException
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService: void launch(android.content.Context)
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
org.jitsi.meet.R$attr: int buttonTintMode
com.facebook.react.devsupport.interfaces.StackFrame: int getColumn()
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_roundAsCircle
com.facebook.react.bridge.ReactContext: boolean hasActiveCatalystInstance()
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModuleCallExceptionHandler getExceptionHandler()
org.jitsi.meet.sdk.AudioModeModule: boolean updateAudioRoute(int,boolean)
com.facebook.react.devsupport.DevLoadingViewController: void showForRemoteJSEnabled()
okhttp3.Challenge: java.lang.String realm()
com.facebook.react.devsupport.DisabledDevSupportManager: void handleReloadJS()
com.horcrux.svg.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
com.facebook.imagepipeline.nativecode.NativeRoundingFilter: NativeRoundingFilter()
org.jitsi.meet.sdk.R$anim: int btn_radio_to_off_mtrl_dot_group_animation
com.facebook.react.modules.core.Timing: java.lang.String NAME
org.jitsi.meet.sdk.R$color: int switch_thumb_normal_material_dark
com.horcrux.svg.RenderableView: void setStrokeLinecap(int)
okhttp3.ResponseBody$1: okhttp3.MediaType val$contentType
org.jitsi.meet.R$dimen: int highlight_alpha_material_dark
org.jitsi.meet.sdk.R$styleable: R$styleable()
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.horcrux.svg.R$styleable: int AppCompatTextView_autoSizePresetSizes
okhttp3.internal.http2.Http2Connection: void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)
com.horcrux.svg.RenderableViewManager: void setPropList(com.horcrux.svg.RenderableView,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.R$dimen: int tooltip_horizontal_padding
com.learnium.RNDeviceInfo.RNDeviceModule: void getSecurityPatch(com.facebook.react.bridge.Promise)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
org.jitsi.meet.sdk.R$styleable: int GradientColor_android_tileMode
com.learnium.RNDeviceInfo.RNDeviceModule: void getBaseOs(com.facebook.react.bridge.Promise)
org.webrtc.RefCountDelegate: boolean safeRetain()
androidx.fragment.app.Fragment: void onStart()
org.jitsi.meet.sdk.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
com.horcrux.svg.RenderableViewManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
okhttp3.internal.http2.Http2Writer: java.util.logging.Logger logger
com.facebook.react.bridge.JSIModuleHolder: void notifyJSInstanceDestroy()
okhttp3.internal.huc.BufferedRequestBody
com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature valueOf(java.lang.String)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Listener listener
com.facebook.react.fabric.events.EventBeatManager: com.facebook.jni.HybridData mHybridData
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Display4
com.facebook.react.bridge.JavaOnlyMap: java.lang.String toString()
com.facebook.react.devsupport.BundleDeltaClient$1: int[] $SwitchMap$com$facebook$react$devsupport$BundleDeltaClient$ClientType
com.facebook.react.bridge.ReadableMapKeySetIterator: boolean hasNextKey()
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_progressBarImage
com.facebook.react.bridge.JavaOnlyMap$1: JavaOnlyMap$1(com.facebook.react.bridge.JavaOnlyMap)
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils
org.jitsi.meet.R$style: int Widget_AppCompat_Spinner_Underlined
org.webrtc.PeerConnection$Observer: void onAddStream(org.webrtc.MediaStream)
org.webrtc.EglRenderer: void printStackTrace()
okio.AsyncTimeout: int TIMEOUT_WRITE_SIZE
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Tooltip
org.jitsi.meet.sdk.R$color: int dim_foreground_disabled_material_dark
org.jitsi.meet.sdk.R$styleable: int ActionMode_background
okhttp3.internal.cache.InternalCache: void trackConditionalCacheHit()
org.jitsi.meet.sdk.R$string: int progressbar_description
org.webrtc.CameraCapturer$1: void onDone(org.webrtc.CameraSession)
com.facebook.react.bridge.queue.NativeRunnableDeprecated: NativeRunnableDeprecated()
okhttp3.internal.http2.Hpack: int PREFIX_7_BITS
org.webrtc.SurfaceViewRenderer: void onFrame(org.webrtc.VideoFrame)
org.jitsi.meet.R$anim: int catalyst_push_up_in
org.jitsi.meet.R$string: int state_off_description
com.facebook.react.devsupport.MultipartStreamReader: void emitProgress(java.util.Map,long,boolean,com.facebook.react.devsupport.MultipartStreamReader$ChunkListener)
com.horcrux.svg.R$string: int catalyst_reload_error
okio.BufferedSource
org.webrtc.EglBase14Impl: android.opengl.EGLContext eglContext
com.facebook.react.views.scroll.ReactScrollViewManager: com.facebook.react.views.scroll.FpsListener mFpsListener
org.jitsi.meet.R$styleable: int Toolbar_contentInsetEndWithActions
com.horcrux.svg.RenderableViewManager$DefsViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_listPreferredItemHeight
okhttp3.Response$Builder: okhttp3.Response build()
okhttp3.internal.http.RequestLine: RequestLine()
com.facebook.react.modules.network.NetworkingModule: java.lang.String getName()
okhttp3.OkUrlFactory: okhttp3.OkHttpClient client
com.facebook.react.devsupport.RedBoxDialog$StackAdapter$FrameViewHolder: android.widget.TextView mMethodView
com.facebook.react.animated.EventAnimationDriver: java.util.List mEventPath
org.webrtc.TextureBufferImpl: void release()
okhttp3.CertificatePinner: boolean equals(java.lang.Object)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
com.oney.WebRTCModule.WebRTCModule: void peerConnectionSetConfiguration(com.facebook.react.bridge.ReadableMap,int)
com.facebook.react.views.image.ReactImageManager: void setLoadingIndicatorSource(com.facebook.react.views.image.ReactImageView,java.lang.String)
org.webrtc.FileVideoCapturer$VideoReaderY4M: FileVideoCapturer$VideoReaderY4M(java.lang.String)
org.webrtc.AndroidVideoDecoder: org.webrtc.VideoCodecMimeType codecType
com.google.android.gms.common.UserRecoverableException
org.webrtc.SurfaceTextureHelper: void stopListening()
okhttp3.internal.cache.DiskLruCache$1
okio.HashingSource: java.security.MessageDigest messageDigest
org.jitsi.meet.R$anim: int catalyst_push_up_out
okhttp3.internal.huc.OutputStreamRequestBody: long expectedContentLength
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX1(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.JavaMethodWrapper: char commonTypeToChar(java.lang.Class)
okhttp3.internal.ws.RealWebSocket$Message: int formatOpcode
org.webrtc.StatsReport$Value: java.lang.String value
com.google.android.gms.internal.measurement.zzbv$zzd: java.lang.String zzh
org.jitsi.meet.R$style: int Base_Widget_AppCompat_EditText
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionBarTabBarStyle
org.webrtc.MediaCodecUtils: int COLOR_QCOM_FORMATYVU420PackedSemiPlanar16m4ka
com.facebook.react.devsupport.InspectorPackagerConnection$Connection$2: InspectorPackagerConnection$Connection$2(com.facebook.react.devsupport.InspectorPackagerConnection$Connection,org.json.JSONObject)
com.facebook.react.devsupport.BundleDownloader$BundleInfo: BundleDownloader$BundleInfo()
okhttp3.Response$Builder: java.lang.String message
org.jitsi.meet.R$styleable: int[] ViewBackgroundHelper
org.webrtc.FileVideoCapturer$1: FileVideoCapturer$1(org.webrtc.FileVideoCapturer)
org.jitsi.meet.MainActivity: boolean onKeyUp(int,android.view.KeyEvent)
okio.Buffer$2
org.jitsi.meet.sdk.JitsiMeet: JitsiMeet()
com.facebook.react.devsupport.DevSupportManagerImpl: void setDevSupportEnabled(boolean)
okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])
okhttp3.internal.connection.RouteSelector$Selection: java.util.List routes
com.facebook.react.modules.storage.AsyncStorageModule: boolean access$000(com.facebook.react.modules.storage.AsyncStorageModule)
com.facebook.react.devsupport.DevServerHelper: okhttp3.OkHttpClient mOnChangePollingClient
org.jitsi.meet.R$styleable: int AppCompatTheme_seekBarStyle
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getInstanceIdSync()
org.jitsi.meet.sdk.R$color: int button_material_dark
org.webrtc.CameraSession$CreateSessionCallback: void onFailure(org.webrtc.CameraSession$FailureType,java.lang.String)
org.webrtc.Logging$TraceLevel
com.facebook.react.ReactRootView: int getHeightMeasureSpec()
com.horcrux.svg.R$attr: int textAppearancePopupMenuHeader
org.jitsi.meet.sdk.R$string: int state_busy_description
org.jitsi.meet.R$color: int abc_primary_text_disable_only_material_light
com.facebook.react.views.view.ReactViewManager: int getChildCount(com.facebook.react.views.view.ReactViewGroup)
com.facebook.react.views.slider.ReactSlider: double getStepValue()
org.jitsi.meet.MainActivity: void setJitsiMeetConferenceDefaultOptions()
okhttp3.internal.http1.Http1Codec: okio.Source newFixedLengthSource(long)
com.fasterxml.jackson.core.JsonProcessingException
okhttp3.internal.connection.RealConnection: boolean isEligible(okhttp3.Address,okhttp3.Route)
org.webrtc.VideoFileRenderer: java.lang.String TAG
org.jitsi.meet.sdk.R$layout: int support_simple_spinner_dropdown_item
org.jitsi.meet.sdk.R$attr: int queryHint
okhttp3.internal.ws.RealWebSocket: void onReadClose(int,java.lang.String)
com.facebook.react.bridge.queue.QueueThreadExceptionHandler
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
org.webrtc.MediaCodecWrapper: void releaseOutputBuffer(int,boolean)
org.webrtc.TextureBufferImpl$2: void onRetain(org.webrtc.TextureBufferImpl)
okhttp3.OkHttpClient: int writeTimeoutMillis()
org.webrtc.NetworkChangeDetector$IPAddress: byte[] address
org.webrtc.RtpTransceiver: java.lang.String nativeGetMid(long)
okhttp3.CertificatePinner
com.google.android.gms.internal.measurement.zzcd$zzg: int zzao
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JSBundleLoader mJSBundleLoader
org.jitsi.meet.R$anim: int fragment_open_exit
org.jitsi.meet.R$dimen: int abc_action_bar_stacked_tab_max_width
org.jitsi.meet.sdk.JitsiMeetActivityInterface: boolean shouldShowRequestPermissionRationale(java.lang.String)
org.webrtc.RtpParameters$Encoding: java.lang.Integer getMaxBitrateBps()
org.jitsi.meet.R$id: int centerInside
okhttp3.internal.http.HttpDate: java.util.Date parse(java.lang.String)
org.jitsi.meet.sdk.R$attr: int alertDialogCenterButtons
org.jitsi.meet.sdk.R$color: int abc_decor_view_status_guard
org.webrtc.voiceengine.WebRtcAudioUtils: java.util.List getBlackListedModelsForNsUsage()
okio.Buffer$UnsafeCursor: long expandBuffer(int)
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
okhttp3.HttpUrl: java.lang.String encodedFragment()
org.jitsi.meet.sdk.R$layout: int abc_screen_content_include
org.jitsi.meet.sdk.R$color: int abc_background_cache_hint_selector_material_dark
com.horcrux.svg.RenderableView: int JOIN_MITER
com.facebook.react.bridge.Callback
org.jitsi.meet.sdk.AudioModeModule: int DEFAULT
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager
org.jitsi.meet.sdk.R$raw: int lang_mainpl
okhttp3.Cache: java.util.Iterator urls()
okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()
com.facebook.react.bridge.NativeModuleRegistry: void onBatchComplete()
okhttp3.ConnectionSpec: boolean isTls()
org.jitsi.meet.R$id: int accessibility_custom_action_13
com.facebook.react.uimanager.UIManagerModule: void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
com.facebook.react.views.view.ReactViewGroup: com.facebook.react.views.view.ReactViewBackgroundDrawable getOrCreateReactViewBackground()
androidx.fragment.app.Fragment: int mFragmentId
org.webrtc.CameraCapturer: java.lang.Runnable access$200(org.webrtc.CameraCapturer)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
com.facebook.react.views.textinput.ReactTextInputManager: void onAfterUpdateTransaction(android.view.View)
okio.Buffer: okio.Buffer readFrom(java.io.InputStream,long)
com.facebook.yoga.YogaNative: void jni_YGConfigSetUseWebDefaults(long,boolean)
org.webrtc.SurfaceTextureHelper: org.webrtc.EglBase eglBase
org.jitsi.meet.sdk.R$color: int primary_dark_material_dark
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: void reconnect()
com.horcrux.svg.R$attr: int radioButtonStyle
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException()
okhttp3.internal.ws.WebSocketProtocol: java.lang.String closeCodeExceptionMessage(int)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_seekBarStyle
org.jitsi.meet.R$drawable: int abc_ic_menu_share_mtrl_alpha
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.RedBoxDialog access$600(com.facebook.react.devsupport.DevSupportManagerImpl)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType)
com.facebook.react.devsupport.JSException: java.lang.String mStack
com.google.android.gms.internal.measurement.zzbv$zzb: java.lang.String zze
org.webrtc.MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl: void queueInputBuffer(int,int,int,long,int)
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Subhead
org.jitsi.meet.sdk.LogBridgeModule: java.lang.String NAME
org.jitsi.meet.sdk.JitsiMeetActivityDelegate: com.facebook.react.bridge.Callback permissionsCallback
org.jitsi.meet.sdk.R$attr: int drawableBottomCompat
androidx.appcompat.widget.ActionMenuView
com.facebook.jni.Countable: void dispose()
org.webrtc.PeerConnectionFactory$InitializationOptions$Builder: org.webrtc.NativeLibraryLoader nativeLibraryLoader
org.webrtc.LibvpxVp8Decoder: LibvpxVp8Decoder()
okhttp3.CookieJar
org.jitsi.meet.R$string: int alert_description
com.horcrux.svg.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
com.facebook.react.devsupport.DevSupportManagerImpl: java.lang.String mLastErrorTitle
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Subhead
com.facebook.react.views.text.ReactTextAnchorViewManager: void setBorderColor(com.facebook.react.views.text.ReactTextView,int,java.lang.Integer)
org.jitsi.meet.sdk.ParticipantsService$1
org.jitsi.meet.sdk.R$dimen: int abc_action_bar_default_padding_end_material
com.facebook.react.devsupport.InspectorPackagerConnection$Connection$2: java.lang.Void doInBackground(okhttp3.WebSocket[])
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
com.facebook.react.bridge.FallbackJSBundleLoader: FallbackJSBundleLoader(java.util.List)
okhttp3.internal.http2.Hpack$Reader: int headerCount
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
org.jitsi.meet.R$layout: int abc_popup_menu_item_layout
org.jitsi.meet.R$raw: int lang_languagesko
com.horcrux.svg.R$styleable: int AppCompatTextView_textLocale
okhttp3.OkHttpClient: java.util.List networkInterceptors
org.jitsi.meet.R$styleable: int FontFamilyFont_android_fontWeight
com.learnium.RNDeviceInfo.RNDeviceModule: void getSystemAvailableFeatures(com.facebook.react.bridge.Promise)
com.horcrux.svg.R$attr: int voiceIcon
org.webrtc.voiceengine.WebRtcAudioManager: boolean isProAudioSupported()
com.google.gson.reflect.TypeToken: java.lang.Class getRawType()
com.horcrux.svg.LinearGradientView
org.webrtc.PeerConnectionFactory: org.webrtc.VideoTrack createVideoTrack(java.lang.String,org.webrtc.VideoSource)
org.jitsi.meet.sdk.R$string: int common_google_play_services_install_title
com.facebook.react.views.checkbox.ReactCheckBoxManager: android.widget.CompoundButton$OnCheckedChangeListener ON_CHECKED_CHANGE_LISTENER
org.jitsi.meet.sdk.R$styleable: int ActionBar_backgroundStacked
org.webrtc.Logging$TraceLevel: org.webrtc.Logging$TraceLevel valueOf(java.lang.String)
org.jitsi.meet.sdk.R$layout: int notification_template_icon_group
org.jitsi.meet.sdk.R$raw: int lang_mainzhcn
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] WILDCARD_LABEL
org.jitsi.meet.R$styleable: int AppCompatTheme_actionModeCutDrawable
okhttp3.MediaType: java.util.regex.Pattern TYPE_SUBTYPE
com.horcrux.svg.VirtualView: float mOpacity
org.webrtc.GlGenericDrawer: GlGenericDrawer(java.lang.String,java.lang.String,org.webrtc.GlGenericDrawer$ShaderCallbacks)
com.google.android.gms.internal.measurement.zzcd$zzd: java.lang.String zzd
com.horcrux.svg.R$attr: int titleMarginBottom
com.facebook.react.devsupport.DevSupportManagerImpl$17: void run()
com.facebook.jni.HybridData$Destructor: long mNativePointer
org.jitsi.meet.sdk.R$attr: int roundTopRight
org.jitsi.meet.sdk.R$string: int state_collapsed_description
org.jitsi.meet.sdk.R$drawable: int abc_textfield_search_material
okhttp3.internal.http.RetryAndFollowUpInterceptor: int retryAfter(okhttp3.Response,int)
org.webrtc.GlGenericDrawer$ShaderType: org.webrtc.GlGenericDrawer$ShaderType YUV
com.facebook.react.modules.fresco.FrescoModule: FrescoModule(com.facebook.react.bridge.ReactApplicationContext,boolean)
org.webrtc.PeerConnection$IceTransportsType: org.webrtc.PeerConnection$IceTransportsType NONE
org.jitsi.meet.R$string: int catalyst_debug_chrome
okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)
com.facebook.react.bridge.CatalystInstanceImpl: void addJSIModules(java.util.List)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.Object getContent(java.lang.Class[])
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
org.jitsi.meet.sdk.R$attr: int popupTheme
androidx.lifecycle.CompositeGeneratedAdaptersObserver
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
com.horcrux.svg.R$id: int fitXY
okhttp3.internal.http1.Http1Codec: void cancel()
org.webrtc.CameraEnumerationAndroid$2: int diff(org.webrtc.Size)
com.facebook.yoga.YogaBaselineFunction: float baseline(com.facebook.yoga.YogaNode,float,float)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
org.webrtc.HardwareVideoEncoder: int height
org.webrtc.EglBase10Impl$1FakeSurfaceHolder: void setType(int)
com.facebook.react.views.image.ReactImageView
com.facebook.react.devsupport.DevInternalSettings: java.lang.String PREFS_ANIMATIONS_DEBUG_KEY
org.jitsi.meet.R$styleable: int ActionBar_elevation
com.facebook.react.views.scroll.ReactScrollView: void setSnapToEnd(boolean)
com.facebook.react.bridge.ReactContextBaseJavaModule: com.facebook.react.bridge.ReactApplicationContext mReactApplicationContext
com.facebook.react.views.scroll.ReactScrollViewManager: java.lang.String REACT_CLASS
org.jitsi.meet.R$styleable: int SearchView_android_imeOptions
org.jitsi.meet.R$id: int accessibility_custom_action_3
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mCreationTimestamp
okio.Timeout$1: void throwIfReached()
okhttp3.internal.cache.DiskLruCache: int redundantOpCount
com.facebook.react.modules.network.NetworkingModule: boolean access$100(com.facebook.react.modules.network.NetworkingModule)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mExpiredEventName
org.jitsi.meet.R$color: int abc_tint_default
org.webrtc.JNILogging: org.webrtc.Loggable loggable
com.facebook.react.bridge.JavaMethodWrapper: int calculateJSArgumentsNeeded()
com.calendarevents.CalendarEvents: void saveEvent(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.BaseJavaModule: void initialize()
org.webrtc.H264Utils: java.lang.String H264_LEVEL_3_1
org.webrtc.EglBase10Impl: int surfaceWidth()
com.facebook.react.animated.NativeAnimatedModule: void willDispatchViewUpdates(com.facebook.react.uimanager.UIManagerModule)
okhttp3.internal.ws.RealWebSocket: java.util.Random random
okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA
okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)
org.jitsi.meet.R$dimen: int abc_text_size_caption_material
org.jitsi.meet.sdk.R$dimen: int notification_right_side_padding_top
org.jitsi.meet.R$dimen: int abc_text_size_display_1_material
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: java.util.List protocols
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData mHybridData
org.webrtc.audio.WebRtcAudioTrack$AudioTrackThread: boolean keepAlive
org.webrtc.Camera1Session: boolean captureToTexture
com.google.firebase.analytics.FirebaseAnalytics: java.lang.String getFirebaseInstanceId()
com.facebook.react.modules.datepicker.DatePickerDialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.datepicker.DatePickerDialogModule)
okhttp3.Response: long sentRequestAtMillis
com.facebook.react.devsupport.DevSupportManagerImpl$27: void run()
org.webrtc.PeerConnection: void setLocalDescription(org.webrtc.SdpObserver,org.webrtc.SessionDescription)
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableArray fromArray(java.lang.Object)
com.horcrux.svg.R$attr: int navigationContentDescription
org.jitsi.meet.R$style: int TextAppearance_Compat_Notification_Line2
org.webrtc.VideoDecoder: org.webrtc.VideoCodecStatus initDecode(org.webrtc.VideoDecoder$Settings,org.webrtc.VideoDecoder$Callback)
androidx.lifecycle.LiveData$LifecycleBoundObserver
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_INVALID_CONTENT
org.jitsi.meet.sdk.ReactPackageAdapter: ReactPackageAdapter()
okio.HashingSource
org.webrtc.GlTextureFrameBuffer: GlTextureFrameBuffer(int)
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.util.Date)
com.facebook.react.bridge.ModuleSpec: java.lang.Class getType()
org.jitsi.meet.sdk.R$drawable: int abc_ratingbar_indicator_material
com.facebook.react.bridge.DynamicFromMap: com.facebook.react.bridge.ReadableMap mMap
org.webrtc.voiceengine.WebRtcAudioTrack: void reportWebRtcAudioTrackInitError(java.lang.String)
org.webrtc.MediaStreamTrack: java.lang.String nativeGetId(long)
org.webrtc.audio.WebRtcAudioTrack$AudioTrackThread: void stopThread()
org.jitsi.meet.sdk.RNConnectionService: void reportConnectedOutgoingCall(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.PromiseImpl: java.lang.String ERROR_MAP_KEY_CODE
org.webrtc.Camera2Session: Camera2Session(org.webrtc.CameraSession$CreateSessionCallback,org.webrtc.CameraSession$Events,android.content.Context,android.hardware.camera2.CameraManager,org.webrtc.SurfaceTextureHelper,java.lang.String,int,int,int)
okhttp3.internal.cache.DiskLruCache: boolean closed
com.facebook.react.views.image.ReactImageManager: void setSource(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.sdk.R$style: int Base_V21_Theme_AppCompat_Light
com.facebook.yoga.YogaNative: void jni_YGNodeFree(long)
com.ocetnik.timer.BackgroundTimerModule: BackgroundTimerModule(com.facebook.react.bridge.ReactApplicationContext)
com.reactnativecommunity.webview.RNCWebViewManager: void setUserAgentString(android.webkit.WebView)
org.webrtc.RtpTransceiver$RtpTransceiverInit: java.util.List getStreamIds()
com.facebook.react.bridge.NativeDeltaClient: NativeDeltaClient()
com.horcrux.svg.PatternView: void setY(com.facebook.react.bridge.Dynamic)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
okhttp3.internal.http2.Http2Stream: okhttp3.Headers takeHeaders()
okhttp3.internal.cache.DiskLruCache$Entry: void setLengths(java.lang.String[])
org.webrtc.AndroidVideoDecoder: org.webrtc.MediaCodecWrapperFactory mediaCodecWrapperFactory
okhttp3.internal.ws.WebSocketWriter$FrameSink: void write(okio.Buffer,long)
com.dropbox.core.v2.team.MembersGetInfoErrorException
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetAlignSelf(long)
com.horcrux.svg.MarkerView: void setVbHeight(float)
org.webrtc.ScreenCapturerAndroid: android.hardware.display.VirtualDisplay access$200(org.webrtc.ScreenCapturerAndroid)
com.horcrux.svg.R$styleable: int MenuItem_showAsAction
com.facebook.react.devsupport.DisabledDevSupportManager: void stopInspector()
org.webrtc.VideoCodecStatus: int getNumber()
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableNativeMap getMap(int)
com.facebook.react.bridge.CatalystInstanceImpl: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
org.jitsi.meet.sdk.R$id: int icon
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_CALLBACK
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()
com.facebook.common.time.AwakeTimeSinceBootClock: long now()
okhttp3.internal.ws.RealWebSocket$2: void onResponse(okhttp3.Call,okhttp3.Response)
okhttp3.internal.connection.RealConnection: okhttp3.Request createTunnelRequest()
okhttp3.internal.http2.Http2Connection$2: int val$streamId
org.jitsi.meet.sdk.R$string: int abc_menu_space_shortcut_label
com.kevinresol.react_native_default_preference.RNDefaultPreferenceModule: java.lang.String getName()
okhttp3.internal.huc.OkHttpsURLConnection: long getLastModified()
org.webrtc.Camera1Session: org.webrtc.Histogram access$700()
com.facebook.react.bridge.JavaScriptExecutor: java.lang.String getName()
okhttp3.internal.connection.RealConnection: java.net.Socket socket()
okhttp3.internal.connection.RouteSelector$Selection: boolean hasNext()
okhttp3.internal.huc.OkHttpsURLConnection: long getHeaderFieldLong(java.lang.String,long)
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
com.facebook.react.devsupport.BundleDownloader: boolean storePlainJSInFile(okio.BufferedSource,java.io.File)
com.horcrux.svg.R$drawable: int abc_btn_radio_to_on_mtrl_000
org.jitsi.meet.sdk.LogBridgeModule: void trace(java.lang.String)
com.facebook.react.modules.fabric.ReactFabric
com.horcrux.svg.RenderableViewManager$UseViewManager: void setWidth(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
okhttp3.HttpUrl: java.util.List queryParameterValues(java.lang.String)
com.facebook.react.views.art.ARTSurfaceViewManager: java.lang.String getName()
okio.Buffer$1: void flush()
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetPositionType(long)
org.jitsi.meet.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
okhttp3.internal.ws.RealWebSocket$Close: int code
org.webrtc.VideoEncoderFactory$VideoEncoderSelector: org.webrtc.VideoCodecInfo onAvailableBitrate(int)
com.facebook.react.devsupport.DebugOverlayController
okhttp3.internal.cache.DiskLruCache: void checkNotClosed()
com.facebook.react.devsupport.DevSupportManagerImpl$23: void onSuccess()
com.horcrux.svg.R$string: int search_menu_title
org.webrtc.voiceengine.WebRtcAudioTrack: java.lang.String TAG
okhttp3.internal.huc.OkHttpsURLConnection: java.io.InputStream getErrorStream()
com.horcrux.svg.R$style: int TextAppearance_Compat_Notification
com.facebook.react.modules.network.NetworkingModule: java.lang.String mDefaultUserAgent
org.jitsi.meet.sdk.R$anim: int btn_checkbox_to_unchecked_box_inner_merged_animation
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream removeStream(int)
org.jitsi.meet.sdk.R$styleable: int[] RecycleListView
org.webrtc.PeerConnection: org.webrtc.RtpSender createSender(java.lang.String,java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3: MessageQueueThreadImpl$3()
org.jitsi.meet.sdk.RNConnectionService: void startCall(java.lang.String,java.lang.String,boolean,com.facebook.react.bridge.Promise)
com.horcrux.svg.R$xml
org.jitsi.meet.sdk.R$color: int abc_hint_foreground_material_light
org.webrtc.RtpParameters$Codec: java.lang.Integer numChannels
org.jitsi.meet.sdk.JitsiMeetActivityDelegate: void onRequestPermissionsResult(int,java.lang.String[],int[])
okhttp3.RequestBody$1: okio.ByteString val$content
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_backgroundImage
com.horcrux.svg.R$attr: int tickMarkTintMode
com.horcrux.svg.R$attr: int windowFixedWidthMajor
com.horcrux.svg.R$styleable: int AppCompatTheme_colorPrimary
org.jitsi.meet.R$id: int wrap_content
okhttp3.Call
org.webrtc.BuiltinAudioDecoderFactoryFactory: long createNativeAudioDecoderFactory()
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] values()
org.jitsi.meet.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
com.facebook.react.animated.NativeAnimatedModule: void onHostPause()
org.jitsi.meet.sdk.R$id: int action_bar_container
androidx.fragment.app.Fragment: java.lang.Object getSharedElementReturnTransition()
okhttp3.internal.tls.BasicTrustRootIndex: boolean equals(java.lang.Object)
org.webrtc.Camera2Enumerator: android.hardware.camera2.CameraManager cameraManager
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(int,int,okio.Source)
com.facebook.react.views.view.ReactViewGroup: void setHitSlopRect(android.graphics.Rect)
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec getNativeModulesQueueThreadSpec()
com.facebook.react.views.scroll.ReactHorizontalScrollView
com.google.android.gms.common.internal.ResolveAccountResponse: android.os.Parcelable$Creator CREATOR
com.horcrux.svg.PatternView: void setMeetOrSlice(int)
com.horcrux.svg.R$id: int fps_text
org.webrtc.RendererCommon$ScalingType: RendererCommon$ScalingType(java.lang.String,int)
androidx.appcompat.widget.FitWindowsLinearLayout
org.webrtc.EglBase10Impl: void releaseSurface()
org.webrtc.voiceengine.WebRtcAudioTrack: byte[] emptyBytes
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingIndexedName(int)
com.horcrux.svg.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
org.jitsi.meet.R$anim: int btn_checkbox_to_unchecked_icon_null_animation
com.facebook.react.bridge.JavaOnlyMap: java.util.Map access$000(com.facebook.react.bridge.JavaOnlyMap)
org.jitsi.meet.R$style: int ThemeOverlay_AppCompat_ActionBar
com.learnium.RNDeviceInfo.RNDeviceModule: int getUsedMemorySync()
com.facebook.react.devsupport.DevInternalSettings: com.facebook.react.devsupport.DevInternalSettings$Listener mListener
com.oney.WebRTCModule.WebRTCModule: java.lang.String TAG
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.io.FileSystem fileSystem
org.jitsi.meet.sdk.R$color: int abc_primary_text_material_dark
org.webrtc.H264Utils: org.webrtc.VideoCodecInfo DEFAULT_H264_HIGH_PROFILE_CODEC
org.jitsi.meet.R$attr: int homeLayout
org.jitsi.meet.sdk.JitsiMeetActivityDelegate: void onHostDestroy(android.app.Activity)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
com.google.android.gms.internal.measurement.zzca$zzc: com.google.android.gms.internal.measurement.zzjp zzg
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.Dynamic getDynamic(int)
okhttp3.internal.Util: java.lang.String[] EMPTY_STRING_ARRAY
com.facebook.react.devsupport.DevInternalSettings: com.facebook.react.devsupport.DevInternalSettings withoutNativeDeltaClient(android.content.Context,com.facebook.react.devsupport.DevInternalSettings$Listener)
com.facebook.react.views.view.ReactViewGroup: boolean onTouchEvent(android.view.MotionEvent)
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
org.jitsi.meet.R$string: int menubar_description
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
com.facebook.react.views.view.ReactViewManager: void setOpacity(com.facebook.react.views.view.ReactViewGroup,float)
com.facebook.react.views.picker.ReactPicker: void setOnSelectListener(com.facebook.react.views.picker.ReactPicker$OnSelectListener)
okhttp3.internal.http2.Http2: Http2()
org.jitsi.meet.sdk.R$drawable: int abc_textfield_activated_mtrl_alpha
okhttp3.Cache$1: void trackResponse(okhttp3.internal.cache.CacheStrategy)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSize(int)
org.jitsi.meet.R$string: int catalyst_debug_error
org.webrtc.CameraVideoCapturer: void switchCamera(org.webrtc.CameraVideoCapturer$CameraSwitchHandler)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_SHA
org.webrtc.NativeLibrary$DefaultLoader: NativeLibrary$DefaultLoader()
okio.BufferedSource: long readAll(okio.Sink)
okio.BufferedSource: long readLong()
com.facebook.react.views.progressbar.ReactProgressBarViewManager: java.lang.String PROP_ANIMATING
okio.BufferedSink: java.io.OutputStream outputStream()
org.webrtc.voiceengine.WebRtcAudioEffects: boolean isNoiseSuppressorBlacklisted()
com.horcrux.svg.ForeignObjectView
okhttp3.internal.cache2.Relay: okio.ByteString metadata()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants RUN_JS_BUNDLE_END
okhttp3.internal.platform.Jdk9Platform: java.lang.reflect.Method getProtocolMethod
org.jitsi.meet.R$id: int action_menu_presenter
org.jitsi.meet.R$attr: int roundedCornerRadius
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager()
org.webrtc.voiceengine.WebRtcAudioTrack: int CALLBACK_BUFFER_SIZE_MS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_MD5
okhttp3.internal.http2.Hpack: int PREFIX_4_BITS
org.jitsi.meet.sdk.AudioModeModule: java.lang.String getSelectedDevice()
androidx.appcompat.widget.AppCompatEditText
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzr
org.webrtc.Logging: void nativeEnableLogTimeStamps()
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.facebook.react.devsupport.DevServerHelper$5: com.facebook.react.devsupport.DevServerHelper this$0
org.jitsi.meet.R$id: int icon_group
org.webrtc.EglRenderer: int framesRendered
org.webrtc.PeerConnection$SignalingState: org.webrtc.PeerConnection$SignalingState HAVE_LOCAL_OFFER
com.facebook.react.bridge.JSBundleLoader$1: boolean val$loadSynchronously
org.jitsi.meet.R$styleable: int ViewBackgroundHelper_android_background
org.webrtc.PeerConnection$IceServer: java.lang.String getPassword()
org.webrtc.CameraCapturer$6
org.webrtc.AndroidVideoDecoder$1: AndroidVideoDecoder$1(org.webrtc.AndroidVideoDecoder,java.lang.String)
okio.ForwardingSink: void write(okio.Buffer,long)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: boolean getAudioOnly()
okhttp3.internal.ws.RealWebSocket: long MAX_QUEUE_SIZE
com.horcrux.svg.R$attr: int contentInsetEndWithActions
com.facebook.react.views.picker.ReactPicker: int getMode()
com.horcrux.svg.SvgView$Events: SvgView$Events(java.lang.String,int,java.lang.String)
org.jitsi.meet.R$color: int dim_foreground_material_light
com.google.android.gms.measurement.AppMeasurement: java.lang.String getGmpAppId()
com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener
org.webrtc.audio.WebRtcAudioTrack: byte[] emptyBytes
com.horcrux.svg.R$attr: int actionModeSelectAllDrawable
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
org.webrtc.EglBase14Impl: android.opengl.EGLConfig getEglConfig(android.opengl.EGLDisplay,int[])
org.webrtc.Logging$Severity: org.webrtc.Logging$Severity[] $VALUES
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.common.ShakeDetector mShakeDetector
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
com.calendarevents.CalendarEvents: com.facebook.react.bridge.WritableNativeMap serializeEvent(android.database.Cursor)
org.jitsi.meet.sdk.R$anim: int abc_popup_exit
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.queue.MessageQueueThread mNativeModulesMessageQueueThread
org.jitsi.meet.sdk.R$dimen: int tooltip_y_offset_touch
com.horcrux.svg.R$drawable: int abc_item_background_holo_dark
com.horcrux.svg.R$styleable: int AppCompatSeekBar_android_thumb
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String SELECTED_PROTOCOL
org.jitsi.meet.R$string: int abc_menu_ctrl_shortcut_label
com.horcrux.svg.R$attr: int displayOptions
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator proxyAuthenticator
okio.ByteString: int lastIndexOf(byte[],int)
org.webrtc.audio.JavaAudioDeviceModule: android.media.AudioManager audioManager
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.JavaOnlyArray from(java.util.List)
com.horcrux.svg.RenderableViewManager: RenderableViewManager(com.horcrux.svg.RenderableViewManager$SVGClass)
org.webrtc.CameraSession$Events: void onFrameCaptured(org.webrtc.CameraSession,org.webrtc.VideoFrame)
org.jitsi.meet.R$raw: int lang_main
org.jitsi.meet.sdk.ParticipantsService$1: org.jitsi.meet.sdk.ParticipantsService this$0
org.jitsi.meet.R$xml: int network_security_config
org.jitsi.meet.sdk.R$color: int common_google_signin_btn_text_light_disabled
com.horcrux.svg.R$attr: int roundBottomRight
org.jitsi.meet.R$attr: int switchTextAppearance
org.webrtc.VideoFrameDrawer: android.graphics.Matrix renderMatrix
com.dropbox.core.v2.files.DeleteErrorException
org.webrtc.MediaCodecUtils: int[] TEXTURE_COLOR_FORMATS
com.facebook.react.views.image.ReactImageView: void setLoadingIndicatorSource(java.lang.String)
org.jitsi.meet.R$drawable: int common_google_signin_btn_text_dark_normal
com.facebook.react.devsupport.DevServerHelper$5: java.lang.String val$title
com.dropbox.core.v2.team.CustomQuotaErrorException
com.facebook.react.devsupport.DevServerHelper
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.views.progressbar.ProgressBarShadowNode createShadowNodeInstance()
com.facebook.react.devsupport.RedBoxHandler$ErrorType: com.facebook.react.devsupport.RedBoxHandler$ErrorType JS
org.jitsi.meet.R$raw: int lang_mainru
com.facebook.react.views.textinput.ReactEditText: void setGravityHorizontal(int)
org.webrtc.EglRenderer: void addFrameListener(org.webrtc.EglRenderer$FrameListener,float,org.webrtc.RendererCommon$GlDrawer)
org.jitsi.meet.sdk.R$raw: int lang_languageshu
com.facebook.react.devsupport.interfaces.DevSupportManager: void showDevOptionsDialog()
org.jitsi.meet.sdk.net.NAT64AddrInfo: org.jitsi.meet.sdk.net.NAT64AddrInfo discover(java.lang.String)
org.jitsi.meet.R$attr: int actionBarStyle
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.fragment.app.FragmentActivity: void requestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
org.webrtc.RtpReceiver: void checkRtpReceiverExists()
org.jitsi.meet.R$attr: int queryBackground
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetWidthPercent(long,float)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void readTheListUninterruptibly()
com.google.firebase.crashlytics.internal.common.DataTransportState: com.google.firebase.crashlytics.internal.common.DataTransportState[] values()
com.horcrux.svg.R$styleable: int SimpleDraweeView_placeholderImage
com.dropbox.core.v2.userscommon.AccountType: com.dropbox.core.v2.userscommon.AccountType valueOf(java.lang.String)
com.facebook.common.time.AwakeTimeSinceBootClock: com.facebook.common.time.AwakeTimeSinceBootClock INSTANCE
okhttp3.internal.http2.Http2: byte FLAG_END_STREAM
okhttp3.internal.http2.Http2Stream: okio.Sink getSink()
org.webrtc.voiceengine.WebRtcAudioRecord: int getDefaultAudioSource()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void endAdUnitExposure(java.lang.String,long)
org.webrtc.EglBase14Impl: void swapBuffers(long)
org.webrtc.EglRenderer: void renderFrameOnRenderThread()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
org.webrtc.VideoSource: VideoSource(long)
okio.AsyncTimeout: okio.AsyncTimeout awaitTimeout()
com.dropbox.core.v2.sharing.GetSharedLinksErrorException
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference
org.jitsi.meet.R$attr: int actionModeCopyDrawable
org.jitsi.meet.R$string: int catalyst_change_bundle_location
okhttp3.Response: okhttp3.Response networkResponse
org.jitsi.meet.R$id: int action_bar_title
com.facebook.react.uimanager.ViewGroupManager: ViewGroupManager()
org.jitsi.meet.R$dimen: int abc_dropdownitem_text_padding_right
org.webrtc.EglBase14Impl: void createPbufferSurface(int,int)
com.facebook.react.devsupport.JSCHeapCapture: JSCHeapCapture(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.devsupport.RedBoxDialog$StackAdapter: boolean isEnabled(int)
com.horcrux.svg.R$style: int Platform_V21_AppCompat_Light
org.jitsi.meet.sdk.R$integer: int react_native_dev_server_port
com.facebook.react.devsupport.InspectorPackagerConnection$1: void onMessage(java.lang.String)
okio.ByteString: int indexOf(byte[])
org.webrtc.DtmfSender: int nativeInterToneGap(long)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assignToPerfStats(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
com.facebook.react.modules.vibration.VibrationModule: VibrationModule(com.facebook.react.bridge.ReactApplicationContext)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.horcrux.svg.R$styleable: int ActionBar_indeterminateProgressStyle
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
org.jitsi.meet.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
org.webrtc.audio.WebRtcAudioUtils: java.lang.String TAG
org.webrtc.VideoEncoder$ResolutionBitrateLimits: int frameSizePixels
org.jitsi.meet.sdk.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarPopupTheme
org.jitsi.meet.R$dimen: int abc_edit_text_inset_bottom_material
com.horcrux.svg.R$style: int TextAppearance_Compat_Notification_Line2
okio.Buffer: okio.ByteString readByteString(long)
timber.log.Timber$Tree: void log(int,java.lang.String,java.lang.Object[])
org.webrtc.NetworkMonitor: java.lang.String TAG
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
org.jitsi.meet.sdk.R$string: int catalyst_perf_monitor_stop
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: java.lang.String room
org.jitsi.meet.R$string: int ongoing_notification_title
org.webrtc.EncodedImage: org.webrtc.RefCountDelegate refCountDelegate
okhttp3.internal.http2.Http2Connection: void failConnection()
com.facebook.react.bridge.NoSuchKeyException
org.webrtc.HardwareVideoEncoder: int DEQUEUE_OUTPUT_BUFFER_TIMEOUT_US
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$SdpSemantics getSdpSemantics()
org.webrtc.voiceengine.WebRtcAudioUtils: boolean isNoiseSuppressorSupported()
okhttp3.internal.http2.Http2Connection$1
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
okhttp3.ConnectionSpec: boolean equals(java.lang.Object)
org.webrtc.voiceengine.WebRtcAudioUtils: boolean useWebRtcBasedNoiseSuppressor
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)
org.webrtc.IceCandidate: IceCandidate(java.lang.String,int,java.lang.String)
com.horcrux.svg.SvgView: android.graphics.Bitmap mBitmap
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback
androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)
com.horcrux.svg.R$string: int abc_searchview_description_query
org.jitsi.meet.R$id: int catalyst_redbox_title
org.jitsi.meet.R$id: int action_divider
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.jitsi.meet.sdk.R$drawable: int notification_tile_bg
org.jitsi.meet.R$color: int abc_tint_btn_checkable
okio.InflaterSource: okio.BufferedSource source
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: org.jitsi.meet.sdk.AudioModeModule access$100(org.jitsi.meet.sdk.AudioDeviceHandlerGeneric)
com.facebook.react.devsupport.WebsocketJavaScriptExecutor: void connectInternal(java.lang.String,com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback)
org.jitsi.meet.sdk.R$dimen: int abc_seekbar_track_progress_height_material
okhttp3.Challenge: int hashCode()
okhttp3.internal.huc.OkHttpURLConnection: OkHttpURLConnection(java.net.URL,okhttp3.OkHttpClient)
org.webrtc.EncodedImage$FrameType: org.webrtc.EncodedImage$FrameType[] values()
okio.Buffer: boolean equals(java.lang.Object)
org.webrtc.Logging$Severity: org.webrtc.Logging$Severity LS_VERBOSE
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$LocalConnection connectNative(int,com.facebook.react.bridge.Inspector$RemoteConnection)
org.jitsi.meet.sdk.AudioModeModule: boolean access$602(boolean)
org.webrtc.PeerConnection
org.webrtc.VideoSource: boolean access$202(org.webrtc.VideoSource,boolean)
org.webrtc.EncodedImage$Builder: int encodedWidth
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.facebook.react.bridge.JavaOnlyMap: JavaOnlyMap()
com.facebook.react.modules.debug.SourceCodeModule: SourceCodeModule(com.facebook.react.bridge.ReactContext)
com.horcrux.svg.RenderableViewManager$LinearGradientManager
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable: FpsView$FPSMonitorRunnable(com.facebook.react.devsupport.FpsView)
com.facebook.yoga.YogaMeasureFunction: long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode)
org.webrtc.DynamicBitrateAdjuster: double deviationBytes
org.jitsi.meet.sdk.DropboxModule: void onHostResume()
org.webrtc.HardwareVideoEncoder: java.lang.String codecName
com.facebook.react.modules.image.ImageLoaderModule: void abortRequest(int)
org.webrtc.Size: int height
co.apptailor.googlesignin.RNGoogleSigninModule: java.lang.String getName()
okhttp3.Call: okio.Timeout timeout()
com.reactnativecommunity.webview.RNCWebViewManager: void setOnContentSizeChange(android.webkit.WebView,boolean)
org.jitsi.meet.sdk.R$drawable: int abc_spinner_mtrl_am_alpha
com.facebook.react.bridge.queue.MessageQueueThreadSpec
org.jitsi.meet.R$styleable: int SimpleDraweeView_roundTopStart
com.horcrux.svg.RectView: void setRy(com.facebook.react.bridge.Dynamic)
org.webrtc.audio.WebRtcAudioRecord$AudioRecordThread: void run()
com.horcrux.svg.R$styleable: int[] AnimatedStateListDrawableItem
org.jitsi.meet.R$styleable: int AppCompatTextView_autoSizeTextType
com.horcrux.svg.VirtualView: float[] sRawMatrix
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSessionTimeoutDuration(long)
com.facebook.react.modules.toast.ToastModule: void showWithGravity(java.lang.String,int,int)
com.facebook.react.devsupport.BundleDownloader$BundleInfo: java.lang.String mDeltaClientName
com.facebook.react.bridge.NativeModuleCallExceptionHandler: void handleException(java.lang.Exception)
okio.RealBufferedSource: okio.ByteString readByteString()
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
org.jitsi.meet.sdk.BroadcastEvent$Type: java.lang.String action
okhttp3.internal.connection.RealConnection: int successCount
org.webrtc.audio.WebRtcAudioTrack: org.webrtc.ThreadUtils$ThreadChecker threadChecker
okhttp3.internal.Internal: boolean equalsNonHost(okhttp3.Address,okhttp3.Address)
org.jitsi.meet.sdk.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
androidx.appcompat.widget.SearchView: int getPreferredHeight()
org.jitsi.meet.sdk.R$style: int TextAppearance_Compat_Notification_Time
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_viewAspectRatio
org.jitsi.meet.sdk.R$styleable: int Toolbar_titleMargins
com.facebook.react.views.textinput.ReactTextInputManager: void updateExtraData(android.view.View,java.lang.Object)
org.webrtc.Camera1Enumerator: java.lang.String getDeviceName(int)
com.horcrux.svg.R$attr: int drawerArrowStyle
org.webrtc.Predicate$2: Predicate$2(org.webrtc.Predicate,org.webrtc.Predicate)
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action: org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action fromName(java.lang.String)
org.jitsi.meet.R$style: int Widget_AppCompat_ActionBar_TabView
org.webrtc.voiceengine.BuildInfo: java.lang.String getDevice()
org.webrtc.FileVideoCapturer
org.webrtc.EglRenderer$FrameListener: void onFrame(android.graphics.Bitmap)
com.facebook.react.modules.core.Timing: com.facebook.react.modules.core.Timing$TimerFrameCallback mTimerFrameCallback
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
org.jitsi.meet.sdk.net.NAT64AddrInfoModule: java.lang.String NAME
com.facebook.yoga.YogaDirection: com.facebook.yoga.YogaDirection valueOf(java.lang.String)
org.jitsi.meet.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
org.webrtc.NetworkMonitor$InstanceHolder: NetworkMonitor$InstanceHolder()
org.jitsi.meet.sdk.JitsiMeetUserInfo: java.lang.String getEmail()
com.facebook.react.bridge.PromiseImpl: com.facebook.react.bridge.Callback mReject
org.webrtc.VideoEncoder$CodecSpecificInfo
androidx.fragment.app.Fragment: boolean getRetainInstance()
org.jitsi.meet.R$attr: int drawableTintMode
okhttp3.internal.Util: java.lang.String inet6AddressToAscii(byte[])
okhttp3.internal.cache.CacheStrategy$Factory: long cacheResponseAge()
org.jitsi.meet.R$attr: int fontFamily
com.facebook.react.ReactRootView: int getUIManagerType()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
org.webrtc.NetworkMonitorAutoDetect$WifiDirectManagerDelegate: void release()
com.horcrux.svg.R$styleable: int ActionBar_customNavigationLayout
org.jitsi.meet.R$attr: int actionBarTheme
okhttp3.internal.http1.Http1Codec: Http1Codec(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink)
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$Builder setAudioTrackErrorCallback(org.webrtc.audio.JavaAudioDeviceModule$AudioTrackErrorCallback)
com.horcrux.svg.R$color: int primary_dark_material_light
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
org.jitsi.meet.sdk.R$dimen: int abc_dialog_fixed_width_major
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_retryImageScaleType
androidx.appcompat.widget.SearchView$SearchAutoComplete
org.webrtc.audio.WebRtcAudioTrack: int AUDIO_TRACK_STOP
org.jitsi.meet.sdk.R$attr: int textAppearanceSmallPopupMenu
com.google.android.gms.internal.measurement.zzbv$zze: int zzc
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_roundedCornerRadius
org.jitsi.meet.R$id: int collapseActionView
org.jitsi.meet.R$raw: int lang_mainengb
org.webrtc.voiceengine.WebRtcAudioRecord: boolean startRecording()
org.jitsi.meet.R$style: int Theme_FullScreenDialogAnimatedSlide
org.webrtc.PeerConnection$TcpCandidatePolicy: org.webrtc.PeerConnection$TcpCandidatePolicy ENABLED
okhttp3.HttpUrl: java.lang.String PATH_SEGMENT_ENCODE_SET
com.horcrux.svg.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
com.facebook.react.bridge.JavaMethodWrapper$1: JavaMethodWrapper$1()
okhttp3.internal.http.RealInterceptorChain: int connectTimeout
org.webrtc.JavaI420Buffer: org.webrtc.VideoFrame$I420Buffer toI420()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
com.facebook.react.bridge.SoftAssertions: java.lang.Object assertNotNull(java.lang.Object)
com.horcrux.svg.R$drawable
org.webrtc.ThreadUtils$3: java.util.concurrent.Callable val$callable
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
okhttp3.CacheControl: boolean noCache
okhttp3.Request: okhttp3.HttpUrl url()
okhttp3.Response$Builder: int code
org.jitsi.meet.R$styleable: int AppCompatTheme_panelBackground
org.jitsi.meet.sdk.ListenerUtils$1: java.util.Map val$listenerMethods
okhttp3.Dispatcher: java.util.List runningCalls()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager
org.jitsi.meet.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.facebook.react.devsupport.BundleDeltaClient: boolean isDeltaUrl(java.lang.String)
org.jitsi.meet.sdk.JitsiMeetActivity$1
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToInterval(com.facebook.react.views.scroll.ReactScrollView,float)
org.webrtc.Camera2Session: org.webrtc.CameraSession$Events events
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
org.jitsi.meet.R$attr: int dialogPreferredPadding
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService$1: org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService this$0
org.webrtc.voiceengine.WebRtcAudioManager: boolean hardwareAGC
co.apptailor.googlesignin.RNGoogleSigninModule: void signOut(com.facebook.react.bridge.Promise)
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.Boolean isRunningScreenshotTest()
org.jitsi.meet.sdk.JitsiMeetActivity: void onNewIntent(android.content.Intent)
org.jitsi.meet.R$styleable: int LinearLayoutCompat_showDividers
com.facebook.react.bridge.JSBundleLoader: JSBundleLoader()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.lang.Object)
org.jitsi.meet.R$drawable: int common_google_signin_btn_icon_light_normal
org.jitsi.meet.sdk.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
com.horcrux.svg.R$drawable: int abc_ic_star_black_48dp
com.horcrux.svg.R$id: int text2
com.horcrux.svg.R$dimen: int abc_cascading_menus_min_smallest_width
okhttp3.internal.proxy.NullProxySelector: NullProxySelector()
com.facebook.react.devsupport.DevSupportManagerImpl$3: void onReceive(android.content.Context,android.content.Intent)
com.dropbox.core.NoThrowOutputStream$HiddenException
org.jitsi.meet.sdk.R$styleable: int TextAppearance_fontFamily
org.jitsi.meet.R$dimen: int abc_text_size_display_3_material
okhttp3.internal.http2.Http2Writer: void settings(okhttp3.internal.http2.Settings)
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
okhttp3.internal.cache.CacheRequest: void abort()
com.calendarevents.CalendarEvents: java.lang.String availabilityStringMatchingConstant(java.lang.Integer)
okhttp3.internal.cache2.Relay: int sourceCount
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$Builder setAudioSource(int)
okio.RealBufferedSource: java.lang.String readString(long,java.nio.charset.Charset)
org.jitsi.meet.sdk.R$dimen: R$dimen()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggerEventName
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl,com.facebook.react.bridge.CatalystInstanceImpl$1)
org.jitsi.meet.sdk.R$styleable: int SearchView_searchIcon
com.facebook.react.devsupport.DevSupportManagerImpl$19: DevSupportManagerImpl$19(com.facebook.react.devsupport.DevSupportManagerImpl)
okhttp3.internal.http2.Http2: byte TYPE_PRIORITY
android.support.v4.app.RemoteActionCompatParcelizer
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String getAndroidID()
okhttp3.internal.ws.RealWebSocket: boolean awaitingPong
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_BATCH_EXECUTION_END
org.jitsi.meet.R$bool: int abc_config_actionMenuItemAllCaps
org.jitsi.meet.sdk.R$styleable: int SearchView_submitBackground
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaModuleWrapper mModuleWrapper
okio.RealBufferedSource: long indexOf(byte,long)
okhttp3.internal.http2.Hpack$Reader: int readByte()
org.jitsi.meet.R$id: int accessibility_hint
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.horcrux.svg.R$attr: int colorButtonNormal
com.horcrux.svg.R$anim: int abc_slide_out_top
okio.SegmentedByteString: okio.ByteString md5()
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableTransition_android_toId
com.horcrux.svg.R$style: int Widget_AppCompat_ListView_Menu
org.webrtc.voiceengine.WebRtcAudioTrack: int channelCountToConfiguration(int)
com.oney.WebRTCModule.WebRTCModule: WebRTCModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.views.scroll.ReactScrollViewManager: ReactScrollViewManager(com.facebook.react.views.scroll.FpsListener)
org.jitsi.meet.R$mipmap: int ic_launcher_round
org.jitsi.meet.R$attr: int spinnerStyle
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
org.webrtc.GlShader: void setVertexAttribArray(java.lang.String,int,int,java.nio.FloatBuffer)
org.webrtc.MediaCodecUtils$1: int[] $SwitchMap$org$webrtc$VideoCodecMimeType
timber.log.Timber$Tree: void e(java.lang.String,java.lang.Object[])
org.webrtc.SessionDescription$Type: org.webrtc.SessionDescription$Type OFFER
com.facebook.react.devsupport.BundleDownloader$2: void onChunkProgress(java.util.Map,long,long)
com.horcrux.svg.R$anim: int abc_slide_in_bottom
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2: android.os.Handler val$timeoutHandler
okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)
com.facebook.react.bridge.Arguments$1: java.lang.Object val$objects
org.jitsi.meet.sdk.R$attr: int buttonGravity
com.horcrux.svg.RenderableViewManager$DefsViewManager: RenderableViewManager$DefsViewManager()
org.jitsi.meet.sdk.R$id: int search_badge
okhttp3.internal.http2.Http2Stream$FramingSink: okio.Buffer sendBuffer
org.jitsi.meet.sdk.R$dimen: int abc_list_item_height_small_material
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect sHelperRect
org.jitsi.meet.sdk.R$string: int ongoing_notification_title
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_Button
org.jitsi.meet.sdk.OngoingNotification: OngoingNotification()
org.jitsi.meet.R$anim: int btn_checkbox_to_checked_box_inner_merged_animation
org.jitsi.meet.R$styleable: int[] MenuGroup
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment()
okhttp3.internal.cache.CacheInterceptor: boolean isContentSpecificHeader(java.lang.String)
okio.BufferedSource: short readShortLe()
com.facebook.react.bridge.NativeMap: java.lang.String toString()
okhttp3.internal.http2.PushObserver$1: void onReset(int,okhttp3.internal.http2.ErrorCode)
com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener: void onTransitionToBridgeBusy()
org.jitsi.meet.sdk.R$id: int search_plate
com.facebook.react.modules.blob.FileReaderModule: java.lang.String ERROR_INVALID_BLOB
org.webrtc.Camera2Session$SessionState: org.webrtc.Camera2Session$SessionState RUNNING
com.facebook.react.modules.intent.IntentModule: void openSettings(com.facebook.react.bridge.Promise)
com.horcrux.svg.RenderableView: int hitTest(float[])
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
com.horcrux.svg.SymbolView: void setAlign(java.lang.String)
org.jitsi.meet.R$layout: int abc_action_mode_bar
org.jitsi.meet.R$styleable: int GradientColorItem_android_offset
com.horcrux.svg.RectView
org.jitsi.meet.sdk.R$string: int abc_menu_function_shortcut_label
org.webrtc.RefCountDelegate: java.lang.Runnable releaseCallback
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener)
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.RtcCertificatePem certificate
com.facebook.react.views.text.ReactTextAnchorViewManager
org.webrtc.audio.WebRtcAudioRecord: int CHECK_REC_STATUS_DELAY_MS
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundTopEnd
androidx.fragment.app.Fragment: int ACTIVITY_CREATED
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.oney.WebRTCModule.WebRTCModule: void mediaStreamTrackRelease(java.lang.String)
okio.Buffer: long completeSegmentByteCount()
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback access$1800(com.facebook.react.devsupport.DevSupportManagerImpl,com.facebook.react.common.futures.SimpleSettableFuture)
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_overlayImage
org.webrtc.VideoDecoderFactory: org.webrtc.VideoCodecInfo[] getSupportedCodecs()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
okhttp3.internal.http.HttpHeaders: boolean hasVaryAll(okhttp3.Headers)
com.horcrux.svg.RenderableViewManager: void setMarkerMid(com.horcrux.svg.VirtualView,java.lang.String)
com.horcrux.svg.R$style: int Base_Theme_AppCompat_CompactMenu
com.facebook.react.devsupport.interfaces.DevBundleDownloadListener
okhttp3.RequestBody$2: void writeTo(okio.BufferedSink)
org.webrtc.NetworkChangeDetector
com.horcrux.svg.SvgView: java.lang.Runnable toDataUrlTask
org.jitsi.meet.sdk.R$bool: int abc_config_actionMenuItemAllCaps
com.oney.WebRTCModule.WebRTCView: void setMirror(boolean)
okio.SegmentPool: long MAX_SIZE
org.webrtc.DataChannel: long nativeDataChannel
okio.Buffer: okio.Buffer writeShort(int)
okhttp3.internal.http2.Http2Writer: void pushPromise(int,int,java.util.List)
org.jitsi.meet.sdk.R$drawable: int abc_ic_star_half_black_16dp
org.jitsi.meet.R$layout: int abc_action_mode_close_item_material
com.facebook.react.bridge.JavaMethodWrapper$1: java.lang.Boolean extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.horcrux.svg.R$id: int icon_group
com.facebook.react.bridge.JSBundleLoader$4: com.facebook.react.bridge.NativeDeltaClient val$nativeDeltaClient
okhttp3.ConnectionSpec: java.lang.String[] tlsVersions
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.google.android.gms.internal.measurement.zzhv: java.util.Map zzd
com.facebook.react.uimanager.UIManagerModule: void updateNodeSize(int,int,int)
com.facebook.react.bridge.ReactContextBaseJavaModule: android.app.Activity getCurrentActivity()
org.jitsi.meet.sdk.PictureInPictureModule: boolean isDisabled
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
org.jitsi.meet.sdk.R$id: int title
org.jitsi.meet.sdk.R$styleable: int PopupWindow_android_popupAnimationStyle
okhttp3.Cache$Entry
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mMethods
org.jitsi.meet.sdk.R$styleable: int SearchView_layout
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
com.horcrux.svg.SvgViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
org.webrtc.GlTextureFrameBuffer: int getWidth()
org.webrtc.PeerConnection$IceServer: java.lang.String getHostname()
org.webrtc.VideoEncoder$Settings: int startBitrate
okhttp3.internal.Util$1
okhttp3.internal.cache.DiskLruCache: long getMaxSize()
okhttp3.CertificatePinner$Builder: CertificatePinner$Builder()
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ActionBar_TabText
com.facebook.react.uimanager.BaseViewManager: void setBackgroundColor(android.view.View,int)
okhttp3.internal.connection.StreamAllocation: void release()
com.facebook.react.views.scroll.ScrollEventType: com.facebook.react.views.scroll.ScrollEventType valueOf(java.lang.String)
com.facebook.common.memory.PooledByteBuffer$ClosedException: PooledByteBuffer$ClosedException()
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setInjectedJavaScript(java.lang.String)
org.jitsi.meet.R$id: int title_template
org.jitsi.meet.sdk.R$color: int common_google_signin_btn_text_light_focused
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
com.horcrux.svg.R$drawable: int notify_panel_notification_icon_bg
org.jitsi.meet.R$attr: int textAllCaps
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.JavaOnlyMap deepClone(com.facebook.react.bridge.ReadableMap)
org.jitsi.meet.sdk.AudioModeModule$4
org.jitsi.meet.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.net.URL)
org.webrtc.RtpTransceiver$RtpTransceiverInit: RtpTransceiver$RtpTransceiverInit(org.webrtc.RtpTransceiver$RtpTransceiverDirection)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String REDUCE_MOTION_EVENT_NAME
org.webrtc.SurfaceTextureHelper: android.graphics.SurfaceTexture getSurfaceTexture()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)
org.webrtc.JavaI420Buffer
com.horcrux.svg.R$attr: int listMenuViewStyle
com.facebook.react.bridge.ReactMethod: boolean isBlockingSynchronousMethod()
com.horcrux.svg.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
org.webrtc.audio.JavaAudioDeviceModule$Builder: JavaAudioDeviceModule$Builder(android.content.Context)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: java.lang.String getRoom()
com.facebook.react.bridge.CatalystInstanceImpl: void incrementPendingJSCalls()
com.facebook.yoga.YogaDisplay: com.facebook.yoga.YogaDisplay[] values()
com.learnium.RNDeviceInfo.RNDeviceModule: void isCameraPresent(com.facebook.react.bridge.Promise)
com.facebook.react.views.textinput.ReactEditText: void setAllowFontScaling(boolean)
org.webrtc.CameraCapturer: CameraCapturer(java.lang.String,org.webrtc.CameraVideoCapturer$CameraEventsHandler,org.webrtc.CameraEnumerator)
okhttp3.Request: java.lang.Object tag()
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge valueOf(java.lang.String)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
org.jitsi.meet.sdk.R$attr: int backgroundImage
okhttp3.Callback: void onFailure(okhttp3.Call,java.io.IOException)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig mConfig
org.jitsi.meet.sdk.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
androidx.fragment.app.Fragment: int INITIALIZING
androidx.fragment.app.Fragment: java.lang.String mTargetWho
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()
com.facebook.react.modules.image.ImageLoaderModule: com.facebook.datasource.DataSource access$000(com.facebook.react.modules.image.ImageLoaderModule,int)
org.jitsi.meet.sdk.R$raw: int lang_mainvi
com.facebook.react.modules.core.Timing: void access$1900(com.facebook.react.modules.core.Timing)
com.horcrux.svg.R$styleable: int[] ColorStateListItem
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: void setProgressBackgroundColor(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,int)
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Menu
org.jitsi.meet.R$styleable: int Toolbar_titleMargin
org.webrtc.PeerConnection: java.util.List transceivers
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_buttonStyle
com.horcrux.svg.R$drawable: int abc_text_cursor_material
okio.BufferedSource: java.lang.String readString(long,java.nio.charset.Charset)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_3DES_EDE_CBC_SHA
com.facebook.react.bridge.ReadableMap: boolean isNull(java.lang.String)
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_PopupMenu
com.zmxv.RNSound.RNSoundModule: java.lang.String getName()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
org.jitsi.meet.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
okhttp3.internal.ws.RealWebSocket: int receivedPongCount
okhttp3.Address: okhttp3.Dns dns
okio.Utf8: Utf8()
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_EditText
okhttp3.internal.connection.RealConnection: void cancel()
org.webrtc.PeerConnection$RTCConfiguration: int getMaxIPv6Networks()
org.webrtc.HardwareVideoEncoder: void access$200(org.webrtc.HardwareVideoEncoder)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_RC4_128_SHA
okhttp3.internal.http2.Http2Reader: boolean nextFrame(boolean,okhttp3.internal.http2.Http2Reader$Handler)
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Display2
com.horcrux.svg.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
com.horcrux.svg.RenderableViewManager: void setStroke(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
org.webrtc.VideoEncoderFallback: long createNativeVideoEncoder()
org.jitsi.meet.sdk.R$id: int submit_area
org.webrtc.HardwareVideoEncoder$YuvFormat: org.webrtc.HardwareVideoEncoder$YuvFormat[] values()
org.jitsi.meet.sdk.R$dimen: int abc_action_bar_overflow_padding_end_material
com.horcrux.svg.R$styleable: int GradientColorItem_android_color
okhttp3.internal.huc.BufferedRequestBody: void writeTo(okio.BufferedSink)
org.jitsi.meet.R$style: int Base_AlertDialog_AppCompat_Light
com.facebook.react.devsupport.DevSupportManagerImpl$5: com.facebook.react.devsupport.DevSupportManagerImpl this$0
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.atomic.AtomicInteger access$600(com.facebook.react.bridge.CatalystInstanceImpl)
com.horcrux.svg.VirtualView: android.graphics.RectF mMarkerBounds
com.facebook.react.devsupport.DevServerHelper: boolean mOnChangePollingEnabled
org.jitsi.meet.sdk.ConnectionService$ConnectionImpl
org.jitsi.meet.sdk.R$id: int action_menu_presenter
org.jitsi.meet.R$style: int TextAppearance_Compat_Notification_Info
com.facebook.react.bridge.NativeModuleRegistry: java.util.Map getModuleMap()
okio.RealBufferedSource: short readShort()
com.facebook.react.views.textinput.ReactEditText: void setContentSizeWatcher(com.facebook.react.views.textinput.ContentSizeWatcher)
okhttp3.internal.http.RealInterceptorChain: int connectTimeoutMillis()
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_PHONE_PAD
okio.ForwardingSource: okio.Timeout timeout()
okio.RealBufferedSource: okio.Buffer buffer
org.jitsi.meet.R$raw: int lang_mainptbr
org.jitsi.meet.R$drawable: int abc_list_pressed_holo_light
com.facebook.react.devsupport.DisabledDevSupportManager: void showDevOptionsDialog()
org.webrtc.Camera1Enumerator: java.util.List enumerateFormats(int)
org.jitsi.meet.sdk.BroadcastEvent: java.util.HashMap getData()
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getHeaderFieldDate(java.lang.String,long)
org.jitsi.meet.R$styleable: int FontFamily_fontProviderPackage
org.jitsi.meet.R$drawable: int abc_btn_switch_to_on_mtrl_00001
com.facebook.react.devsupport.DevSupportManagerImpl$19
org.webrtc.DataChannel: java.lang.String label()
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_11
com.facebook.react.devsupport.DevLoadingViewController$1
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.RedBoxHandler mRedBoxHandler
com.facebook.react.bridge.NativeArgumentsParseException
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Button
okhttp3.internal.huc.OkHttpURLConnection: void disconnect()
okio.ByteString: int hashCode
org.jitsi.meet.sdk.R$layout: int abc_search_view
org.webrtc.ContextUtils: ContextUtils()
com.horcrux.svg.R$attr: int searchHintIcon
com.horcrux.svg.R$id: int info
org.webrtc.audio.JavaAudioDeviceModule$Builder: boolean useHardwareNoiseSuppressor
org.jitsi.meet.R$attr: int navigationMode
org.jitsi.meet.sdk.R$styleable: int TextAppearance_android_textFontWeight
okhttp3.CacheControl: boolean isPublic()
com.horcrux.svg.R$attr: int autoSizePresetSizes
org.jitsi.meet.sdk.R$attr: int roundBottomStart
com.horcrux.svg.R$dimen: int abc_text_size_subtitle_material_toolbar
com.facebook.imagepipeline.request.ImageRequest$CacheChoice: com.facebook.imagepipeline.request.ImageRequest$CacheChoice[] values()
org.webrtc.VideoCodecStatus: org.webrtc.VideoCodecStatus NO_OUTPUT
org.webrtc.DataChannel: void registerObserver(org.webrtc.DataChannel$Observer)
com.horcrux.svg.R$styleable: int FontFamily_fontProviderQuery
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream pushStream(int,java.util.List,boolean)
org.webrtc.voiceengine.WebRtcAudioTrack$WebRtcAudioTrackErrorCallback: void onWebRtcAudioTrackError(java.lang.String)
okhttp3.JavaNetAuthenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
com.dropbox.core.v2.paper.PaperDocUpdateErrorException
com.facebook.react.views.text.ReactVirtualTextShadowNode
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setWebChromeClient(android.webkit.WebChromeClient)
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
org.jitsi.meet.R$attr: int autoSizeStepGranularity
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_FRAGMENT_CREATE
com.google.android.gms.common.api.internal.zzc: zzc()
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
org.jitsi.meet.R$id: int async
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeBackground
com.horcrux.svg.R$dimen: int abc_control_padding_material
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
org.jitsi.meet.sdk.R$attr: int checkboxStyle
org.webrtc.CalledByNative
okhttp3.internal.platform.OptionalMethod: java.lang.String methodName
com.horcrux.svg.RenderableView: float strokeDashoffset
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
com.horcrux.svg.RadialGradientView: void setRx(com.facebook.react.bridge.Dynamic)
com.facebook.react.uimanager.ViewGroupManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
com.horcrux.svg.R$anim: int catalyst_push_up_in
com.facebook.react.modules.camera.CameraRollManager: java.lang.String ASSET_TYPE_VIDEOS
org.jitsi.meet.sdk.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
okhttp3.MultipartBody$Builder
okhttp3.MultipartBody$Builder: okhttp3.MediaType type
com.horcrux.svg.SymbolView: void setVbHeight(float)
org.webrtc.CameraEnumerationAndroid
org.webrtc.SurfaceViewRenderer: void addFrameListener(org.webrtc.EglRenderer$FrameListener,float,org.webrtc.RendererCommon$GlDrawer)
com.horcrux.svg.R$attr: int fontProviderCerts
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionMenuTextAppearance
org.webrtc.VideoFrame$I420Buffer: int getStrideY()
okio.Buffer: byte[] DIGITS
com.facebook.react.devsupport.DevServerHelper$9: DevServerHelper$9(com.facebook.react.devsupport.DevServerHelper)
com.facebook.react.devsupport.DevServerHelper$BundleType: java.lang.String mTypeID
com.facebook.react.uimanager.SimpleViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)
okio.RealBufferedSource: long readLongLe()
org.webrtc.JavaI420Buffer: java.nio.ByteBuffer getDataU()
co.apptailor.googlesignin.RNGoogleSigninModule: void rerunFailedAuthTokenTask()
org.jitsi.meet.sdk.R$dimen: int abc_search_view_preferred_width
com.facebook.jni.CppException
org.webrtc.HardwareVideoEncoder: android.view.Surface textureInputSurface
org.jitsi.meet.sdk.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
org.webrtc.AudioSource: AudioSource(long)
com.facebook.react.bridge.CallbackImpl
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
com.facebook.react.devsupport.DevInternalSettings: boolean isBundleDeltasCppEnabled()
com.google.android.gms.internal.measurement.zzci$zza: com.google.android.gms.internal.measurement.zzci$zza zzd
com.facebook.yoga.YogaNative: void jni_YGNodeReset(long)
com.facebook.react.views.art.ARTGroupShadowNode: void setClipping(com.facebook.react.bridge.ReadableArray)
org.webrtc.VideoTrack: java.util.IdentityHashMap sinks
org.webrtc.EncodedImage$FrameType: EncodedImage$FrameType(java.lang.String,int,int)
org.jitsi.meet.sdk.R$id: int title_template
org.webrtc.PeerConnection$IceTransportsType: org.webrtc.PeerConnection$IceTransportsType ALL
org.webrtc.audio.JavaAudioDeviceModule$Builder
okhttp3.internal.http2.Http2Connection: void access$000(okhttp3.internal.http2.Http2Connection)
okhttp3.internal.platform.Platform: java.util.logging.Logger logger
org.jitsi.meet.sdk.AudioModeModule: java.lang.String getName()
androidx.fragment.app.FragmentActivity: void onStart()
org.webrtc.PeerConnection: void nativeNewGetStats(org.webrtc.RTCStatsCollectorCallback)
org.jitsi.meet.sdk.R$color: int primary_text_default_material_light
com.facebook.react.bridge.ReactContext: com.facebook.react.common.LifecycleState mLifecycleState
org.jitsi.meet.sdk.R$drawable: int abc_list_divider_material
com.zmxv.RNSound.RNSoundModule: void getSystemVolume(com.facebook.react.bridge.Callback)
org.webrtc.audio.JavaAudioDeviceModule$AudioSamples: byte[] data
okhttp3.internal.cache.CacheStrategy: boolean isCacheable(okhttp3.Response,okhttp3.Request)
org.jitsi.meet.R$attr: int paddingStart
org.jitsi.meet.R$dimen: int abc_action_button_min_width_material
org.webrtc.CameraSession$FailureType: org.webrtc.CameraSession$FailureType DISCONNECTED
org.webrtc.PeerConnectionFactory: void initialize(org.webrtc.PeerConnectionFactory$InitializationOptions)
com.facebook.react.views.image.ReactImageManager: void setProgressiveRenderingEnabled(com.facebook.react.views.image.ReactImageView,boolean)
com.facebook.react.views.picker.ReactDropdownPickerManager
com.google.android.gms.common.api.AvailabilityException
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void addView(android.view.ViewGroup,android.view.View,int)
org.webrtc.Logging$TraceLevel: int level
org.webrtc.RtpTransceiver: java.lang.String getMid()
org.jitsi.meet.sdk.JitsiMeetView: void onCurrentConferenceChanged(java.lang.String)
com.horcrux.svg.R$id: int list_item
androidx.fragment.app.Fragment: void setNextAnim(int)
com.horcrux.svg.R$style: int Theme_AppCompat_Dialog
org.jitsi.meet.sdk.R$id: int action_image
com.facebook.react.views.text.ReactTextViewManager: java.lang.String REACT_CLASS
org.jitsi.meet.sdk.JitsiMeetActivity: void join(org.jitsi.meet.sdk.JitsiMeetConferenceOptions)
com.facebook.common.file.FileUtils$FileDeleteException
com.facebook.react.devsupport.DevSupportManagerImpl$4: int val$errorCookie
org.jitsi.meet.R$style: int TextAppearance_AppCompat
org.webrtc.audio.WebRtcAudioTrack: boolean speakerMute
okhttp3.internal.ws.RealWebSocket: void onReadMessage(java.lang.String)
com.dropbox.core.v2.team.ListMemberAppsErrorException
okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)
okhttp3.internal.tls.BasicCertificateChainCleaner: BasicCertificateChainCleaner(okhttp3.internal.tls.TrustRootIndex)
okhttp3.RealCall$AsyncCall: void execute()
org.jitsi.meet.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
com.facebook.react.bridge.GuardedRunnable: com.facebook.react.bridge.NativeModuleCallExceptionHandler mExceptionHandler
com.horcrux.svg.R$styleable: int Toolbar_titleMarginEnd
com.facebook.react.bridge.JSCJavaScriptExecutor
org.webrtc.Camera1Enumerator: java.util.List getSupportedFormats(java.lang.String)
com.horcrux.svg.R$color: int abc_primary_text_disable_only_material_light
com.reactnativecommunity.webview.RNCWebViewManager: void setShowsHorizontalScrollIndicator(android.webkit.WebView,boolean)
org.jitsi.meet.sdk.ReactInstanceManagerHolder: com.facebook.react.ReactInstanceManager getReactInstanceManager()
com.facebook.react.views.scroll.ReactScrollViewManager: int[] SPACING_TYPES
com.google.android.gms.internal.measurement.zzbv$zze: java.lang.String zze
org.webrtc.EncodedImage$Builder: org.webrtc.EncodedImage$Builder setCaptureTimeMs(long)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.facebook.react.devsupport.InspectorPackagerConnection: InspectorPackagerConnection(java.lang.String,java.lang.String,com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatusProvider)
org.jitsi.meet.sdk.ProximityModule: java.lang.String getName()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager: ReactHorizontalScrollContainerViewManager()
org.webrtc.audio.WebRtcAudioRecord: java.nio.ByteBuffer byteBuffer
org.jitsi.meet.sdk.R$string: int catalyst_hot_reloading_auto_disable
com.horcrux.svg.R$color: int abc_search_url_text_selected
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.horcrux.svg.SvgView: com.horcrux.svg.VirtualView getDefinedClipPath(java.lang.String)
com.facebook.react.modules.fresco.FrescoModule: com.facebook.imagepipeline.core.ImagePipelineConfig$Builder getDefaultConfigBuilder(com.facebook.react.bridge.ReactContext)
org.jitsi.meet.R$styleable: int AppCompatTheme_android_windowIsFloating
org.jitsi.meet.R$string: int abc_capital_off
org.jitsi.meet.R$dimen: int abc_list_item_height_material
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenName()
com.facebook.react.uimanager.ViewManager: java.util.Map getExportedViewConstants()
com.horcrux.svg.R$styleable: int AppCompatSeekBar_tickMark
com.facebook.yoga.YogaDimension: com.facebook.yoga.YogaDimension[] values()
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_BOOLEAN
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.horcrux.svg.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
com.horcrux.svg.TextView: void setDeltaY(com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setMarkerHeight(com.horcrux.svg.MarkerView,com.facebook.react.bridge.Dynamic)
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$1: int[] $SwitchMap$org$jitsi$meet$sdk$JitsiMeetOngoingConferenceService$Action
com.google.android.gms.common.api.internal.LifecycleCallback
okhttp3.internal.http.RealInterceptorChain: okhttp3.Connection connection()
okhttp3.OkHttpClient: java.net.Proxy proxy()
com.google.android.gms.internal.measurement.zzca$zza: boolean zzf
okio.BufferedSource: byte[] readByteArray(long)
org.jitsi.meet.sdk.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
org.webrtc.NetworkMonitor$2: void onNetworkConnect(org.webrtc.NetworkChangeDetector$NetworkInformation)
org.webrtc.BaseBitrateAdjuster: void setTargets(int,int)
org.webrtc.HardwareVideoEncoder: void fillInputBuffer(java.nio.ByteBuffer,org.webrtc.VideoFrame$Buffer)
com.horcrux.svg.R$dimen: int abc_list_item_padding_horizontal_material
com.facebook.react.devsupport.DevLoadingViewController$2: DevLoadingViewController$2(com.facebook.react.devsupport.DevLoadingViewController,java.lang.String,java.lang.Integer,java.lang.Integer)
com.google.android.gms.auth.GoogleAuthException
org.jitsi.meet.sdk.R$string: int dropbox_app_key
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void updateAndSendReduceMotionChangeEvent()
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: boolean audioFocusLost
org.jitsi.meet.sdk.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
org.jitsi.meet.sdk.AudioModeModule$5
com.horcrux.svg.R$id: int forever
org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordThread: void run()
org.webrtc.TextureBufferImpl: android.graphics.Matrix transformMatrix
okhttp3.internal.cache.InternalCache
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_REACT_INSTANCE_MANAGER_START
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ViewManagerDelegate getDelegate()
org.jitsi.meet.sdk.R$drawable: int abc_ic_go_search_api_material
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$3
com.horcrux.svg.R$color: int primary_text_disabled_material_light
org.webrtc.audio.JavaAudioDeviceModule: boolean useStereoOutput
com.horcrux.svg.R$dimen: int tooltip_y_offset_touch
org.jitsi.meet.sdk.R$string: int catalyst_heap_capture
com.facebook.react.bridge.Promise
okhttp3.internal.http2.Http2Connection$6: okhttp3.internal.http2.Http2Connection this$0
okio.Segment: okio.Segment prev
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4
org.jitsi.meet.R$styleable: int GradientColor_android_centerX
com.facebook.yoga.YogaDisplay
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA
com.facebook.react.fabric.events.EventEmitterWrapper: void invokeEvent(java.lang.String,com.facebook.react.bridge.NativeMap)
com.horcrux.svg.SvgView: android.graphics.Bitmap drawOutput()
okhttp3.internal.platform.AndroidPlatform: int MAX_LOG_LENGTH
com.facebook.react.views.viewpager.ReactViewPager: com.facebook.react.views.viewpager.ReactViewPager$Adapter getAdapter()
org.webrtc.RendererCommon$ScalingType: org.webrtc.RendererCommon$ScalingType SCALE_ASPECT_BALANCED
org.jitsi.meet.sdk.R$color: int background_floating_material_dark
okhttp3.internal.http2.Hpack$Writer: boolean useCompression
com.facebook.react.views.textinput.ReactTextInputManager: void showKeyboardOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setBorderStyle(java.lang.String)
org.webrtc.JavaI420Buffer: int strideV
okhttp3.Response: java.lang.String message
org.jitsi.meet.sdk.JitsiMeet: android.os.Bundle getDefaultProps()
org.jitsi.meet.R$anim: int abc_slide_out_top
org.webrtc.NetworkMonitorAutoDetect$WifiDirectManagerDelegate: java.util.List getActiveNetworkList()
org.webrtc.FramerateBitrateAdjuster: FramerateBitrateAdjuster()
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int)
org.jitsi.meet.sdk.LocaleDetector: java.lang.String getName()
com.facebook.react.views.text.ReactTextViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
org.jitsi.meet.sdk.R$string: int catalyst_settings
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getContentType()
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_roundBottomRight
com.horcrux.svg.MaskView: void setHeight(com.facebook.react.bridge.Dynamic)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
org.webrtc.HardwareVideoDecoderFactory$1: HardwareVideoDecoderFactory$1()
okhttp3.internal.http2.Http2Connection$3: java.util.List val$requestHeaders
okio.ByteString: okio.ByteString md5()
org.jitsi.meet.sdk.R$attr: int fontFamily
org.jitsi.meet.sdk.R$styleable: int ActionBar_elevation
com.dropbox.core.v2.fileproperties.UpdatePropertiesErrorException
org.webrtc.TurnCustomizer: TurnCustomizer(long)
org.jitsi.meet.sdk.R$drawable: int abc_text_select_handle_left_mtrl_dark
org.jitsi.meet.R$styleable: int SimpleDraweeView_roundedCornerRadius
org.jitsi.meet.R$color: int abc_search_url_text_pressed
org.jitsi.meet.sdk.R$dimen: int abc_text_size_body_1_material
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView
com.facebook.react.uimanager.UIManagerModule: void removeUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
org.webrtc.Camera2Enumerator: android.content.Context context
com.facebook.react.views.switchview.ReactSwitchManager: android.widget.CompoundButton$OnCheckedChangeListener ON_CHECKED_CHANGE_LISTENER
org.jitsi.meet.R$drawable: int abc_list_longpressed_holo
com.facebook.react.modules.share.ShareModule: java.lang.String getName()
org.jitsi.meet.R$drawable: int notification_template_icon_bg
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
org.webrtc.audio.WebRtcAudioRecord: int DEFAULT_AUDIO_SOURCE
org.webrtc.GlGenericDrawer: GlGenericDrawer(java.lang.String,org.webrtc.GlGenericDrawer$ShaderCallbacks)
com.facebook.react.uimanager.ViewGroupManager: void removeViewAt(android.view.ViewGroup,int)
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Small
com.facebook.react.views.text.ReactBaseTextShadowNode: void setFontStyle(java.lang.String)
com.horcrux.svg.EllipseView: void setCy(com.facebook.react.bridge.Dynamic)
com.rnimmersive.RNImmersiveModule: void _setImmersive(boolean,com.facebook.react.bridge.Promise)
com.dropbox.core.v2.teampolicies.SharedLinkCreatePolicy: com.dropbox.core.v2.teampolicies.SharedLinkCreatePolicy valueOf(java.lang.String)
okio.GzipSource: okio.Timeout timeout()
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_PopupMenu
org.webrtc.Camera2Session: android.view.Surface access$1000(org.webrtc.Camera2Session)
com.facebook.react.devsupport.DevSupportManagerImpl$24: com.facebook.react.devsupport.BundleDownloader$BundleInfo val$bundleInfo
okhttp3.internal.Util: boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int)
org.jitsi.meet.sdk.JitsiMeetActivityDelegate$1: int val$requestCode
com.horcrux.svg.R$color: int dim_foreground_material_light
com.facebook.react.devsupport.DevSupportManagerImpl: int access$700(com.facebook.react.devsupport.DevSupportManagerImpl)
org.jitsi.meet.sdk.WiFiStatsModule
org.jitsi.meet.R$dimen: int abc_action_bar_default_height_material
com.horcrux.svg.R$styleable: int TextAppearance_fontFamily
com.reactnativecommunity.webview.RNCWebViewManager: void setSource(android.webkit.WebView,com.facebook.react.bridge.ReadableMap)
org.webrtc.CryptoOptions$Builder: boolean requireFrameEncryption
com.facebook.react.bridge.JavaOnlyArray: void pushArray(com.facebook.react.bridge.ReadableArray)
okhttp3.internal.connection.RouteSelector: java.util.List proxies
okio.Pipe: Pipe(long)
org.jitsi.meet.sdk.BroadcastAction: BroadcastAction(android.content.Intent)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String PUBLIC_SUFFIX_RESOURCE
org.jitsi.meet.sdk.AudioModeModule: java.lang.String DEVICE_BLUETOOTH
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_colorButtonNormal
org.jitsi.meet.R$integer
com.facebook.react.bridge.ReadableNativeMap$1: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
com.horcrux.svg.R$color: int bright_foreground_disabled_material_light
org.webrtc.DataChannel: boolean nativeSend(byte[],boolean)
okhttp3.internal.http.HttpMethod: boolean redirectsToGet(java.lang.String)
com.zmxv.RNSound.RNSoundModule: void setLooping(java.lang.Double,java.lang.Boolean)
org.jitsi.meet.R$drawable: int common_google_signin_btn_icon_disabled
org.jitsi.meet.R$styleable: int FontFamily_fontProviderQuery
org.webrtc.Logging$TraceLevel: org.webrtc.Logging$TraceLevel TRACE_APICALL
com.horcrux.svg.RenderableViewManager$CircleViewManager: void onDropViewInstance(android.view.View)
okhttp3.internal.cache.CacheStrategy$Factory: int ageSeconds
org.jitsi.meet.R$style: int Widget_AppCompat_ListView_Menu
org.jitsi.meet.R$drawable: int abc_ratingbar_material
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2: com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback val$callback
com.facebook.react.modules.core.Timing: com.facebook.react.modules.core.ReactChoreographer access$1000(com.facebook.react.modules.core.Timing)
com.horcrux.svg.R$layout: int abc_list_menu_item_layout
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_NULL_SHA
okio.Okio$4: java.net.Socket val$socket
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithoutIndexingIndexedName(int)
org.jitsi.meet.R$layout: int abc_expanded_menu_layout
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mLifecycleEventListeners
org.webrtc.voiceengine.BuildInfo: java.lang.String getDeviceModel()
com.horcrux.svg.TextProperties$TextAnchor: com.horcrux.svg.TextProperties$TextAnchor[] values()
org.webrtc.VideoDecoderFactory
org.webrtc.VideoFileRenderer: int outputFrameSize
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: boolean access$402(org.jitsi.meet.sdk.AudioDeviceHandlerGeneric,boolean)
org.jitsi.meet.R$style: int Widget_AppCompat_Light_ActionButton
com.facebook.react.views.switchview.ReactSwitchManager: ReactSwitchManager()
okhttp3.internal.http2.Settings: int getInitialWindowSize()
okio.GzipSink: java.util.zip.Deflater deflater()
okhttp3.internal.huc.OkHttpsURLConnection: OkHttpsURLConnection(java.net.URL,okhttp3.OkHttpClient)
okhttp3.Address: java.net.Proxy proxy()
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackgroundColor(int)
okhttp3.internal.http2.Header: okio.ByteString TARGET_PATH
com.facebook.react.views.textinput.ReactTextInputManager: int PASSWORD_VISIBILITY_FLAG
com.horcrux.svg.R$styleable: int AppCompatTextView_fontFamily
com.learnium.RNDeviceInfo.RNDeviceModule: void hasHms(com.facebook.react.bridge.Promise)
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundTopEnd
com.horcrux.svg.R$style: int Base_AlertDialog_AppCompat_Light
org.jitsi.meet.sdk.BroadcastAction$Type: org.jitsi.meet.sdk.BroadcastAction$Type SEND_CHAT_MESSAGE
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: void announceForAccessibility(java.lang.String)
org.webrtc.NetworkMonitorAutoDetect: boolean supportNetworkCallback()
org.webrtc.SdpObserver: void onSetSuccess()
com.horcrux.svg.R$dimen: int abc_dialog_title_divider_material
org.jitsi.meet.R$dimen: int abc_dropdownitem_icon_width
org.jitsi.meet.R$styleable: int MenuGroup_android_checkableBehavior
org.jitsi.meet.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_0
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
okhttp3.Cache: int networkCount()
org.jitsi.meet.R$attr: int drawableTint
okio.ByteString: boolean rangeEquals(int,byte[],int,int)
com.facebook.react.views.modal.ReactModalHostManager: java.lang.Object updateState(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
org.webrtc.SessionDescription: java.lang.String description
com.facebook.react.devsupport.DevServerHelper$6: com.facebook.react.devsupport.DevServerHelper$SymbolicationListener val$listener
com.horcrux.svg.R$color: int primary_text_disabled_material_dark
org.webrtc.audio.WebRtcAudioRecord: boolean verifyAudioConfig(int,int,android.media.AudioFormat,android.media.AudioDeviceInfo,java.util.List)
okio.BufferedSource: int readIntLe()
org.jitsi.meet.R$attr: int imageAspectRatio
com.horcrux.svg.R$color: int material_deep_teal_500
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionButton
com.squareup.duktape.Duktape: void destroyContext(long)
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ScheduledExecutorService writerExecutor
org.jitsi.meet.R$id: int action_bar_activity_content
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_POST_MESSAGE
com.horcrux.svg.R$dimen: int abc_text_size_body_2_material
org.webrtc.Camera2Enumerator: boolean isBackFacing(java.lang.String)
org.webrtc.audio.JavaAudioDeviceModule$AudioSamples: int getSampleRate()
com.facebook.react.modules.blob.BlobModule: void store(byte[],java.lang.String)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.horcrux.svg.R$style: int Platform_V21_AppCompat
org.webrtc.VideoFrameDrawer$1: int[] $SwitchMap$org$webrtc$VideoFrame$TextureBuffer$Type
org.webrtc.RtpParameters$Codec: java.lang.Integer getNumChannels()
org.jitsi.meet.R$color: int switch_thumb_normal_material_light
com.facebook.react.uimanager.UIManagerModule: java.util.Map mViewManagerConstantsCache
okhttp3.internal.http2.Http2Stream
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Display4
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.String getName()
org.webrtc.voiceengine.WebRtcAudioManager: int getMinInputFrameSize(int,int)
org.webrtc.GlShader: int compileShader(int,java.lang.String)
com.horcrux.svg.LineView: void setX2(com.facebook.react.bridge.Dynamic)
org.jitsi.meet.R$styleable: int AppCompatTheme_dropDownListViewStyle
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper: void handleException(java.lang.Exception)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: android.os.Bundle access$502(org.jitsi.meet.sdk.JitsiMeetConferenceOptions,android.os.Bundle)
org.webrtc.EglRenderer: void pauseVideo()
okhttp3.internal.ws.RealWebSocket: void tearDown()
org.webrtc.CameraVideoCapturer$CameraStatistics: CameraVideoCapturer$CameraStatistics(org.webrtc.SurfaceTextureHelper,org.webrtc.CameraVideoCapturer$CameraEventsHandler)
org.webrtc.MediaCodecUtils: java.lang.String INTEL_PREFIX
org.webrtc.CryptoOptions$Srtp: org.webrtc.CryptoOptions this$0
org.webrtc.audio.WebRtcAudioRecord$1: WebRtcAudioRecord$1(java.util.concurrent.atomic.AtomicInteger)
com.facebook.react.modules.blob.BlobModule: java.lang.String getMimeTypeFromUri(android.net.Uri)
com.horcrux.svg.RenderableView: com.horcrux.svg.RenderableView contextElement
com.facebook.react.devsupport.DebugOverlayController: com.facebook.react.bridge.ReactContext mReactContext
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.google.android.gms.measurement.AppMeasurement: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2$1: WebsocketJavaScriptExecutor$2$1(com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getCarrierSync()
org.jitsi.meet.sdk.R$id: int rn_redbox_report_label
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getContentEncoding()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
org.webrtc.NetworkStatePredictorFactoryFactory
com.facebook.react.views.textinput.ReactTextInputManager: ReactTextInputManager()
org.webrtc.SurfaceEglRenderer: org.webrtc.RendererCommon$RendererEvents rendererEvents
org.jitsi.meet.sdk.R$attr: int actionOverflowMenuStyle
okhttp3.internal.http2.Http2: byte FLAG_COMPRESSED
org.webrtc.audio.WebRtcAudioUtils: void logAudioStateVolume(java.lang.String,android.media.AudioManager)
org.webrtc.Camera2Session: android.content.Context applicationContext
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder()
org.jitsi.meet.sdk.R$string: int imagebutton_description
org.jitsi.meet.R$attr: int searchViewStyle
com.google.android.gms.internal.measurement.zzcd$zza: com.google.android.gms.internal.measurement.zzcd$zzi zzf
org.webrtc.audio.LowLatencyAudioBufferManager: boolean keepLoweringBufferSize
com.horcrux.svg.R$style: int Widget_AppCompat_ButtonBar
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
org.webrtc.ScreenCapturerAndroid$1
com.horcrux.svg.R$styleable: int SwitchCompat_switchTextAppearance
com.horcrux.svg.R$styleable: int[] ViewStubCompat
androidx.appcompat.widget.AppCompatImageView
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzib zzar
org.jitsi.meet.R$drawable: int abc_btn_borderless_material
com.horcrux.svg.R$styleable: int FontFamily_fontProviderPackage
com.facebook.react.bridge.CxxModuleWrapperBase: boolean canOverrideExistingModule()
com.facebook.react.views.view.ReactViewManager: void setNativeForeground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
org.jitsi.meet.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
okhttp3.internal.cache.DiskLruCache$2
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder name(java.lang.String)
com.horcrux.svg.R$string: int catalyst_settings_title
org.webrtc.VideoSource$1: void onFrameCaptured(org.webrtc.VideoFrame)
okhttp3.internal.http2.Http2Connection
org.webrtc.DataChannel$Init: boolean getOrdered()
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
com.horcrux.svg.R$attr: int fontStyle
com.facebook.react.modules.network.NetworkingModule: boolean access$000(long,long)
com.learnium.RNDeviceInfo.RNDeviceModule: void isHeadphonesConnected(com.facebook.react.bridge.Promise)
okhttp3.MediaType: java.lang.String subtype()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadHandler mHandler
org.jitsi.meet.sdk.R$string: int abc_action_bar_up_description
org.webrtc.audio.WebRtcAudioUtils: void logAudioState(java.lang.String,android.content.Context,android.media.AudioManager)
com.facebook.react.uimanager.UIManagerModule: java.util.Map access$100(com.facebook.react.uimanager.UIManagerModule)
org.jitsi.meet.sdk.R$color: int button_material_light
org.jitsi.meet.R$attr: int fontProviderFetchStrategy
com.facebook.react.devsupport.interfaces.DevBundleDownloadListener: void onFailure(java.lang.Exception)
com.horcrux.svg.R$styleable: int View_paddingEnd
okhttp3.internal.http2.StreamResetException: StreamResetException(okhttp3.internal.http2.ErrorCode)
org.webrtc.audio.JavaAudioDeviceModule: void setMicrophoneMute(boolean)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
com.horcrux.svg.LinearGradientView: void setGradientTransform(com.facebook.react.bridge.ReadableArray)
org.webrtc.audio.WebRtcAudioEffects: boolean shouldEnableAec
timber.log.Timber$Tree: boolean isLoggable(java.lang.String,int)
bolts.ExecutorException
org.webrtc.PeerConnection$IceConnectionState: org.webrtc.PeerConnection$IceConnectionState CHECKING
org.webrtc.audio.JavaAudioDeviceModule: boolean useStereoInput
org.jitsi.meet.sdk.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_0
com.google.firebase.analytics.FirebaseAnalytics
org.jitsi.meet.R$attr: int editTextColor
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException: OkHttpURLConnection$UnexpectedException(java.lang.Throwable)
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_PROMISE
androidx.fragment.app.Fragment: boolean mRetainInstance
org.jitsi.meet.sdk.R$styleable: int Toolbar_titleMargin
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService: java.util.Set routesToDeviceNames(int)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder setSubject(java.lang.String)
com.facebook.react.animated.NativeAnimatedModule: void disconnectAnimatedNodes(int,int)
com.google.android.gms.internal.measurement.zzae: android.os.Parcelable$Creator CREATOR
org.webrtc.EglBase14Impl: void createDummyPbufferSurface()
org.webrtc.VideoCodecInfo: java.lang.String name
okhttp3.internal.ws.RealWebSocket
org.jitsi.meet.R$attr: int panelBackground
com.horcrux.svg.R$styleable: int ActionBar_contentInsetEnd
org.jitsi.meet.sdk.incoming_call.IncomingCallInfo
com.facebook.react.devsupport.DevInternalSettings: boolean isReloadOnJSChangeEnabled()
org.webrtc.audio.WebRtcAudioTrack: org.webrtc.audio.WebRtcAudioTrack$AudioTrackThread audioThread
okhttp3.ConnectionSpec: int hashCode()
org.webrtc.MediaStreamTrack$State: org.webrtc.MediaStreamTrack$State fromNativeIndex(int)
com.horcrux.svg.R$string: int toolbar_description
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setPersistentScrollbar(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_retryImage
com.horcrux.svg.SvgViewManager: com.horcrux.svg.SvgView createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread()
com.dropbox.core.v2.team.ListTeamAppsErrorException
org.webrtc.CameraEnumerationAndroid$ClosestComparator: int compare(java.lang.Object,java.lang.Object)
org.webrtc.EglRenderer: float layoutAspectRatio
com.facebook.react.views.textinput.ReactTextInputManager: java.lang.String KEYBOARD_TYPE_NUMERIC
org.jitsi.meet.R$id: int scrollIndicatorUp
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void assertIsOnThread()
org.webrtc.RtpReceiver: java.lang.String nativeGetId(long)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ActionButton
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PRE_SETUP_REACT_CONTEXT_START
org.jitsi.meet.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint
org.webrtc.PeerConnectionFactory: long nativeCreateVideoSource(long,boolean,boolean)
org.webrtc.RendererCommon$VideoLayoutMeasure: RendererCommon$VideoLayoutMeasure()
org.webrtc.voiceengine.WebRtcAudioUtils: int getDefaultSampleRateHz()
org.jitsi.meet.R$dimen: int compat_notification_large_icon_max_width
org.jitsi.meet.sdk.BroadcastAction$Type: BroadcastAction$Type(java.lang.String,int,java.lang.String)
com.facebook.react.devsupport.interfaces.ErrorCustomizer
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundingBorderWidth
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType[] getLocalTypeArray()
org.jitsi.meet.sdk.R$anim: int abc_slide_in_top
org.webrtc.SoftwareVideoDecoderFactory: org.webrtc.VideoDecoder createDecoder(java.lang.String)
org.webrtc.audio.WebRtcAudioTrack$AudioTrackThread: org.webrtc.audio.LowLatencyAudioBufferManager bufferManager
org.jitsi.meet.sdk.R$attr: int colorControlNormal
org.webrtc.VideoCodecMimeType: java.lang.String mimeType()
org.webrtc.voiceengine.WebRtcAudioUtils: void logAudioState(java.lang.String)
org.webrtc.voiceengine.WebRtcAudioRecord: boolean DEBUG
org.webrtc.DataChannel: DataChannel(long)
org.webrtc.RtpSender: boolean setTrack(org.webrtc.MediaStreamTrack,boolean)
com.dropbox.core.v2.sharing.UnshareFolderErrorException
com.google.android.gms.internal.measurement.zzcd$zzc: com.google.android.gms.internal.measurement.zzid zzd
com.horcrux.svg.RenderableViewManager$DefsViewManager: void setOpacity(android.view.View,float)
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getExpiration()
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method getMethod()
org.jitsi.meet.sdk.R$string: int search_menu_title
okhttp3.RequestBody$2: okhttp3.MediaType val$contentType
okio.HashingSource: okio.ByteString hash()
okhttp3.internal.cache.FaultHidingSink: FaultHidingSink(okio.Sink)
okhttp3.internal.http2.Hpack$Reader: okio.ByteString getName(int)
com.facebook.react.views.art.ARTRenderableViewManager: java.lang.String CLASS_SHAPE
com.facebook.react.bridge.CatalystInstance: void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry)
org.webrtc.AndroidVideoDecoder$1: org.webrtc.AndroidVideoDecoder this$0
com.facebook.react.modules.datepicker.DatePickerDialogModule: void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
org.jitsi.meet.sdk.ParticipantsService$2: int[] $SwitchMap$org$jitsi$meet$sdk$BroadcastEvent$Type
com.facebook.react.bridge.JSIModuleType: com.facebook.react.bridge.JSIModuleType TurboModuleManager
com.horcrux.svg.R$layout: int abc_search_view
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$1: com.facebook.react.devsupport.WebsocketJavaScriptExecutor this$0
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollTo(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData)
org.jitsi.meet.R$styleable: int Spinner_android_prompt
org.webrtc.PeerConnection$RtcpMuxPolicy: org.webrtc.PeerConnection$RtcpMuxPolicy[] $VALUES
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setSendMomentumEvents(boolean)
com.facebook.react.devsupport.interfaces.DevBundleDownloadListener: void onSuccess(com.facebook.react.bridge.NativeDeltaClient)
org.webrtc.audio.WebRtcAudioRecord: org.webrtc.audio.WebRtcAudioEffects effects
org.webrtc.CameraCapturer$5: CameraCapturer$5(org.webrtc.CameraCapturer)
okio.RealBufferedSource: boolean exhausted()
org.jitsi.meet.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
org.jitsi.meet.R$id: int action_mode_bar
com.facebook.react.devsupport.DisabledDevSupportManager: com.facebook.react.devsupport.interfaces.StackFrame[] getLastErrorStack()
com.horcrux.svg.R$attr: int queryHint
okio.RealBufferedSource: byte[] readByteArray(long)
okhttp3.EventListener: okhttp3.EventListener$Factory factory(okhttp3.EventListener)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_COMMIT_END
com.facebook.react.devsupport.DevSupportManagerImpl: boolean getDevSupportEnabled()
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(com.facebook.react.views.scroll.ReactScrollView)
androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)
com.facebook.react.bridge.ReactMethod
okio.Buffer$UnsafeCursor: okio.Buffer buffer
com.facebook.react.bridge.Systrace
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.ReadableType getType()
okhttp3.internal.http2.Http2Reader$Handler: void priority(int,int,int,boolean)
org.jitsi.meet.sdk.R$styleable: int MenuItem_android_checkable
org.webrtc.ScreenCapturerAndroid$1: ScreenCapturerAndroid$1(org.webrtc.ScreenCapturerAndroid)
com.horcrux.svg.R$string: int combobox_description
com.horcrux.svg.R$color: int abc_primary_text_material_dark
com.facebook.react.modules.timepicker.TimePickerMode: com.facebook.react.modules.timepicker.TimePickerMode[] values()
com.learnium.RNDeviceInfo.RNDeviceModule: void isBatteryCharging(com.facebook.react.bridge.Promise)
com.horcrux.svg.R$styleable: int AppCompatTextView_fontVariationSettings
org.webrtc.RTCStatsReport
org.jitsi.meet.sdk.JitsiMeetUserInfo: JitsiMeetUserInfo()
com.dropbox.core.v2.team.ListMembersAppsErrorException
org.webrtc.audio.WebRtcAudioRecord: android.media.AudioRecord access$000(org.webrtc.audio.WebRtcAudioRecord)
okhttp3.internal.http2.Hpack$Reader: int readInt(int,int)
com.horcrux.svg.R$dimen: int abc_edit_text_inset_bottom_material
org.webrtc.PeerConnection$TlsCertPolicy: org.webrtc.PeerConnection$TlsCertPolicy[] $VALUES
org.jitsi.meet.sdk.JitsiMeetViewListener: void onConferenceTerminated(java.util.Map)
com.reactnativecommunity.webview.RNCWebViewManager: void setUrlPrefixesForDefaultIntent(android.webkit.WebView,com.facebook.react.bridge.ReadableArray)
org.webrtc.CameraSession$FailureType
com.facebook.react.views.textinput.ReactEditText: void setLetterSpacingPt(float)
org.jitsi.meet.sdk.R$color: int common_google_signin_btn_text_dark_disabled
org.webrtc.CameraCapturer$2: org.webrtc.CameraCapturer this$0
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.PeerConnectionFactory$Builder setAudioProcessingFactory(org.webrtc.AudioProcessingFactory)
org.jitsi.meet.R$styleable: int SwitchCompat_thumbTextPadding
okhttp3.internal.http2.Http2Connection: boolean awaitingPong
org.webrtc.MediaStreamTrack$MediaType: org.webrtc.MediaStreamTrack$MediaType MEDIA_TYPE_AUDIO
org.webrtc.voiceengine.WebRtcAudioTrack: boolean setStreamVolume(int)
org.jitsi.meet.sdk.R$color: int abc_tint_seek_thumb
com.horcrux.svg.SvgView: void setToDataUrlTask(java.lang.Runnable)
com.horcrux.svg.R$style: int Theme_AppCompat_Light_DialogWhenLarge
com.facebook.yoga.YogaJustify: com.facebook.yoga.YogaJustify valueOf(java.lang.String)
com.horcrux.svg.R$styleable: int MenuGroup_android_menuCategory
android.support.v4.graphics.drawable.IconCompatParcelizer
org.jitsi.meet.sdk.R$id: int scrollIndicatorUp
org.jitsi.meet.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
com.facebook.react.devsupport.DevSupportManagerImpl$2: DevSupportManagerImpl$2(com.facebook.react.devsupport.DevSupportManagerImpl)
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_INVALID_URI
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.horcrux.svg.R$drawable: int abc_popup_background_mtrl_mult
org.jitsi.meet.sdk.R$styleable: int[] Spinner
org.webrtc.NetworkMonitorAutoDetect$1
com.facebook.react.bridge.JavaMethodWrapper$10
com.horcrux.svg.SvgPackage
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: void destroy()
com.reactnativecommunity.webview.RNCWebViewManager: void setOnScroll(android.webkit.WebView,boolean)
com.facebook.react.views.image.ReactImageView: void setProgressiveRenderingEnabled(boolean)
com.facebook.react.bridge.Inspector$Page: java.lang.String mTitle
okhttp3.internal.http.HttpHeaders: okhttp3.Headers varyHeaders(okhttp3.Headers,okhttp3.Headers)
com.horcrux.svg.R$styleable: int StateListDrawable_android_exitFadeDuration
org.webrtc.EglBase14Impl: boolean isEGL14Supported()
org.jitsi.meet.sdk.OngoingNotification: androidx.core.app.NotificationCompat$Action createAction(android.content.Context,org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action,int)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean hasHmsSync()
com.facebook.react.views.text.ReactTextAnchorViewManager: void setSelectionColor(com.facebook.react.views.text.ReactTextView,java.lang.Integer)
com.facebook.yoga.YogaJustify
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setX2(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.Dynamic)
org.webrtc.EglBase10Impl$1FakeSurfaceHolder: void setFormat(int)
org.jitsi.meet.R$attr: int actionBarItemBackground
org.jitsi.meet.sdk.R$dimen: int abc_text_size_subhead_material
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
org.jitsi.meet.R$id: int accessibility_custom_action_14
org.jitsi.meet.sdk.JitsiMeetUserInfo: void setEmail(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper getLooper()
okhttp3.Response$Builder: okhttp3.Request request
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setNativeModulesQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionDropDownStyle
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_actualImageScaleType
org.jitsi.meet.sdk.R$styleable: int[] SearchView
org.jitsi.meet.R$anim: int fragment_close_enter
com.facebook.react.modules.core.Timing: java.util.concurrent.atomic.AtomicBoolean access$100(com.facebook.react.modules.core.Timing)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$ReaderRunnable readerRunnable
com.facebook.react.devsupport.FpsView$1
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA
org.webrtc.RtpSender: java.util.List nativeGetStreams(long)
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Caption
org.jitsi.meet.R$drawable: int btn_radio_off_to_on_mtrl_animation
org.jitsi.meet.R$style: int Widget_AppCompat_PopupMenu_Overflow
androidx.core.app.ComponentActivity: androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
com.horcrux.svg.R$style: int Widget_AppCompat_DrawerArrowToggle
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl create(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
com.facebook.react.devsupport.BundleDeltaClient$BundleDeltaJavaClient: boolean canHandle(com.facebook.react.devsupport.BundleDeltaClient$ClientType)
okhttp3.internal.http2.Huffman: void encode(okio.ByteString,okio.BufferedSink)
org.webrtc.voiceengine.WebRtcAudioManager: boolean hasEarpiece()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()
com.facebook.react.bridge.JSBundleLoaderDelegate: void loadScriptFromFile(java.lang.String,java.lang.String,boolean)
org.webrtc.PeerConnection$IceServer: int hashCode()
org.jitsi.meet.sdk.R$styleable: int AppCompatImageView_tintMode
com.reactnativecommunity.webview.RNCWebViewManager: void setHardwareAccelerationDisabled(android.webkit.WebView,boolean)
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.BaseJavaModule getModule()
com.facebook.react.views.textinput.ReactEditText: void setBorderRadius(float)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isBatteryChargingSync()
org.webrtc.GlGenericDrawer: org.webrtc.GlShader createShader(org.webrtc.GlGenericDrawer$ShaderType)
okio.Buffer$UnsafeCursor: int start
org.webrtc.PeerConnection$TlsCertPolicy: org.webrtc.PeerConnection$TlsCertPolicy TLS_CERT_POLICY_INSECURE_NO_CHECK
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
org.jitsi.meet.sdk.R$attr: int buttonStyle
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundTopLeft
org.webrtc.audio.WebRtcAudioUtils: boolean runningOnEmulator()
org.webrtc.NV12Buffer: int sliceHeight
okhttp3.internal.http2.Http2Writer: void flush()
okhttp3.internal.http2.Hpack$Writer: okhttp3.internal.http2.Header[] dynamicTable
okhttp3.internal.cache2.Relay: void commit(long)
androidx.fragment.app.Fragment: void setNextTransition(int)
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_drawableTintMode
org.jitsi.meet.sdk.AudioModeModule: void resetAudioRoute()
com.facebook.react.uimanager.UIManagerModule: void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray)
com.facebook.react.uimanager.UIManagerModule: void updateRootLayoutSpecs(int,int,int)
org.webrtc.NativeLibrary$DefaultLoader
org.jitsi.meet.R$drawable: int common_google_signin_btn_text_light_normal_background
com.google.android.gms.auth.api.accounttransfer.AccountTransferException
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
org.jitsi.meet.sdk.net.NAT64AddrInfoModule: long infoTimestamp
com.facebook.react.modules.network.NetworkingModule: java.lang.String REQUEST_BODY_KEY_STRING
com.facebook.react.devsupport.RedBoxDialog$StackAdapter$FrameViewHolder: RedBoxDialog$StackAdapter$FrameViewHolder(android.view.View)
org.jitsi.meet.R$string: int abc_toolbar_collapse_description
org.jitsi.meet.R$color: int switch_thumb_material_light
com.oney.WebRTCModule.WebRTCModule: void peerConnectionCreateAnswerAsync(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)
com.facebook.react.bridge.ReadableNativeArray: com.facebook.react.bridge.ReadableType getType(int)
com.horcrux.svg.RenderableViewManager$CircleViewManager: RenderableViewManager$CircleViewManager()
okhttp3.MediaType: java.lang.String subtype
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService: int access$200(org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService)
com.horcrux.svg.SvgView: void setMinY(float)
org.jitsi.meet.sdk.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)
com.horcrux.svg.R$color: int bright_foreground_disabled_material_dark
okhttp3.internal.ws.RealWebSocket: boolean send(okio.ByteString)
okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor: OkHttpURLConnection$NetworkInterceptor(okhttp3.internal.huc.OkHttpURLConnection)
okhttp3.internal.huc.OkHttpsURLConnection: int getHeaderFieldInt(java.lang.String,int)
androidx.fragment.app.Fragment: boolean isRemovingParent()
org.jitsi.meet.sdk.R$string: int abc_action_menu_overflow_description
com.facebook.react.views.image.ReactImageManager: void setResizeMode(com.facebook.react.views.image.ReactImageView,java.lang.String)
org.webrtc.WrappedNativeVideoEncoder: org.webrtc.VideoCodecStatus initEncode(org.webrtc.VideoEncoder$Settings,org.webrtc.VideoEncoder$Callback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
okio.Buffer: okio.Buffer$UnsafeCursor readAndWriteUnsafe(okio.Buffer$UnsafeCursor)
com.facebook.react.modules.dialog.DialogModule: java.lang.String KEY_ITEMS
org.webrtc.CameraCapturer: boolean access$1102(org.webrtc.CameraCapturer,boolean)
org.jitsi.meet.R$drawable: int abc_ic_ab_back_material
org.webrtc.NetworkChangeDetector: void destroy()
org.webrtc.YuvHelper: void I420Rotate(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats access$000(com.facebook.react.bridge.queue.MessageQueueThreadImpl)
com.facebook.react.views.picker.ReactDialogPickerManager
androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTINUATION
org.webrtc.CameraEnumerationAndroid$ClosestComparator: CameraEnumerationAndroid$ClosestComparator(org.webrtc.CameraEnumerationAndroid$1)
org.jitsi.meet.sdk.R$drawable: int abc_ic_arrow_drop_right_black_24dp
org.webrtc.VideoProcessor$FrameAdaptationParameters: int scaleHeight
org.webrtc.SurfaceTextureHelper: org.webrtc.VideoSink access$302(org.webrtc.SurfaceTextureHelper,org.webrtc.VideoSink)
com.horcrux.svg.RectView: void setY(com.facebook.react.bridge.Dynamic)
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2$1: com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2 this$1
okhttp3.internal.http2.Http2Reader: okio.BufferedSource source
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman INSTANCE
okhttp3.internal.cache.DiskLruCache$Editor$1
org.jitsi.meet.R$styleable: int DrawerArrowToggle_thickness
org.webrtc.YuvConverter$ShaderCallbacks: void setPlaneV()
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
org.jitsi.meet.R$attr: int logo
com.horcrux.svg.RenderableViewManager$GroupViewManager: RenderableViewManager$GroupViewManager()
okhttp3.internal.huc.OkHttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)
org.jitsi.meet.sdk.JitsiMeetActivityDelegate: void onNewIntent(android.content.Intent)
org.jitsi.meet.sdk.R$dimen: int abc_alert_dialog_button_bar_height
com.horcrux.svg.RNSVGRenderableManager: com.facebook.react.bridge.WritableMap getCTM(int)
org.jitsi.meet.sdk.R$drawable: int notification_bg
org.webrtc.HardwareVideoEncoder: boolean automaticResizeOn
okhttp3.CertificatePinner: void check(java.lang.String,java.security.cert.Certificate[])
okhttp3.Cache$Entry: boolean isHttps()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
org.webrtc.VideoDecoder$DecodeInfo
okhttp3.OkHttpClient: int pingInterval
timber.log.Timber$Tree: void wtf(java.lang.String,java.lang.Object[])
org.webrtc.YuvConverter$ShaderCallbacks: void onNewShader(org.webrtc.GlShader)
org.webrtc.MediaStream: boolean removeTrack(org.webrtc.VideoTrack)
org.webrtc.MediaStreamTrack$MediaType: int nativeIndex
org.jitsi.meet.sdk.R$attr: int srcCompat
com.facebook.react.bridge.Inspector$LocalConnection: void disconnect()
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$Builder setSamplesReadyCallback(org.webrtc.audio.JavaAudioDeviceModule$SamplesReadyCallback)
okio.Buffer: short readShortLe()
org.jitsi.meet.R$styleable: int AppCompatTheme_alertDialogTheme
com.facebook.react.uimanager.BaseViewManager: void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.sdk.LogBridgeModule: void log(java.lang.String)
com.facebook.react.bridge.JavaScriptContextHolder: long get()
okhttp3.OkHttpClient$Builder: java.util.List interceptors()
org.jitsi.meet.R$style: int redboxButton
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor
okhttp3.internal.http2.Http2Reader: void readData(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: MessageQueueThreadSpec$ThreadType(java.lang.String,int)
okhttp3.internal.http2.Http2Stream: void close(okhttp3.internal.http2.ErrorCode)
org.jitsi.meet.sdk.R$anim: int abc_grow_fade_in_from_bottom
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
com.horcrux.svg.R$styleable: int MenuItem_iconTintMode
org.webrtc.voiceengine.WebRtcAudioTrack: int DEFAULT_USAGE
com.horcrux.svg.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
org.webrtc.AndroidVideoDecoder: AndroidVideoDecoder(org.webrtc.MediaCodecWrapperFactory,java.lang.String,org.webrtc.VideoCodecMimeType,int,org.webrtc.EglBase$Context)
org.webrtc.Camera1Session$1
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_REACT_CONTEXT_START
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ActionButton_CloseMode
com.facebook.react.uimanager.UIManagerModule: void addUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener)
okio.ByteString
com.oney.WebRTCModule.WebRTCModule: void mediaStreamReleaseAsync(java.lang.String)
org.jitsi.meet.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable: void start()
org.jitsi.meet.R$dimen: int abc_alert_dialog_button_dimen
okhttp3.ConnectionSpec: okhttp3.CipherSuite[] RESTRICTED_CIPHER_SUITES
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService: void setAudioRoute(java.lang.String)
okio.Buffer: void readFully(byte[])
com.facebook.react.uimanager.BaseViewManager: com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext sMatrixDecompositionContext
org.jitsi.meet.R$id: int rn_redbox_loading_indicator
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggeredEventName
org.jitsi.meet.sdk.R$styleable: int GradientColorItem_android_color
com.facebook.react.bridge.JSBundleLoader$3
org.webrtc.PeerConnection$TlsCertPolicy: org.webrtc.PeerConnection$TlsCertPolicy[] values()
okhttp3.internal.http1.Http1Codec$ChunkedSource: Http1Codec$ChunkedSource(okhttp3.internal.http1.Http1Codec,okhttp3.HttpUrl)
com.facebook.react.devsupport.BundleDeltaClient$ClientType: BundleDeltaClient$ClientType(java.lang.String,int)
okhttp3.internal.http2.Hpack$Writer: int SETTINGS_HEADER_TABLE_SIZE_LIMIT
org.webrtc.MediaStreamTrack: java.lang.String VIDEO_TRACK_KIND
org.webrtc.PeerConnection$CandidateNetworkPolicy
com.horcrux.svg.R$styleable: int AppCompatSeekBar_tickMarkTintMode
okio.Buffer: java.io.OutputStream outputStream()
org.webrtc.MediaStream: java.lang.String TAG
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.PeerConnectionFactory$Builder setOptions(org.webrtc.PeerConnectionFactory$Options)
com.facebook.react.devsupport.RedBoxDialog$OpenStackFrameTask: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.horcrux.svg.R$drawable: int abc_ratingbar_small_material
com.google.android.gms.internal.measurement.zzcd$zzg: int zzq
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()
org.webrtc.PeerConnection$AdapterType: org.webrtc.PeerConnection$AdapterType fromNativeIndex(int)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings peerSettings
com.facebook.react.bridge.ReadableMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
org.webrtc.PeerConnection$RTCConfiguration: boolean enableCpuOveruseDetection
okio.Buffer$UnsafeCursor: okio.Segment segment
com.google.android.gms.internal.measurement.zzcd$zzf: com.google.android.gms.internal.measurement.zzcd$zzf zzd
com.horcrux.svg.RenderableViewManager$PathViewManager: void setOpacity(android.view.View,float)
com.facebook.react.bridge.JavaModuleWrapper: com.facebook.react.bridge.ModuleHolder mModuleHolder
com.facebook.react.devsupport.RedBoxDialog: boolean access$000(com.facebook.react.devsupport.RedBoxDialog)
org.webrtc.NetworkMonitorAutoDetect$WifiManagerDelegate: NetworkMonitorAutoDetect$WifiManagerDelegate()
com.dropbox.core.PathRootErrorException
org.jitsi.meet.R$style: int Base_V23_Theme_AppCompat
com.learnium.RNDeviceInfo.RNDeviceModule: double getBatteryLevelSync()
org.webrtc.TextureBufferImpl: int unscaledWidth
org.jitsi.meet.R$id: int search_go_btn
com.kevinresol.react_native_default_preference.RNDefaultPreferenceModule: void setMultiple(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
okhttp3.internal.http2.Http2Stream: void receiveRstStream(okhttp3.internal.http2.ErrorCode)
okio.Segment: int SHARE_MINIMUM
org.jitsi.meet.sdk.R$attr: int titleTextColor
com.facebook.react.views.view.ReactViewManager: void setBorderStyle(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String etag
org.jitsi.meet.R$raw: int lang_languagessk
org.jitsi.meet.R$styleable: int[] ActionMode
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_backgroundImage
org.webrtc.NetworkChangeDetector$Observer
com.dropbox.core.v2.filerequests.GetFileRequestErrorException
okhttp3.internal.http1.Http1Codec: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
com.horcrux.svg.R$drawable: int abc_list_focused_holo
org.jitsi.meet.R$styleable: int AppCompatTheme_popupWindowStyle
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ListPopupWindow
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
org.webrtc.HardwareVideoEncoderFactory: int QCOM_VP8_KEY_FRAME_INTERVAL_ANDROID_N_MS
org.jitsi.meet.sdk.R$styleable: int ColorStateListItem_alpha
org.webrtc.voiceengine.WebRtcAudioManager: int outputChannels
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date expires
okhttp3.Cache$CacheRequestImpl$1: okhttp3.Cache val$this$0
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener mTouchExplorationStateChangeListener
org.jitsi.meet.sdk.R$attr: int queryBackground
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
org.webrtc.CameraEnumerationAndroid: org.webrtc.CameraEnumerationAndroid$CaptureFormat$FramerateRange getClosestSupportedFramerateRange(java.util.List,int)
com.horcrux.svg.ForeignObjectView: void setY(com.facebook.react.bridge.Dynamic)
org.webrtc.CameraCapturer: int access$2300(org.webrtc.CameraCapturer)
org.webrtc.IceCandidate: java.lang.String getSdp()
okhttp3.internal.http.HttpCodec
org.webrtc.Empty: Empty()
org.webrtc.voiceengine.WebRtcAudioTrack: void reportWebRtcAudioTrackError(java.lang.String)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout
org.jitsi.meet.R$style: int Base_V22_Theme_AppCompat_Light
org.webrtc.SurfaceViewRenderer: void logD(java.lang.String)
com.horcrux.svg.SvgView: void enableTouchEvents()
com.facebook.react.devsupport.DevServerHelper$8: com.facebook.react.devsupport.DevServerHelper this$0
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: void abort(java.lang.String,java.lang.Throwable)
com.horcrux.svg.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
okhttp3.Response: java.lang.String toString()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType: com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType MAIN_UI
org.webrtc.PeerConnection$IceServer: PeerConnection$IceServer(java.lang.String,java.util.List,java.lang.String,java.lang.String,org.webrtc.PeerConnection$TlsCertPolicy,java.lang.String,java.util.List,java.util.List,org.webrtc.PeerConnection$1)
org.webrtc.PeerConnectionFactory: void nativeDeleteLoggable()
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getHeaderFieldKey(int)
com.zmxv.RNSound.RNSoundModule: void setCurrentTime(java.lang.Double,java.lang.Float)
org.jitsi.meet.sdk.R$styleable: int Toolbar_contentInsetRight
com.horcrux.svg.SymbolView: void setVbWidth(float)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.Address: java.net.ProxySelector proxySelector
okhttp3.internal.huc.OkHttpURLConnection: void setConnectTimeout(int)
org.jitsi.meet.sdk.R$anim: int abc_popup_enter
org.jitsi.meet.sdk.R$attr: int drawableTopCompat
com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType: com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType valueOf(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl startNewBackgroundThread(java.lang.String,long,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
org.webrtc.Camera2Session$SessionState: org.webrtc.Camera2Session$SessionState STOPPED
com.google.android.gms.common.SupportErrorDialogFragment
okhttp3.internal.http1.Http1Codec: okio.BufferedSink sink
com.facebook.react.views.textinput.ReactEditText: void setMaxFontSizeMultiplier(float)
androidx.fragment.app.FragmentActivity: void onStateNotSaved()
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradientTransform(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.R$styleable: int GradientColor_android_startY
com.horcrux.svg.R$styleable: int AppCompatTheme_actionDropDownStyle
org.webrtc.LibvpxVp9Encoder: long createNativeVideoEncoder()
org.webrtc.VideoSource
okhttp3.OkHttpClient: boolean followSslRedirects
com.horcrux.svg.R$string: int abc_searchview_description_submit
com.google.android.gms.internal.measurement.zzcd$zzg: long zzk
com.facebook.react.bridge.JavaOnlyMap: void putInt(java.lang.String,int)
org.jitsi.meet.R$attr: int listLayout
okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)
okhttp3.internal.huc.OkHttpsURLConnection: java.security.Principal getPeerPrincipal()
org.jitsi.meet.R$drawable: int abc_ic_star_half_black_48dp
okio.Okio: okio.Source source(java.nio.file.Path,java.nio.file.OpenOption[])
okhttp3.RequestBody$3: RequestBody$3(okhttp3.MediaType,java.io.File)
com.facebook.react.devsupport.DevSupportManagerImpl$20: com.facebook.react.devsupport.DevSupportManagerImpl this$0
com.facebook.common.time.AwakeTimeSinceBootClock: AwakeTimeSinceBootClock()
com.facebook.react.devsupport.DevSupportManagerImpl$18
com.facebook.react.devsupport.RedBoxDialog$OpenStackFrameTask: RedBoxDialog$OpenStackFrameTask(com.facebook.react.devsupport.interfaces.DevSupportManager)
okio.RealBufferedSource: byte readByte()
org.jitsi.meet.sdk.R$dimen: int hint_alpha_material_dark
okhttp3.Dns$1: Dns$1()
org.jitsi.meet.sdk.R$string: int abc_capital_on
com.ocetnik.timer.BackgroundTimerModule: com.facebook.react.bridge.LifecycleEventListener listener
okhttp3.internal.http2.Http2Stream: void addBytesToWriteWindow(long)
com.facebook.react.modules.dialog.DialogModule: void onHostDestroy()
org.webrtc.audio.WebRtcAudioRecord$AudioRecordThread: org.webrtc.audio.WebRtcAudioRecord this$0
com.horcrux.svg.VirtualView: boolean mInvertible
org.jitsi.meet.R$styleable: int MenuItem_android_checked
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_RC4_128_SHA
okhttp3.internal.http2.Http2Connection$Listener$1: void onStream(okhttp3.internal.http2.Http2Stream)
com.facebook.react.modules.camera.ImageEditingManager: void writeCompressedBitmapToFile(android.graphics.Bitmap,java.lang.String,java.io.File)
com.horcrux.svg.RenderableViewManager$UseViewManager: void setHeight(com.horcrux.svg.UseView,com.facebook.react.bridge.Dynamic)
okhttp3.internal.ws.WebSocketWriter: byte[] maskKey
com.horcrux.svg.RenderableView: boolean setupStrokePaint(android.graphics.Paint,float)
org.webrtc.EncodedImage$FrameType: org.webrtc.EncodedImage$FrameType[] $VALUES
org.jitsi.meet.R$styleable: int SwitchCompat_android_thumb
com.horcrux.svg.R$attr: int progressBarAutoRotateInterval
org.webrtc.audio.VolumeLogger
org.jitsi.meet.R$styleable: int Toolbar_popupTheme
org.webrtc.RtpSender: java.util.List getStreams()
org.webrtc.AndroidVideoDecoder: int sliceHeight
com.horcrux.svg.R$styleable: int AppCompatTheme_ratingBarStyleSmall
com.horcrux.svg.R$attr: int goIcon
org.jitsi.meet.sdk.JavaScriptSandboxModule: java.lang.String getName()
org.jitsi.meet.sdk.RNConnectionService: RNConnectionService(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.modules.i18nmanager.I18nManagerModule
okhttp3.internal.http2.Http2Connection$Builder: java.lang.String hostname
org.webrtc.PeerConnection$Observer: void onIceCandidatesRemoved(org.webrtc.IceCandidate[])
com.facebook.react.devsupport.InspectorPackagerConnection: org.json.JSONArray getPages()
org.jitsi.meet.R$style: int Base_Widget_AppCompat_SeekBar
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_UI_MANAGER_MODULE_CONSTANTS_START
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_ActionBar_Solid
org.webrtc.audio.WebRtcAudioUtils: void logAudioStateBasic(java.lang.String,android.content.Context,android.media.AudioManager)
org.jitsi.meet.sdk.R$styleable: int AlertDialog_listItemLayout
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: android.os.Parcelable$Creator CREATOR
org.webrtc.VideoCodecStatus
org.jitsi.meet.sdk.AudioModeModule: void replaceDevices(java.util.Set)
org.jitsi.meet.sdk.R$id: int text2
com.horcrux.svg.R$string: int progressbar_description
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants[] $VALUES
com.google.android.gms.signin.internal.zaj: android.os.Parcelable$Creator CREATOR
org.jitsi.meet.sdk.R$style: int Base_Theme_AppCompat_Light_Dialog
org.webrtc.EncodedImage: long captureTimeMs
com.facebook.react.views.image.ReactImageManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder getDraweeControllerBuilder()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()
org.webrtc.MediaStream: long nativeStream
okhttp3.Cookie: boolean matches(okhttp3.HttpUrl)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_placeholderImage
okio.RealBufferedSink: okio.Sink sink
org.jitsi.meet.sdk.R$id: int shortcut
com.horcrux.svg.R$id: int search_plate
com.facebook.react.devsupport.interfaces.DevSupportManager: void setRemoteJSDebugEnabled(boolean)
com.horcrux.svg.LineView: void setY2(com.facebook.react.bridge.Dynamic)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
org.webrtc.DataChannel$Init: java.lang.String getProtocol()
org.webrtc.audio.WebRtcAudioRecord: android.media.AudioRecord audioRecord
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Large_Inverse
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.devsupport.DevServerHelper$OnServerContentChangeListener access$700(com.facebook.react.devsupport.DevServerHelper)
org.webrtc.PeerConnectionFactory: java.lang.String TRIAL_ENABLED
okio.Segment: int SIZE
org.jitsi.meet.R$styleable: int AppCompatTheme_dialogPreferredPadding
org.jitsi.meet.R$id: int action_bar_container
com.facebook.react.devsupport.DebugOverlayController: void setFpsDebugViewVisible(boolean)
com.facebook.react.bridge.DynamicFromObject: com.facebook.react.bridge.ReadableMap asMap()
org.jitsi.meet.R$attr: int drawableRightCompat
okhttp3.RequestBody$2: int val$byteCount
org.webrtc.NativeLibrary: void initialize(org.webrtc.NativeLibraryLoader,java.lang.String)
com.facebook.react.bridge.ReactBridge: long getLoadStartTime()
com.facebook.react.bridge.FallbackJSBundleLoader: com.facebook.react.bridge.JSBundleLoader getDelegateLoader()
okhttp3.internal.Internal: java.io.IOException timeoutExit(okhttp3.Call,java.io.IOException)
okhttp3.internal.platform.AndroidPlatform$CloseGuard: okhttp3.internal.platform.AndroidPlatform$CloseGuard get()
org.jitsi.meet.R$drawable: int abc_btn_radio_to_on_mtrl_015
okhttp3.internal.platform.Jdk9Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.dialog.DialogModule)
okhttp3.Dispatcher: boolean $assertionsDisabled
org.webrtc.VideoCodecType: int VIDEO_CODEC_VP9
org.webrtc.NetworkChangeDetector$ConnectionType: org.webrtc.NetworkChangeDetector$ConnectionType valueOf(java.lang.String)
org.webrtc.Camera1Enumerator: java.lang.String TAG
kotlin.io.NoSuchFileException
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$1: java.lang.String val$webSocketServerUrl
org.webrtc.CameraVideoCapturer$CameraStatistics: int freezePeriodCount
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlign(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
org.jitsi.meet.sdk.R$attr: int tooltipFrameBackground
org.webrtc.NativeAndroidVideoTrackSource: void onFrameCaptured(org.webrtc.VideoFrame)
com.facebook.react.devsupport.DevSupportManagerImpl$30: void onServerContentChanged()
org.webrtc.CameraCapturer: void switchCameraInternal(org.webrtc.CameraVideoCapturer$CameraSwitchHandler,java.lang.String)
okhttp3.internal.http2.Http2Connection$PingRunnable: int payload2
com.horcrux.svg.R$integer: int react_native_dev_server_port
org.webrtc.MediaConstraints
org.jitsi.meet.sdk.R$attr: int actionModeFindDrawable
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec CLEARTEXT
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.concurrent.atomic.AtomicBoolean listRead
org.jitsi.meet.R$styleable: int SimpleDraweeView_retryImageScaleType
okhttp3.internal.connection.RealConnection: okhttp3.Protocol protocol
okhttp3.internal.ws.RealWebSocket: void failWebSocket(java.lang.Exception,okhttp3.Response)
org.jitsi.meet.sdk.PictureInPictureModule: PictureInPictureModule(com.facebook.react.bridge.ReactApplicationContext)
org.jitsi.meet.R$style: int Base_Widget_AppCompat_Button_Borderless
okhttp3.RequestBody$1: RequestBody$1(okhttp3.MediaType,okio.ByteString)
com.facebook.yoga.YogaLogger
okhttp3.internal.cache.CacheRequest: okio.Sink body()
okhttp3.internal.http1.Http1Codec$ChunkedSink: void write(okio.Buffer,long)
com.horcrux.svg.R$styleable: int AppCompatTheme_alertDialogStyle
org.webrtc.ThreadUtils$ThreadChecker: void checkIsOnValidThread()
com.facebook.react.bridge.WritableNativeMap: void putInt(java.lang.String,int)
com.horcrux.svg.VirtualView: void setDisplay(java.lang.String)
org.jitsi.meet.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
org.webrtc.PeerConnection$RTCConfiguration: boolean getAudioJitterBufferFastAccelerate()
com.facebook.react.devsupport.RedBoxDialog$OpenStackFrameTask: RedBoxDialog$OpenStackFrameTask(com.facebook.react.devsupport.interfaces.DevSupportManager,com.facebook.react.devsupport.RedBoxDialog$1)
org.jitsi.meet.sdk.R$id: int image
com.facebook.react.devsupport.BundleDownloader: void access$200(com.facebook.react.devsupport.BundleDownloader,java.lang.String,int,okhttp3.Headers,okio.BufferedSource,java.io.File,com.facebook.react.devsupport.BundleDownloader$BundleInfo,com.facebook.react.devsupport.BundleDeltaClient$ClientType,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener)
com.facebook.react.uimanager.UIManagerModule: void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
org.jitsi.meet.R$id: int contentPanel
com.facebook.react.devsupport.InspectorPackagerConnection: void sendWrappedEvent(java.lang.String,java.lang.String)
org.webrtc.voiceengine.WebRtcAudioTrack: void access$100(boolean)
com.horcrux.svg.R$attr: int actionBarDivider
co.apptailor.googlesignin.RNGoogleSigninModule: void isSignedIn(com.facebook.react.bridge.Promise)
org.webrtc.RtpReceiver: void nativeUnsetObserver(long,long)
okhttp3.internal.http2.Http2: byte FLAG_PADDED
com.facebook.react.devsupport.RedBoxDialog$StackAdapter$FrameViewHolder: android.widget.TextView mFileView
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.jitsi.meet.R$color: int androidx_core_ripple_material_light
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
okio.BufferedSource: int select(okio.Options)
com.horcrux.svg.R$string: int search_description
org.webrtc.VideoCapturer: void startCapture(int,int,int)
org.webrtc.FileVideoCapturer: org.webrtc.FileVideoCapturer$VideoReader videoReader
com.facebook.jni.IteratorHelper: boolean hasNext()
org.webrtc.SurfaceTextureHelper$FrameRefMonitor
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.facebook.react.bridge.JSIModuleRegistry: void registerModules(java.util.List)
com.facebook.react.fabric.Binding: void uninstallFabricUIManager()
org.webrtc.MediaStreamTrack$MediaType: org.webrtc.MediaStreamTrack$MediaType fromNativeIndex(int)
org.webrtc.MediaCodecUtils: java.lang.String QCOM_PREFIX
org.jitsi.meet.R$string: int common_google_play_services_wear_update_text
org.webrtc.audio.WebRtcAudioTrack: int getStreamMaxVolume()
okhttp3.RealCall: okhttp3.EventListener eventListener
com.horcrux.svg.VirtualView: void setOpacity(float)
com.facebook.react.bridge.ReadableMap: java.util.HashMap toHashMap()
com.facebook.react.views.text.ReactTextShadowNode: void setShouldNotifyOnTextLayout(boolean)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
org.webrtc.Camera2Enumerator: java.util.List convertFramerates(android.util.Range[],int)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedCustomDirectEventTypeConstants()
org.webrtc.EglBase10Impl
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.horcrux.svg.RenderableViewManager: void setStrokeMiterlimit(com.horcrux.svg.RenderableView,float)
org.webrtc.VideoEncoder$ResolutionBitrateLimits: int minBitrateBps
com.facebook.react.views.modal.ReactModalHostManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView)
org.webrtc.Metrics: org.webrtc.Metrics getAndReset()
org.jitsi.meet.sdk.R$layout: int abc_action_menu_layout
org.jitsi.meet.sdk.R$dimen: int compat_button_inset_vertical_material
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.PeerConnectionFactory$Builder setAudioEncoderFactoryFactory(org.webrtc.AudioEncoderFactoryFactory)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: java.net.URL access$102(org.jitsi.meet.sdk.JitsiMeetConferenceOptions,java.net.URL)
com.horcrux.svg.R$styleable: int AppCompatTheme_colorPrimaryDark
com.horcrux.svg.R$styleable: int SimpleDraweeView_actualImageScaleType
com.facebook.react.views.text.ReactTextAnchorViewManager: void setIncludeFontPadding(com.facebook.react.views.text.ReactTextView,boolean)
okhttp3.internal.ws.WebSocketReader: long frameLength
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackColorForTrue(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
org.jitsi.meet.sdk.R$attr: int dividerHorizontal
com.facebook.react.views.scroll.ReactScrollView: android.widget.OverScroller getOverScrollerFromParent()
com.facebook.react.modules.appstate.AppStateModule
org.webrtc.audio.WebRtcAudioEffects: boolean isAcousticEchoCancelerSupported()
com.reactnativecommunity.webview.RNCWebViewManager: void setInjectedJavaScriptForMainFrameOnly(android.webkit.WebView,boolean)
com.horcrux.svg.R$id: int search_bar
org.jitsi.meet.sdk.R$styleable: int ActionMode_subtitleTextStyle
com.facebook.react.uimanager.UIManagerModule: java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map)
okhttp3.internal.http.HttpCodec: void writeRequestHeaders(okhttp3.Request)
org.webrtc.Logging$1: int[] $SwitchMap$org$webrtc$Logging$Severity
com.horcrux.svg.SvgView: float mVbWidth
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_3DES_EDE_CBC_SHA
com.horcrux.svg.R$color: R$color()
okio.Buffer: java.lang.String readString(java.nio.charset.Charset)
com.horcrux.svg.R$styleable: int SimpleDraweeView_backgroundImage
com.facebook.react.fabric.events.EventEmitterWrapper
com.rnimmersive.RNImmersiveModule: void _getImmersive(com.facebook.react.bridge.Promise)
org.webrtc.NetworkMonitor: void nativeNotifyConnectionTypeChanged(long)
org.webrtc.VideoProcessor$FrameAdaptationParameters: VideoProcessor$FrameAdaptationParameters(int,int,int,int,int,int,long,boolean)
com.facebook.react.bridge.CatalystInstanceImpl: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
okhttp3.Address: java.lang.String toString()
com.facebook.react.devsupport.JSDebuggerWebSocketClient$JSDebuggerCallback
okhttp3.internal.cache.FaultHidingSink: boolean hasErrors
com.horcrux.svg.R$string: int abc_prepend_shortcut_label
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void execute()
org.jitsi.meet.sdk.R$string: int abc_searchview_description_query
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.util.Map getRequestProperties()
com.horcrux.svg.R$styleable: int[] MenuView
org.webrtc.RtpReceiver: void dispose()
org.webrtc.VideoSource: long getNativeVideoTrackSource()
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Widget_Switch
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.HttpCodec httpCodec
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setRx(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.blob.BlobModule: java.lang.String getNameFromUri(android.net.Uri)
org.jitsi.meet.sdk.ListenerUtils: java.util.Map mapListenerMethods(java.lang.Class)
okhttp3.Protocol: java.lang.String protocol
okhttp3.internal.cache.InternalCache: void trackResponse(okhttp3.internal.cache.CacheStrategy)
okhttp3.JavaNetCookieJar: java.util.List decodeHeaderAsJavaNetCookies(okhttp3.HttpUrl,java.lang.String)
org.jitsi.meet.sdk.R$styleable: int[] ActivityChooserView
com.horcrux.svg.R$styleable: int GradientColor_android_startColor
org.webrtc.DynamicBitrateAdjuster: double BITS_PER_BYTE
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
org.jitsi.meet.R$id: int progress_horizontal
com.facebook.react.views.modal.ReactModalHostView: void setTransparent(boolean)
org.jitsi.meet.R$dimen: int abc_dialog_fixed_height_minor
org.webrtc.YuvConverter: YuvConverter()
org.jitsi.meet.R$dimen: int hint_alpha_material_light
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_placeholderImage
org.webrtc.NetworkMonitor: java.util.ArrayList networkObservers
org.webrtc.GlTextureFrameBuffer: void setSize(int,int)
okhttp3.internal.http2.Hpack: int PREFIX_5_BITS
okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()
org.webrtc.DynamicBitrateAdjuster: double getBitrateAdjustmentScale()
okhttp3.RealCall$1
org.jitsi.meet.R$styleable: int ActionBar_popupTheme
com.facebook.react.devsupport.DevServerHelper$10$1: com.facebook.react.devsupport.DevServerHelper$10 this$1
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_13
org.jitsi.meet.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.horcrux.svg.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_DialogWhenLarge
co.apptailor.googlesignin.RNGoogleSigninModule: int RC_SIGN_IN
org.webrtc.FrameDecryptor
com.horcrux.svg.R$styleable: int AppCompatTextView_textAllCaps
com.facebook.react.bridge.queue.MessageQueueThreadSpec: java.lang.String getName()
org.webrtc.audio.WebRtcAudioTrack: void logBufferSizeInFrames()
com.reactnativecommunity.asyncstorage.AsyncStorageModule
org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger: WebRtcAudioManager$VolumeLogger(android.media.AudioManager)
okhttp3.RealCall$AsyncCall: void executeOn(java.util.concurrent.ExecutorService)
org.webrtc.HardwareVideoEncoder: java.util.concurrent.BlockingDeque outputBuilders
com.horcrux.svg.RenderableViewManager$LineViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler: void handleException(java.lang.Exception)
com.google.android.gms.internal.measurement.zzca$zza: com.google.android.gms.internal.measurement.zzjp zzi
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cache(okhttp3.Cache)
org.webrtc.RtpSender: void nativeSetFrameEncryptor(long,long)
org.webrtc.NetworkMonitorAutoDetect: long access$000(android.net.Network)
org.webrtc.Camera1Session$SessionState: org.webrtc.Camera1Session$SessionState valueOf(java.lang.String)
com.horcrux.svg.SvgViewManager: void setVbWidth(com.horcrux.svg.SvgView,float)
com.horcrux.svg.R$styleable: int TextAppearance_android_shadowDx
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
org.jitsi.meet.sdk.R$string: int common_google_play_services_updating_text
org.webrtc.HardwareVideoEncoder: void deliverEncodedImage()
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
org.webrtc.MediaStream: boolean addTrack(org.webrtc.VideoTrack)
com.horcrux.svg.R$dimen: int abc_text_size_subhead_material
com.horcrux.svg.R$attr: int backgroundTint
org.webrtc.AndroidVideoDecoder: org.webrtc.SurfaceTextureHelper surfaceTextureHelper
com.google.gson.JsonParseException
com.google.android.gms.internal.measurement.zzcd$zzk: long zzg
com.facebook.react.modules.camera.CameraRollManager: java.lang.String ASSET_TYPE_PHOTOS
com.facebook.yoga.YogaNodeJNIBase: long replaceChild(com.facebook.yoga.YogaNodeJNIBase,int)
com.facebook.yoga.YogaMeasureFunction
org.jitsi.meet.R$styleable: int MenuView_android_itemBackground
okhttp3.OkHttpClient: java.util.List connectionSpecs
com.facebook.react.bridge.WritableNativeMap: void putNativeMap(java.lang.String,com.facebook.react.bridge.WritableNativeMap)
org.jitsi.meet.sdk.R$layout: int redbox_item_frame
org.jitsi.meet.sdk.JitsiMeetActivity
com.horcrux.svg.R$style: int Widget_AppCompat_ActionMode
com.horcrux.svg.SVGLength$UnitType: SVGLength$UnitType(java.lang.String,int)
com.facebook.react.bridge.DynamicFromMap: void recycle()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)
org.webrtc.TextureBufferImpl: int getUnscaledWidth()
com.horcrux.svg.R$id: int search_edit_frame
org.webrtc.PeerConnection$RTCConfiguration: java.util.List iceServers
org.webrtc.MediaStreamTrack$State
org.jitsi.meet.R$styleable: int LinearLayoutCompat_android_gravity
org.webrtc.NetworkMonitorAutoDetect: boolean isRegistered
androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)
org.webrtc.PeerConnection: org.webrtc.PeerConnection$PeerConnectionState connectionState()
com.facebook.react.bridge.JSIModuleRegistry: JSIModuleRegistry()
org.jitsi.meet.R$styleable: int AppCompatTheme_colorBackgroundFloating
com.horcrux.svg.R$id: int search_src_text
okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.reflect.Method getMethod
com.dropbox.core.v2.team.MembersSuspendErrorException
okhttp3.internal.huc.OkHttpsURLConnection: int getReadTimeout()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Display3
com.facebook.react.bridge.ReactBridge: long sLoadStartTime
okhttp3.ConnectionSpec$Builder: boolean tls
com.horcrux.svg.R$styleable: int[] ViewBackgroundHelper
com.facebook.react.views.textinput.ReactTextInputManager: void setSelectionColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer)
org.jitsi.meet.sdk.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
com.facebook.react.bridge.FallbackJSBundleLoader: java.util.ArrayList mRecoveredErrors
okhttp3.CacheControl$Builder: boolean noStore
okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)
org.jitsi.meet.R$styleable: int[] AppCompatImageView
org.webrtc.DtmfSender: long nativeDtmfSender
com.facebook.react.devsupport.JSDevSupport$DevSupportCallback
com.horcrux.svg.R$styleable: int DrawerArrowToggle_drawableSize
org.webrtc.VideoSource: boolean isCapturerRunning
okhttp3.CacheControl: boolean mustRevalidate()
okhttp3.CacheControl: int sMaxAgeSeconds
org.webrtc.NetworkMonitorAutoDetect: void unregisterReceiver()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_listDividerAlertDialog
com.horcrux.svg.R$id: int accessibility_actions
org.jitsi.meet.R$drawable: int common_google_signin_btn_icon_light_normal_background
org.webrtc.BaseBitrateAdjuster: int getCodecConfigFramerate()
okhttp3.internal.huc.DelegatingHttpsURLConnection: void connect()
org.jitsi.meet.R$drawable: int abc_control_background_material
com.horcrux.svg.R$id: int notification_main_column
org.jitsi.meet.R$attr: int roundingBorderPadding
com.horcrux.svg.R$style: int Widget_AppCompat_ActionButton_CloseMode
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: void onAudioDeviceChange()
org.jitsi.meet.R$styleable: int AlertDialog_buttonPanelSideLayout
org.jitsi.meet.sdk.R$dimen: int abc_dialog_fixed_height_major
org.webrtc.EncodedImage: int encodedWidth
com.horcrux.svg.VirtualView: float getCanvasWidth()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
org.jitsi.meet.R$attr: int closeIcon
com.facebook.react.devsupport.JSDevSupport: void computeDeepestJSHierarchy(android.view.View,com.facebook.react.devsupport.JSDevSupport$DevSupportCallback)
com.horcrux.svg.R$drawable: int abc_btn_default_mtrl_shape
org.jitsi.meet.R$drawable: int abc_textfield_search_default_mtrl_alpha
com.learnium.RNDeviceInfo.RNDeviceModule: double access$802(com.learnium.RNDeviceInfo.RNDeviceModule,double)
com.horcrux.svg.R$styleable: int Spinner_android_popupBackground
com.horcrux.svg.R$color: int notification_action_color_filter
com.facebook.react.views.view.ReactViewGroup: void setPointerEvents(com.facebook.react.uimanager.PointerEvents)
com.google.android.gms.internal.measurement.zzcd$zzb: int zzd
org.webrtc.ThreadUtils$4: ThreadUtils$4(java.lang.Runnable)
org.jitsi.meet.R$style: int AlertDialog_AppCompat
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.views.text.ReactRawTextShadowNode createShadowNodeInstance()
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.Dynamic getDynamic(java.lang.String)
org.jitsi.meet.sdk.R$styleable: int LinearLayoutCompat_android_weightSum
com.zmxv.RNSound.RNSoundModule: void onCatalystInstanceDestroy()
org.jitsi.meet.R$id: int tag_unhandled_key_listeners
org.webrtc.GlUtil: void checkNoGLES2Error(java.lang.String)
org.webrtc.VideoEncoderFactory
com.horcrux.svg.R$bool: R$bool()
com.facebook.react.bridge.Inspector$Page: java.lang.String getTitle()
okhttp3.Cookie: Cookie(okhttp3.Cookie$Builder)
com.facebook.react.bridge.ReactContext: java.util.concurrent.CopyOnWriteArraySet mWindowFocusEventListeners
org.jitsi.meet.sdk.R$attr: int drawableLeftCompat
com.facebook.react.modules.core.Timing: void onHeadlessJsTaskFinish(int)
com.facebook.react.devsupport.DevServerHelper: java.lang.String getInspectorAttachUrl(android.content.Context,java.lang.String)
okhttp3.internal.http2.Http2Writer
com.horcrux.svg.R$attr: int dividerVertical
org.jitsi.meet.sdk.R$styleable: int AnimatedStateListDrawableItem_android_drawable
com.facebook.react.bridge.ModuleHolder: java.lang.String getClassName()
org.jitsi.meet.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder parse(okhttp3.HttpUrl,java.lang.String)
org.webrtc.PeerConnection: org.webrtc.SessionDescription getRemoteDescription()
okhttp3.internal.Internal: void initializeInstanceForTests()
com.facebook.react.bridge.DynamicFromArray: int asInt()
org.webrtc.FileVideoCapturer$VideoReaderY4M: java.nio.channels.FileChannel mediaFileChannel
com.facebook.react.devsupport.RedBoxDialog$2: RedBoxDialog$2(com.facebook.react.devsupport.RedBoxDialog)
okhttp3.Response: okhttp3.Headers headers()
org.jitsi.meet.R$drawable: int abc_btn_radio_to_on_mtrl_000
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()
okio.ByteString: okio.ByteString decodeHex(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String mUserAgent
androidx.appcompat.widget.SearchView: int getImeOptions()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
org.webrtc.RendererCommon: android.graphics.Matrix convertMatrixToAndroidGraphicsMatrix(float[])
com.facebook.react.bridge.ModuleHolder: boolean getCanOverrideExistingModule()
org.jitsi.meet.R$drawable: int images_avatar
com.horcrux.svg.R$attr: int actualImageScaleType
com.facebook.react.modules.debug.DevSettingsModule: com.facebook.react.devsupport.interfaces.DevSupportManager mDevSupportManager
com.horcrux.svg.R$attr: int buttonPanelSideLayout
com.facebook.react.devsupport.DevSupportManagerImpl$22: com.facebook.react.devsupport.DevSupportManagerImpl this$0
org.jitsi.meet.sdk.R$id: int notification_main_column
com.facebook.react.views.view.ReactViewGroup: java.lang.String mOverflow
com.facebook.react.devsupport.BundleDeltaClient$BundleDeltaJavaClient: android.util.Pair processDelta(okio.BufferedSource,java.io.File)
org.webrtc.CameraCapturer: java.lang.Object stateLock
org.jitsi.meet.sdk.JitsiMeetActivityDelegate: boolean arePermissionsBeingRequested()
okio.Okio$3
com.horcrux.svg.R$attr: int actionModeShareDrawable
okio.Segment: okio.Segment split(int)
androidx.fragment.app.Fragment: int mBackStackNesting
com.facebook.react.views.view.ReactViewGroup: void removeViewWithSubviewClippingEnabled(android.view.View)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setHeight(com.horcrux.svg.ImageView,com.facebook.react.bridge.Dynamic)
org.webrtc.EglRenderer$EglSurfaceCreation: java.lang.Object surface
org.webrtc.PeerConnection$IceServer$Builder: org.webrtc.PeerConnection$IceServer$Builder setHostname(java.lang.String)
org.jitsi.meet.R$attr: int tickMarkTint
com.horcrux.svg.R$styleable: int SwitchCompat_thumbTint
com.horcrux.svg.RenderableView: java.util.ArrayList mPropList
com.dropbox.core.v2.userscommon.AccountType: com.dropbox.core.v2.userscommon.AccountType[] values()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ActionBar_TabText
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okio.Buffer: okio.BufferedSink writeHexadecimalUnsignedLong(long)
org.jitsi.meet.sdk.R$styleable: int ActionBar_titleTextStyle
okhttp3.internal.http2.Http2Connection$5: boolean val$inFinished
org.jitsi.meet.R$styleable: int[] ActionMenuView
org.jitsi.meet.sdk.log.JitsiMeetLogger: void v(java.lang.Throwable)
com.horcrux.svg.R$color: int highlighted_text_material_light
okhttp3.OkHttpClient$1: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)
org.jitsi.meet.R$raw: int lang_languagesfa
com.facebook.react.bridge.CatalystInstanceImpl: java.util.concurrent.CopyOnWriteArrayList mBridgeIdleListeners
org.webrtc.PeerConnectionDependencies
com.horcrux.svg.R$drawable: int abc_cab_background_top_mtrl_alpha
com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature[] values()
okhttp3.internal.http2.Hpack: Hpack()
com.horcrux.svg.R$style: int Widget_AppCompat_Spinner_DropDown
org.jitsi.meet.R$raw: int lang_maines
org.webrtc.AndroidVideoDecoder$FrameInfo: AndroidVideoDecoder$FrameInfo(long,int)
org.jitsi.meet.R$styleable: int MenuItem_android_menuCategory
com.facebook.react.bridge.JSApplicationCausedNativeException
org.jitsi.meet.R$layout: int abc_screen_content_include
org.webrtc.Predicate: org.webrtc.Predicate and(org.webrtc.Predicate)
okhttp3.internal.http2.Http2Stream: void setHeadersListener(okhttp3.internal.http2.Header$Listener)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
org.jitsi.meet.R$raw: int lang_languagesbg
com.facebook.react.views.art.ARTRenderableViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.JavaOnlyArray: void pushString(java.lang.String)
com.facebook.react.bridge.NativeModuleRegistry: NativeModuleRegistry(com.facebook.react.bridge.ReactApplicationContext,java.util.Map)
org.jitsi.meet.R$color: int background_floating_material_dark
com.horcrux.svg.SvgView: void clearChildCache()
org.jitsi.meet.sdk.R$attr: int toolbarStyle
org.webrtc.MediaStreamTrack$MediaType: org.webrtc.MediaStreamTrack$MediaType MEDIA_TYPE_VIDEO
okhttp3.internal.platform.ConscryptPlatform
okhttp3.Response$Builder: void checkPriorResponse(okhttp3.Response)
org.jitsi.meet.sdk.incoming_call.IncomingCallViewListener: void onIncomingCallAnswered(java.util.Map)
org.jitsi.meet.sdk.R$string: int catalyst_inspector
com.dropbox.core.v2.sharing.AddFileMemberErrorException
okio.BufferedSink: okio.BufferedSink writeShortLe(int)
okhttp3.internal.http.HttpCodec: void finishRequest()
com.google.android.gms.internal.measurement.zzbv$zzc: boolean zzf
okhttp3.internal.http2.Http2Reader: void close()
org.jitsi.meet.R$styleable: int LoadingImageView_imageAspectRatio
org.jitsi.meet.sdk.BroadcastEmitter: androidx.localbroadcastmanager.content.LocalBroadcastManager localBroadcastManager
androidx.lifecycle.SavedStateHandleController
com.horcrux.svg.R$styleable: int[] View
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean getDefaultUseCaches()
com.rnimmersive.RNImmersiveModule: void addImmersiveListener()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: java.lang.String getName()
com.facebook.react.views.view.ReactViewGroup: void removeView(android.view.View)
com.horcrux.svg.R$id: int action_bar_title
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mChildFragmentManager
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
org.jitsi.meet.R$attr: int windowActionBarOverlay
com.horcrux.svg.R$styleable: int TextAppearance_android_textColorHint
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
org.webrtc.MediaCodecUtils: int COLOR_QCOM_FORMATYVU420PackedSemiPlanar64x32Tile2m8ka
org.webrtc.MediaSource: void dispose()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexWrap(long,int)
org.webrtc.audio.WebRtcAudioTrack: java.nio.ByteBuffer access$300(org.webrtc.audio.WebRtcAudioTrack)
org.jitsi.meet.sdk.R$drawable: int abc_ic_menu_share_mtrl_alpha
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)
com.facebook.react.views.modal.ReactModalHostManager: com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance()
org.jitsi.meet.R$mipmap: R$mipmap()
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType
okhttp3.internal.huc.OkHttpsURLConnection: java.io.OutputStream getOutputStream()
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String toString()
org.webrtc.NetworkMonitor: void nativeNotifyOfNetworkConnect(long,org.webrtc.NetworkChangeDetector$NetworkInformation)
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: android.content.ContentResolver mContentResolver
org.webrtc.HardwareVideoEncoder: org.webrtc.VideoFrameDrawer videoFrameDrawer
com.facebook.react.modules.appstate.AppStateModule: java.lang.String getName()
org.webrtc.voiceengine.WebRtcAudioManager: boolean hardwareAEC
org.webrtc.Camera1Enumerator: java.util.List getSupportedFormats(int)
com.horcrux.svg.R$styleable: int AppCompatTheme_colorControlActivated
okio.ForwardingSink: ForwardingSink(okio.Sink)
com.facebook.systrace.Systrace$EventScope: com.facebook.systrace.Systrace$EventScope valueOf(java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: boolean hasSystemFeatureSync(java.lang.String)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_DIFF_END
org.jitsi.meet.sdk.R$drawable: int abc_textfield_search_default_mtrl_alpha
com.learnium.RNDeviceInfo.RNDeviceModule: boolean mLastPowerSaveState
org.jitsi.meet.sdk.DropboxModule: void getDisplayName(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)
okhttp3.JavaNetAuthenticator
okio.Buffer: okio.ByteString hmac(java.lang.String,okio.ByteString)
okio.BufferedSink: okio.BufferedSink write(byte[],int,int)
org.jitsi.meet.R$drawable: int common_google_signin_btn_icon_light
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_RESUME_START
com.dropbox.core.v1.DbxClientV1$IODbxException
org.webrtc.VideoDecoderWrapper: void nativeOnDecodedFrame(long,org.webrtc.VideoFrame,java.lang.Integer,java.lang.Integer)
okio.BufferedSink: okio.BufferedSink writeLong(long)
org.jitsi.meet.R$layout: int notification_template_icon_group
org.webrtc.EglBase10Impl$1FakeSurfaceHolder: android.view.Surface surface
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Button_Borderless
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Small
com.horcrux.svg.R$attr: int viewInflaterClass
com.facebook.react.devsupport.DevSupportManagerImpl$30: DevSupportManagerImpl$30(com.facebook.react.devsupport.DevSupportManagerImpl)
okhttp3.internal.connection.ConnectionSpecSelector: java.util.List connectionSpecs
okhttp3.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.horcrux.svg.R$id: int add
org.webrtc.TextureBufferImpl: int getWidth()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
org.jitsi.meet.sdk.R$drawable: int abc_text_select_handle_right_mtrl_light
org.jitsi.meet.R$string: int common_google_play_services_enable_title
org.webrtc.EglBase: void makeCurrent()
okhttp3.Cache$CacheResponseBody: java.lang.String contentLength
org.webrtc.voiceengine.WebRtcAudioTrack$ErrorCallback
com.horcrux.svg.R$attr: int textAppearanceListItemSecondary
okhttp3.internal.cache2.Relay: okhttp3.internal.cache2.Relay read(java.io.File)
com.facebook.react.devsupport.DevLoadingViewController$3: DevLoadingViewController$3(com.facebook.react.devsupport.DevLoadingViewController)
com.facebook.react.devsupport.DevSupportManagerImpl$12: void onOptionSelected()
com.reactnativecommunity.webview.RNCWebViewModule: int PICKER
org.jitsi.meet.sdk.R$style: int ThemeOverlay_AppCompat_Dark
org.webrtc.VideoEncoder$Capabilities: VideoEncoder$Capabilities(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
com.facebook.react.modules.core.Timing: void onHostDestroy()
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String getName()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
okhttp3.internal.cache.DiskLruCache: long maxSize
com.google.android.gms.internal.measurement.zzbv$zzf
okhttp3.internal.platform.Platform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
org.jitsi.meet.sdk.R$id: int fitEnd
com.facebook.react.bridge.CatalystInstanceImpl$1$1: void run()
org.jitsi.meet.sdk.R$styleable: int TextAppearance_textLocale
org.webrtc.MediaCodecUtils
org.webrtc.audio.WebRtcAudioRecord: byte[] access$500(org.webrtc.audio.WebRtcAudioRecord)
org.jitsi.meet.sdk.R$id: int action_container
org.jitsi.meet.R$styleable: int Toolbar_titleTextAppearance
org.jitsi.meet.sdk.R$dimen: int abc_disabled_alpha_material_dark
com.facebook.hermes.unicode.AndroidUnicodeUtils: java.lang.String normalize(java.lang.String,int)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.Class)
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType valueOf(java.lang.String)
okhttp3.FormBody: FormBody(java.util.List,java.util.List)
com.facebook.react.views.textinput.ReactEditText: java.lang.String getReturnKeyType()
okhttp3.CipherSuite: java.lang.String javaName()
org.jitsi.meet.sdk.BroadcastEvent: android.content.Intent buildIntent()
okio.RealBufferedSink: int write(java.nio.ByteBuffer)
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.measurement.internal.zzie getScionFrontendApiImplementation(android.content.Context,android.os.Bundle)
com.dropbox.core.v2.files.ThumbnailErrorException
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: FrescoBasedReactTextInlineImageViewManager()
org.webrtc.PeerConnection$RTCConfiguration: boolean getActiveResetSrtpParams()
okhttp3.WebSocketListener
okio.BufferedSource: void readFully(okio.Buffer,long)
org.jitsi.meet.sdk.R$drawable: int abc_seekbar_thumb_material
org.jitsi.meet.sdk.AudioModeModule$3: void run()
org.jitsi.meet.sdk.AudioModeModule$4: org.jitsi.meet.sdk.AudioModeModule this$0
com.facebook.react.devsupport.DoubleTapReloadRecognizer: DoubleTapReloadRecognizer()
com.google.android.gms.internal.measurement.zzko
com.horcrux.svg.VirtualView: void setMask(java.lang.String)
com.squareup.duktape.Duktape: void set(long,java.lang.String,java.lang.Object,java.lang.Object[])
org.webrtc.RtpParameters: java.util.List getEncodings()
com.facebook.react.views.view.ReactViewGroup: boolean hasOverlappingRendering()
okio.Base64: Base64()
com.horcrux.svg.R$id: int rn_redbox_reload_button
org.webrtc.Camera2Session: void checkIsOnCameraThread()
org.webrtc.voiceengine.WebRtcAudioRecord: boolean stopRecording()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
okhttp3.internal.http.BridgeInterceptor: BridgeInterceptor(okhttp3.CookieJar)
okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.Object createAndOpen(java.lang.String)
okio.Buffer: okio.Timeout timeout()
com.facebook.react.views.view.ReactViewGroup: void removeAllViewsWithSubviewClippingEnabled()
com.facebook.react.modules.fresco.FrescoModule
org.webrtc.HardwareVideoEncoderFactory: HardwareVideoEncoderFactory(org.webrtc.EglBase$Context,boolean,boolean,org.webrtc.Predicate)
org.webrtc.EglBase14Impl: void createSurface(android.graphics.SurfaceTexture)
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_19
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_SHA
org.webrtc.Logging: void enableLogTimeStamps()
com.facebook.react.modules.permissions.PermissionsModule: void requestPermission(java.lang.String,com.facebook.react.bridge.Promise)
org.webrtc.NV12Buffer: int height
com.horcrux.svg.PatternView: void setPatternUnits(int)
com.horcrux.svg.R$styleable: int Toolbar_titleTextAppearance
okhttp3.internal.http.HttpCodec: void cancel()
org.jitsi.meet.sdk.BaseReactView: void createReactRootView(java.lang.String,android.os.Bundle)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetPaddingPercent(long,int,float)
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
com.facebook.react.views.text.ReactRawTextShadowNode
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Call call
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getHardwareSync()
org.webrtc.TextureBufferImpl: android.graphics.Matrix getTransformMatrix()
org.jitsi.meet.R$attr: int roundWithOverlayColor
org.webrtc.NetworkMonitor: int getNumObservers()
com.facebook.react.views.view.ReactViewGroup: void setNeedsOffscreenAlphaCompositing(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
org.webrtc.audio.JavaAudioDeviceModule$Builder: int inputSampleRate
com.facebook.react.devsupport.DevSupportManagerImpl: java.util.List mErrorCustomizers
org.webrtc.SurfaceViewRenderer: void init(org.webrtc.EglBase$Context,org.webrtc.RendererCommon$RendererEvents)
org.webrtc.TextureBufferImpl: void retain()
com.facebook.react.bridge.ReactMarker: void clearMarkerListeners()
org.webrtc.audio.WebRtcAudioUtils: java.lang.String modeToString(int)
okhttp3.ConnectionSpec: okhttp3.CipherSuite[] APPROVED_CIPHER_SUITES
com.kevinresol.react_native_default_preference.RNDefaultPreferenceModule: void clearMultiple(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactContext: void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener)
com.facebook.react.devsupport.BundleDownloader$1: com.facebook.react.devsupport.BundleDeltaClient$ClientType val$clientType
org.jitsi.meet.sdk.ParticipantsService$1: ParticipantsService$1(org.jitsi.meet.sdk.ParticipantsService)
com.facebook.react.uimanager.UIManagerModule: void removeRootView(int)
okhttp3.Cache$2: void remove()
org.jitsi.meet.sdk.R$id: int none
com.facebook.react.bridge.MemoryPressure: MemoryPressure(java.lang.String,int)
com.horcrux.svg.R$attr: int roundWithOverlayColor
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void startSamplingProfiler()
com.horcrux.svg.R$style: int Base_Widget_AppCompat_RatingBar
org.webrtc.Camera2Session: android.view.Surface access$1002(org.webrtc.Camera2Session,android.view.Surface)
com.facebook.react.bridge.ReactContext: void addWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener)
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_15
com.facebook.react.modules.websocket.WebSocketModule: WebSocketModule(com.facebook.react.bridge.ReactApplicationContext)
com.google.android.gms.common.internal.ResolveAccountRequest: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.facebook.react.views.text.ReactTextView: void setBorderRadius(float)
com.google.android.gms.internal.measurement.zzbv$zzd: int zzd
com.horcrux.svg.R$drawable: int abc_cab_background_top_material
com.horcrux.svg.RenderableViewManager
com.facebook.jni.CpuCapabilitiesJni: boolean nativeDeviceSupportsNeon()
okio.ByteString: okio.ByteString digest(java.lang.String)
org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackThread: WebRtcAudioTrack$AudioTrackThread(org.webrtc.voiceengine.WebRtcAudioTrack,java.lang.String)
org.jitsi.meet.sdk.JitsiMeetView: void join(org.jitsi.meet.sdk.JitsiMeetConferenceOptions)
org.webrtc.ThreadUtils$1CaughtException: ThreadUtils$1CaughtException()
okio.HashingSink: okio.HashingSink hmacSha1(okio.Sink,okio.ByteString)
org.webrtc.SurfaceViewRenderer: void setMirror(boolean)
com.horcrux.svg.RenderableViewManager: java.lang.String mClassName
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_Dialog
org.jitsi.meet.R$styleable: int Toolbar_maxButtonHeight
com.horcrux.svg.R$drawable: int notification_template_icon_bg
okhttp3.internal.http2.Http2Stream: java.util.Deque headersQueue
com.ocetnik.timer.BackgroundTimerModule: void start(int)
com.horcrux.svg.RenderableViewManager$TextViewManager: void setDeltaX(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
org.webrtc.EglBase10Impl$Context: javax.microedition.khronos.egl.EGLContext getRawContext()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void settings(boolean,okhttp3.internal.http2.Settings)
org.webrtc.MediaConstraints: java.util.List getMandatory()
org.webrtc.audio.VolumeLogger$LogVolumeTask
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_selectableItemBackground
okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()
org.webrtc.Camera1Session: org.webrtc.Camera1Session$SessionState access$400(org.webrtc.Camera1Session)
com.google.android.gms.common.annotation.KeepName
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String,int)
org.jitsi.meet.sdk.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
org.webrtc.CameraEnumerationAndroid$2: int val$requestedWidth
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder setRoom(java.lang.String)
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
org.webrtc.AndroidVideoDecoder: boolean running
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType[] values()
com.google.android.gms.auth.api.signin.internal.SignInConfiguration: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake()
com.facebook.react.devsupport.WindowOverlayCompat: int TYPE_SYSTEM_OVERLAY
com.facebook.react.devsupport.DevSupportManagerImpl$26: DevSupportManagerImpl$26(com.facebook.react.devsupport.DevSupportManagerImpl,boolean)
androidx.fragment.app.Fragment: boolean mRetainInstanceChangedWhileDetached
org.jitsi.meet.sdk.ProximityModule: void setEnabled(boolean)
okhttp3.ConnectionPool: void put(okhttp3.internal.connection.RealConnection)
okhttp3.Cache: int networkCount
okhttp3.internal.http2.Hpack$Writer: boolean emitDynamicTableSizeUpdate
org.jitsi.meet.sdk.JitsiMeetUserInfo: void setDisplayName(java.lang.String)
org.jitsi.meet.R$drawable: int abc_textfield_search_material
org.webrtc.MediaCodecWrapper: void queueInputBuffer(int,int,int,long,int)
com.facebook.yoga.YogaFlexDirection
org.jitsi.meet.sdk.BroadcastEvent$Type: org.jitsi.meet.sdk.BroadcastEvent$Type CHAT_MESSAGE_RECEIVED
org.jitsi.meet.sdk.R$raw: int lang_languagesde
com.horcrux.svg.RenderableViewManager: double EPSILON
com.facebook.yoga.YogaEdge: com.facebook.yoga.YogaEdge[] values()
okhttp3.internal.http2.Http2Writer: void headers(boolean,int,java.util.List)
com.facebook.react.bridge.ReactContext: void setNativeModuleCallExceptionHandler(com.facebook.react.bridge.NativeModuleCallExceptionHandler)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_256_CBC_SHA
org.webrtc.ScreenCapturerAndroid: int height
org.jitsi.meet.R$attr: int windowActionModeOverlay
org.jitsi.meet.R$raw: int node_modules_entities_lib_maps_xml
org.jitsi.meet.R$styleable: int AppCompatTextView_autoSizeStepGranularity
okio.HashingSink: okio.ByteString hash()
org.jitsi.meet.R$style: int Base_V26_Widget_AppCompat_Toolbar
okio.DeflaterSink: okio.BufferedSink sink
org.jitsi.meet.sdk.R$attr: int selectableItemBackground
org.jitsi.meet.sdk.R$id: int accessibility_states
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String ERROR_GET_SIZE_FAILURE
com.google.android.gms.internal.measurement.zzbv$zzf: java.lang.String zze
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall: com.facebook.react.bridge.NativeArray mArguments
com.facebook.react.bridge.CatalystInstance: void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface)
org.webrtc.HardwareVideoEncoder: org.webrtc.VideoCodecStatus setRateAllocation(org.webrtc.VideoEncoder$BitrateAllocation,int)
org.webrtc.CameraCapturer: org.webrtc.CameraEnumerator access$1400(org.webrtc.CameraCapturer)
com.horcrux.svg.R$styleable: int SearchView_layout
okhttp3.internal.http2.Http2Stream$FramingSink: Http2Stream$FramingSink(okhttp3.internal.http2.Http2Stream)
org.webrtc.PeerConnection: void nativeSetLocalDescription(org.webrtc.SdpObserver,org.webrtc.SessionDescription)
com.facebook.react.modules.debug.SourceCodeModule: com.facebook.react.bridge.ReactContext mReactContext
androidx.fragment.app.Fragment: boolean mHiddenChanged
org.jitsi.meet.R$style: int Widget_AppCompat_Light_SearchView
com.facebook.react.views.view.ReactViewGroup: android.graphics.Rect mClippingRect
org.jitsi.meet.R$drawable: int abc_ic_star_half_black_36dp
com.learnium.RNDeviceInfo.RNDeviceModule: void getBatteryLevel(com.facebook.react.bridge.Promise)
com.facebook.react.bridge.ReactContext: java.lang.String EARLY_JS_ACCESS_EXCEPTION_MESSAGE
com.google.android.gms.internal.measurement.zzbv$zza: com.google.android.gms.internal.measurement.zzbv$zza zzi
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: AudioDeviceHandlerGeneric(android.media.AudioManager)
okhttp3.FormBody: long writeOrCountBytes(okio.BufferedSink,boolean)
org.jitsi.meet.R$style: int Base_Theme_AppCompat_Dialog_Alert
org.jitsi.meet.sdk.incoming_call.IncomingCallInfo: java.lang.String callerName
com.facebook.react.views.modal.ReactModalHostView
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService: void start(org.jitsi.meet.sdk.AudioModeModule)
okhttp3.CacheControl: okhttp3.CacheControl FORCE_CACHE
org.webrtc.HardwareVideoEncoderFactory: boolean isSupportedCodec(android.media.MediaCodecInfo,org.webrtc.VideoCodecMimeType)
org.jitsi.meet.R$style: int Base_Theme_AppCompat_Dialog
okhttp3.internal.http2.Http2Writer: void dataFrame(int,byte,okio.Buffer,int)
org.webrtc.Camera1Session: void stop()
com.google.android.gms.internal.measurement.zzcd$zzh
org.webrtc.Camera2Session$CameraCaptureCallback: void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure)
com.facebook.react.modules.debug.DevSettingsModule: void toggleElementInspector()
com.horcrux.svg.R$string: int state_collapsed_description
org.webrtc.GlGenericDrawer: java.lang.String INPUT_TEXTURE_COORDINATE_NAME
org.jitsi.meet.sdk.R$anim: int btn_checkbox_to_unchecked_icon_null_animation
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_windowMinWidthMajor
okio.Buffer: okio.Buffer writeUtf8CodePoint(int)
org.jitsi.meet.R$drawable: int abc_btn_default_mtrl_shape
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
org.jitsi.meet.R$style: int Base_V21_Theme_AppCompat_Light
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: java.lang.String access$302(org.jitsi.meet.sdk.JitsiMeetConferenceOptions,java.lang.String)
okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)
com.dropbox.core.v2.files.UploadErrorWithPropertiesException
org.webrtc.VideoEncoder$ScalingSettings: boolean on
org.webrtc.NetworkChangeDetector$ConnectionType: org.webrtc.NetworkChangeDetector$ConnectionType CONNECTION_2G
org.webrtc.TextureBufferImpl: org.webrtc.TextureBufferImpl$RefCountMonitor access$000(org.webrtc.TextureBufferImpl)
org.webrtc.CallSessionFileRotatingLogSink: long nativeAddSink(java.lang.String,int,int)
com.horcrux.svg.RenderableViewManager$LinearGradientManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
okhttp3.Handshake: java.util.List localCertificates
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dns(okhttp3.Dns)
com.facebook.react.bridge.CatalystInstance: void addJSIModules(java.util.List)
org.jitsi.meet.sdk.R$string: int common_google_play_services_install_button
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$Builder setOutputSampleRate(int)
okio.ByteString: okio.ByteString hmac(java.lang.String,okio.ByteString)
com.horcrux.svg.R$styleable: int AppCompatTheme_windowActionBarOverlay
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
okio.Utf8
okhttp3.internal.ws.WebSocketReader
org.webrtc.NetworkMonitor: org.webrtc.NetworkChangeDetector getNetworkChangeDetector()
org.webrtc.TextureBufferImpl$RefCountMonitor: void onDestroy(org.webrtc.TextureBufferImpl)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.String getMimeTypeFromExtension(java.lang.String)
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2: com.facebook.react.bridge.queue.MessageQueueThreadImpl this$0
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])
org.webrtc.MediaStreamTrack$MediaType: org.webrtc.MediaStreamTrack$MediaType valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzam
org.webrtc.audio.WebRtcAudioRecord: java.util.concurrent.atomic.AtomicInteger access$1000()
com.facebook.react.uimanager.BaseViewManager: void setTranslateY(android.view.View,float)
okhttp3.internal.cache.CacheInterceptor: boolean isEndToEnd(java.lang.String)
org.webrtc.VideoTrack: void nativeRemoveSink(long,long)
okhttp3.internal.cache2.Relay: okhttp3.internal.cache2.Relay edit(java.io.File,okio.Source,okio.ByteString,long)
org.jitsi.meet.sdk.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
okhttp3.internal.platform.Jdk9Platform: Jdk9Platform(java.lang.reflect.Method,java.lang.reflect.Method)
okhttp3.internal.http1.Http1Codec$ChunkedSource: long read(okio.Buffer,long)
com.facebook.react.devsupport.DevSupportManagerImpl: void updateLastErrorInfo(java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[],int,com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType)
org.jitsi.meet.R$style: int Base_V26_Theme_AppCompat_Light
org.webrtc.RtpReceiver: void nativeSetFrameDecryptor(long,long)
org.webrtc.voiceengine.WebRtcAudioRecord: long AUDIO_RECORD_THREAD_JOIN_TIMEOUT_MS
com.facebook.react.uimanager.UIManagerModule: java.util.Map getPerformanceCounters()
org.jitsi.meet.R$color: int material_deep_teal_200
org.jitsi.meet.sdk.R$raw: int node_modules_i18nisocountries_langs_en
com.zmxv.RNSound.RNSoundModule: void enable(java.lang.Boolean)
okhttp3.internal.ws.WebSocketProtocol: int PAYLOAD_LONG
org.webrtc.YuvConverter: org.webrtc.ThreadUtils$ThreadChecker threadChecker
org.jitsi.meet.R$style: int Widget_AppCompat_ActionBar
okio.package-info
com.dropbox.core.v2.team.TokenGetAuthenticatedAdminErrorException
org.jitsi.meet.sdk.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)
com.facebook.react.views.picker.ReactDropdownPickerManager: java.lang.String REACT_CLASS
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: long read(okio.Buffer,long)
org.webrtc.CameraEnumerationAndroid$1
org.webrtc.NetworkMonitorAutoDetect: void setConnectivityManagerDelegateForTests(org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate)
org.jitsi.meet.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
okhttp3.internal.Util: java.nio.charset.Charset UTF_8
org.webrtc.ScreenCapturerAndroid: android.media.projection.MediaProjectionManager mediaProjectionManager
org.webrtc.VideoCodecStatus: int number
org.jitsi.meet.sdk.R$color: int abc_secondary_text_material_light
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_VIEW_MANAGERS_START
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)
org.webrtc.PeerConnection: void nativeSetRemoteDescription(org.webrtc.SdpObserver,org.webrtc.SessionDescription)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.NativeModuleRegistry mNativeModuleRegistry
com.facebook.yoga.YogaNative: float jni_YGNodeStyleGetFlexGrow(long)
okio.Buffer: okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset)
okhttp3.CacheControl: boolean isPrivate
com.facebook.react.uimanager.LayoutShadowNode: void setAspectRatio(float)
org.webrtc.CameraEnumerationAndroid$CaptureFormat$FramerateRange: int max
org.jitsi.meet.sdk.incoming_call.IncomingCallView: void onExternalAPIEvent(java.lang.String,com.facebook.react.bridge.ReadableMap)
com.facebook.react.views.scroll.ReactScrollViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.NativeModuleRegistry mRegistry
okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.facebook.react.bridge.ReactMarker: void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String)
okhttp3.internal.platform.AndroidPlatform: void log(int,java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.facebook.react.bridge.NativeModuleRegistry: void registerModules(com.facebook.react.bridge.NativeModuleRegistry)
okio.Buffer: okio.BufferedSink writeDecimalLong(long)
org.webrtc.VideoFrame: int getRotatedHeight()
com.oney.WebRTCModule.RTCVideoViewManager: java.lang.String REACT_CLASS
org.webrtc.RTCStatsReport: java.util.Map getStatsMap()
timber.log.Timber$Tree: java.lang.String getTag()
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(int,okio.Source)
com.horcrux.svg.R$attr: int actionOverflowMenuStyle
org.webrtc.PeerConnectionFactory: org.webrtc.PeerConnectionFactory$ThreadInfo staticWorkerThread
com.facebook.react.views.view.ReactViewManager: void setHitSlop(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
org.webrtc.ScreenCapturerAndroid$1: void run()
org.jitsi.meet.sdk.R$anim: int catalyst_slide_up
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.facebook.react.devsupport.MultipartStreamReader: MultipartStreamReader(okio.BufferedSource,java.lang.String)
com.facebook.react.devsupport.RedBoxHandler$ErrorType: RedBoxHandler$ErrorType(java.lang.String,int,java.lang.String)
org.jitsi.meet.sdk.R$attr: int textAppearanceSearchResultSubtitle
com.horcrux.svg.RNSVGRenderableManager: boolean isPointInFill(int,com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.JavaMethodWrapper$8: JavaMethodWrapper$8()
org.jitsi.meet.sdk.R$styleable: int MenuItem_alphabeticModifiers
org.webrtc.PeerConnectionFactory$Options: boolean disableEncryption
okhttp3.internal.http1.Http1Codec$ChunkedSink: okhttp3.internal.http1.Http1Codec this$0
org.jitsi.meet.sdk.R$id: int add
org.jitsi.meet.sdk.R$styleable: int CompoundButton_android_button
com.facebook.react.views.text.ReactTextView: void setGravityHorizontal(int)
org.jitsi.meet.R$id: int wide
com.oney.WebRTCModule.WebRTCModule: void initAsync(com.oney.WebRTCModule.WebRTCModule$Options)
org.webrtc.RendererCommon$GlDrawer: void drawYuv(int[],float[],int,int,int,int,int,int)
com.horcrux.svg.R$drawable: int abc_textfield_search_default_mtrl_alpha
com.facebook.react.modules.vibration.VibrationModule: void vibrateByPattern(com.facebook.react.bridge.ReadableArray,int)
com.reactnativecommunity.webview.RNCWebViewModule: java.io.File getCapturedFile(com.reactnativecommunity.webview.RNCWebViewModule$MimeType)
org.webrtc.NetworkMonitor$2: void onConnectionTypeChanged(org.webrtc.NetworkChangeDetector$ConnectionType)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
com.facebook.react.devsupport.DevInternalSettings: boolean isJSMinifyEnabled()
org.webrtc.PeerConnectionDependencies: PeerConnectionDependencies(org.webrtc.PeerConnection$Observer,org.webrtc.SSLCertificateVerifier)
org.jitsi.meet.sdk.R$styleable
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_28
okhttp3.Cookie$Builder: Cookie$Builder()
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Subhead_Inverse
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_fadeDuration
com.facebook.react.devsupport.DisabledDevSupportManager: java.lang.String getSourceMapUrl()
org.jitsi.meet.sdk.R$attr: int actionModeCloseButtonStyle
com.facebook.react.modules.core.Timing: com.facebook.react.bridge.ReactApplicationContext access$900(com.facebook.react.modules.core.Timing)
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: void endOfInput(java.io.IOException)
org.webrtc.audio.JavaAudioDeviceModule: org.webrtc.audio.JavaAudioDeviceModule$Builder builder(android.content.Context)
com.horcrux.svg.R$attr: int retryImage
org.webrtc.PeerConnection$IceServer: PeerConnection$IceServer(java.lang.String,java.lang.String,java.lang.String,org.webrtc.PeerConnection$TlsCertPolicy)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.facebook.react.modules.network.NetworkingModule: void cancelRequest(int)
org.jitsi.meet.sdk.R$attr: int buttonBarNegativeButtonStyle
org.jitsi.meet.R$styleable: int AppCompatTheme_tooltipForegroundColor
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$3: com.facebook.react.devsupport.WebsocketJavaScriptExecutor this$0
org.webrtc.Camera1Enumerator: java.util.List convertFramerates(java.util.List)
com.horcrux.svg.RenderableViewManager: double[] sTransformDecompositionArray
org.jitsi.meet.sdk.R$anim: int abc_fade_out
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants BUILD_NATIVE_MODULE_REGISTRY_END
com.facebook.react.devsupport.JSCHeapCapture: com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback mCaptureInProgress
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetHeight(long,float)
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.jitsi.meet.sdk.R$attr: int colorControlActivated
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService: int onStartCommand(android.content.Intent,int,int)
org.jitsi.meet.R$styleable: int FontFamily_fontProviderAuthority
org.webrtc.NetworkMonitorAutoDetect$WifiManagerDelegate: NetworkMonitorAutoDetect$WifiManagerDelegate(android.content.Context)
org.webrtc.Camera1Session$SessionState: org.webrtc.Camera1Session$SessionState[] $VALUES
org.webrtc.Camera1Session: android.os.Handler cameraThreadHandler
org.jitsi.meet.sdk.ConnectionService$ConnectionImpl: void onCallAudioStateChanged(android.telecom.CallAudioState)
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PX
okhttp3.EventListener: void connectEnd(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol)
org.webrtc.voiceengine.WebRtcAudioTrack: void setErrorCallback(org.webrtc.voiceengine.WebRtcAudioTrack$ErrorCallback)
okhttp3.MultipartBody: okhttp3.MediaType ALTERNATIVE
org.webrtc.Priority: int LOW
org.webrtc.CameraEnumerationAndroid$1: int MIN_FPS_HIGH_VALUE_WEIGHT
okhttp3.internal.ws.WebSocketProtocol: java.lang.String acceptHeader(java.lang.String)
org.jitsi.meet.R$color: int foreground_material_dark
com.facebook.react.modules.storage.AsyncStorageModule: void clearSensitiveData()
org.jitsi.meet.sdk.R$attr: int actionBarTabStyle
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService: java.lang.String TAG
org.jitsi.meet.R$id: int right_icon
com.horcrux.svg.R$string: int catalyst_inspector
com.facebook.react.uimanager.ViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.bridge.Arguments: java.lang.Object makeNativeObject(java.lang.Object)
org.jitsi.meet.sdk.R$attr: int trackTint
org.jitsi.meet.R$string: int catalyst_debug_connecting
org.webrtc.Camera2Session: long constructionTimeNs
org.jitsi.meet.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
com.facebook.react.bridge.JavaJSExecutor
com.facebook.react.bridge.ReadableMap: boolean hasKey(java.lang.String)
org.webrtc.audio.JavaAudioDeviceModule$Builder: boolean useStereoInput
com.horcrux.svg.R$styleable: int MenuItem_android_orderInCategory
org.webrtc.VideoFrame$I420Buffer: java.nio.ByteBuffer getDataY()
org.webrtc.WrappedNativeI420Buffer: int height
okhttp3.OkHttpClient: okhttp3.Dns dns()
org.webrtc.WrappedNativeI420Buffer: int getStrideU()
okhttp3.internal.connection.RouteSelector: RouteSelector(okhttp3.Address,okhttp3.internal.connection.RouteDatabase,okhttp3.Call,okhttp3.EventListener)
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate)
com.learnium.RNDeviceInfo.RNDeviceModule: void getInstallerPackageName(com.facebook.react.bridge.Promise)
com.horcrux.svg.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
okio.RealBufferedSource: byte[] readByteArray()
okhttp3.internal.Util: okhttp3.RequestBody EMPTY_REQUEST
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: java.lang.String subject
org.jitsi.meet.sdk.JitsiMeetUncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: com.reactnativecommunity.webview.RNCWebViewManager$RNCWebViewClient getRNCWebViewClient()
org.webrtc.audio.WebRtcAudioRecord: android.media.AudioDeviceInfo preferredDevice
okio.BufferedSink: okio.BufferedSink writeLongLe(long)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.reflect.Method mMethod
com.facebook.react.devsupport.DevSupportManagerImpl$25: void run()
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Snapshot get(java.lang.String)
org.webrtc.PeerConnection$AdapterType: org.webrtc.PeerConnection$AdapterType CELLULAR_2G
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader)
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()
org.jitsi.meet.R$drawable: int abc_action_bar_item_background_material
org.webrtc.PeerConnection$SignalingState: org.webrtc.PeerConnection$SignalingState STABLE
org.webrtc.audio.WebRtcAudioRecord: void setPreferredDevice(android.media.AudioDeviceInfo)
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)
org.jitsi.meet.sdk.ConnectionService$ConnectionImpl: java.lang.String toString()
org.jitsi.meet.sdk.R$styleable: int[] ButtonBarLayout
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_GCM_SHA384
org.webrtc.Camera2Session: int access$2000(org.webrtc.Camera2Session)
org.jitsi.meet.sdk.R$color: int primary_dark_material_light
org.jitsi.meet.sdk.ParticipantInfo
com.horcrux.svg.RenderableView: java.util.regex.Pattern regex
org.jitsi.meet.R$drawable: int abc_edit_text_material
org.jitsi.meet.sdk.R$dimen: int notification_subtext_size
org.webrtc.EglRenderer: org.webrtc.GlTextureFrameBuffer bitmapTextureFramebuffer
org.webrtc.PeerConnection$RtcpMuxPolicy: org.webrtc.PeerConnection$RtcpMuxPolicy[] values()
org.webrtc.PeerConnection$IceServer: java.lang.String username
org.jitsi.meet.R$styleable: int AppCompatTheme_dialogTheme
org.webrtc.HardwareVideoEncoderFactory: int QCOM_VP8_KEY_FRAME_INTERVAL_ANDROID_L_MS
com.horcrux.svg.R$style: int Theme_AppCompat_Dialog_MinWidth
com.facebook.yoga.YogaLogLevel: com.facebook.yoga.YogaLogLevel[] values()
com.horcrux.svg.RenderableViewManager$GroupViewManager: void setOpacity(android.view.View,float)
org.jitsi.meet.sdk.JavaScriptSandboxModule: JavaScriptSandboxModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.Inspector: com.facebook.react.bridge.Inspector$Page[] getPagesNative()
org.jitsi.meet.R$color: int switch_thumb_material_dark
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.AudioProcessingFactory audioProcessingFactory
com.horcrux.svg.R$attr: int actionBarTabStyle
org.webrtc.PeerConnection$IceTransportsType
org.webrtc.audio.WebRtcAudioTrack$AudioTrackThread: org.webrtc.audio.WebRtcAudioTrack this$0
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
com.facebook.react.uimanager.UIManagerModule: void prependUIBlock(com.facebook.react.uimanager.UIBlock)
okhttp3.internal.http2.Http2: byte TYPE_RST_STREAM
okhttp3.Dispatcher: int runningCallsForHost(okhttp3.RealCall$AsyncCall)
com.facebook.react.modules.vibration.VibrationModule
okio.Util
com.google.firebase.crashlytics.internal.report.model.Report$Type: com.google.firebase.crashlytics.internal.report.model.Report$Type[] values()
org.webrtc.SurfaceTextureHelper: org.webrtc.YuvConverter yuvConverter
org.jitsi.meet.R$anim: int abc_slide_in_top
org.jitsi.meet.R$attr: int listChoiceIndicatorMultipleAnimated
com.horcrux.svg.R$attr: int colorPrimaryDark
org.jitsi.meet.sdk.PictureInPictureModule: boolean isPictureInPictureSupported()
org.webrtc.IceCandidate: java.lang.String sdp
com.horcrux.svg.R$style: int Widget_AppCompat_ListMenuView
okhttp3.MultipartBody: okhttp3.MediaType DIGEST
org.jitsi.meet.sdk.R$styleable: int ActionBar_backgroundSplit
com.facebook.react.views.picker.ReactDialogPickerManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: void onOpen(okhttp3.WebSocket,okhttp3.Response)
com.facebook.react.modules.network.NetworkingModule: void onCatalystInstanceDestroy()
com.facebook.react.modules.appstate.AppStateModule: java.lang.String NAME
androidx.fragment.app.FragmentActivity: java.lang.String TAG
org.jitsi.meet.R$styleable: int GradientColorItem_android_color
com.facebook.react.views.art.ARTRenderableViewManager: java.lang.String mClassName
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_textAllCaps
org.webrtc.ScreenCapturerAndroid: int width
org.jitsi.meet.sdk.AudioModeModule: void notifyDevicesChanged()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
org.webrtc.RtcCertificatePem: RtcCertificatePem(java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
com.facebook.react.bridge.ReadableNativeMap: java.lang.Object[] importTypes()
org.webrtc.VideoEncoderWrapper: void nativeOnEncodedFrame(long,org.webrtc.EncodedImage)
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService: boolean setMode(int)
org.jitsi.meet.R$styleable: int DrawerArrowToggle_arrowHeadLength
com.facebook.react.devsupport.RedBoxDialog$3: RedBoxDialog$3(com.facebook.react.devsupport.RedBoxDialog)
com.facebook.react.bridge.DynamicFromArray: double asDouble()
com.facebook.react.views.scroll.ReactScrollViewManager: void flashScrollIndicators(java.lang.Object)
com.facebook.react.devsupport.DisabledDevSupportManager: void handleException(java.lang.Exception)
com.google.android.gms.common.data.DataHolder$zaa
org.jitsi.meet.sdk.ConnectionService: void updateCall(java.lang.String,com.facebook.react.bridge.ReadableMap)
org.jitsi.meet.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
com.reactnativecommunity.netinfo.types.ConnectionType: com.reactnativecommunity.netinfo.types.ConnectionType valueOf(java.lang.String)
org.jitsi.meet.sdk.R$drawable: int abc_ic_star_black_36dp
com.facebook.react.views.text.ReactTextAnchorViewManager: void setNumberOfLines(com.facebook.react.views.text.ReactTextView,int)
org.webrtc.BuiltinAudioEncoderFactoryFactory: long createNativeAudioEncoderFactory()
com.horcrux.svg.R$layout: int abc_alert_dialog_material
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat_Dialog
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: java.lang.Boolean audioMuted
okhttp3.internal.huc.DelegatingHttpsURLConnection: boolean getInstanceFollowRedirects()
okhttp3.internal.connection.RealConnection: okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams(okhttp3.internal.connection.StreamAllocation)
org.jitsi.meet.R$raw: int lang_languagesptbr
androidx.lifecycle.SingleGeneratedAdapterObserver
okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)
com.facebook.react.common.DebugServerException
okhttp3.RealCall: void enqueue(okhttp3.Callback)
org.jitsi.meet.sdk.R$drawable: int btn_radio_off_to_on_mtrl_animation
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Title
com.horcrux.svg.VirtualView: double getCanvasDiagonal()
com.facebook.react.devsupport.DevSupportManagerImpl$29: void run()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setHeight(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
org.jitsi.meet.R$color: int common_google_signin_btn_text_dark_focused
org.jitsi.meet.sdk.DefaultHardwareBackBtnHandlerImpl
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.horcrux.svg.R$attr: int listPopupWindowStyle
org.webrtc.voiceengine.WebRtcAudioUtils: boolean isVolumeFixed(android.media.AudioManager)
okhttp3.internal.huc.OutputStreamRequestBody$1: void close()
com.facebook.react.views.picker.ReactPickerManager: void onAfterUpdateTransaction(com.facebook.react.views.picker.ReactPicker)
org.jitsi.meet.sdk.R$attr: int listPreferredItemHeightLarge
org.jitsi.meet.sdk.R$raw: int lang_mainhr
com.horcrux.svg.SvgViewModule: void toDataURL(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,int)
okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)
okio.GzipSink: GzipSink(okio.Sink)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_END
okhttp3.internal.huc.OkHttpsURLConnection: boolean getInstanceFollowRedirects()
org.webrtc.MediaStreamTrack$State: org.webrtc.MediaStreamTrack$State ENDED
org.webrtc.RtcCertificatePem: java.lang.String getCertificate()
com.facebook.react.modules.camera.CameraRollManager: java.lang.String ERROR_UNABLE_TO_SAVE
org.webrtc.RtpSender: org.webrtc.DtmfSender dtmf()
com.facebook.react.views.art.ARTShapeShadowNode: void setStrokeCap(int)
androidx.fragment.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
org.webrtc.RtcCertificatePem: long DEFAULT_EXPIRY
org.webrtc.PeerConnectionFactory$Options: int ADAPTER_TYPE_LOOPBACK
com.facebook.react.views.picker.ReactPicker: void setStagedPrimaryTextColor(java.lang.Integer)
okhttp3.OkUrlFactory: java.net.HttpURLConnection open(java.net.URL,java.net.Proxy)
org.webrtc.Camera2Session: android.hardware.camera2.CameraCaptureSession access$102(org.webrtc.Camera2Session,android.hardware.camera2.CameraCaptureSession)
org.webrtc.DataChannel$Init: int maxRetransmits
com.horcrux.svg.R$attr: int gapBetweenBars
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxWidthPercent(long,float)
com.horcrux.svg.MaskView: void setMaskContentUnits(int)
okhttp3.internal.http.StatusLine: int HTTP_CONTINUE
com.oney.WebRTCModule.WebRTCModule: org.webrtc.MediaStreamTrack getLocalTrack(java.lang.String)
org.webrtc.PeerConnection$AdapterType: org.webrtc.PeerConnection$AdapterType CELLULAR_3G
org.webrtc.voiceengine.WebRtcAudioRecord: int BITS_PER_SAMPLE
com.facebook.react.modules.core.JSTimers: void callIdleCallbacks(double)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTriggeredEventParams
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
org.jitsi.meet.sdk.R$styleable: int ActionBar_itemPadding
com.facebook.react.modules.storage.AsyncStorageModule: void getAllKeys(com.facebook.react.bridge.Callback)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
org.jitsi.meet.sdk.JitsiMeetActivityDelegate$1
okhttp3.internal.http2.Http2Connection: long bytesLeftInWriteWindow
org.jitsi.meet.sdk.R$drawable: int notification_bg_low_pressed
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation valueOf(java.lang.String)
org.webrtc.VideoCodecStatus: org.webrtc.VideoCodecStatus LEVEL_EXCEEDED
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
okhttp3.Cache: okhttp3.internal.cache.CacheRequest put(okhttp3.Response)
org.webrtc.CameraCapturer: org.webrtc.CameraVideoCapturer$CameraSwitchHandler access$1200(org.webrtc.CameraCapturer)
com.facebook.react.bridge.NativeDeltaClient: com.facebook.jni.HybridData mHybridData
org.webrtc.audio.JavaAudioDeviceModule$Builder: android.media.AudioAttributes audioAttributes
org.webrtc.PeerConnection$Observer: void onRemoveStream(org.webrtc.MediaStream)
org.jitsi.meet.sdk.R$id: int src_over
com.dropbox.core.v2.team.GroupsMembersListContinueErrorException
okhttp3.internal.connection.RouteDatabase: java.util.Set failedRoutes
com.horcrux.svg.VirtualView: com.horcrux.svg.SvgView svgView
com.facebook.react.devsupport.JSDebuggerWebSocketClient: void prepareJSRuntime(com.facebook.react.devsupport.JSDebuggerWebSocketClient$JSDebuggerCallback)
com.facebook.react.bridge.JSBundleLoader$2: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
com.horcrux.svg.R$attr: int defaultQueryHint
okhttp3.internal.http1.Http1Codec: java.lang.String readHeaderLine()
org.webrtc.NetworkChangeDetector: org.webrtc.NetworkChangeDetector$ConnectionType getCurrentConnectionType()
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
com.horcrux.svg.R$integer
org.jitsi.meet.R$style: int Base_V21_Theme_AppCompat
org.jitsi.meet.sdk.R$styleable: int[] LinearLayoutCompat_Layout
okhttp3.Cache$1
okhttp3.FormBody: void writeTo(okio.BufferedSink)
com.horcrux.svg.MarkerView: void setRefX(com.facebook.react.bridge.Dynamic)
org.webrtc.NetworkMonitor: void stopMonitoring()
com.facebook.react.uimanager.events.ReactEventEmitter: ReactEventEmitter(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody build()
org.jitsi.meet.R$style: int Widget_AppCompat_AutoCompleteTextView
com.horcrux.svg.R$drawable: int abc_ic_star_half_black_36dp
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_GCM_SHA256
com.facebook.react.views.text.ReactBaseTextShadowNode: void setLineHeight(float)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getCipherSuite()
com.horcrux.svg.SvgViewManager: void updateExtraData(com.facebook.react.views.view.ReactViewGroup,java.lang.Object)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_CONSTANTS_START
org.jitsi.meet.sdk.R$styleable: int GradientColor_android_gradientRadius
org.jitsi.meet.R$attr: int actionDropDownStyle
com.horcrux.svg.RenderableViewManager: void setStrokeWidth(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
org.jitsi.meet.sdk.R$styleable: int CompoundButton_buttonCompat
com.facebook.react.devsupport.DevSupportManagerImpl$29
okhttp3.internal.cache.DiskLruCache$3: okhttp3.internal.cache.DiskLruCache$Snapshot nextSnapshot
org.jitsi.meet.sdk.ConnectionService: void access$000(org.jitsi.meet.sdk.ConnectionService,android.telecom.PhoneAccountHandle)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
com.facebook.react.bridge.ReactMarker: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
org.jitsi.meet.R$attr: int toolbarNavigationButtonStyle
org.webrtc.NativePeerConnectionFactory
com.facebook.react.modules.systeminfo.AndroidInfoModule: java.lang.String NAME
org.jitsi.meet.sdk.R$string: int abc_toolbar_collapse_description
androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
com.facebook.react.views.slider.ReactSliderManager: void setStep(com.facebook.react.views.slider.ReactSlider,double)
org.webrtc.CameraEnumerationAndroid$2
org.jitsi.meet.R$id: int accessibility_custom_action_29
okio.Okio: okio.BufferedSource buffer(okio.Source)
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator
com.horcrux.svg.ImageView: void setHeight(com.facebook.react.bridge.Dynamic)
org.webrtc.voiceengine.WebRtcAudioUtils: void logDeviceInfo(java.lang.String)
org.webrtc.RtpParameters$HeaderExtension: int getId()
androidx.lifecycle.Lifecycling$1
com.corbt.keepawake.KCKeepAwake: KCKeepAwake(com.facebook.react.bridge.ReactApplicationContext)
okio.AsyncTimeout$1: java.lang.String toString()
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
org.jitsi.meet.R$dimen: int notification_action_icon_size
org.webrtc.NetworkMonitorAutoDetect: long getDefaultNetId()
okhttp3.internal.connection.StreamAllocation
com.facebook.react.devsupport.BundleDeltaClient$BundleDeltaJavaClient: java.util.TreeMap mModules
org.webrtc.PeerConnectionFactory: org.webrtc.PeerConnection createPeerConnectionInternal(org.webrtc.PeerConnection$RTCConfiguration,org.webrtc.MediaConstraints,org.webrtc.PeerConnection$Observer,org.webrtc.SSLCertificateVerifier)
org.jitsi.meet.R$attr: int windowFixedWidthMajor
com.facebook.react.devsupport.DevSupportManagerImpl$27
com.facebook.react.fabric.FabricUIManager: void scheduleMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,int,long,long,long,long,long,long,long)
okhttp3.internal.ws.RealWebSocket$1: void run()
com.facebook.react.devsupport.FpsView: android.widget.TextView mTextView
com.horcrux.svg.R$dimen: int abc_control_inset_material
com.facebook.react.bridge.ReactContext: void initializeWithInstance(com.facebook.react.bridge.CatalystInstance)
org.webrtc.HardwareVideoDecoderFactory: HardwareVideoDecoderFactory()
org.webrtc.PeerConnectionFactory$Options: PeerConnectionFactory$Options()
co.apptailor.googlesignin.RNGoogleSigninModule: void revokeAccess(com.facebook.react.bridge.Promise)
org.jitsi.meet.R$styleable: int AppCompatTheme_actionBarSplitStyle
org.jitsi.meet.sdk.RNConnectionService$CallAudioStateListener: void onCallAudioStateChange(android.telecom.CallAudioState)
com.facebook.react.views.scroll.ReactScrollViewManager: void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.horcrux.svg.R$styleable: int SimpleDraweeView_actualImageResource
org.webrtc.CameraVideoCapturer$CameraStatistics: int CAMERA_FREEZE_REPORT_TIMOUT_MS
com.horcrux.svg.R$layout: int abc_dialog_title_material
org.webrtc.voiceengine.WebRtcAudioRecord: int initRecording(int,int)
org.webrtc.RtpTransceiver: void stop()
com.horcrux.svg.R$dimen: int notification_top_pad
com.facebook.react.views.scroll.ReactScrollView: int getSnapInterval()
org.jitsi.meet.sdk.BroadcastEvent: java.util.HashMap buildDataFromBundle(android.os.Bundle)
org.webrtc.VideoEncoder$ResolutionBitrateLimits: int getFrameSizePixels()
org.jitsi.meet.R$styleable: int SearchView_layout
org.webrtc.TurnCustomizer: void checkTurnCustomizerExists()
okhttp3.internal.cache.DiskLruCache: java.util.Iterator snapshots()
com.horcrux.svg.R$layout: int redbox_item_frame
org.webrtc.Camera2Session: org.webrtc.CameraEnumerationAndroid$CaptureFormat captureFormat
com.horcrux.svg.R$styleable: int FontFamilyFont_fontWeight
okhttp3.Call: boolean isExecuted()
com.facebook.react.animated.NativeAnimatedModule: void connectAnimatedNodes(int,int)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
org.webrtc.audio.WebRtcAudioUtils: void logAudioDeviceInfo(java.lang.String,android.media.AudioManager)
org.webrtc.SurfaceTextureHelper: org.webrtc.SurfaceTextureHelper create(java.lang.String,org.webrtc.EglBase$Context,boolean,org.webrtc.YuvConverter)
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService: java.lang.String access$100()
okhttp3.ResponseBody: java.io.Reader charStream()
com.facebook.react.views.view.ReactViewGroup: void addViewWithSubviewClippingEnabled(android.view.View,int)
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Menu
androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
org.webrtc.EglBase14Impl: org.webrtc.EglBase$Context getEglBaseContext()
okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
okhttp3.internal.Version
org.webrtc.EglBase10Impl$Context: EglBase10Impl$Context(javax.microedition.khronos.egl.EGLContext)
com.horcrux.svg.R$anim: int catalyst_push_up_out
org.webrtc.SessionDescription
com.facebook.react.ReactRootView: void setEventListener(com.facebook.react.ReactRootView$ReactRootViewEventListener)
com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature valueOf(java.lang.String)
okhttp3.internal.http1.Http1Codec: void flushRequest()
org.jitsi.meet.R$style: int Widget_AppCompat_Light_ActionBar_TabText
org.jitsi.meet.R$style: int Widget_AppCompat_DrawerArrowToggle
okhttp3.internal.http2.Http2Stream$FramingSink: boolean closed
com.learnium.RNDeviceInfo.RNDeviceModule: double getTotalDiskCapacitySync()
com.facebook.react.devsupport.DevSupportManagerImpl$9$1
org.jitsi.meet.R$string: int header_description
okio.InflaterSource: boolean closed
com.learnium.RNDeviceInfo.RNDeviceModule: void getProduct(com.facebook.react.bridge.Promise)
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
org.jitsi.meet.sdk.R$attr: int buttonIconDimen
org.jitsi.meet.sdk.R$drawable: int abc_control_background_material
org.webrtc.GlRectDrawer: void drawRgb(int,float[],int,int,int,int,int,int)
org.jitsi.meet.R$id: int accessibility_custom_action_0
okhttp3.internal.http2.Http2Reader$ContinuationSource: int streamId
org.webrtc.RtpTransceiver: org.webrtc.RtpSender cachedSender
org.webrtc.HardwareVideoDecoderFactory: HardwareVideoDecoderFactory(org.webrtc.EglBase$Context)
com.horcrux.svg.R$attr: int editTextColor
okio.AsyncTimeout$2: okio.Source val$source
com.horcrux.svg.RenderableViewManager$RenderableShadowNode: void ignoreLayoutProps(int,com.facebook.react.bridge.Dynamic)
org.jitsi.meet.sdk.R$id: int progress_horizontal
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String)
org.jitsi.meet.R$attr: int actualImageScaleType
org.jitsi.meet.R$id: int normal
com.horcrux.svg.R$integer: int config_tooltipAnimTime
okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier
org.jitsi.meet.R$styleable: int ActionBar_background
okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)
com.reactnativecommunity.netinfo.types.ConnectionType: com.reactnativecommunity.netinfo.types.ConnectionType[] values()
org.webrtc.CameraCapturer$3: org.webrtc.CameraCapturer this$0
com.facebook.react.bridge.queue.MessageQueueThread: void quitSynchronous()
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundBottomStart
com.facebook.react.devsupport.ViewHierarchyUtil
com.facebook.react.devsupport.DevSupportManagerImpl$16: DevSupportManagerImpl$16(com.facebook.react.devsupport.DevSupportManagerImpl,com.facebook.react.devsupport.interfaces.DevOptionHandler[])
org.jitsi.meet.sdk.R$styleable: int MenuItem_android_title
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomRightRadius(android.view.View,float)
androidx.fragment.app.Fragment: void onDetach()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
okhttp3.internal.io.FileSystem$1: void deleteContents(java.io.File)
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
com.facebook.react.devsupport.DevSupportManagerImpl$5
okhttp3.Request: okhttp3.CacheControl cacheControl
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
okio.SegmentPool: void recycle(okio.Segment)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
org.webrtc.HardwareVideoEncoder$BusyCount
com.facebook.react.bridge.ReadableNativeArray: double getDouble(int)
org.jitsi.meet.sdk.DropboxModule: DropboxModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.systrace.TraceListener mTraceListener
com.google.android.gms.internal.measurement.zzci$zza: com.google.android.gms.internal.measurement.zzid zzc
com.horcrux.svg.R$id: int react_test_id
okhttp3.internal.huc.OutputStreamRequestBody$1: void write(byte[],int,int)
org.jitsi.meet.sdk.AudioModeModule$1
org.jitsi.meet.sdk.R$attr: int dialogCornerRadius
com.horcrux.svg.VirtualView: android.graphics.Path mClipRegionPath
okhttp3.internal.http2.Http2Connection$5: void execute()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])
org.jitsi.meet.R$styleable: int AppCompatTheme_viewInflaterClass
okhttp3.internal.http2.Http2Codec: java.lang.String TRANSFER_ENCODING
org.webrtc.HardwareVideoDecoderFactory: org.webrtc.VideoCodecInfo[] getSupportedCodecs()
org.jitsi.meet.R$attr: int autoSizeMinTextSize
org.webrtc.DataChannel$State: org.webrtc.DataChannel$State[] values()
org.webrtc.RendererCommon$VideoLayoutMeasure: android.graphics.Point measure(int,int,int,int)
org.jitsi.meet.sdk.JitsiMeetActivityDelegate: void requestPermissions(android.app.Activity,java.lang.String[],int,com.facebook.react.modules.core.PermissionListener)
okhttp3.internal.http2.Http2: byte FLAG_PRIORITY
okhttp3.JavaNetCookieJar: java.net.CookieHandler cookieHandler
org.webrtc.voiceengine.WebRtcAudioUtils: boolean deviceIsBlacklistedForOpenSLESUsage()
org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate: org.webrtc.NetworkMonitorAutoDetect$NetworkState getNetworkState(android.net.Network)
com.horcrux.svg.R$dimen: int abc_text_size_small_material
com.horcrux.svg.RenderableViewManager$MaskManager
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.internal.connection.StreamAllocation streamAllocation
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.HttpCodec httpStream()
com.horcrux.svg.R$styleable: int RecycleListView_paddingTopNoTitle
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
org.webrtc.VideoEncoder$Capabilities
org.webrtc.PeerConnection: org.webrtc.DataChannel nativeCreateDataChannel(java.lang.String,org.webrtc.DataChannel$Init)
com.facebook.react.bridge.DynamicFromMap: boolean asBoolean()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
com.facebook.react.devsupport.DevServerHelper$6: void onFailure(okhttp3.Call,java.io.IOException)
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setScrollEnabled(boolean)
okhttp3.CookieJar$1: java.util.List loadForRequest(okhttp3.HttpUrl)
okhttp3.HttpUrl$Builder: void removeAllCanonicalQueryParameters(java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontFamily(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
org.jitsi.meet.sdk.R$raw: int lang_languagesengb
org.jitsi.meet.sdk.BroadcastEvent
org.webrtc.DefaultVideoDecoderFactory: org.webrtc.VideoDecoder createDecoder(org.webrtc.VideoCodecInfo)
com.horcrux.svg.TextProperties$FontWeight: com.horcrux.svg.TextProperties$FontWeight[] values()
com.horcrux.svg.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
org.webrtc.audio.WebRtcAudioRecord: java.lang.String TAG
com.horcrux.svg.R$string: int abc_action_bar_home_description
org.jitsi.meet.R$attr: int srcCompat
com.facebook.imagepipeline.nativecode.Bitmaps: Bitmaps()
com.oney.WebRTCModule.WebRTCModule: void mediaStreamRelease(java.lang.String)
org.webrtc.VideoFrame$I420Buffer: int getStrideU()
org.jitsi.meet.sdk.R$styleable: int[] MenuItem
org.jitsi.meet.sdk.R$styleable: int SwitchCompat_android_thumb
org.webrtc.CallSessionFileRotatingLogSink
org.jitsi.meet.sdk.R$raw: int lang_languagesca
org.jitsi.meet.R$drawable: int common_google_signin_btn_text_disabled
org.jitsi.meet.R$id: int add
org.webrtc.audio.WebRtcAudioRecord$AudioRecordThread: void stopThread()
org.webrtc.CameraCapturer: void createSessionInternal(int)
org.jitsi.meet.sdk.R$attr: int actionBarTheme
com.facebook.react.ReactRootView: com.facebook.react.ReactRootView$CustomGlobalLayoutListener getCustomGlobalLayoutListener()
org.webrtc.CameraEnumerationAndroid$CaptureFormat$FramerateRange: int hashCode()
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor: java.lang.String signature
org.jitsi.meet.sdk.R$style: int Animation_AppCompat_Tooltip
com.facebook.react.devsupport.DoubleTapReloadRecognizer$1
okio.Util: java.nio.charset.Charset UTF_8
com.google.android.gms.internal.measurement.zzbv$zzd: boolean zze
com.learnium.RNDeviceInfo.RNDeviceModule: boolean isEmulatorSync()
com.facebook.react.bridge.JavaMethodWrapper$6: com.facebook.react.bridge.ReadableArray extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okio.RealBufferedSink: okio.BufferedSink writeLongLe(long)
org.webrtc.PeerConnection$SignalingState: org.webrtc.PeerConnection$SignalingState CLOSED
org.webrtc.NetworkMonitor: void access$100(org.webrtc.NetworkMonitor,org.webrtc.NetworkChangeDetector$ConnectionType)
okio.Buffer$UnsafeCursor: byte[] data
org.webrtc.EglRenderer: org.webrtc.VideoFrame pendingFrame
com.facebook.react.modules.debug.AnimationsDebugModule
org.jitsi.meet.sdk.AudioModeModule: java.util.Set availableDevices
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: okhttp3.internal.http1.Http1Codec this$0
org.jitsi.meet.R$anim: int btn_radio_to_off_mtrl_ring_outer_path_animation
okhttp3.internal.huc.DelegatingHttpsURLConnection: javax.net.ssl.HostnameVerifier getHostnameVerifier()
com.horcrux.svg.R$style: int Platform_ThemeOverlay_AppCompat_Dark
org.jitsi.meet.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removeAllEncodedQueryParameters(java.lang.String)
org.webrtc.RtpTransceiver: org.webrtc.RtpTransceiver$RtpTransceiverDirection nativeCurrentDirection(long)
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String mSignature
org.jitsi.meet.R$dimen: int compat_button_padding_horizontal_material
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()
org.jitsi.meet.R$string: int common_open_on_phone
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.internal.connection.StreamAllocation streamAllocation()
org.webrtc.Camera2Session: void start()
org.jitsi.meet.R$drawable: int abc_btn_check_material
org.jitsi.meet.sdk.R$styleable: int SearchView_queryBackground
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
org.jitsi.meet.sdk.AppInfoModule: java.lang.String NAME
org.jitsi.meet.R$style: int Platform_V25_AppCompat_Light
com.corbt.keepawake.KCKeepAwake: void activate()
okio.RealBufferedSink: okio.BufferedSink write(byte[],int,int)
org.jitsi.meet.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
org.webrtc.VideoCodecInfo: java.lang.String H264_CONSTRAINED_BASELINE_3_1
org.webrtc.audio.WebRtcAudioTrack: boolean setStreamVolume(int)
com.horcrux.svg.SvgView: com.horcrux.svg.SVGLength mbbHeight
com.facebook.common.file.FileUtils$CreateDirectoryException
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService: AudioDeviceHandlerConnectionService(android.media.AudioManager)
org.jitsi.meet.sdk.R$color: int secondary_text_disabled_material_light
com.dropbox.core.v2.teampolicies.OfficeAddInPolicy: com.dropbox.core.v2.teampolicies.OfficeAddInPolicy valueOf(java.lang.String)
androidx.fragment.app.Fragment: boolean isInLayout()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableNativeMap makeNativeMap(android.os.Bundle)
okhttp3.internal.ws.WebSocketReader: void readUntilNonControlFrame()
org.webrtc.voiceengine.WebRtcAudioEffects: void release()
org.jitsi.meet.sdk.AudioModeModule$4: int val$mode
com.facebook.react.bridge.BaseJavaModule: java.lang.String METHOD_TYPE_SYNC
org.jitsi.meet.R$attr: int titleMarginTop
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradient(com.horcrux.svg.RadialGradientView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.views.view.ReactViewGroup: int DEFAULT_BACKGROUND_COLOR
com.reactnativecommunity.webview.RNCWebViewModule: android.content.Intent getPhotoIntent()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder protocols(java.util.List)
com.horcrux.svg.R$dimen: int hint_alpha_material_light
org.webrtc.CandidatePairChangeEvent
org.jitsi.meet.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
androidx.appcompat.app.AppCompatActivity
com.horcrux.svg.R$attr: int titleTextStyle
org.webrtc.GlRectDrawer: void drawYuv(int[],float[],int,int,int,int,int,int)
org.webrtc.EglBase10$Context: javax.microedition.khronos.egl.EGLContext getRawContext()
androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)
com.horcrux.svg.R$color: int abc_search_url_text
com.facebook.react.views.scroll.ReactScrollViewManager: void setBottomFillColor(com.facebook.react.views.scroll.ReactScrollView,int)
org.jitsi.meet.R$color: int material_grey_300
com.facebook.react.devsupport.DevLoadingViewController: android.widget.TextView mDevLoadingView
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants LOAD_REACT_NATIVE_SO_FILE_END
org.jitsi.meet.R$layout: int select_dialog_multichoice_material
org.webrtc.HardwareVideoEncoder: java.nio.ByteBuffer[] outputBuffers
okhttp3.internal.annotations.EverythingIsNonNull
com.google.android.gms.internal.measurement.zzcd$zzg: long zzz
org.jitsi.meet.R$string: int abc_menu_function_shortcut_label
okhttp3.internal.http2.Http2Codec: java.lang.String UPGRADE
com.facebook.react.devsupport.DebugOverlayController: android.widget.FrameLayout access$000(com.facebook.react.devsupport.DebugOverlayController)
okio.Segment: boolean shared
com.horcrux.svg.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.facebook.react.bridge.ReactBridge: ReactBridge()
com.horcrux.svg.R$dimen: int abc_seekbar_track_progress_height_material
org.jitsi.meet.R$styleable: int LinearLayoutCompat_divider
androidx.fragment.app.Fragment: void performDestroy()
org.jitsi.meet.sdk.ListenerUtils$1: void run()
org.jitsi.meet.sdk.R$attr: int backgroundSplit
okhttp3.RequestBody: long contentLength()
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Display1
org.jitsi.meet.sdk.R$interpolator: R$interpolator()
com.horcrux.svg.VirtualView: java.lang.String mMask
org.webrtc.VideoFrame$TextureBuffer: org.webrtc.VideoFrame$TextureBuffer$Type getType()
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.facebook.react.bridge.CatalystInstance: boolean isDestroyed()
org.webrtc.CameraCapturer: java.lang.String cameraName
com.horcrux.svg.R$drawable: int abc_list_selector_holo_dark
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Headers getHeaders()
com.facebook.react.modules.image.ImageLoaderModule: void onHostDestroy()
org.jitsi.meet.sdk.R$styleable: int[] ActionMode
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setWebViewClient(android.webkit.WebViewClient)
okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)
org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode: org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode AUDIO_TRACK_START_STATE_MISMATCH
org.jitsi.meet.sdk.R$color: int switch_thumb_disabled_material_light
org.webrtc.voiceengine.WebRtcAudioManager: void nativeCacheAudioParameters(int,int,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int,long)
com.horcrux.svg.RenderableViewManager$DefsViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.internal.http2.Hpack$Writer: void insertIntoDynamicTable(okhttp3.internal.http2.Header)
com.horcrux.svg.R$id: int notification_main_column_container
com.facebook.react.devsupport.JSDebuggerWebSocketClient: void triggerRequestSuccess(int,java.lang.String)
org.jitsi.meet.R$raw: int node_modules_csstree_package
okhttp3.internal.http2.Huffman$Node: okhttp3.internal.http2.Huffman$Node[] children
com.facebook.react.devsupport.DevSupportManagerImpl$24$2: com.facebook.react.devsupport.DevSupportManagerImpl$24 this$1
org.webrtc.audio.JavaAudioDeviceModule: org.webrtc.audio.WebRtcAudioTrack audioOutput
org.jitsi.meet.R$style: int Widget_AppCompat_EditText
com.facebook.react.views.picker.ReactDialogPickerManager: com.facebook.react.views.picker.ReactPicker createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.R$attr: int popupWindowStyle
org.jitsi.meet.sdk.R$styleable: int ActionBar_contentInsetLeft
org.jitsi.meet.sdk.R$attr: int searchViewStyle
com.facebook.react.views.text.ReactRawTextManager: ReactRawTextManager()
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.animated.NativeAnimatedNodesManager access$000(com.facebook.react.animated.NativeAnimatedModule)
com.facebook.react.uimanager.ViewGroupManager: void updateExtraData(android.view.ViewGroup,java.lang.Object)
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
okhttp3.internal.http2.Http2: java.lang.String[] FRAME_NAMES
org.webrtc.HardwareVideoEncoder$YuvFormat$1: HardwareVideoEncoder$YuvFormat$1(java.lang.String,int)
com.facebook.react.bridge.PromiseImpl: java.lang.String STACK_FRAME_KEY_METHOD_NAME
org.devio.rn.splashscreen.SplashScreenModule: void hide()
okhttp3.internal.cache2.FileOperator
com.facebook.react.devsupport.DevLoadingViewController$1: com.facebook.react.devsupport.DevLoadingViewController this$0
org.jitsi.meet.R$color: int abc_tint_seek_thumb
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Headline
okhttp3.internal.huc.OutputStreamRequestBody$1: OutputStreamRequestBody$1(okhttp3.internal.huc.OutputStreamRequestBody,long,okio.BufferedSink)
org.webrtc.Camera2Enumerator: java.lang.String TAG
org.jitsi.meet.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
okio.Buffer: int write(java.nio.ByteBuffer)
okhttp3.internal.http2.Http2Reader
androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)
org.jitsi.meet.sdk.R$attr: int dialogTheme
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Body1
okhttp3.internal.http2.Http2Codec
okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)
com.facebook.react.views.viewpager.ReactViewPager
com.facebook.react.devsupport.JSDebuggerWebSocketClient: void closeQuietly()
com.facebook.react.bridge.ModuleSpec: ModuleSpec(javax.inject.Provider,java.lang.String)
org.jitsi.meet.R$styleable: int[] PopupWindow
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
timber.log.Timber$Tree: java.lang.String formatMessage(java.lang.String,java.lang.Object[])
org.jitsi.meet.R$dimen: int hint_alpha_material_dark
com.facebook.react.devsupport.DoubleTapReloadRecognizer$1: void run()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_RC4_128_MD5
androidx.fragment.app.DialogFragment: DialogFragment()
okio.Okio$1: java.lang.String toString()
org.webrtc.FramerateBitrateAdjuster: int getCodecConfigFramerate()
okhttp3.internal.http2.Header: okio.ByteString RESPONSE_STATUS
org.jitsi.meet.R$id: int notification_main_column
org.webrtc.RtpTransceiver$RtpTransceiverDirection: org.webrtc.RtpTransceiver$RtpTransceiverDirection INACTIVE
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_drawableLeftCompat
org.jitsi.meet.sdk.LocaleDetector
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getBootloaderSync()
okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)
okhttp3.Cookie: okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String)
org.webrtc.PeerConnection$Observer: void onRenegotiationNeeded()
com.horcrux.svg.R$id: int tag_unhandled_key_event_manager
org.webrtc.AndroidVideoDecoder: java.util.concurrent.BlockingDeque frameInfos
com.facebook.react.devsupport.DevSupportManagerImpl: java.lang.String EMOJI_FACE_WITH_NO_GOOD_GESTURE
com.facebook.react.modules.core.Timing: void initialize()
org.jitsi.meet.R$styleable: int ViewBackgroundHelper_backgroundTintMode
com.facebook.react.views.modal.ReactModalHostView: int getChildCount()
com.facebook.react.uimanager.UIManagerModule: void preComputeConstantsForViewManager(java.util.List)
com.horcrux.svg.VirtualView: void setMarkerEnd(java.lang.String)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
com.facebook.react.bridge.WritableNativeMap: void putString(java.lang.String,java.lang.String)
org.webrtc.JavaI420Buffer: org.webrtc.JavaI420Buffer wrap(int,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.lang.Runnable)
com.dropbox.core.util.IOUtil$WrappedException
org.webrtc.RtpParameters: RtpParameters(java.lang.String,org.webrtc.RtpParameters$DegradationPreference,org.webrtc.RtpParameters$Rtcp,java.util.List,java.util.List,java.util.List)
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory()
com.facebook.react.bridge.MemoryPressure
com.facebook.react.bridge.JavaScriptExecutorFactory: void startSamplingProfiler()
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.PeerConnectionFactory$Builder setVideoDecoderFactory(org.webrtc.VideoDecoderFactory)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_switchStyle
org.jitsi.meet.sdk.R$style: int Base_AlertDialog_AppCompat_Light
okio.Buffer: okio.BufferedSink writeLongLe(long)
com.horcrux.svg.R$string: int catalyst_debug_stop
com.horcrux.svg.SvgPackage: SvgPackage()
com.facebook.react.uimanager.ViewGroupManager
okhttp3.internal.http2.Http2Codec: java.util.List http2HeadersList(okhttp3.Request)
com.horcrux.svg.R$color: int abc_secondary_text_material_dark
org.webrtc.SurfaceViewRenderer: boolean enableFixedSize
com.calendarevents.CalendarEvents: void uriForCalendar(com.facebook.react.bridge.Promise)
org.webrtc.VideoCodecInfo: int hashCode()
org.jitsi.meet.sdk.BroadcastIntentHelper: android.content.Intent buildCloseChatIntent()
okhttp3.OkUrlFactory$1: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)
com.horcrux.svg.R$string: int status_bar_notification_info_overflow
org.jitsi.meet.R$attr: int actionProviderClass
org.webrtc.PeerConnectionFactory: void printStackTraces()
com.calendarevents.CalendarEvents: java.lang.String getName()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
com.facebook.react.animated.NativeAnimatedModule: com.facebook.react.uimanager.GuardedFrameCallback mAnimatedFrameCallback
okhttp3.internal.platform.AndroidPlatform: AndroidPlatform(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)
com.facebook.react.views.scroll.ReactScrollView: void setScrollEnabled(boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getAppInstanceId(com.google.android.gms.internal.measurement.zzw)
com.horcrux.svg.R$dimen: int abc_action_bar_content_inset_material
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_autoSizeTextType
com.facebook.react.devsupport.WebsocketJavaScriptExecutor: java.lang.String executeJSCall(java.lang.String,java.lang.String)
com.facebook.react.views.view.ReactViewManager: void setPointerEvents(com.facebook.react.views.view.ReactViewGroup,java.lang.String)
com.rnimmersive.RNImmersiveModule: boolean access$002(com.rnimmersive.RNImmersiveModule,boolean)
com.facebook.react.devsupport.DebugOverlayController$1: void run()
okhttp3.internal.http2.Http2Stream: void cancelStreamIfNecessary()
com.facebook.yoga.YogaNative: void jni_YGNodePrint(long)
org.webrtc.AndroidVideoDecoder
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_listPopupWindowStyle
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
okhttp3.internal.cache.DiskLruCache$Editor$1: DiskLruCache$Editor$1(okhttp3.internal.cache.DiskLruCache$Editor,okio.Sink)
org.webrtc.audio.WebRtcAudioRecord: boolean isAudioSourceMatchingRecordingSession()
org.jitsi.meet.R$dimen: int abc_action_bar_content_inset_material
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_SearchResult_Title
com.facebook.react.views.progressbar.ReactProgressBarViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState
com.horcrux.svg.R$styleable: int ViewBackgroundHelper_android_background
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetAlignItems(long,int)
org.webrtc.Camera2Session: org.webrtc.CameraSession$CreateSessionCallback access$400(org.webrtc.Camera2Session)
org.jitsi.meet.sdk.R$raw: int node_modules_csstree_node_modules_mdndata_css_atrules
com.horcrux.svg.R$styleable: int MenuItem_actionProviderClass
com.horcrux.svg.R$styleable: int[] StateListDrawable
org.jitsi.meet.sdk.R$styleable: int AppCompatTextHelper_android_drawableStart
com.calendarevents.CalendarEvents: com.facebook.react.bridge.ReactContext reactContext
org.webrtc.AndroidVideoDecoder$1
com.facebook.react.devsupport.RedBoxDialog: RedBoxDialog(android.content.Context,com.facebook.react.devsupport.interfaces.DevSupportManager,com.facebook.react.devsupport.RedBoxHandler)
okio.RealBufferedSink: java.lang.String toString()
okhttp3.internal.http2.Http2Stream$FramingSource: boolean finished
okio.GzipSource: byte SECTION_TRAILER
org.webrtc.voiceengine.WebRtcAudioTrack$ErrorCallback: void onWebRtcAudioTrackInitError(java.lang.String)
com.facebook.react.devsupport.DevSupportManagerImpl: DevSupportManagerImpl(android.content.Context,com.facebook.react.devsupport.ReactInstanceManagerDevHelper,java.lang.String,boolean,com.facebook.react.devsupport.RedBoxHandler,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,int,java.util.Map)
androidx.viewpager.widget.ViewPager: void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setOpacity(android.view.View,float)
org.webrtc.RtpParameters$DegradationPreference: org.webrtc.RtpParameters$DegradationPreference MAINTAIN_RESOLUTION
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: void onClosed(okhttp3.WebSocket,int,java.lang.String)
com.facebook.react.bridge.UIManager: void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: android.os.Looper mLooper
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService: int supportedRouteMask
com.facebook.react.views.text.ReactVirtualTextViewManager: java.lang.String getName()
org.webrtc.RtpTransceiver$RtpTransceiverInit: java.util.List getSendEncodings()
org.webrtc.PeerConnection: long nativeGetNativePeerConnection()
com.horcrux.svg.R$style: int Widget_AppCompat_Toolbar
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.CatalystInstance getCatalystInstance()
androidx.fragment.app.Fragment: boolean isHideReplaced()
org.jitsi.meet.R$attr: int lineHeight
org.jitsi.meet.sdk.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
com.facebook.react.devsupport.DevServerHelper$5: java.lang.Boolean doInBackground(java.lang.Void[])
com.zmxv.RNSound.RNSoundModule
org.jitsi.meet.sdk.R$drawable: int common_google_signin_btn_icon_dark_focused
okhttp3.internal.http.StatusLine: java.lang.String message
com.facebook.react.bridge.JavaOnlyMap$1: java.lang.String nextKey()
com.google.gson.JsonSyntaxException
org.webrtc.audio.WebRtcAudioTrack$AudioTrackThread: void run()
org.webrtc.NetworkMonitorAutoDetect$NetworkState: int getNetworkType()
okhttp3.internal.http1.Http1Codec$ChunkedSink: okio.Timeout timeout()
okhttp3.Headers$Builder: java.util.List namesAndValues
okhttp3.Cache$Entry: java.lang.String SENT_MILLIS
org.webrtc.HardwareVideoEncoderFactory: org.webrtc.Predicate codecAllowedPredicate
okhttp3.internal.http1.Http1Codec$ChunkedSource: okhttp3.internal.http1.Http1Codec this$0
com.horcrux.svg.VirtualView: android.graphics.Matrix mInvCTM
org.webrtc.Camera2Session$1
org.webrtc.FramerateBitrateAdjuster: void setTargets(int,int)
org.jitsi.meet.R$styleable: int SearchView_android_inputType
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient access$600(com.facebook.react.modules.network.NetworkingModule)
org.jitsi.meet.R$attr: int tintMode
org.webrtc.voiceengine.WebRtcAudioTrack: void nativeGetPlayoutData(int,long)
com.facebook.react.devsupport.DevServerHelper$1$3: DevServerHelper$1$3(com.facebook.react.devsupport.DevServerHelper$1)
org.webrtc.PeerConnectionFactory: void nativeShutdownInternalTracer()
okhttp3.HttpUrl: java.lang.String toString()
org.webrtc.PeerConnection$RTCConfiguration: boolean getPresumeWritableWhenFullyRelayed()
org.jitsi.meet.R$drawable: int abc_text_select_handle_right_mtrl_light
org.jitsi.meet.R$style: int AppTheme
okhttp3.HttpUrl
com.horcrux.svg.R$id: int decor_content_parent
com.facebook.react.views.text.ReactTextAnchorViewManager: void setTextAlignVertical(com.facebook.react.views.text.ReactTextView,java.lang.String)
org.jitsi.meet.sdk.R$drawable: int images_iconusers
org.jitsi.meet.sdk.R$id: int accessibility_state
androidx.appcompat.widget.AppCompatAutoCompleteTextView
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_SearchView
com.kevinresol.react_native_default_preference.RNDefaultPreferenceModule: RNDefaultPreferenceModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.http1.Http1Codec: okhttp3.Response$Builder readResponseHeaders(boolean)
com.facebook.react.modules.blob.BlobModule: java.util.Map mBlobs
org.webrtc.TimestampAligner
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder minFresh(int,java.util.concurrent.TimeUnit)
com.reactnativecommunity.webview.RNCWebViewManager: void setMediaPlaybackRequiresUserAction(android.webkit.WebView,boolean)
com.facebook.react.views.image.ReactImageView: void setResizeMethod(com.facebook.react.views.image.ImageResizeMethod)
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebViewModule getModule(com.facebook.react.bridge.ReactContext)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
com.horcrux.svg.R$styleable: int DrawerArrowToggle_arrowShaftLength
com.learnium.RNDeviceInfo.RNDeviceModule: void getMacAddress(com.facebook.react.bridge.Promise)
com.horcrux.svg.R$styleable: int SwitchCompat_thumbTintMode
org.jitsi.meet.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
okhttp3.internal.http2.Http2Codec: java.lang.String ENCODING
com.facebook.react.bridge.PerformanceCounter
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.horcrux.svg.R$id: int fitStart
com.facebook.react.uimanager.UIManagerModule: void setViewLocalData(int,java.lang.Object)
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_CLEAR_FORM_DATA
okio.Okio$1: okio.Timeout timeout()
org.jitsi.meet.sdk.R$attr: int suggestionRowLayout
org.webrtc.RtpSender: org.webrtc.MediaStreamTrack cachedTrack
org.webrtc.EglRenderer$1: org.webrtc.EglRenderer this$0
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityRole(android.view.View,java.lang.String)
org.jitsi.meet.R$styleable: int ActionMenuItemView_android_minWidth
org.jitsi.meet.sdk.JitsiMeetView: void leave()
org.webrtc.IceCandidate: boolean objectEquals(java.lang.Object,java.lang.Object)
org.webrtc.voiceengine.WebRtcAudioTrack: org.webrtc.ThreadUtils$ThreadChecker threadChecker
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Boolean allowCodecSwitching
org.jitsi.meet.sdk.R$style: int Theme_ReactNative_AppCompat_Light
com.facebook.react.uimanager.UIManagerModule: void onBatchComplete()
org.jitsi.meet.sdk.R$attr: int actionOverflowButtonStyle
com.zmxv.RNSound.RNSoundModule: void setOnPlay(boolean,java.lang.Double)
org.webrtc.SoftwareVideoEncoderFactory
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: java.lang.String access$202(org.jitsi.meet.sdk.JitsiMeetConferenceOptions,java.lang.String)
com.facebook.react.modules.core.Timing: com.facebook.react.bridge.ReactApplicationContext access$1200(com.facebook.react.modules.core.Timing)
com.horcrux.svg.VirtualView: void render(android.graphics.Canvas,android.graphics.Paint,float)
com.horcrux.svg.R$id: int select_dialog_listview
com.fasterxml.jackson.core.JsonParseException
org.webrtc.CameraCapturer: org.webrtc.CameraSession$Events access$2000(org.webrtc.CameraCapturer)
com.horcrux.svg.R$styleable: int Toolbar_title
org.webrtc.HardwareVideoEncoder: org.webrtc.MediaCodecWrapperFactory mediaCodecWrapperFactory
com.facebook.react.devsupport.ReactInstanceManagerDevHelper
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: java.lang.String getSubject()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
org.webrtc.SurfaceTextureHelper: void dispose()
com.facebook.react.bridge.JSIModuleHolder: com.facebook.react.bridge.JSIModule getJSIModule()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
okhttp3.internal.cache.DiskLruCache$2: DiskLruCache$2(okhttp3.internal.cache.DiskLruCache,okio.Sink)
com.facebook.react.views.image.ReactImageView: void setBorderColor(int)
okhttp3.internal.http2.Http2Connection$Listener
okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)
org.webrtc.RendererCommon
okhttp3.internal.connection.RealConnection: boolean isMultiplexed()
com.facebook.react.bridge.Inspector$LocalConnection: com.facebook.jni.HybridData mHybridData
com.horcrux.svg.VirtualView: double fromRelativeFast(com.horcrux.svg.SVGLength)
okhttp3.Cache$CacheRequestImpl: Cache$CacheRequestImpl(okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor)
okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)
com.facebook.react.views.scroll.ReactScrollViewManager: void scrollToEnd(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData)
okhttp3.Headers: Headers(java.lang.String[])
org.webrtc.voiceengine.WebRtcAudioRecord$AudioSamples: int audioFormat
org.jitsi.meet.sdk.JitsiMeetActivityInterface: int checkSelfPermission(java.lang.String)
org.webrtc.audio.JavaAudioDeviceModule: java.lang.Object nativeLock
com.facebook.react.devsupport.DevInternalSettings: boolean isBundleDeltasEnabled()
org.jitsi.meet.R$styleable: int ActionMode_backgroundSplit
okhttp3.ResponseBody: java.nio.charset.Charset charset()
okhttp3.internal.huc.OkHttpsURLConnection: boolean getUseCaches()
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
kotlin.KotlinNullPointerException: KotlinNullPointerException()
okhttp3.Response$Builder: okhttp3.Response networkResponse
org.jitsi.meet.sdk.R$attr: int fontProviderAuthority
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
com.horcrux.svg.RNSVGRenderableManager: void getRawResource(java.lang.String,com.facebook.react.bridge.Promise)
org.jitsi.meet.sdk.net.NAT64AddrInfo: java.lang.String hexStringToIPv6String(java.lang.String)
org.jitsi.meet.sdk.BroadcastAction$Type: java.lang.String action
okhttp3.internal.http2.Http2Stream: okio.Source getSource()
com.facebook.react.views.art.ARTSurfaceViewManager: ARTSurfaceViewManager()
org.webrtc.audio.WebRtcAudioTrack: void logMainParametersExtended()
com.facebook.react.devsupport.DebugOverlayController$1: DebugOverlayController$1(com.facebook.react.devsupport.DebugOverlayController,boolean)
org.webrtc.RTCStats: java.lang.String getType()
org.webrtc.voiceengine.WebRtcAudioTrack: int initPlayout(int,int,double)
com.learnium.RNDeviceInfo.RNDeviceModule: double getLastUpdateTimeSync()
org.webrtc.GlGenericDrawer: org.webrtc.GlGenericDrawer$ShaderCallbacks shaderCallbacks
org.webrtc.CameraCapturer$4: org.webrtc.CameraCapturer this$0
androidx.fragment.app.Fragment: void setHideReplaced(boolean)
org.jitsi.meet.R$styleable: int SimpleDraweeView_roundAsCircle
com.facebook.react.views.art.ARTRenderableViewManager: void updateExtraData(android.view.View,java.lang.Object)
okhttp3.internal.cache2.Relay: void writeHeader(okio.ByteString,long,long)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
org.jitsi.meet.sdk.R$drawable: int notification_template_icon_bg
org.jitsi.meet.sdk.R$string: int ongoing_notification_action_unmute
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
okhttp3.Challenge: java.lang.String scheme
org.webrtc.CameraEnumerationAndroid: java.util.ArrayList COMMON_RESOLUTIONS
com.facebook.react.modules.core.Timing: void setSendIdleEvents(boolean)
org.webrtc.SurfaceTextureHelper: void startListening(org.webrtc.VideoSink)
org.webrtc.Camera2Capturer: void createCameraSession(org.webrtc.CameraSession$CreateSessionCallback,org.webrtc.CameraSession$Events,android.content.Context,org.webrtc.SurfaceTextureHelper,java.lang.String,int,int,int)
org.webrtc.NetworkChangeDetector: java.util.List getActiveNetworkList()
com.facebook.drawee.view.SimpleDraweeView: void setImageRequest(com.facebook.imagepipeline.request.ImageRequest)
com.horcrux.svg.RenderableViewManager$MarkerManager: void setAlign(com.horcrux.svg.MarkerView,java.lang.String)
org.webrtc.PeerConnection$IceServer: boolean equals(java.lang.Object)
com.google.android.gms.internal.measurement.zzca$zzb: com.google.android.gms.internal.measurement.zzjp zzn
org.jitsi.meet.sdk.AudioModeModule: java.lang.String DEVICE_EARPIECE
org.jitsi.meet.R$anim: int fragment_close_exit
org.webrtc.ThreadUtils$4: java.lang.Object call()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_CompoundButton_RadioButton
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Spinner
com.facebook.react.ReactRootView: java.lang.String getJSModuleName()
com.facebook.react.bridge.JavaOnlyMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Integer getScreencastMinBitrate()
org.webrtc.NV21Buffer: void retain()
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetDisplay(long,int)
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: void start(org.jitsi.meet.sdk.AudioModeModule)
org.webrtc.CameraCapturer: int access$2400(org.webrtc.CameraCapturer)
org.jitsi.meet.R$attr: int trackTintMode
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder: void nativePinBitmap(android.graphics.Bitmap)
okhttp3.EventListener: okhttp3.EventListener NONE
okhttp3.RealCall: okio.Timeout timeout()
com.horcrux.svg.R$id: int top
com.facebook.common.util.TriState: com.facebook.common.util.TriState valueOf(java.lang.String)
com.facebook.react.devsupport.DevServerHelper: void disableDebugger()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,java.lang.Integer)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_PROMISE
com.facebook.react.bridge.queue.MessageQueueThreadImpl: boolean mIsFinished
com.horcrux.svg.RenderableViewManager$GroupViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.jitsi.meet.R$id: int right_side
com.horcrux.svg.R$color: int secondary_text_disabled_material_dark
com.facebook.react.devsupport.RedBoxDialog$StackAdapter: int getCount()
com.facebook.react.bridge.JavaOnlyMap: java.lang.String getString(java.lang.String)
org.jitsi.meet.R$styleable: int RecycleListView_paddingBottomNoButtons
org.webrtc.LibvpxVp8Encoder: LibvpxVp8Encoder()
com.facebook.react.bridge.BaseActivityEventListener: void onNewIntent(android.content.Intent)
com.facebook.react.bridge.PromiseImpl: void reject(java.lang.String,java.lang.Throwable)
com.facebook.react.modules.toast.ToastModule: ToastModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.ConnectionPool$1: okhttp3.ConnectionPool this$0
com.horcrux.svg.R$layout: int abc_search_dropdown_item_icons_2line
okhttp3.MediaType: int hashCode()
org.webrtc.NetworkChangeDetector$NetworkInformation: java.lang.String getName()
okhttp3.EventListener$Factory
org.jitsi.meet.sdk.OngoingConferenceTracker$OngoingConferenceListener
okhttp3.internal.connection.StreamAllocation: okhttp3.Route route()
androidx.versionedparcelable.VersionedParcel$ParcelException
com.facebook.react.views.text.ReactTextShadowNode
org.webrtc.SurfaceTextureHelper$1
okhttp3.internal.huc.DelegatingHttpsURLConnection: void addRequestProperty(java.lang.String,java.lang.String)
org.webrtc.CameraCapturer$5: org.webrtc.CameraCapturer this$0
org.webrtc.VideoSource$1
com.horcrux.svg.R$dimen: int abc_disabled_alpha_material_dark
org.webrtc.EncodedImage$Builder: org.webrtc.EncodedImage$Builder setRotation(int)
okhttp3.internal.huc.OkHttpsURLConnection: java.util.Map getHeaderFields()
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String getName()
org.jitsi.meet.R$drawable: int abc_popup_background_mtrl_mult
org.webrtc.NetworkChangeDetector$ConnectionType: org.webrtc.NetworkChangeDetector$ConnectionType CONNECTION_WIFI
org.webrtc.NetworkChangeDetector$IPAddress: NetworkChangeDetector$IPAddress(byte[])
okhttp3.Request$Builder: okhttp3.Request$Builder cacheControl(okhttp3.CacheControl)
okhttp3.internal.ws.WebSocketReader: void readHeader()
org.webrtc.PeerConnectionFactory: void nativeInitializeInternalTracer()
com.horcrux.svg.R$string: int catalyst_heap_capture
com.reactnativecommunity.webview.RNCWebViewModule: void startPhotoPickerIntent(android.webkit.ValueCallback,java.lang.String)
org.jitsi.meet.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
org.jitsi.meet.R$attr: int borderlessButtonStyle
org.webrtc.Histogram: org.webrtc.Histogram createCounts(java.lang.String,int,int,int)
org.jitsi.meet.sdk.R$attr: int roundBottomEnd
org.webrtc.VideoFrame: long getTimestampNs()
org.jitsi.meet.R$styleable: int TextAppearance_android_shadowColor
org.jitsi.meet.sdk.R$style: int Platform_ThemeOverlay_AppCompat
com.facebook.react.views.image.ReactImageView: void setBlurRadius(float)
com.horcrux.svg.RenderableViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
org.jitsi.meet.sdk.R$layout: int activity_jitsi_meet
androidx.fragment.app.FragmentActivity: int MAX_NUM_PENDING_FRAGMENT_ACTIVITY_RESULTS
org.jitsi.meet.R$drawable: int abc_scrubber_control_off_mtrl_alpha
org.webrtc.Camera1Session: org.webrtc.CameraEnumerationAndroid$CaptureFormat access$800(org.webrtc.Camera1Session)
org.jitsi.meet.sdk.R$styleable: int ActionMode_backgroundSplit
org.webrtc.audio.WebRtcAudioManager: android.media.AudioManager getAudioManager(android.content.Context)
okhttp3.MultipartBody: MultipartBody(okio.ByteString,okhttp3.MediaType,java.util.List)
com.horcrux.svg.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
com.horcrux.svg.R$string: int abc_shareactionprovider_share_with
com.facebook.react.bridge.Inspector: java.util.List getPages()
androidx.core.graphics.drawable.IconCompat
com.facebook.react.views.switchview.ReactSwitchManager: java.lang.Class getShadowNodeClass()
com.oney.WebRTCModule.WebRTCModule: org.webrtc.PeerConnection$IceServer createIceServer(java.lang.String,java.lang.String,java.lang.String)
com.kevinresol.react_native_default_preference.RNDefaultPreferenceModule: void clearAll(com.facebook.react.bridge.Promise)
org.webrtc.RefCountDelegate: void retain()
com.horcrux.svg.R$styleable: int ActionBar_contentInsetEndWithActions
com.horcrux.svg.R$styleable: int ActionBar_icon
com.facebook.react.bridge.ReactContext: void onHostResume(android.app.Activity)
okhttp3.internal.http2.Http2Codec: okhttp3.Interceptor$Chain chain
com.facebook.react.views.view.ReactViewManager: void removeAllViews(com.facebook.react.views.view.ReactViewGroup)
org.webrtc.VideoFileRenderer: org.webrtc.YuvConverter access$102(org.webrtc.VideoFileRenderer,org.webrtc.YuvConverter)
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] values()
org.jitsi.meet.R$id: int accessibility_custom_action_25
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getHeaderField(int)
org.jitsi.meet.R$styleable: int MenuView_subMenuArrow
com.horcrux.svg.R$styleable: int AppCompatTheme_colorBackgroundFloating
com.calendarevents.CalendarEvents
okhttp3.Cache$Entry: long receivedResponseMillis
org.webrtc.NativeAndroidVideoTrackSource: void setIsScreencast(boolean)
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_RatingBar
com.facebook.react.views.textinput.ReactTextInputManager: void setInlineImageLeft(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
okhttp3.internal.http2.Http2Connection: void close(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode)
okio.GzipSink: void updateCrc(okio.Buffer,long)
com.facebook.react.devsupport.DevServerHelper: java.lang.String createBundleURL(java.lang.String,com.facebook.react.devsupport.DevServerHelper$BundleType)
com.facebook.react.devsupport.RedBoxHandler$ErrorType: com.facebook.react.devsupport.RedBoxHandler$ErrorType NATIVE
com.horcrux.svg.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
org.webrtc.IceCandidate: boolean equals(java.lang.Object)
org.jitsi.meet.sdk.ConnectionService: void registerStartCallPromise(java.lang.String,com.facebook.react.bridge.Promise)
com.kevinresol.react_native_default_preference.RNDefaultPreferenceModule: com.facebook.react.bridge.ReactApplicationContext reactContext
org.jitsi.meet.R$dimen: int highlight_alpha_material_light
com.facebook.jni.CppSystemErrorException: CppSystemErrorException(java.lang.String,int)
org.webrtc.StatsObserver: void onComplete(org.webrtc.StatsReport[])
org.jitsi.meet.R$styleable: int StateListDrawable_android_visible
okhttp3.MediaType: java.lang.String mediaType
androidx.appcompat.widget.AppCompatTextView
org.webrtc.PeerConnection: long nativePeerConnection
com.facebook.react.views.viewpager.ReactViewPagerManager
org.jitsi.meet.R$raw: int lang_mainde
okhttp3.internal.http2.Settings: int size()
com.facebook.react.bridge.ReactMarker: void removeFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener)
com.facebook.react.bridge.NativeArray: NativeArray(com.facebook.jni.HybridData)
com.facebook.react.views.switchview.ReactSwitchManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch)
org.jitsi.meet.R$string: int catalyst_reload_button
org.jitsi.meet.R$id: int checkbox
org.webrtc.CameraCapturer$7
org.webrtc.AndroidVideoDecoder: org.webrtc.AndroidVideoDecoder$DecodedTextureMetadata renderedTextureMetadata
com.dropbox.core.v2.files.ListFolderErrorException
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: void setName(com.facebook.react.views.unimplementedview.ReactUnimplementedView,java.lang.String)
org.webrtc.PeerConnection: void nativeStopRtcEventLog()
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_fadeDuration
com.google.android.gms.internal.measurement.zzbv$zzb: com.google.android.gms.internal.measurement.zzjp zzm
org.jitsi.meet.R$styleable: int TextAppearance_textLocale
com.facebook.react.uimanager.UIManagerModule: java.util.Map mModuleConstants
com.facebook.react.devsupport.DevLoadingViewController$2: java.lang.Integer val$total
org.jitsi.meet.sdk.R$styleable: int SearchView_suggestionRowLayout
com.horcrux.svg.R$styleable: int AlertDialog_showTitle
com.facebook.react.devsupport.BundleDownloader: okhttp3.OkHttpClient mClient
com.facebook.react.bridge.CatalystInstanceImpl$Builder: com.facebook.react.bridge.JavaScriptExecutor mJSExecutor
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: org.json.JSONObject toJSON()
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarTabStyle
com.facebook.react.devsupport.DevSupportManagerImpl: int JAVA_ERROR_COOKIE
org.webrtc.RtpTransceiver: void stopStandard()
org.webrtc.RtpParameters$HeaderExtension: int id
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
com.facebook.react.animated.NativeAnimatedModule: void enqueueFrameCallback()
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String val$assetUrl
org.jitsi.meet.R$dimen
androidx.fragment.app.Fragment: void performResume()
org.jitsi.meet.sdk.R$attr: int tickMarkTintMode
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$BroadcastReceiver: JitsiMeetOngoingConferenceService$BroadcastReceiver(org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService,org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$1)
com.facebook.react.modules.core.Timing: void onCatalystInstanceDestroy()
com.facebook.react.devsupport.BundleDeltaClient$BundleDeltaJavaClient: BundleDeltaClient$BundleDeltaJavaClient(com.facebook.react.devsupport.BundleDeltaClient$1)
org.webrtc.TextureBufferImpl: org.webrtc.TextureBufferImpl applyTransformMatrix(android.graphics.Matrix,int,int)
com.horcrux.svg.R$attr: int popupTheme
org.webrtc.voiceengine.WebRtcAudioManager: boolean isCommunicationModeEnabled()
org.webrtc.CallSessionFileRotatingLogSink: CallSessionFileRotatingLogSink(java.lang.String,int,org.webrtc.Logging$Severity)
com.facebook.react.devsupport.DevInternalSettings: boolean isFpsDebugEnabled()
com.horcrux.svg.R$style: int Animation_AppCompat_DropDownUp
com.facebook.react.bridge.CatalystInstanceImpl$4: CatalystInstanceImpl$4(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.MultipartBody: okhttp3.MultipartBody$Part part(int)
com.facebook.react.devsupport.StackTraceHelper: java.util.regex.Pattern STACK_FRAME_PATTERN2
com.dropbox.core.v2.team.TeamFolderArchiveErrorException
org.webrtc.RtcCertificatePem: org.webrtc.RtcCertificatePem generateCertificate(org.webrtc.PeerConnection$KeyType,long)
org.webrtc.VideoSource$1: VideoSource$1(org.webrtc.VideoSource)
org.webrtc.SurfaceViewRenderer: java.lang.String getResourceName()
okio.HashingSink: okio.HashingSink md5(okio.Sink)
com.facebook.react.bridge.CxxModuleWrapperBase: void initialize()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle[] values()
com.facebook.react.bridge.WritableMap: void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap)
org.webrtc.RtpParameters
okio.Base64: java.lang.String encodeUrl(byte[])
com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback
com.facebook.react.modules.websocket.WebSocketModule: java.util.Map access$300(com.facebook.react.modules.websocket.WebSocketModule)
org.webrtc.CameraCapturer$4: void onCameraFreezed(java.lang.String)
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$AudioRecordErrorCallback audioRecordErrorCallback
org.webrtc.VideoCodecStatus: org.webrtc.VideoCodecStatus[] $VALUES
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ImageButton
org.webrtc.VideoFileRenderer$1
org.webrtc.audio.WebRtcAudioTrack: void nativeCacheDirectBufferAddress(long,java.nio.ByteBuffer)
org.jitsi.meet.sdk.R$attr: int hideOnContentScroll
org.jitsi.meet.sdk.R$styleable: int ActionBar_subtitleTextStyle
com.facebook.react.devsupport.DevInternalSettings: boolean isRemoteJSDebugEnabled()
org.jitsi.meet.sdk.R$style: int Theme_AppCompat
org.jitsi.meet.R$styleable: int SimpleDraweeView_roundTopLeft
com.google.android.gms.internal.measurement.zzca$zzb: com.google.android.gms.internal.measurement.zzid zzg
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityLabel(android.view.View,java.lang.String)
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor ARGUMENT_EXTRACTOR_STRING
org.webrtc.VideoFrame: void release()
okio.DeflaterSink: boolean closed
org.jitsi.meet.sdk.R$attr: int drawableRightCompat
com.facebook.react.modules.fresco.FrescoModule: void initialize()
okhttp3.internal.http1.Http1Codec$ChunkedSource: boolean hasMoreChunks
com.horcrux.svg.R$id: int right_icon
com.facebook.react.uimanager.LayoutShadowNode: void setDisplay(java.lang.String)
com.horcrux.svg.R$attr: int tickMark
okhttp3.internal.http.HttpDate$1
com.horcrux.svg.R$dimen: int abc_text_size_large_material
okio.HashingSource: okio.HashingSource hmacSha1(okio.Source,okio.ByteString)
okhttp3.internal.connection.RouteDatabase: void failed(okhttp3.Route)
com.horcrux.svg.RenderableViewManager: void setFillOpacity(com.horcrux.svg.RenderableView,float)
org.webrtc.PeerConnection$TcpCandidatePolicy
org.webrtc.EncodedImage: long getCaptureTimeNs()
okhttp3.internal.connection.StreamAllocation: int refusedStreamCount
com.facebook.react.bridge.MemoryPressure: com.facebook.react.bridge.MemoryPressure valueOf(java.lang.String)
org.jitsi.meet.R$id: int accessibility_custom_action_17
com.horcrux.svg.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
org.jitsi.meet.sdk.R$dimen: int abc_text_size_button_material
com.facebook.react.devsupport.DevServerHelper$7: void onFailure(okhttp3.Call,java.io.IOException)
org.jitsi.meet.R$style: int Widget_AppCompat_Light_ActionBar_Solid
com.facebook.react.devsupport.DevSupportManagerImpl: void setReloadOnJSChangeEnabled(boolean)
com.horcrux.svg.R$string: R$string()
com.facebook.react.bridge.ReactMarker$FabricMarkerListener: void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long)
org.jitsi.meet.sdk.PictureInPictureModule: boolean isSupported
okhttp3.Response
com.facebook.react.devsupport.DevServerHelper$1$2: void onNotification(java.lang.Object)
org.jitsi.meet.R$styleable: int Toolbar_titleTextColor
com.facebook.yoga.YogaMeasureMode
okio.Segment: void writeTo(okio.Segment,int)
com.facebook.react.bridge.JavaMethodWrapper$3: java.lang.Float extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.webrtc.EglBase$ConfigBuilder: boolean supportsPixelBuffer
com.horcrux.svg.R$drawable: int abc_ic_menu_share_mtrl_alpha
com.facebook.react.bridge.JavaMethodWrapper$5: java.lang.String extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
org.jitsi.meet.R$attr: int tint
com.horcrux.svg.SvgView: java.lang.String toDataURL()
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ActionBar_TabView
com.horcrux.svg.R$dimen: int abc_action_bar_elevation_material
okio.Okio: boolean isAndroidGetsocknameError(java.lang.AssertionError)
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_Light
org.jitsi.meet.sdk.R$attr: int buttonBarPositiveButtonStyle
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)
okhttp3.internal.platform.Platform: void log(int,java.lang.String,java.lang.Throwable)
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String ERROR_INVALID_ACTIVITY
org.jitsi.meet.R$styleable: int SwitchCompat_track
org.webrtc.CryptoOptions$Builder: org.webrtc.CryptoOptions$Builder setRequireFrameEncryption(boolean)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric$3: AudioDeviceHandlerGeneric$3(org.jitsi.meet.sdk.AudioDeviceHandlerGeneric,int)
org.jitsi.meet.R$styleable: int[] MenuView
org.jitsi.meet.R$styleable: int ActionBar_indeterminateProgressStyle
com.facebook.react.modules.timepicker.TimePickerDialogModule: java.lang.String ARG_IS24HOUR
org.jitsi.meet.sdk.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
com.facebook.react.views.viewpager.ReactViewPagerManager: void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.HttpUrl: java.lang.String redact()
com.dropbox.core.v2.auth.AccessError$Tag: com.dropbox.core.v2.auth.AccessError$Tag[] values()
okio.ForwardingSource: long read(okio.Buffer,long)
org.webrtc.VideoFileRenderer: org.webrtc.EglBase access$000(org.webrtc.VideoFileRenderer)
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate: org.webrtc.NetworkMonitorAutoDetect$NetworkState getNetworkState()
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: InspectorPackagerConnection$Connection(com.facebook.react.devsupport.InspectorPackagerConnection,java.lang.String)
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_lineHeight
com.facebook.react.devsupport.RedBoxDialog$4: RedBoxDialog$4(com.facebook.react.devsupport.RedBoxDialog)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String getResponseMessage()
com.facebook.react.devsupport.DevLoadingViewController: void showForUrl(java.lang.String)
okio.Source: void close()
org.jitsi.meet.sdk.R$id: int blocking
com.horcrux.svg.EllipseView: void setRy(com.facebook.react.bridge.Dynamic)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void setStyle(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String)
com.facebook.react.bridge.WritableArray
okhttp3.internal.http.HttpHeaders: java.util.Set varyFields(okhttp3.Headers)
org.jitsi.meet.sdk.R$integer: int react_native_inspector_proxy_port
okio.SegmentedByteString: SegmentedByteString(okio.Buffer,int)
org.webrtc.voiceengine.WebRtcAudioTrack: void logMainParameters()
org.webrtc.audio.WebRtcAudioRecord: int getBytesPerSample(int)
org.webrtc.voiceengine.BuildInfo: java.lang.String getDeviceManufacturer()
com.horcrux.svg.R$id: int edit_query
androidx.viewpager.widget.ViewPager: void setOffscreenPageLimit(int)
okhttp3.FormBody$Builder
org.webrtc.RTCStats: void appendValue(java.lang.StringBuilder,java.lang.Object)
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.String mName
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
com.facebook.react.devsupport.DevSupportManagerImpl$16: com.facebook.react.devsupport.interfaces.DevOptionHandler[] val$optionHandlers
com.horcrux.svg.R$id: int buttonPanel
okio.Timeout: long timeoutNanos
com.oney.WebRTCModule.WebRTCModule: void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap)
org.jitsi.meet.sdk.R$string: int catalyst_copy_button
org.webrtc.CameraVideoCapturer$CameraEventsHandler: void onFirstFrameAvailable()
okio.Buffer: int selectPrefix(okio.Options,boolean)
org.webrtc.RtpTransceiver: void nativeStopInternal(long)
okhttp3.internal.cache.CacheStrategy: CacheStrategy(okhttp3.Request,okhttp3.Response)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.facebook.react.devsupport.DevSupportManagerImpl: void addCustomDevOption(java.lang.String,com.facebook.react.devsupport.interfaces.DevOptionHandler)
org.webrtc.audio.JavaAudioDeviceModule$Builder: int outputSampleRate
org.webrtc.PeerConnectionFactory: long nativeCreateAudioSource(long,org.webrtc.MediaConstraints)
com.zmxv.RNSound.RNSoundModule: void setSpeakerphoneOn(java.lang.Double,java.lang.Boolean)
com.horcrux.svg.R$drawable: int abc_ic_menu_cut_mtrl_alpha
org.webrtc.RendererCommon: float access$000(org.webrtc.RendererCommon$ScalingType)
org.webrtc.PeerConnection: void nativeCreateAnswer(org.webrtc.SdpObserver,org.webrtc.MediaConstraints)
com.facebook.react.devsupport.BundleDownloader: void downloadBundleFromURL(com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,java.io.File,java.lang.String,com.facebook.react.devsupport.BundleDownloader$BundleInfo,com.facebook.react.devsupport.BundleDeltaClient$ClientType,okhttp3.Request$Builder)
org.webrtc.NetworkMonitor: org.webrtc.NetworkChangeDetector$ConnectionType currentConnectionType
com.facebook.react.modules.core.DeviceEventManagerModule: java.lang.String getName()
org.webrtc.EglBase: void createSurface(android.graphics.SurfaceTexture)
org.jitsi.meet.sdk.R$attr: int lastBaselineToBottomHeight
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])
com.facebook.react.bridge.UIManager
org.webrtc.ScreenCapturerAndroid: org.webrtc.SurfaceTextureHelper access$000(org.webrtc.ScreenCapturerAndroid)
org.webrtc.audio.WebRtcAudioManager: int getSampleRateForApiLevel(android.media.AudioManager)
com.horcrux.svg.TextProperties$TextLengthAdjust: com.horcrux.svg.TextProperties$TextLengthAdjust valueOf(java.lang.String)
com.horcrux.svg.R$drawable: int notification_bg
org.webrtc.ThreadUtils: void checkIsOnMainThread()
org.jitsi.meet.sdk.R$attr: int font
com.facebook.react.views.slider.ReactSliderManager: void setValue(com.facebook.react.views.slider.ReactSlider,double)
okio.Segment: okio.Segment pop()
org.webrtc.RTCStatsReport: long timestampUs
org.webrtc.EncodedImage: void release()
org.jitsi.meet.sdk.R$anim: int btn_checkbox_to_checked_box_inner_merged_animation
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.facebook.react.views.scroll.ReactHorizontalScrollView: void setRemoveClippedSubviews(boolean)
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService: int access$100(java.lang.String)
okio.ByteString: char[] HEX_DIGITS
okio.AsyncTimeout$1: void write(okio.Buffer,long)
okhttp3.Headers: okhttp3.Headers$Builder newBuilder()
org.jitsi.meet.R$styleable: int[] LoadingImageView
org.jitsi.meet.sdk.R$styleable: int[] SignInButton
org.webrtc.LibvpxVp9Encoder: boolean isHardwareEncoder()
com.horcrux.svg.RenderableViewManager$PatternManager: void setVbWidth(com.horcrux.svg.PatternView,float)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String access$100()
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
com.horcrux.svg.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
com.facebook.react.devsupport.DevServerHelper$10$1
com.facebook.react.views.text.ReactBaseTextShadowNode: void setBackgroundColor(java.lang.Integer)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_PopupWindow
okhttp3.ResponseBody$1: okhttp3.MediaType contentType()
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.jitsi.meet.R$styleable: int[] ActionMenuItemView
okhttp3.internal.huc.OutputStreamRequestBody$1: okhttp3.internal.huc.OutputStreamRequestBody this$0
okhttp3.internal.huc.OutputStreamRequestBody: okio.Timeout timeout
com.horcrux.svg.RenderableViewManager$DefsViewManager: void onDropViewInstance(android.view.View)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
org.webrtc.CameraCapturer$1: void onFailure(org.webrtc.CameraSession$FailureType,java.lang.String)
org.webrtc.EglRenderer
org.webrtc.NetworkChangeDetector$NetworkInformation: org.webrtc.NetworkChangeDetector$IPAddress[] getIpAddresses()
com.horcrux.svg.R$styleable: int SwitchCompat_trackTintMode
org.webrtc.NetworkChangeDetector$IPAddress
com.horcrux.svg.RenderableViewManager$ForeignObjectManager: RenderableViewManager$ForeignObjectManager()
com.google.android.gms.internal.measurement.zzci$zza
org.jitsi.meet.sdk.R$attr: int listMenuViewStyle
org.jitsi.meet.R$layout: int abc_list_menu_item_checkbox
com.horcrux.svg.R$id: int right_side
org.webrtc.audio.WebRtcAudioTrack: void setSpeakerMute(boolean)
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$1: java.util.concurrent.atomic.AtomicInteger val$retryCount
com.horcrux.svg.R$string: int abc_menu_space_shortcut_label
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionPool(okhttp3.ConnectionPool)
com.facebook.react.views.text.ReactTextView: void setText(com.facebook.react.views.text.ReactTextUpdate)
com.horcrux.svg.RenderableViewManager: com.horcrux.svg.RenderableViewManager$MatrixDecompositionContext sMatrixDecompositionContext
com.horcrux.svg.R$attr: int iconTint
org.webrtc.AudioTrack: void setVolume(double)
com.facebook.react.devsupport.BundleDownloader$1: void onFailure(okhttp3.Call,java.io.IOException)
com.facebook.react.bridge.JavaMethodWrapper: char returnTypeToChar(java.lang.Class)
com.horcrux.svg.R$attr: int fontProviderPackage
com.learnium.RNDeviceInfo.RNDeviceModule: void getAndroidId(com.facebook.react.bridge.Promise)
androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
org.webrtc.VideoEncoder$Settings: org.webrtc.VideoEncoder$Capabilities capabilities
com.horcrux.svg.R$attr: int windowFixedWidthMinor
com.facebook.react.devsupport.DevServerHelper: void launchJSDevtools()
okhttp3.internal.http2.Http2Stream: boolean closeInternal(okhttp3.internal.http2.ErrorCode)
com.facebook.react.devsupport.DoubleTapReloadRecognizer
okhttp3.internal.http.HttpMethod: boolean redirectsWithBody(java.lang.String)
org.jitsi.meet.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
org.jitsi.meet.R$drawable: int btn_checkbox_unchecked_mtrl
com.horcrux.svg.R$id: int centerCrop
org.jitsi.meet.R$attr: int switchPadding
com.google.android.gms.internal.measurement.zzcd$zzh$zza: com.google.android.gms.internal.measurement.zzcd$zzh$zza[] values()
com.horcrux.svg.R$styleable: int AlertDialog_buttonPanelSideLayout
okhttp3.internal.connection.StreamAllocation: StreamAllocation(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.Call,okhttp3.EventListener,java.lang.Object)
com.facebook.react.devsupport.DevSupportManagerImpl$15: void onCancel(android.content.DialogInterface)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.facebook.react.views.picker.ReactPickerManager: void setColor(com.facebook.react.views.picker.ReactPicker,java.lang.Integer)
okhttp3.Authenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
org.jitsi.meet.R$attr: int roundBottomRight
com.google.android.gms.internal.measurement.zzcd$zzk: com.google.android.gms.internal.measurement.zzcd$zzk zzj
com.facebook.react.views.checkbox.ReactCheckBoxManager: java.lang.String getName()
okhttp3.internal.http2.Header: java.lang.String TARGET_AUTHORITY_UTF8
org.webrtc.SurfaceTextureHelper$FrameRefMonitor: void onNewBuffer(org.webrtc.VideoFrame$TextureBuffer)
org.jitsi.meet.R$dimen: int tooltip_y_offset_touch
org.jitsi.meet.sdk.ListenerUtils: java.util.HashMap toHashMap(com.facebook.react.bridge.ReadableMap)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder access$800(com.facebook.react.bridge.CatalystInstanceImpl)
org.webrtc.RtpReceiver: void SetObserver(org.webrtc.RtpReceiver$Observer)
com.facebook.react.modules.camera.CameraRollManager: void putPageInfo(android.database.Cursor,com.facebook.react.bridge.WritableMap,int)
okio.RealBufferedSource: java.lang.String readUtf8(long)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatus: InspectorPackagerConnection$BundleStatus(java.lang.Boolean,long)
com.facebook.react.bridge.JSIModuleRegistry: java.util.Map mModules
org.webrtc.MediaStreamTrack: boolean nativeSetEnabled(long,boolean)
androidx.fragment.app.Fragment: void onPictureInPictureModeChanged(boolean)
org.webrtc.HardwareVideoEncoderFactory: boolean isMediaCodecAllowed(android.media.MediaCodecInfo)
androidx.viewpager.widget.ViewPager: void setPageMargin(int)
com.horcrux.svg.RenderableView: void setupPaint(android.graphics.Paint,float,com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_Dialog_Alert
org.jitsi.meet.R$color: int primary_text_default_material_dark
com.learnium.RNDeviceInfo.RNDeviceModule: double getFreeDiskStorageOldSync()
com.horcrux.svg.VirtualView: android.graphics.RectF mStrokeBounds
okhttp3.internal.http2.Http2Connection: void close()
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ListMenuView
okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.internal.connection.StreamAllocation: void streamFailed(java.io.IOException)
com.facebook.react.uimanager.UIManagerModule: android.view.View resolveView(int)
com.facebook.react.devsupport.DevInternalSettings: void setReloadOnJSChangeEnabled(boolean)
androidx.fragment.app.Fragment: void noteStateNotSaved()
okhttp3.internal.http2.Http2Connection$Listener$1
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getName()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
org.jitsi.meet.sdk.R$id: int listMode
org.webrtc.WrappedNativeVideoEncoder: org.webrtc.VideoCodecStatus release()
com.horcrux.svg.ForeignObjectView: void setX(com.facebook.react.bridge.Dynamic)
okio.SegmentedByteString: boolean rangeEquals(int,byte[],int,int)
okhttp3.Dispatcher: java.util.Deque readyAsyncCalls
com.horcrux.svg.R$attr: int actionModeCloseButtonStyle
org.webrtc.AndroidVideoDecoder: org.webrtc.VideoFrame$I420Buffer allocateI420Buffer(int,int)
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$ContinualGatheringPolicy continualGatheringPolicy
com.facebook.react.bridge.JavaOnlyMap$1: com.facebook.react.bridge.JavaOnlyMap this$0
okio.Buffer: void readFrom(java.io.InputStream,long,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
org.jitsi.meet.sdk.ConnectionService: java.util.List getConnections()
com.facebook.react.views.image.ReactImageManager: ReactImageManager(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object)
org.jitsi.meet.R$id: int accessibility_custom_action_4
com.horcrux.svg.R$attr: int overlapAnchor
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder expiresAt(long)
com.facebook.react.devsupport.interfaces.StackFrame: int getLine()
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetMargin(long,int)
com.reactnativecommunity.webview.RNCWebViewModule: java.lang.String MODULE_NAME
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.DevServerHelper mDevServerHelper
org.webrtc.MediaCodecWrapperFactoryImpl: org.webrtc.MediaCodecWrapper createByCodecName(java.lang.String)
org.jitsi.meet.R$attr: int titleTextColor
com.facebook.react.devsupport.DevSupportManagerImpl: java.lang.String getReloadAppAction(android.content.Context)
org.webrtc.DataChannel$Observer
com.facebook.react.devsupport.DevServerHelper$1$4
org.webrtc.PeerConnection$TcpCandidatePolicy: org.webrtc.PeerConnection$TcpCandidatePolicy[] $VALUES
com.facebook.react.views.scroll.ReactScrollViewManager: void setScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean)
co.apptailor.googlesignin.RNGoogleSigninModule: void startTokenRetrievalTaskWithRecovery(com.google.android.gms.auth.api.signin.GoogleSignInAccount)
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeCloseDrawable
com.facebook.react.bridge.UiThreadUtil: android.os.Handler sMainHandler
org.webrtc.PeerConnection$IceServer: PeerConnection$IceServer(java.lang.String)
com.dropbox.core.v2.sharing.RevokeSharedLinkErrorException
org.jitsi.meet.sdk.R$attr: int contentInsetEnd
org.jitsi.meet.sdk.R$drawable: int images_avatar
okhttp3.internal.cache.DiskLruCache$2: void onException(java.io.IOException)
org.webrtc.ThreadUtils$BlockingOperation
org.webrtc.PeerConnectionFactory: java.lang.String TAG
org.jitsi.meet.R$drawable: int abc_ic_arrow_drop_right_black_24dp
com.facebook.react.bridge.WritableArray: void pushString(java.lang.String)
com.horcrux.svg.R$string: int alert_description
com.oney.WebRTCModule.WebRTCModule: void dataChannelCloseAsync(int,int)
com.facebook.react.bridge.JavaOnlyArray: void pushNull()
com.facebook.react.bridge.JavaScriptExecutor: void close()
okhttp3.internal.http2.Http2Connection$2
org.jitsi.meet.sdk.R$color: int switch_thumb_normal_material_light
okio.Okio$1: Okio$1(okio.Timeout,java.io.OutputStream)
com.horcrux.svg.SvgView: void defineMask(com.horcrux.svg.VirtualView,java.lang.String)
com.google.android.gms.dynamic.RemoteCreator$RemoteCreatorException
com.reactnativecommunity.webview.RNCWebViewModule: RNCWebViewModule(com.facebook.react.bridge.ReactApplicationContext)
okhttp3.internal.Util: Util()
org.jitsi.meet.sdk.R$integer
com.learnium.RNDeviceInfo.RNDeviceModule: void getBuildId(com.facebook.react.bridge.Promise)
org.jitsi.meet.R$style: int Base_ThemeOverlay_AppCompat_Dark
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager: java.lang.String REACT_CLASS
com.facebook.react.devsupport.BundleDeltaClient$ClientType: com.facebook.react.devsupport.BundleDeltaClient$ClientType valueOf(java.lang.String)
org.jitsi.meet.sdk.BroadcastAction$Type: java.lang.String getAction()
org.jitsi.meet.sdk.RNConnectionService$CallAudioStateListener
org.webrtc.TimestampAligner: long translateTimestamp(long)
com.facebook.react.modules.network.NetworkingModule: okhttp3.OkHttpClient mClient
com.horcrux.svg.R$string: int abc_menu_enter_shortcut_label
org.webrtc.Logging$TraceLevel: org.webrtc.Logging$TraceLevel TRACE_TERSEINFO
com.horcrux.svg.RenderableViewManager$GroupViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okhttp3.internal.http2.Http2Connection$Builder
org.jitsi.meet.R$color: int abc_tint_spinner
org.jitsi.meet.sdk.R$anim: int btn_radio_to_on_mtrl_ring_outer_animation
com.facebook.yoga.YogaNative: long jni_YGNodeStyleGetPosition(long,int)
com.dropbox.core.v2.team.GroupCreateErrorException
org.jitsi.meet.sdk.AppInfoModule: java.lang.String getName()
okhttp3.Cookie: boolean httpOnly()
org.webrtc.MediaConstraints: java.lang.String stringifyKeyValuePairList(java.util.List)
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setProgressViewOffset(float)
org.jitsi.meet.sdk.R$attr: int actionBarPopupTheme
okio.RealBufferedSource: boolean isOpen()
com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener: void onPackagerDevMenuCommand()
com.facebook.react.modules.storage.AsyncStorageModule: AsyncStorageModule(com.facebook.react.bridge.ReactApplicationContext,java.util.concurrent.Executor)
org.webrtc.PeerConnection: boolean removeIceCandidates(org.webrtc.IceCandidate[])
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.lang.String)
org.webrtc.CameraCapturer: org.webrtc.CameraVideoCapturer$CameraSwitchHandler switchEventsHandler
org.webrtc.SurfaceEglRenderer: void surfaceDestroyed(android.view.SurfaceHolder)
org.jitsi.meet.R$attr: int autoSizePresetSizes
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_roundingBorderWidth
org.jitsi.meet.sdk.R$style: int Platform_V25_AppCompat
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.reflect.Method getMethod
com.facebook.drawee.view.DraweeView: void setImageDrawable(android.graphics.drawable.Drawable)
org.jitsi.meet.R$dimen: int notification_large_icon_width
org.webrtc.HardwareVideoEncoder: boolean canUseSurface()
org.webrtc.CryptoOptions$Srtp: boolean getEnableAes128Sha1_32CryptoCipher()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType PT
com.facebook.react.uimanager.UIManagerModule: void measure(int,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener: void onTraceStopped()
androidx.fragment.app.Fragment: boolean mPerformedCreateView
com.facebook.react.views.art.ARTShapeViewManager: ARTShapeViewManager()
timber.log.Timber$Tree: java.lang.ThreadLocal explicitTag
org.webrtc.FileVideoCapturer: void dispose()
com.facebook.react.bridge.WritableMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
okhttp3.internal.connection.RealConnection: okio.BufferedSink sink
org.webrtc.PeerConnection$Observer: void onTrack(org.webrtc.RtpTransceiver)
okhttp3.WebSocket
com.horcrux.svg.RenderableViewManager$TextViewManager: void setRotate(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
com.horcrux.svg.RenderableView: android.graphics.Paint$Join strokeLinejoin
org.webrtc.NetworkMonitor: void addNetworkObserver(org.webrtc.NetworkMonitor$NetworkObserver)
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_progressBarImage
org.jitsi.meet.R$styleable: int AnimatedStateListDrawableCompat_android_dither
okio.Buffer: okio.Buffer writeUtf8(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
com.horcrux.svg.R$styleable: int View_android_theme
com.horcrux.svg.R$string: int catalyst_hot_reloading_auto_enable
okio.InflaterSource: InflaterSource(okio.BufferedSource,java.util.zip.Inflater)
org.webrtc.VideoDecoderFallback: long createNativeVideoDecoder()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder setType(okhttp3.MediaType)
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void incrementPendingJSCalls()
org.webrtc.TimestampAligner: void checkNativeAlignerExists()
com.facebook.react.modules.network.NetworkingModule: void access$500(com.facebook.react.modules.network.NetworkingModule,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants ON_HOST_PAUSE_START
com.horcrux.svg.RenderableViewManager$DefsViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.tls.BasicCertificateChainCleaner: int hashCode()
com.horcrux.svg.R$attr: int subMenuArrow
okio.ByteString: okio.ByteString substring(int,int)
org.jitsi.meet.R$attr: int progressBarStyle
org.jitsi.meet.sdk.R$attr: int actionBarDivider
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinHeight(long,float)
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar
com.facebook.react.bridge.SoftAssertions: SoftAssertions()
org.webrtc.EglBase: java.lang.Object lock
com.horcrux.svg.R$styleable: int ViewStubCompat_android_layout
com.facebook.react.devsupport.DevServerHelper$1$4: void onConnected()
org.webrtc.audio.VolumeLogger: java.util.Timer timer
com.horcrux.svg.R$dimen: int abc_seekbar_track_background_height_material
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String GRANTED
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_PING
org.webrtc.DefaultVideoEncoderFactory: org.webrtc.VideoEncoderFactory softwareVideoEncoderFactory
org.jitsi.meet.sdk.R$id: int view_tag_native_id
com.facebook.react.bridge.CatalystInstance: void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
com.horcrux.svg.R$attr: int preserveIconSpacing
com.facebook.react.bridge.CatalystInstanceImpl: boolean hasNativeModule(java.lang.Class)
com.facebook.react.bridge.JavaOnlyArray: boolean isNull(int)
org.webrtc.EncodedImage
com.horcrux.svg.RenderableViewManager: void setFill(com.horcrux.svg.RenderableView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: com.facebook.react.bridge.CatalystInstanceImpl this$0
okio.DeflaterSink: void close()
com.facebook.react.modules.core.Timing: com.facebook.react.modules.core.Timing$IdleCallbackRunnable access$1100(com.facebook.react.modules.core.Timing)
okio.ByteString: okio.ByteString encodeString(java.lang.String,java.nio.charset.Charset)
org.jitsi.meet.R$style: int Base_Widget_AppCompat_RatingBar
org.webrtc.PeerConnection$RTCConfiguration: java.lang.Integer iceUnwritableTimeMs
com.horcrux.svg.RenderableViewManager: com.horcrux.svg.RenderableView getRenderableViewByTag(int)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder setUserInfo(org.jitsi.meet.sdk.JitsiMeetUserInfo)
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
com.reactnativecommunity.webview.RNCWebViewManager: void setDomStorageEnabled(android.webkit.WebView,boolean)
okio.ByteString: java.lang.String utf8
okhttp3.internal.huc.StreamedRequestBody: StreamedRequestBody(long)
org.webrtc.GlGenericDrawer: java.nio.FloatBuffer FULL_RECTANGLE_BUFFER
org.jitsi.meet.R$styleable: int FontFamily_fontProviderCerts
com.facebook.drawee.view.DraweeView: void setLegacyVisibilityHandlingEnabled(boolean)
org.jitsi.meet.R$styleable: int AppCompatTheme_windowNoTitle
com.dropbox.core.v2.sharing.SharingUserErrorException
com.facebook.react.bridge.JSBundleLoader
org.webrtc.voiceengine.WebRtcAudioEffects: boolean isNoiseSuppressorSupported()
com.facebook.react.devsupport.JSDebuggerWebSocketClient: void onClosed(okhttp3.WebSocket,int,java.lang.String)
org.webrtc.SurfaceTextureHelper$1: org.webrtc.YuvConverter val$yuvConverter
org.jitsi.meet.sdk.RNConnectionService: void setAudioRoute(int)
org.webrtc.TextureBufferImpl$2: org.webrtc.TextureBufferImpl this$0
okhttp3.internal.http2.Http2Connection: boolean pushedStream(int)
com.horcrux.svg.R$styleable: int[] AnimatedStateListDrawableTransition
com.horcrux.svg.R$layout: int notification_template_part_time
com.facebook.react.uimanager.UIManagerModule: void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback)
com.facebook.react.views.view.ReactViewGroup
org.webrtc.GlTextureFrameBuffer: int getFrameBufferId()
org.jitsi.meet.R$attr: int actionLayout
org.webrtc.VideoFrame$TextureBuffer$Type: org.webrtc.VideoFrame$TextureBuffer$Type[] $VALUES
org.jitsi.meet.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
okhttp3.internal.ws.WebSocketWriter: okio.Buffer buffer
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_placeholderImageScaleType
com.facebook.react.views.view.ReactViewGroup: boolean mNeedsOffscreenAlphaCompositing
org.jitsi.meet.R$raw: int lang_languagesfr
org.webrtc.EglRenderer: void clearSurfaceOnRenderThread(float,float,float,float)
org.webrtc.SurfaceViewRenderer: org.webrtc.RendererCommon$VideoLayoutMeasure videoLayoutMeasure
com.horcrux.svg.ElementType: com.horcrux.svg.ElementType valueOf(java.lang.String)
org.webrtc.CameraCapturer: boolean isScreencast()
org.webrtc.voiceengine.WebRtcAudioTrack: int getStreamMaxVolume()
com.facebook.react.bridge.WritableNativeArray: void pushBoolean(boolean)
org.webrtc.audio.WebRtcAudioEffects: boolean setAEC(boolean)
org.webrtc.PeerConnection: org.webrtc.SessionDescription getLocalDescription()
com.horcrux.svg.R$dimen: int notification_media_narrow_margin
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.DevLoadingViewController access$1900(com.facebook.react.devsupport.DevSupportManagerImpl)
org.webrtc.VideoFileRenderer: org.webrtc.YuvConverter yuvConverter
org.jitsi.meet.sdk.log.JitsiMeetLogger: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.horcrux.svg.R$attr: int hideOnContentScroll
org.webrtc.PeerConnection: boolean nativeRemoveTrack(long)
com.facebook.react.bridge.JSIModuleHolder
org.jitsi.meet.R$id: int alertTitle
org.webrtc.Histogram
com.facebook.react.bridge.FallbackJSBundleLoader: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
org.webrtc.Camera2Session: org.webrtc.Camera2Session$SessionState state
org.webrtc.Camera2Capturer: void stopCapture()
com.facebook.react.views.textinput.ReactTextInputManager: int[] SPACING_TYPES
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Object)
org.webrtc.Camera2Session: org.webrtc.Camera2Session$SessionState access$200(org.webrtc.Camera2Session)
com.facebook.react.views.progressbar.ReactProgressBarViewManager: void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView)
org.webrtc.HardwareVideoEncoderFactory: HardwareVideoEncoderFactory(boolean,boolean)
com.horcrux.svg.ImageView: void setY(com.facebook.react.bridge.Dynamic)
com.dropbox.core.v2.sharing.GetFileMetadataErrorException
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_INITIALIZE_START
org.jitsi.meet.R$styleable: int View_paddingStart
com.facebook.react.views.view.ReactViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
org.webrtc.EglRenderer: void init(org.webrtc.EglBase$Context,int[],org.webrtc.RendererCommon$GlDrawer,boolean)
org.webrtc.audio.WebRtcAudioTrack: int getBufferSizeInFrames()
com.horcrux.svg.R$id: int expanded_menu
org.webrtc.Camera2Session: org.webrtc.SurfaceTextureHelper surfaceTextureHelper
com.horcrux.svg.R$styleable: int AppCompatImageView_srcCompat
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Medium
com.facebook.react.views.textinput.ReactTextInputManager: void setMostRecentEventCount(com.facebook.react.views.textinput.ReactEditText,int)
com.facebook.react.devsupport.DevLoadingViewController$2: java.lang.String val$status
org.webrtc.PeerConnection$RTCConfiguration: boolean getDisableIPv6OnWifi()
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate: void requestMobileNetwork(android.net.ConnectivityManager$NetworkCallback)
org.webrtc.VideoProcessor: void setSink(org.webrtc.VideoSink)
okhttp3.internal.http2.Http2Codec: okhttp3.Response$Builder readResponseHeaders(boolean)
org.jitsi.meet.sdk.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
okhttp3.internal.cache.DiskLruCache: void trimToSize()
okhttp3.internal.http2.Http2Codec: java.lang.String PROXY_CONNECTION
org.webrtc.PeerConnection$PeerConnectionState: org.webrtc.PeerConnection$PeerConnectionState fromNativeIndex(int)
org.jitsi.meet.sdk.R$attr: int fontWeight
com.facebook.react.bridge.JsonWriterHelper: void objectValue(android.util.JsonWriter,java.lang.Object)
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService: boolean access$200(org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService)
okhttp3.internal.huc.OkHttpURLConnection: void setInstanceFollowRedirects(boolean)
org.jitsi.meet.R$id: int search_src_text
com.horcrux.svg.R$style: int Animation_AppCompat_Tooltip
org.jitsi.meet.sdk.AudioModeModule
okio.DeflaterSink: void deflate(boolean)
com.facebook.react.devsupport.DevServerHelper: java.lang.String getJSBundleURLForRemoteDebugging(java.lang.String)
okhttp3.Response$Builder: okhttp3.Response priorResponse
com.horcrux.svg.R$attr: int showText
com.horcrux.svg.R$layout: int abc_list_menu_item_radio
com.facebook.react.bridge.JavaOnlyArray: int getInt(int)
com.horcrux.svg.R$dimen: int compat_button_inset_vertical_material
com.horcrux.svg.R$color: int material_blue_grey_900
org.jitsi.meet.sdk.R$styleable: int GradientColor_android_endX
com.facebook.react.devsupport.BundleDownloader$BundleInfo: java.lang.String getUrl()
org.webrtc.Camera1Session: void listenForTextureFrames()
com.facebook.react.bridge.DynamicFromObject: double asDouble()
org.webrtc.Logging: java.util.logging.Logger fallbackLogger
org.webrtc.VideoFrameDrawer
okhttp3.internal.http.HttpMethod
okhttp3.WebSocket: boolean send(okio.ByteString)
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: boolean setMode(int)
okhttp3.internal.ws.RealWebSocket: void onReadMessage(okio.ByteString)
org.jitsi.meet.sdk.R$styleable: int FontFamilyFont_fontWeight
okhttp3.EventListener: void secureConnectEnd(okhttp3.Call,okhttp3.Handshake)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createDeltaFromNetworkLoader(java.lang.String,com.facebook.react.bridge.NativeDeltaClient)
org.webrtc.SoftwareVideoDecoderFactory: org.webrtc.VideoCodecInfo[] getSupportedCodecs()
org.jitsi.meet.sdk.R$raw: int lang_languagesko
org.webrtc.voiceengine.WebRtcAudioManager: boolean isLowLatencyInputSupported()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_windowActionModeOverlay
org.jitsi.meet.sdk.R$drawable: int abc_ic_star_black_48dp
org.jitsi.meet.sdk.ListenerUtils$1: com.facebook.react.bridge.ReadableMap val$eventData
com.facebook.react.modules.websocket.WebSocketModule: java.lang.String getCookie(java.lang.String)
org.jitsi.meet.sdk.R$dimen: int abc_action_bar_icon_vertical_padding_material
org.jitsi.meet.R$styleable: int MenuView_android_headerBackground
org.jitsi.meet.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
org.webrtc.audio.JavaAudioDeviceModule: org.webrtc.audio.WebRtcAudioRecord audioInput
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
org.jitsi.meet.R$id: int decor_content_parent
org.webrtc.EglBase$Context
org.jitsi.meet.sdk.R$style: int Base_V26_Theme_AppCompat
com.facebook.react.devsupport.DevServerHelper: java.lang.String PACKAGER_OK_STATUS
org.webrtc.Camera2Session: android.os.Handler access$1200(org.webrtc.Camera2Session)
org.webrtc.RtpParameters: java.util.List encodings
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Header$Listener access$100(okhttp3.internal.http2.Http2Stream)
org.jitsi.meet.R$drawable: int abc_ic_clear_material
org.jitsi.meet.R$bool: int abc_allow_stacked_button_bar
org.webrtc.HardwareVideoEncoderFactory: HardwareVideoEncoderFactory(org.webrtc.EglBase$Context,boolean,boolean)
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
com.horcrux.svg.R$string: int tablist_description
okhttp3.Cache: long maxSize()
okhttp3.TlsVersion: java.lang.String javaName()
com.facebook.react.devsupport.DebugOverlayController: com.facebook.react.bridge.ReactContext access$100(com.facebook.react.devsupport.DebugOverlayController)
com.facebook.react.devsupport.DevServerHelper$1$1: void onNotification(java.lang.Object)
org.jitsi.meet.sdk.R$string: int catalyst_reload_button
okhttp3.internal.connection.RealConnection: okhttp3.ConnectionPool connectionPool
okhttp3.Address: javax.net.SocketFactory socketFactory
org.webrtc.SurfaceTextureHelper: org.webrtc.TextureBufferImpl$RefCountMonitor textureRefCountMonitor
com.horcrux.svg.R$styleable: int ActionBar_displayOptions
com.horcrux.svg.ImageView
org.webrtc.VideoDecoderFallback: org.webrtc.VideoDecoder primary
org.webrtc.PeerConnection$PortPrunePolicy: org.webrtc.PeerConnection$PortPrunePolicy NO_PRUNE
com.dropbox.core.v2.teampolicies.SharedFolderJoinPolicy: com.dropbox.core.v2.teampolicies.SharedFolderJoinPolicy valueOf(java.lang.String)
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_failureImageScaleType
com.horcrux.svg.R$attr: int backgroundStacked
com.facebook.react.uimanager.UIManagerModule: java.util.Map mCustomDirectEvents
org.webrtc.PeerConnection: boolean addStream(org.webrtc.MediaStream)
okhttp3.internal.http2.Http2Connection$1: okhttp3.internal.http2.ErrorCode val$errorCode
com.facebook.react.devsupport.InspectorPackagerConnection$1: com.facebook.react.devsupport.InspectorPackagerConnection this$0
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void invalidate()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Button_Borderless_Colored
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_alertDialogStyle
org.webrtc.EglBase10Impl: void release()
org.webrtc.PeerConnection$PeerConnectionState: org.webrtc.PeerConnection$PeerConnectionState[] $VALUES
org.webrtc.PeerConnection: long nativeCreatePeerConnectionObserver(org.webrtc.PeerConnection$Observer)
org.jitsi.meet.R$styleable: int AppCompatTheme_actionModeCopyDrawable
com.horcrux.svg.R$dimen: int abc_action_button_min_height_material
org.webrtc.AndroidVideoDecoder: java.lang.String MEDIA_FORMAT_KEY_CROP_RIGHT
androidx.fragment.app.Fragment: void onDestroyOptionsMenu()
okhttp3.internal.http2.Http2Reader: void readPing(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
org.jitsi.meet.R$attr: int backgroundSplit
okhttp3.internal.http2.Http2Connection$PingRunnable: boolean reply
org.jitsi.meet.R$string: int common_google_play_services_enable_text
com.horcrux.svg.R$id: int rn_redbox_dismiss_button
org.jitsi.meet.R$drawable: int abc_btn_check_material_anim
com.facebook.react.devsupport.DevSupportManagerImpl$7: DevSupportManagerImpl$7(com.facebook.react.devsupport.DevSupportManagerImpl)
com.facebook.react.bridge.JavaMethodWrapper$7: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
org.webrtc.PeerConnectionFactory: org.webrtc.PeerConnection createPeerConnection(org.webrtc.PeerConnection$RTCConfiguration,org.webrtc.PeerConnection$Observer)
org.webrtc.PeerConnectionDependencies$Builder
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
org.jitsi.meet.sdk.R$styleable: int Toolbar_titleTextColor
com.facebook.react.views.drawer.ReactDrawerLayoutManager: void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,com.facebook.react.bridge.Dynamic)
com.facebook.react.modules.i18nmanager.I18nManagerModule: java.util.Map getConstants()
com.facebook.react.bridge.ReactContext: void runOnNativeModulesQueueThread(java.lang.Runnable)
com.horcrux.svg.R$id: int italic
com.facebook.imagepipeline.decoder.DecodeException
org.jitsi.meet.sdk.R$color: int material_grey_50
org.webrtc.Metrics$HistogramInfo: Metrics$HistogramInfo(int,int,int)
org.webrtc.NetworkMonitorAutoDetect$WifiManagerDelegate: android.content.Context context
com.horcrux.svg.R$styleable: int GradientColor_android_centerColor
com.facebook.react.devsupport.RedBoxDialog: android.widget.TextView access$300(com.facebook.react.devsupport.RedBoxDialog)
okhttp3.internal.http2.Http2Stream: void writeHeaders(java.util.List,boolean)
okhttp3.internal.Util: boolean verifyAsIpAddress(java.lang.String)
com.facebook.react.bridge.ReactMarker
okhttp3.internal.http2.Http2Connection$Builder: Http2Connection$Builder(boolean)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder setServerURL(java.net.URL)
okio.GzipSink: java.util.zip.CRC32 crc
okhttp3.HttpUrl: int querySize()
org.jitsi.meet.sdk.JitsiMeet: java.lang.String getCurrentConference()
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation: com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation[] values()
okio.Pipe: okio.Buffer buffer
okhttp3.internal.cache.CacheInterceptor: CacheInterceptor(okhttp3.internal.cache.InternalCache)
com.horcrux.svg.R$attr: int buttonGravity
com.facebook.react.modules.network.NetworkingModule: void clearCookies(com.facebook.react.bridge.Callback)
okio.SegmentPool: long byteCount
com.facebook.react.views.art.ARTShapeViewManager
com.horcrux.svg.VirtualView: android.graphics.Path getPath(android.graphics.Canvas,android.graphics.Paint)
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor
okio.Buffer: okio.BufferedSink write(byte[])
com.facebook.react.devsupport.InspectorPackagerConnection: org.json.JSONObject access$200(com.facebook.react.devsupport.InspectorPackagerConnection,java.lang.String)
com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType: com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType[] $VALUES
com.horcrux.svg.R$layout: int redbox_item_title
com.horcrux.svg.R$id: int split_action_bar
org.webrtc.PeerConnectionFactory: void checkPeerConnectionFactoryExists()
com.google.android.gms.internal.measurement.zzcd$zzi: com.google.android.gms.internal.measurement.zzid zze
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
org.webrtc.EglRenderer: void resetStatistics(long)
org.jitsi.meet.R$drawable: int common_google_signin_btn_icon_dark
com.facebook.react.devsupport.DevInternalSettings: void setRemoteJSDebugEnabled(boolean)
org.webrtc.DataChannel: boolean send(org.webrtc.DataChannel$Buffer)
org.jitsi.meet.sdk.AudioModeModule$4: void run()
com.google.firebase.dynamiclinks.internal.FirebaseDynamicLinkRegistrar
com.facebook.react.devsupport.DevServerHelper$2: DevServerHelper$2(com.facebook.react.devsupport.DevServerHelper)
okhttp3.OkHttpClient: java.util.List DEFAULT_PROTOCOLS
com.horcrux.svg.R$styleable: int SearchView_android_imeOptions
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void setGradientUnits(com.horcrux.svg.RadialGradientView,int)
com.horcrux.svg.SvgView: boolean mInvertible
com.horcrux.svg.R$color: int abc_background_cache_hint_selector_material_dark
com.horcrux.svg.R$anim
com.horcrux.svg.R$styleable: int AppCompatTheme_buttonBarStyle
org.jitsi.meet.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
com.google.android.gms.internal.measurement.zzbv$zzd: java.lang.String zzg
org.webrtc.NetworkMonitor$2
org.webrtc.ScreenCapturerAndroid: void initialize(org.webrtc.SurfaceTextureHelper,android.content.Context,org.webrtc.CapturerObserver)
com.facebook.react.fabric.FabricUIManager: void onRequestEventBeat()
org.jitsi.meet.R$styleable: int AppCompatSeekBar_android_thumb
okhttp3.internal.platform.Platform: int INFO
org.webrtc.YuvHelper: void I420Rotate(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int)
org.webrtc.VideoCodecMimeType: org.webrtc.VideoCodecMimeType VP9
okhttp3.internal.http2.Http2Connection$Listener: Http2Connection$Listener()
com.google.android.gms.auth.api.signin.SignInAccount: android.os.Parcelable$Creator CREATOR
com.facebook.react.uimanager.BaseViewManager: void setScaleX(android.view.View,float)
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date servedDate
com.facebook.react.modules.timepicker.TimePickerDialogModule: TimePickerDialogModule(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.devsupport.WindowOverlayCompat
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_256_CCM_8_SHA256
com.horcrux.svg.R$styleable: int SwitchCompat_switchMinWidth
org.webrtc.CameraEnumerator: boolean isBackFacing(java.lang.String)
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$Builder setUseHardwareNoiseSuppressor(boolean)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_HOLDER_SPEC_END
org.webrtc.voiceengine.BuildInfo: BuildInfo()
org.webrtc.PeerConnectionFactory: void nativeInitializeFieldTrials(java.lang.String)
org.webrtc.RtpSender: long getNativeRtpSender()
org.webrtc.MediaStreamTrack$State: org.webrtc.MediaStreamTrack$State valueOf(java.lang.String)
com.horcrux.svg.R$bool: int abc_config_actionMenuItemAllCaps
org.webrtc.AudioTrack
com.google.android.gms.internal.measurement.zzcd$zze: java.lang.String zzd
org.webrtc.VideoEncoder: org.webrtc.VideoCodecStatus initEncode(org.webrtc.VideoEncoder$Settings,org.webrtc.VideoEncoder$Callback)
com.horcrux.svg.RenderableViewManager: int PERSPECTIVE_ARRAY_INVERTED_CAMERA_DISTANCE_INDEX
org.jitsi.meet.R$styleable: int AppCompatTheme_windowFixedWidthMinor
com.facebook.react.modules.dialog.DialogModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.dialog.DialogModule)
okio.Pipe: okio.Source source
org.jitsi.meet.R$dimen: int notification_right_icon_size
org.jitsi.meet.R$anim: int fragment_fade_exit
com.horcrux.svg.RenderableView: com.facebook.react.bridge.ReadableArray fill
co.apptailor.googlesignin.RNGoogleSigninModule: void signInSilently(com.facebook.react.bridge.Promise)
com.facebook.react.devsupport.DevSupportManagerImpl$8: DevSupportManagerImpl$8(com.facebook.react.devsupport.DevSupportManagerImpl)
org.webrtc.SurfaceTextureHelper: boolean access$502(org.webrtc.SurfaceTextureHelper,boolean)
com.facebook.react.uimanager.LayoutShadowNode: void setPaddings(int,com.facebook.react.bridge.Dynamic)
co.apptailor.googlesignin.RNGoogleSigninModule: com.google.android.gms.auth.api.signin.GoogleSignInClient access$100(co.apptailor.googlesignin.RNGoogleSigninModule)
org.jitsi.meet.R$string: int state_mixed_description
org.jitsi.meet.sdk.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
org.webrtc.EglRenderer: EglRenderer(java.lang.String)
org.jitsi.meet.sdk.R$dimen: int tooltip_precise_anchor_threshold
com.facebook.react.devsupport.DevInternalSettings: java.lang.String PREFS_JS_DEV_MODE_DEBUG_KEY
okio.RealBufferedSink: void write(okio.Buffer,long)
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptContextHolder mJavaScriptContextHolder
com.facebook.react.uimanager.BaseViewManager: void setAccessibilityActions(android.view.View,com.facebook.react.bridge.ReadableArray)
org.webrtc.audio.JavaAudioDeviceModule$Builder: org.webrtc.audio.JavaAudioDeviceModule$Builder setAudioAttributes(android.media.AudioAttributes)
com.kevinresol.react_native_default_preference.RNDefaultPreferenceModule
okhttp3.OkHttpClient: int connectTimeoutMillis()
com.facebook.react.devsupport.DevSupportManagerImpl: void onInternalSettingsChanged()
org.webrtc.audio.WebRtcAudioRecord: boolean checkDeviceMatch(android.media.AudioDeviceInfo,android.media.AudioDeviceInfo)
com.horcrux.svg.VirtualView: boolean mResponsible
org.jitsi.meet.R$styleable: int Toolbar_collapseIcon
com.facebook.react.modules.core.JSTimers: void emitTimeDriftWarning(java.lang.String)
com.facebook.react.devsupport.DevSupportManagerImpl$24: DevSupportManagerImpl$24(com.facebook.react.devsupport.DevSupportManagerImpl,com.facebook.react.devsupport.BundleDownloader$BundleInfo)
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.lang.String toString()
com.facebook.react.devsupport.DevSettingsActivity
com.google.android.gms.common.api.GoogleApiActivity
org.jitsi.meet.R$styleable: int AppCompatTheme_panelMenuListTheme
org.jitsi.meet.R$styleable: int TextAppearance_textAllCaps
com.oney.WebRTCModule.RTCVideoViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.devsupport.DevSupportManagerImpl$24$1: DevSupportManagerImpl$24$1(com.facebook.react.devsupport.DevSupportManagerImpl$24,com.facebook.react.bridge.NativeDeltaClient)
com.facebook.react.views.modal.ReactModalHostManager: void setTransparent(com.facebook.react.views.modal.ReactModalHostView,boolean)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
org.jitsi.meet.sdk.R$string: int catalyst_debug_error
com.facebook.react.devsupport.DoubleTapReloadRecognizer$1: com.facebook.react.devsupport.DoubleTapReloadRecognizer this$0
org.webrtc.CameraCapturer$4: void onFirstFrameAvailable()
org.jitsi.meet.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
okhttp3.Cache: java.lang.String key(okhttp3.HttpUrl)
okhttp3.Cache$CacheResponseBody$1: void close()
okhttp3.ConnectionPool: java.lang.Runnable cleanupRunnable
com.facebook.react.animated.NativeAnimatedModule
com.facebook.react.devsupport.DevSupportManagerImpl: java.lang.String mJSAppBundleName
org.jitsi.meet.R$string: int status_bar_notification_info_overflow
org.webrtc.JavaI420Buffer: int getStrideU()
com.facebook.imagepipeline.memory.BasePool$InvalidValueException
com.facebook.react.uimanager.LayoutShadowNode: void setFlexShrink(float)
okio.HashingSink: HashingSink(okio.Sink,java.lang.String)
com.learnium.RNDeviceInfo.RNDeviceModule: double getFreeDiskStorageSync()
org.webrtc.SurfaceTextureHelper$FrameRefMonitor: void onDestroyBuffer(org.webrtc.VideoFrame$TextureBuffer)
org.jitsi.meet.R$style: int Widget_AppCompat_CompoundButton_RadioButton
androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl: com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread()
androidx.fragment.app.Fragment: void onAttach(android.app.Activity)
org.webrtc.voiceengine.WebRtcAudioManager: int inputBufferSize
com.facebook.react.devsupport.DisabledDevSupportManager
okhttp3.internal.http1.Http1Codec: int STATE_IDLE
org.webrtc.Logging
okhttp3.RealCall: void captureCallStackTrace()
com.facebook.react.modules.clipboard.ClipboardModule: java.lang.String NAME
com.facebook.react.devsupport.DevSupportManagerImpl: boolean mIsShakeDetectorStarted
com.facebook.react.bridge.ReadableNativeArray: boolean equals(java.lang.Object)
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_pressedStateOverlayImage
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout: void setRefreshing(boolean)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxAge(int,java.util.concurrent.TimeUnit)
org.webrtc.audio.VolumeLogger: void stop()
org.webrtc.EglBase10Impl$1FakeSurfaceHolder: void removeCallback(android.view.SurfaceHolder$Callback)
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableArray asArray()
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_roundedCornerRadius
androidx.viewpager.widget.ViewPager: int getClientWidth()
org.jitsi.meet.sdk.R$attr: int allowStacking
com.horcrux.svg.R$drawable: int abc_btn_check_to_on_mtrl_000
org.webrtc.CameraCapturer: void switchCamera(org.webrtc.CameraVideoCapturer$CameraSwitchHandler,java.lang.String)
org.webrtc.voiceengine.WebRtcAudioTrack: boolean startPlayout()
com.facebook.react.devsupport.MultipartStreamReader$ChunkListener: void onChunkProgress(java.util.Map,long,long)
org.webrtc.NetworkControllerFactoryFactory
org.webrtc.audio.WebRtcAudioRecord: boolean stopRecording()
okhttp3.Cache$Entry: long sentRequestMillis
com.horcrux.svg.R$styleable: int ActionMode_titleTextStyle
com.google.android.gms.internal.measurement.zzhv$zzd
okhttp3.internal.cache.DiskLruCache$Snapshot
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSlingshotDistance(int)
okhttp3.internal.huc.StreamedRequestBody
org.jitsi.meet.R$xml: int app_restrictions
com.facebook.react.bridge.JavaMethodWrapper$2: java.lang.Double extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
org.webrtc.PeerConnectionFactory$InitializationOptions$Builder
org.jitsi.meet.sdk.R$anim: int fragment_fast_out_extra_slow_in
okhttp3.internal.http2.Huffman
org.webrtc.NV12Buffer: void nativeCropAndScale(int,int,int,int,int,int,java.nio.ByteBuffer,int,int,int,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int)
com.google.firebase.crashlytics.internal.report.model.Report$Type: com.google.firebase.crashlytics.internal.report.model.Report$Type valueOf(java.lang.String)
com.facebook.react.modules.intent.IntentModule: void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise)
okio.AsyncTimeout: boolean inQueue
org.jitsi.meet.sdk.R$attr: int viewAspectRatio
org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate: long getDefaultNetId()
com.facebook.react.devsupport.RedBoxDialog$StackAdapter: int getViewTypeCount()
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat
org.jitsi.meet.R$attr: R$attr()
org.jitsi.meet.R$drawable: int abc_seekbar_tick_mark_material
com.horcrux.svg.R$integer: int cancel_button_image_alpha
com.facebook.react.bridge.ReactCallback
org.jitsi.meet.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
com.facebook.react.bridge.JavaOnlyMap: boolean getBoolean(java.lang.String)
org.jitsi.meet.sdk.BroadcastEvent$Type: BroadcastEvent$Type(java.lang.String,int,java.lang.String)
org.webrtc.PlatformSoftwareVideoDecoderFactory: org.webrtc.VideoCodecInfo[] getSupportedCodecs()
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.jitsi.meet.sdk.R$string: int catalyst_sample_profiler_enable
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: java.lang.Boolean audioOnly
com.google.gson.reflect.TypeToken: TypeToken(java.lang.reflect.Type)
com.horcrux.svg.R$drawable: R$drawable()
com.horcrux.svg.RenderableView: int CAP_SQUARE
com.facebook.react.bridge.DynamicFromArray: com.facebook.react.bridge.DynamicFromArray create(com.facebook.react.bridge.ReadableArray,int)
org.webrtc.EglRenderer: void onFrame(org.webrtc.VideoFrame)
org.webrtc.PeerConnection$IceServer: PeerConnection$IceServer(java.lang.String,java.lang.String,java.lang.String,org.webrtc.PeerConnection$TlsCertPolicy,java.lang.String)
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void onDropViewInstance(android.view.View)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
org.webrtc.RtpParameters$Encoding: int getNetworkPriority()
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.ViewManagerRegistry getViewManagerRegistry_DO_NOT_USE()
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,java.lang.String)
okhttp3.internal.connection.RouteSelector$Selection: int nextRouteIndex
org.webrtc.Camera1Session: int getFrameOrientation()
okhttp3.internal.ws.WebSocketProtocol: long CLOSE_MESSAGE_MAX
org.webrtc.SurfaceEglRenderer: void onFrame(org.webrtc.VideoFrame)
org.jitsi.meet.sdk.R$style: int Platform_ThemeOverlay_AppCompat_Dark
com.horcrux.svg.RectView: void setX(com.facebook.react.bridge.Dynamic)
com.google.android.gms.internal.measurement.zzcd$zzj
com.facebook.react.views.slider.ReactSlider: void setMinValue(double)
org.jitsi.meet.sdk.R$attr: int roundingBorderPadding
com.facebook.react.fabric.ComponentFactoryDelegate: com.facebook.jni.HybridData initHybrid()
org.webrtc.GlUtil
org.jitsi.meet.R$styleable: int FontFamilyFont_ttcIndex
com.horcrux.svg.R$style: int Base_V22_Theme_AppCompat
okhttp3.CacheControl: boolean onlyIfCached()
okhttp3.internal.cache.DiskLruCache$2: boolean $assertionsDisabled
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_spinnerStyle
org.jitsi.meet.sdk.R$styleable: int Toolbar_popupTheme
okhttp3.ConnectionPool: okhttp3.internal.connection.RouteDatabase routeDatabase
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: void writeToParcel(android.os.Parcel,int)
androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)
org.jitsi.meet.R$drawable: int abc_scrubber_primary_mtrl_alpha
org.webrtc.RtpSender: void setFrameEncryptor(org.webrtc.FrameEncryptor)
com.facebook.react.devsupport.DevSupportManagerImpl$18: void run()
okhttp3.internal.Util$2: boolean val$daemon
com.horcrux.svg.RenderableViewManager: void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray)
com.facebook.react.animated.NativeAnimatedModule: void extractAnimatedNodeOffset(int)
androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()
org.webrtc.VideoFrame$TextureBuffer$Type
org.jitsi.meet.sdk.R$drawable: int abc_text_select_handle_middle_mtrl_light
org.webrtc.PeerConnection$IceGatheringState: org.webrtc.PeerConnection$IceGatheringState[] $VALUES
com.horcrux.svg.R$drawable: int notification_bg_low_pressed
org.jitsi.meet.sdk.R$styleable: int Fragment_android_name
org.webrtc.voiceengine.WebRtcAudioTrack: void access$400(org.webrtc.voiceengine.WebRtcAudioTrack,int,long)
org.webrtc.voiceengine.WebRtcAudioUtils: java.util.List getBlackListedModelsForAecUsage()
com.horcrux.svg.PatternView: void setWidth(com.facebook.react.bridge.Dynamic)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
okio.BufferedSource: long readDecimalLong()
com.horcrux.svg.SvgViewManager: java.lang.String REACT_CLASS
okhttp3.internal.cache.DiskLruCache$Entry: long[] lengths
com.facebook.react.devsupport.DevServerHelper$1$3: void onRequest(java.lang.Object,com.facebook.react.packagerconnection.Responder)
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Large
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_roundTopStart
okhttp3.internal.http2.Huffman: byte[] CODE_LENGTHS
org.jitsi.meet.R$drawable: int notification_template_icon_low_bg
com.facebook.react.modules.image.ImageLoaderModule: java.lang.String NAME
com.google.firebase.crashlytics.internal.common.DataTransportState: com.google.firebase.crashlytics.internal.common.DataTransportState valueOf(java.lang.String)
org.webrtc.audio.JavaAudioDeviceModule$Builder: boolean useLowLatency
okhttp3.internal.http2.Http2Connection$4: int val$streamId
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Display3
org.jitsi.meet.R$layout: int notification_action
org.webrtc.audio.JavaAudioDeviceModule: boolean isBuiltInNoiseSuppressorSupported()
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
org.jitsi.meet.sdk.net.NAT64AddrInfoModule: NAT64AddrInfoModule(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.RenderableView: com.horcrux.svg.SVGLength[] strokeDasharray
com.facebook.react.modules.core.Timing: com.facebook.react.modules.core.Timing$IdleCallbackRunnable access$1102(com.facebook.react.modules.core.Timing,com.facebook.react.modules.core.Timing$IdleCallbackRunnable)
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService$1: android.telecom.CallAudioState val$state
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: com.facebook.react.devsupport.InspectorPackagerConnection this$0
com.facebook.react.devsupport.DevSupportManagerImpl$21: com.facebook.react.packagerconnection.Responder val$responder
com.facebook.yoga.YogaDirection
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.io.InputStream getInputStream()
com.facebook.react.bridge.ReactContext
com.horcrux.svg.R$drawable: int abc_spinner_textfield_background_material
com.oney.WebRTCModule.WebRTCView: void setStreamURL(java.lang.String)
com.horcrux.svg.SvgViewManager: com.horcrux.svg.SvgView getSvgViewByTag(int)
com.facebook.react.bridge.CatalystInstanceImpl: java.lang.String mJsPendingCallsTitleForTrace
org.jitsi.meet.sdk.R$style: int Platform_AppCompat_Light
org.webrtc.NetworkMonitorAutoDetect: org.webrtc.NetworkChangeDetector$ConnectionType connectionType
org.jitsi.meet.sdk.JitsiMeetActivity: void initialize()
org.jitsi.meet.R$styleable: int AppCompatTextView_drawableTintMode
com.facebook.react.devsupport.DevServerHelper$9
okhttp3.internal.ws.RealWebSocket: java.lang.Runnable writerRunnable
com.horcrux.svg.R$attr: int listPreferredItemPaddingLeft
com.horcrux.svg.R$drawable: int notification_bg_low
com.horcrux.svg.VirtualView: boolean isResponsible()
com.facebook.react.devsupport.DevSupportManagerImpl$20: com.facebook.react.packagerconnection.Responder val$responder
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isCanceled()
org.webrtc.Camera2Session
com.facebook.react.bridge.CatalystInstance: void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener)
org.jitsi.meet.sdk.R$anim
org.jitsi.meet.sdk.ProximityModule: java.lang.String NAME
com.facebook.react.devsupport.DebugOverlayController: android.view.WindowManager mWindowManager
com.facebook.react.bridge.Dynamic: boolean isNull()
org.webrtc.NetworkChangeDetector$ConnectionType: org.webrtc.NetworkChangeDetector$ConnectionType CONNECTION_ETHERNET
org.jitsi.meet.R$id: int accessibility_custom_action_22
com.kevinresol.react_native_default_preference.RNDefaultPreferenceModule: void get(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque messageAndCloseQueue
com.google.android.gms.common.zzk: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.view.ReactViewManager: void nextFocusRight(com.facebook.react.views.view.ReactViewGroup,int)
com.horcrux.svg.R$dimen: int abc_text_size_menu_header_material
com.facebook.react.modules.network.NetworkingModule: void access$200(com.facebook.react.modules.network.NetworkingModule,int)
okhttp3.internal.ws.RealWebSocket: void writePingFrame()
okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.FileOperator fileOperator
org.jitsi.meet.R$attr: int gapBetweenBars
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void clear(com.facebook.react.bridge.Callback)
org.webrtc.EncodedImage$Builder
com.horcrux.svg.R$styleable: int DrawerArrowToggle_gapBetweenBars
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory: com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean)
org.jitsi.meet.R$attr: int editTextBackground
org.jitsi.meet.R$string: int common_google_play_services_update_title
org.webrtc.MediaStream: boolean nativeRemoveAudioTrack(long,long)
com.horcrux.svg.R$styleable: int StateListDrawable_android_constantSize
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Caption
com.facebook.react.devsupport.DevSupportManagerImpl$13: void onOptionSelected()
com.horcrux.svg.RenderableViewManager$MarkerManager: RenderableViewManager$MarkerManager()
okhttp3.internal.cache.CacheInterceptor$1: long read(okio.Buffer,long)
com.facebook.react.bridge.JavaOnlyArray: double getDouble(int)
org.jitsi.meet.sdk.R$drawable: int abc_ic_clear_material
okhttp3.HttpUrl: java.lang.String encodedPassword()
org.webrtc.DataChannel$Init
com.facebook.react.bridge.ReadableNativeMap: int hashCode()
com.facebook.react.views.scroll.ReactScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactScrollView,int,float)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_RC4_128_SHA
com.facebook.react.devsupport.BundleDeltaClient: com.facebook.react.devsupport.BundleDeltaClient create(com.facebook.react.devsupport.BundleDeltaClient$ClientType)
com.horcrux.svg.R$attr: int buttonStyle
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$RtcpMuxPolicy rtcpMuxPolicy
com.facebook.react.views.view.ReactViewGroup: boolean mRemoveClippedSubviews
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void startSamplingProfiler()
org.webrtc.YuvConverter: org.webrtc.YuvConverter$ShaderCallbacks shaderCallbacks
org.webrtc.audio.WebRtcAudioUtils
org.webrtc.Logging$TraceLevel: org.webrtc.Logging$TraceLevel TRACE_INFO
com.facebook.react.devsupport.JSCHeapCapture$CaptureException: JSCHeapCapture$CaptureException(java.lang.String)
com.facebook.react.bridge.CatalystInstance: com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class)
okhttp3.internal.cache.DiskLruCache$Editor: void abort()
org.webrtc.audio.WebRtcAudioRecord: void setMicrophoneMute(boolean)
com.facebook.react.modules.core.Timing: boolean access$1400(com.facebook.react.modules.core.Timing)
org.webrtc.VideoEncoder: java.lang.String getImplementationName()
okio.Buffer
org.webrtc.VideoEncoderFallback: VideoEncoderFallback(org.webrtc.VideoEncoder,org.webrtc.VideoEncoder)
org.jitsi.meet.R$attr: int buttonBarStyle
okhttp3.internal.huc.BufferedRequestBody: long contentLength
org.jitsi.meet.sdk.R$attr: int contentInsetEndWithActions
org.webrtc.audio.WebRtcAudioRecord: long access$600(org.webrtc.audio.WebRtcAudioRecord)
org.webrtc.DataChannel: void dispose()
org.webrtc.EglBase10Impl$Context: javax.microedition.khronos.egl.EGLContext eglContext
com.facebook.react.ReactRootView: void setShouldLogContentAppeared(boolean)
okhttp3.internal.connection.RealConnection: okhttp3.internal.http.HttpCodec newCodec(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,okhttp3.internal.connection.StreamAllocation)
com.dropbox.core.v2.sharing.RelinquishFileMembershipErrorException
com.calendarevents.CalendarEvents: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
okhttp3.Cookie: int dateCharacterOffset(java.lang.String,int,int,boolean)
androidx.fragment.app.Fragment: void startActivity(android.content.Intent)
okio.Options: okio.Options of(okio.ByteString[])
org.webrtc.VideoCodecInfo: java.lang.String H264_CONSTRAINED_HIGH_3_1
org.webrtc.SurfaceTextureHelper$2: SurfaceTextureHelper$2(org.webrtc.SurfaceTextureHelper)
com.horcrux.svg.R$styleable: int MenuItem_android_checkable
org.jitsi.meet.sdk.R$styleable: int ActionBar_progressBarPadding
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
org.webrtc.PeerConnection: org.webrtc.PeerConnection$IceGatheringState nativeIceGatheringState()
org.jitsi.meet.sdk.RNConnectionService: void setCallAudioStateListener(org.jitsi.meet.sdk.RNConnectionService$CallAudioStateListener)
com.facebook.soloader.DoNotOptimize
org.webrtc.voiceengine.WebRtcAudioTrack: boolean speakerMute
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
org.webrtc.CameraCapturer$6: org.webrtc.CameraSession val$oldSession
com.horcrux.svg.SvgViewManager: void setAlign(com.horcrux.svg.SvgView,java.lang.String)
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric$2
com.facebook.react.views.view.ReactViewGroup: int getChildDrawingOrder(int,int)
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: java.lang.String getFileName()
com.google.android.gms.internal.measurement.zzcd$zzg: boolean zzx
com.learnium.RNDeviceInfo.RNDeviceModule: void getInstanceId(com.facebook.react.bridge.Promise)
okhttp3.internal.connection.RouteSelector$Selection: java.util.List getAll()
org.webrtc.VideoEncoder$ResolutionBitrateLimits: int getMinBitrateBps()
okhttp3.internal.connection.RealConnection: void connectTls(okhttp3.internal.connection.ConnectionSpecSelector)
com.facebook.react.devsupport.InspectorPackagerConnection$Connection$1: com.facebook.react.devsupport.InspectorPackagerConnection$Connection this$1
com.facebook.react.uimanager.PointerEvents: com.facebook.react.uimanager.PointerEvents valueOf(java.lang.String)
com.facebook.react.bridge.ReactMarker$FabricMarkerListener
org.jitsi.meet.sdk.BaseReactView: void onExternalAPIEvent(java.lang.String,com.facebook.react.bridge.ReadableMap)
org.webrtc.NV21Buffer: int getHeight()
com.horcrux.svg.SvgView: void defineMarker(com.horcrux.svg.VirtualView,java.lang.String)
okhttp3.CertificatePinner$Pin: java.lang.String WILDCARD
org.jitsi.meet.sdk.R$id: int dialog_button
org.jitsi.meet.sdk.R$drawable: int abc_list_selector_disabled_holo_dark
com.facebook.react.devsupport.RedBoxHandler$ReportCompletedListener: void onReportSuccess(android.text.SpannedString)
org.webrtc.RTCStats: long timestampUs
org.jitsi.meet.sdk.R$string: int abc_search_hint
org.webrtc.voiceengine.WebRtcAudioEffects: android.media.audiofx.NoiseSuppressor ns
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric$1: AudioDeviceHandlerGeneric$1(org.jitsi.meet.sdk.AudioDeviceHandlerGeneric)
org.jitsi.meet.R$style: int Base_Widget_AppCompat_RatingBar_Small
com.facebook.react.views.drawer.ReactDrawerLayoutManager: int CLOSE_DRAWER
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removeAllQueryParameters(java.lang.String)
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Large
org.webrtc.Camera2Session: org.webrtc.CameraSession$Events access$500(org.webrtc.Camera2Session)
org.webrtc.SurfaceViewRenderer: void updateSurfaceSize()
org.webrtc.TextureBufferImpl: org.webrtc.TextureBufferImpl$RefCountMonitor refCountMonitor
org.webrtc.VideoSource: org.webrtc.VideoProcessor videoProcessor
com.learnium.RNDeviceInfo.RNDeviceModule: void getTotalDiskCapacity(com.facebook.react.bridge.Promise)
org.webrtc.CryptoOptions$Srtp
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath
org.jitsi.meet.sdk.BaseReactView: java.lang.String externalAPIScope
okhttp3.internal.connection.RouteException: void addConnectException(java.io.IOException)
com.horcrux.svg.R$styleable: int SearchView_closeIcon
com.facebook.react.bridge.JavaOnlyArray: boolean equals(java.lang.Object)
com.facebook.react.uimanager.UIManagerModule: void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.UIManager: void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray)
org.webrtc.VideoFrameDrawer: void calculateTransformedRenderSize(int,int,android.graphics.Matrix)
org.jitsi.meet.R$styleable: int Fragment_android_name
org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate: org.webrtc.NetworkMonitorAutoDetect$NetworkState getNetworkState(android.net.NetworkInfo)
org.webrtc.audio.LowLatencyAudioBufferManager: LowLatencyAudioBufferManager()
org.webrtc.voiceengine.BuildInfo: java.lang.String getProduct()
org.webrtc.FileVideoCapturer: void changeCaptureFormat(int,int,int)
androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
org.webrtc.PeerConnection$AdapterType: org.webrtc.PeerConnection$AdapterType[] values()
org.jitsi.meet.sdk.R$string: int abc_capital_off
org.webrtc.voiceengine.WebRtcAudioManager: boolean blacklistDeviceForOpenSLESUsageIsOverridden
org.webrtc.PlatformSoftwareVideoDecoderFactory$1: boolean test(java.lang.Object)
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_8
okio.Timeout: okio.Timeout NONE
okhttp3.internal.http2.StreamResetException
okhttp3.HttpUrl: java.lang.String topPrivateDomain()
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils: DalvikPurgeableDecoder$OreoUtils()
com.google.android.gms.internal.measurement.zzca$zzb: java.lang.String zze
com.facebook.react.views.view.ReactViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.jitsi.meet.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
com.horcrux.svg.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
org.jitsi.meet.R$id: int none
org.jitsi.meet.R$styleable: int MenuItem_alphabeticModifiers
org.webrtc.EglBase10Impl: javax.microedition.khronos.egl.EGLConfig eglConfig
com.facebook.react.uimanager.UIManagerModule: com.facebook.react.uimanager.UIImplementation mUIImplementation
okhttp3.HttpUrl: java.lang.String username
com.horcrux.svg.VirtualView: int CLIP_RULE_EVENODD
timber.log.Timber$Tree: void wtf(java.lang.Throwable,java.lang.String,java.lang.Object[])
com.google.android.gms.measurement.AppMeasurement: void setConditionalUserPropertyAs(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty)
org.webrtc.VideoEncoder$CodecSpecificInfoH264: VideoEncoder$CodecSpecificInfoH264()
com.facebook.react.modules.core.DeviceEventManagerModule
com.learnium.RNDeviceInfo.RNDeviceModule: void getFreeDiskStorage(com.facebook.react.bridge.Promise)
org.jitsi.meet.sdk.BroadcastEvent$Type: java.lang.String PARTICIPANT_JOINED_NAME
org.jitsi.meet.R$styleable: int SearchView_searchHintIcon
org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackThread: void stopThread()
org.webrtc.CandidatePairChangeEvent: CandidatePairChangeEvent(org.webrtc.IceCandidate,org.webrtc.IceCandidate,int,java.lang.String,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout
org.jitsi.meet.sdk.ConnectionService
org.jitsi.meet.R$styleable: int ActivityChooserView_initialActivityCount
com.horcrux.svg.RNSVGRenderableManager: RNSVGRenderableManager(com.facebook.react.bridge.ReactApplicationContext)
org.jitsi.meet.sdk.R$id: int bottom
com.facebook.react.views.picker.ReactPicker: void setStagedSelection(int)
org.webrtc.audio.WebRtcAudioRecord: void releaseAudioResources()
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
org.jitsi.meet.R$interpolator
com.google.android.gms.internal.measurement.zzbv$zza: boolean zzg
com.facebook.react.devsupport.DoubleTapReloadRecognizer: boolean access$002(com.facebook.react.devsupport.DoubleTapReloadRecognizer,boolean)
com.dropbox.core.v2.files.GetCopyReferenceErrorException
org.jitsi.meet.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
com.horcrux.svg.R$style: int Base_Widget_AppCompat_ButtonBar
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion()
org.jitsi.meet.R$styleable: int AppCompatTheme_actionModePasteDrawable
org.webrtc.VideoEncoder$Callback: void onEncodedFrame(org.webrtc.EncodedImage,org.webrtc.VideoEncoder$CodecSpecificInfo)
org.webrtc.StatsReport
com.reactnativecommunity.webview.RNCWebViewModule: com.facebook.react.modules.core.PermissionListener webviewFileDownloaderPermissionListener
org.webrtc.voiceengine.WebRtcAudioRecord: int DEFAULT_AUDIO_SOURCE
org.jitsi.meet.sdk.AudioModeModule: void removeDevice(java.lang.String)
com.facebook.react.devsupport.DevLoadingViewController$1: java.lang.String val$message
org.webrtc.JavaI420Buffer: org.webrtc.VideoFrame$Buffer cropAndScale(int,int,int,int,int,int)
org.webrtc.MediaSource$State: org.webrtc.MediaSource$State INITIALIZING
org.jitsi.meet.R$styleable: int[] GradientColor
org.webrtc.ThreadUtils: void awaitUninterruptibly(java.util.concurrent.CountDownLatch)
com.facebook.react.devsupport.DevSupportManagerImpl: void startInspector()
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
com.facebook.react.modules.storage.AsyncStorageModule: com.facebook.react.modules.storage.ReactDatabaseSupplier mReactDatabaseSupplier
org.jitsi.meet.sdk.R$raw: int lang_mainja
com.facebook.react.bridge.CatalystInstanceImpl: void jniCallJSFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray)
org.webrtc.VideoCodecStatus: org.webrtc.VideoCodecStatus TIMEOUT
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.webrtc.voiceengine.WebRtcAudioRecord$AudioSamples: WebRtcAudioRecord$AudioSamples(android.media.AudioRecord,byte[])
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_MD5
com.facebook.react.modules.debug.AnimationsDebugModule: com.facebook.react.modules.debug.FpsDebugFrameCallback mFrameCallback
okhttp3.internal.tls.CertificateChainCleaner
org.jitsi.meet.sdk.R$attr: int alertDialogButtonGroupStyle
org.jitsi.meet.R$drawable: int btn_radio_on_to_off_mtrl_animation
com.facebook.react.devsupport.RedBoxDialog: android.view.View$OnClickListener mReportButtonOnClickListener
com.zmxv.RNSound.RNSoundModule: RNSoundModule(com.facebook.react.bridge.ReactApplicationContext)
org.webrtc.CameraVideoCapturer$CameraStatistics: org.webrtc.CameraVideoCapturer$CameraEventsHandler eventsHandler
org.jitsi.meet.R$attr: int fadeDuration
org.webrtc.PeerConnection: org.webrtc.PeerConnection$IceGatheringState iceGatheringState()
org.jitsi.meet.sdk.BroadcastAction$Type: org.jitsi.meet.sdk.BroadcastAction$Type[] $VALUES
com.facebook.react.bridge.DynamicFromObject: void recycle()
org.jitsi.meet.R$dimen: int abc_disabled_alpha_material_light
org.jitsi.meet.R$layout: int redbox_view
okhttp3.internal.huc.BufferedRequestBody: okhttp3.Request prepareToSendRequest(okhttp3.Request)
androidx.fragment.app.Fragment: void requestPermissions(java.lang.String[],int)
com.horcrux.svg.R$attr: int actionBarTabBarStyle
com.facebook.react.modules.websocket.WebSocketModule: void sendBinary(okio.ByteString,int)
okhttp3.CacheControl: boolean isPublic
org.jitsi.meet.sdk.R$id: int wrap_content
com.facebook.react.devsupport.DevSupportManagerImpl$22: com.facebook.react.bridge.JavaJSExecutor create()
org.webrtc.Camera2Capturer
okhttp3.internal.http2.Http2Reader$Handler: void ackSettings()
com.horcrux.svg.R$styleable: int ColorStateListItem_android_color
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_roundBottomLeft
com.facebook.jni.Countable: void finalize()
org.jitsi.meet.sdk.OngoingConferenceTracker: org.jitsi.meet.sdk.OngoingConferenceTracker instance
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
org.webrtc.audio.WebRtcAudioRecord: void logMainParametersExtended()
org.webrtc.MediaStreamTrack$MediaType
okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)
com.facebook.react.devsupport.DevSupportManagerImpl: void stopInspector()
okhttp3.HttpUrl$Builder
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException: JavaJSExecutor$ProxyExecutorException(java.lang.Throwable)
okhttp3.internal.http.HttpHeaders: int skipWhitespace(java.lang.String,int)
com.horcrux.svg.MarkerView: void setMarkerWidth(com.facebook.react.bridge.Dynamic)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Button
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Display1
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3: okhttp3.internal.http2.Settings val$peerSettings
org.webrtc.EglBase: void createPbufferSurface(int,int)
org.webrtc.VideoDecoder$Callback: void onDecodedFrame(org.webrtc.VideoFrame,java.lang.Integer,java.lang.Integer)
org.jitsi.meet.R$id: int accessibility_custom_action_12
com.horcrux.svg.RenderableViewManager$ImageViewManager: RenderableViewManager$ImageViewManager()
com.google.android.gms.internal.measurement.zzci$zzb: long zzg
okhttp3.internal.connection.StreamAllocation: okhttp3.EventListener eventListener
org.webrtc.HardwareVideoEncoder: org.webrtc.EglBase14 textureEglBase
com.facebook.react.modules.network.NetworkingModule: java.lang.String TAG
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService: java.util.Set access$300(int)
com.facebook.react.modules.debug.DevSettingsModule: java.lang.String NAME
okhttp3.internal.cache.CacheInterceptor: okhttp3.internal.cache.InternalCache cache
org.jitsi.meet.R$drawable: int common_google_signin_btn_icon_dark_focused
org.webrtc.GlGenericDrawer
org.webrtc.RtpParameters$Encoding: boolean getActive()
org.webrtc.RTCStats: java.lang.String getId()
org.jitsi.meet.sdk.R$attr: int windowMinWidthMinor
org.jitsi.meet.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
com.squareup.duktape.DuktapeException: DuktapeException(java.lang.String)
com.facebook.react.packagerconnection.NotificationOnlyHandler: void onNotification(java.lang.Object)
com.horcrux.svg.R$dimen: int abc_config_prefDialogWidth
com.facebook.react.bridge.JavaScriptModuleRegistry
okhttp3.internal.http2.Http2Connection: void writePing(boolean,int,int)
okhttp3.internal.http2.Http2Stream: okio.Timeout writeTimeout()
com.facebook.react.devsupport.MultipartStreamReader: void emitChunk(okio.Buffer,boolean,com.facebook.react.devsupport.MultipartStreamReader$ChunkListener)
okhttp3.CacheControl$Builder: boolean immutable
com.horcrux.svg.RenderableView: int JOIN_ROUND
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.webrtc.voiceengine.WebRtcAudioTrack: org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackThread audioThread
org.webrtc.Predicate$1: org.webrtc.Predicate val$other
org.webrtc.RtpParameters$Encoding: java.lang.Integer getNumTemporalLayers()
org.webrtc.MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl: int dequeueInputBuffer(long)
com.learnium.RNDeviceInfo.RNDeviceModule: void getFreeDiskStorageOld(com.facebook.react.bridge.Promise)
com.facebook.react.modules.image.ImageLoaderModule: void prefetchImage(java.lang.String,int,com.facebook.react.bridge.Promise)
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager: java.util.Map getExportedCustomDirectEventTypeConstants()
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionBarStyle
org.webrtc.NetworkChangeDetector$Observer: void onNetworkConnect(org.webrtc.NetworkChangeDetector$NetworkInformation)
org.webrtc.MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl: java.nio.ByteBuffer[] getInputBuffers()
com.facebook.react.views.image.ReactImageManager: void setBlurRadius(com.facebook.react.views.image.ReactImageView,float)
com.horcrux.svg.R$color: int material_grey_600
com.dropbox.core.v2.filerequests.CreateFileRequestErrorException
com.facebook.react.bridge.UiThreadUtil: void assertNotOnUiThread()
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_retryImage
com.facebook.react.uimanager.UIManagerModule: void onHostResume()
okhttp3.internal.huc.OkHttpsURLConnection: void setFixedLengthStreamingMode(long)
org.jitsi.meet.sdk.R$attr: int switchMinWidth
com.google.android.gms.internal.measurement.zzcd$zzg: int zzd
com.facebook.yoga.YogaFlexDirection: com.facebook.yoga.YogaFlexDirection valueOf(java.lang.String)
okhttp3.internal.http2.Http2Stream: void waitForIo()
androidx.annotation.Keep
org.jitsi.meet.sdk.R$drawable: int abc_scrubber_track_mtrl_alpha
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()
okhttp3.OkHttpClient$1: java.net.Socket deduplicate(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)
com.horcrux.svg.R$id: int tag_transition_group
org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordErrorCallback: void onWebRtcAudioRecordStartError(org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode,java.lang.String)
org.jitsi.meet.R$drawable: int btn_checkbox_unchecked_to_checked_mtrl_animation
org.jitsi.meet.sdk.R$dimen: int notification_top_pad_large_text
com.facebook.react.devsupport.JSDevSupport: com.facebook.react.devsupport.JSDevSupport$DevSupportCallback mCurrentCallback
org.jitsi.meet.sdk.R$drawable: int abc_cab_background_internal_bg
androidx.fragment.app.Fragment: int mState
org.jitsi.meet.R$attr: int iconTintMode
org.jitsi.meet.sdk.R$id: int search_bar
androidx.fragment.app.Fragment: boolean isPostponed()
okhttp3.CookieJar$1: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
com.horcrux.svg.RenderableViewManager$UseViewManager
com.facebook.react.fabric.Binding: Binding()
org.webrtc.PeerConnection$AdapterType: java.lang.Integer bitMask
com.horcrux.svg.R$attr
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_windowFixedHeightMajor
org.jitsi.meet.sdk.R$style: int Base_Theme_AppCompat
org.webrtc.ScreenCapturerAndroid$2: ScreenCapturerAndroid$2(org.webrtc.ScreenCapturerAndroid)
com.horcrux.svg.R$id: int checkbox
org.jitsi.meet.R$styleable: int AppCompatTheme_editTextStyle
com.facebook.react.bridge.CatalystInstanceImpl: CatalystInstanceImpl(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1)
org.jitsi.meet.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
okio.Okio$3: okio.Timeout timeout()
org.webrtc.SurfaceEglRenderer: void surfaceCreated(android.view.SurfaceHolder)
org.jitsi.meet.sdk.R$attr: int tooltipText
okhttp3.internal.tls.DistinguishedNameParser: java.lang.String hexAV()
okhttp3.internal.cache2.Relay$RelaySource: long sourcePos
com.facebook.react.devsupport.RedBoxHandler$ErrorType: java.lang.String name
org.webrtc.VideoEncoder$Settings
okio.BufferedSink: okio.BufferedSink writeByte(int)
com.google.gson.reflect.TypeToken: java.lang.reflect.Type getType()
okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)
org.jitsi.meet.R$color: int primary_text_default_material_light
okhttp3.MultipartBody: okhttp3.MediaType contentType
org.jitsi.meet.sdk.AudioModeModule: boolean access$500(org.jitsi.meet.sdk.AudioModeModule,int,boolean)
com.horcrux.svg.RenderableView: java.util.ArrayList mLastMergedList
org.webrtc.DataChannel$Buffer: boolean binary
org.jitsi.meet.sdk.R$string: int catalyst_debug
okhttp3.internal.ws.WebSocketReader: boolean isFinalFrame
com.facebook.react.devsupport.RedBoxDialog$StackAdapter$FrameViewHolder: android.widget.TextView access$900(com.facebook.react.devsupport.RedBoxDialog$StackAdapter$FrameViewHolder)
com.horcrux.svg.RenderableView: RenderableView(com.facebook.react.bridge.ReactContext)
org.webrtc.CameraCapturer: org.webrtc.CameraCapturer$SwitchState access$102(org.webrtc.CameraCapturer,org.webrtc.CameraCapturer$SwitchState)
com.horcrux.svg.TextProperties$TextPathSide: com.horcrux.svg.TextProperties$TextPathSide valueOf(java.lang.String)
org.webrtc.SurfaceViewRenderer: java.lang.String resourceName
org.webrtc.SurfaceTextureHelper$1: boolean val$alignTimestamps
com.horcrux.svg.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
com.google.android.gms.internal.measurement.zzcd$zzk: double zzi
okhttp3.Cache$CacheRequestImpl
okhttp3.internal.huc.OkHttpsURLConnection: void setRequestMethod(java.lang.String)
org.webrtc.TextureBufferImpl: android.os.Handler toI420Handler
org.webrtc.DataChannel$Buffer: DataChannel$Buffer(java.nio.ByteBuffer,boolean)
com.horcrux.svg.RenderableView: boolean hasOwnProperty(java.lang.String)
org.jitsi.meet.sdk.R$dimen: int disabled_alpha_material_dark
com.facebook.react.devsupport.RedBoxDialog: android.widget.Button mReloadJsButton
org.jitsi.meet.sdk.R$attr: int logo
com.google.android.gms.internal.measurement.zzci$zzb: com.google.android.gms.internal.measurement.zzid zzi
org.webrtc.DataChannel$State: org.webrtc.DataChannel$State valueOf(java.lang.String)
org.webrtc.GlTextureFrameBuffer: int textureId
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_PopupWindow
org.jitsi.meet.sdk.R$style: int TextAppearance_Compat_Notification_Title
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: java.lang.String TAG
org.jitsi.meet.R$id: int visible_removing_fragment_view_tag
org.jitsi.meet.R$dimen: int abc_progress_bar_height_material
org.webrtc.LibvpxVp9Decoder: LibvpxVp9Decoder()
org.webrtc.RendererCommon$RendererEvents
org.jitsi.meet.R$dimen: int abc_action_bar_overflow_padding_start_material
org.webrtc.RtpParameters$Codec: org.webrtc.MediaStreamTrack$MediaType getKind()
com.horcrux.svg.R$attr: int thumbTintMode
okhttp3.internal.ws.WebSocketReader: void readControlFrame()
org.jitsi.meet.sdk.ConnectionService: void addConnection(org.jitsi.meet.sdk.ConnectionService$ConnectionImpl)
org.jitsi.meet.R$string: int dropbox_app_key
com.facebook.react.modules.share.ShareModule: java.lang.String ERROR_UNABLE_TO_OPEN_DIALOG
org.webrtc.CameraCapturer$2: void onCameraError(org.webrtc.CameraSession,java.lang.String)
org.webrtc.audio.WebRtcAudioTrack: WebRtcAudioTrack(android.content.Context,android.media.AudioManager,android.media.AudioAttributes,org.webrtc.audio.JavaAudioDeviceModule$AudioTrackErrorCallback,org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStateCallback,boolean)
org.jitsi.meet.sdk.R$drawable: int notification_bg_low_normal
org.jitsi.meet.sdk.R$attr: int backgroundTintMode
com.facebook.react.bridge.Arguments: android.os.Bundle toBundle(com.facebook.react.bridge.ReadableMap)
org.jitsi.meet.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
okhttp3.internal.cache.CacheInterceptor$1: okio.BufferedSource val$source
org.jitsi.meet.R$attr: int alertDialogButtonGroupStyle
org.webrtc.SurfaceViewRenderer: void onFirstFrameRendered()
com.horcrux.svg.R$style: int Widget_AppCompat_Button_Borderless_Colored
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
com.facebook.react.views.scroll.ReactScrollView: void setBorderStyle(java.lang.String)
org.jitsi.meet.sdk.R$styleable: int SearchView_android_maxWidth
com.facebook.react.modules.share.ShareModule: java.lang.String NAME
okhttp3.internal.ws.WebSocketWriter$FrameSink: long contentLength
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder setAudioMuted(boolean)
com.horcrux.svg.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
okhttp3.RequestBody
com.facebook.react.views.view.ReactViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_buttonBarButtonStyle
org.webrtc.EglBase: int EGL_OPENGL_ES3_BIT
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor: java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
okhttp3.internal.http2.Http2Connection$2: void execute()
com.facebook.react.fabric.ReactNativeConfig: double getDouble(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
okio.BufferedSource: long readHexadecimalUnsignedLong()
com.ocetnik.timer.BackgroundTimerModule: void access$200(com.ocetnik.timer.BackgroundTimerModule,com.facebook.react.bridge.ReactContext,java.lang.String)
org.webrtc.PeerConnectionFactory$InitializationOptions$Builder: org.webrtc.PeerConnectionFactory$InitializationOptions$Builder setEnableInternalTracer(boolean)
org.jitsi.meet.sdk.ListenerUtils: void runListenerMethod(java.lang.Object,java.util.Map,java.lang.String,com.facebook.react.bridge.ReadableMap)
org.jitsi.meet.R$dimen: int hint_pressed_alpha_material_light
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
org.jitsi.meet.sdk.R$styleable: int LinearLayoutCompat_divider
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_colorControlActivated
org.jitsi.meet.sdk.ParticipantInfo: java.lang.String id
org.jitsi.meet.R$drawable: int common_google_signin_btn_text_light
org.webrtc.PeerConnection: void createOffer(org.webrtc.SdpObserver,org.webrtc.MediaConstraints)
org.jitsi.meet.R$id: int spacer
org.jitsi.meet.R$attr: int lastBaselineToBottomHeight
org.jitsi.meet.sdk.R$attr: int state_above_anchor
com.horcrux.svg.R$attr: int textColorAlertDialogListItem
org.webrtc.voiceengine.WebRtcAudioUtils: java.lang.String deviceTypeToString(int)
okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long)
okio.BufferedSource: void readFully(byte[])
com.facebook.react.devsupport.DevInternalSettings: java.lang.String PREFS_JS_BUNDLE_DELTAS_KEY
org.jitsi.meet.R$styleable: int[] FragmentContainerView
org.webrtc.EncodedImage$FrameType: org.webrtc.EncodedImage$FrameType fromNativeIndex(int)
com.facebook.react.uimanager.UIManagerModule: void measureInWindow(int,com.facebook.react.bridge.Callback)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1
org.webrtc.ScreenCapturerAndroid: int DISPLAY_FLAGS
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatus mBundleStatus
okhttp3.RequestBody$3: okhttp3.MediaType contentType()
org.jitsi.meet.sdk.JitsiMeetActivity: void launch(android.content.Context,java.lang.String)
com.facebook.react.devsupport.interfaces.DevSupportManager: void setDevSupportEnabled(boolean)
org.jitsi.meet.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
com.facebook.react.modules.timepicker.TimePickerMode: com.facebook.react.modules.timepicker.TimePickerMode valueOf(java.lang.String)
com.facebook.react.devsupport.DevSupportManagerImpl$28
com.dropbox.core.v2.paper.DocLookupErrorException
com.google.android.gms.common.api.internal.zzc
com.facebook.react.modules.timepicker.TimePickerDialogModule: java.lang.String FRAGMENT_TAG
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: com.facebook.drawee.controller.AbstractDraweeControllerBuilder mDraweeControllerBuilder
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisPercent(long,float)
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
org.webrtc.SurfaceEglRenderer: void init(org.webrtc.EglBase$Context,int[],org.webrtc.RendererCommon$GlDrawer)
com.google.android.gms.internal.measurement.zzcd$zze: long zzf
com.facebook.react.views.view.ReactViewGroup: int getAllChildrenCount()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
org.jitsi.meet.sdk.R$style: int SpinnerTimePickerDialog
org.webrtc.EglBase10Impl: void createSurface(android.view.Surface)
org.jitsi.meet.sdk.R$styleable: int Toolbar_navigationContentDescription
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType)
androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)
org.webrtc.voiceengine.WebRtcAudioRecord: int audioSource
okhttp3.HttpUrl$Builder: java.util.List encodedPathSegments
com.horcrux.svg.R$string: int abc_searchview_description_voice
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String)
org.webrtc.EglBase: org.webrtc.EglBase$Context getEglBaseContext()
org.jitsi.meet.sdk.BroadcastEvent$Type: org.jitsi.meet.sdk.BroadcastEvent$Type buildTypeFromName(java.lang.String)
okhttp3.internal.Util
org.jitsi.meet.sdk.RNConnectionService: void endCall(java.lang.String)
com.calendarevents.CalendarEvents: boolean access$200(com.calendarevents.CalendarEvents,java.lang.String)
androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
okio.Timeout: okio.Timeout clearTimeout()
org.jitsi.meet.R$layout: int abc_select_dialog_material
org.jitsi.meet.R$style: int Base_ThemeOverlay_AppCompat_Light
com.horcrux.svg.RenderableViewManager$SymbolManager: void setVbWidth(com.horcrux.svg.SymbolView,float)
com.facebook.react.bridge.JavaOnlyMap: java.util.HashMap toHashMap()
com.horcrux.svg.RenderableViewManager: RenderableViewManager(com.horcrux.svg.RenderableViewManager$SVGClass,com.horcrux.svg.RenderableViewManager$1)
com.facebook.react.bridge.JSBundleLoader: com.facebook.react.bridge.JSBundleLoader createAssetLoader(android.content.Context,java.lang.String,boolean)
okhttp3.Handshake: java.util.List peerCertificates
org.webrtc.CameraVideoCapturer: void addMediaRecorderToCamera(android.media.MediaRecorder,org.webrtc.CameraVideoCapturer$MediaRecorderHandler)
org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordThread
com.facebook.react.devsupport.JSDevSupport
org.webrtc.MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl: void flush()
com.google.android.gms.measurement.AppMeasurementJobService
org.jitsi.meet.R$id: int select_dialog_listview
org.jitsi.meet.R$attr: int listPopupWindowStyle
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setInjectedJavaScriptBeforeContentLoadedForMainFrameOnly(boolean)
okhttp3.internal.http2.Header: okio.ByteString TARGET_AUTHORITY
com.facebook.drawee.view.DraweeView: float getAspectRatio()
com.horcrux.svg.R$id: int textSpacerNoTitle
okhttp3.Dns: okhttp3.Dns SYSTEM
okhttp3.internal.http2.Hpack: okhttp3.internal.http2.Header[] STATIC_HEADER_TABLE
org.webrtc.LibvpxVp8Encoder
org.jitsi.meet.MainActivity: int OVERLAY_PERMISSION_REQUEST_CODE
com.facebook.react.views.text.ReactRawTextManager: java.lang.String REACT_CLASS
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
okhttp3.Response: boolean isRedirect()
org.webrtc.DefaultVideoEncoderFactory: DefaultVideoEncoderFactory(org.webrtc.VideoEncoderFactory)
org.jitsi.meet.R$color: int colorPrimary
com.learnium.RNDeviceInfo.RNDeviceModule: double getMaxMemorySync()
org.jitsi.meet.sdk.R$dimen: int compat_button_padding_horizontal_material
com.facebook.react.devsupport.DevInternalSettings: java.lang.String PREFS_JS_BUNDLE_DELTAS_CPP_KEY
com.google.android.gms.internal.measurement.zzig
okhttp3.HttpUrl: java.lang.String FRAGMENT_ENCODE_SET
org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
okhttp3.OkHttpClient$1: OkHttpClient$1()
com.horcrux.svg.R$styleable: int PopupWindow_android_popupBackground
com.horcrux.svg.R$attr: int state_above_anchor
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
org.webrtc.NativeAndroidVideoTrackSource
org.webrtc.EglRenderer$2: org.webrtc.EglRenderer this$0
com.facebook.react.bridge.BaseJavaModule: void onCatalystInstanceDestroy()
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException
okio.ByteString: okio.ByteString decodeBase64(java.lang.String)
org.jitsi.meet.R$styleable: int ActionBar_contentInsetRight
org.jitsi.meet.sdk.R$raw: int lang_mainet
com.horcrux.svg.SvgView: com.horcrux.svg.SVGLength mbbWidth
kotlin.UninitializedPropertyAccessException
com.google.android.gms.auth.UserRecoverableAuthException
org.webrtc.RtpTransceiver: org.webrtc.RtpSender nativeGetSender(long)
com.google.android.gms.common.SignInButton: void setOnClickListener(android.view.View$OnClickListener)
org.webrtc.Camera2Session$SessionState: org.webrtc.Camera2Session$SessionState[] values()
org.jitsi.meet.sdk.R$attr: int actionViewClass
com.horcrux.svg.RenderableViewManager$ForeignObjectManager
org.jitsi.meet.sdk.R$drawable: int common_google_signin_btn_text_dark_normal_background
com.horcrux.svg.RenderableViewManager: void setVectorEffect(com.horcrux.svg.RenderableView,int)
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_pressedStateOverlayImage
com.horcrux.svg.R$dimen: int notification_big_circle_margin
okhttp3.internal.http2.Hpack$Writer: int dynamicTableByteCount
androidx.fragment.app.FragmentManagerViewModel
org.webrtc.VideoEncoder$EncodeInfo: VideoEncoder$EncodeInfo(org.webrtc.EncodedImage$FrameType[])
org.webrtc.PeerConnectionFactory$ThreadInfo: int tid
okhttp3.OkHttpClient: int callTimeoutMillis()
okhttp3.internal.huc.DelegatingHttpsURLConnection: long getContentLengthLong()
com.facebook.react.devsupport.DisabledDevSupportManager: void startInspector()
org.webrtc.DefaultVideoDecoderFactory: org.webrtc.VideoDecoderFactory platformSoftwareVideoDecoderFactory
org.webrtc.Camera2Session: android.hardware.camera2.CameraCharacteristics cameraCharacteristics
okhttp3.internal.http2.Http2Connection$PingRunnable: Http2Connection$PingRunnable(okhttp3.internal.http2.Http2Connection,boolean,int,int)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.horcrux.svg.RenderableViewManager$TextViewManager: void setBaselineShift(com.horcrux.svg.TextView,com.facebook.react.bridge.Dynamic)
org.jitsi.meet.R$styleable: int MenuGroup_android_menuCategory
org.webrtc.HardwareVideoEncoder$YuvFormat$2: void fillBuffer(java.nio.ByteBuffer,org.webrtc.VideoFrame$Buffer)
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteSelector$Selection next()
com.facebook.react.devsupport.DevLoadingViewController: void showMessage(java.lang.String)
com.facebook.react.bridge.ReadableArray: com.facebook.react.bridge.ReadableType getType(int)
org.jitsi.meet.sdk.R$interpolator: int fast_out_slow_in
org.jitsi.meet.sdk.R$dimen: int notification_right_icon_size
org.jitsi.meet.R$styleable: int ViewStubCompat_android_layout
org.jitsi.meet.sdk.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
com.oney.WebRTCModule.RTCVideoViewManager: java.lang.String getName()
com.facebook.drawee.view.DraweeView: void setGlobalLegacyVisibilityHandlingEnabled(boolean)
okhttp3.Handshake
org.jitsi.meet.sdk.R$color: int ripple_material_light
org.webrtc.AndroidVideoDecoder: java.lang.String MEDIA_FORMAT_KEY_CROP_BOTTOM
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.facebook.react.views.textinput.ReactTextInputManager: void receiveCommand(com.facebook.react.views.textinput.ReactEditText,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.modules.network.NetworkingModule: java.util.List access$400(com.facebook.react.modules.network.NetworkingModule)
okhttp3.CacheControl: boolean immutable()
okio.GzipSink
org.webrtc.HardwareVideoEncoder: org.webrtc.VideoCodecStatus release()
org.webrtc.CameraCapturer: java.lang.String access$1500(org.webrtc.CameraCapturer)
org.jitsi.meet.R$style: int Base_Widget_AppCompat_PopupWindow
com.facebook.react.views.view.ReactViewManager: void setAccessible(com.facebook.react.views.view.ReactViewGroup,boolean)
org.jitsi.meet.sdk.ListenerUtils$1: java.lang.Object val$listener
okhttp3.Challenge: java.util.Map authParams
okhttp3.internal.ws.RealWebSocket: long queueSize
org.jitsi.meet.sdk.BroadcastEvent$Type: java.lang.String ENDPOINT_TEXT_MESSAGE_RECEIVED_NAME
org.jitsi.meet.R$color: int dim_foreground_material_dark
org.webrtc.voiceengine.WebRtcAudioTrack$WebRtcAudioTrackErrorCallback: void onWebRtcAudioTrackInitError(java.lang.String)
com.reactnativecommunity.webview.RNCWebViewManager: int COMMAND_LOAD_URL
com.facebook.react.devsupport.InspectorPackagerConnection: java.lang.String TAG
com.facebook.react.devsupport.DevServerHelper$5: void onPostExecute(java.lang.Object)
org.webrtc.Logging$Severity: org.webrtc.Logging$Severity LS_ERROR
okhttp3.internal.tls.BasicCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
com.horcrux.svg.R$attr: int navigationMode
com.facebook.react.devsupport.DevSupportManagerImpl: java.io.File mJSBundleTempFile
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])
okhttp3.internal.http2.Huffman$Node
okhttp3.CacheControl$Builder: boolean onlyIfCached
okhttp3.internal.huc.DelegatingHttpsURLConnection: int getReadTimeout()
com.facebook.react.devsupport.RedBoxDialog$StackAdapter
org.webrtc.VideoSource$1: void onCapturerStarted(boolean)
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
okhttp3.RealCall: okhttp3.Call clone()
org.webrtc.YuvConverter$ShaderCallbacks: int coeffsLoc
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.facebook.jni.Countable
com.horcrux.svg.SvgViewManager: com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
androidx.viewpager.widget.ViewPager: int getOffscreenPageLimit()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.fragment.app.Fragment: void performPictureInPictureModeChanged(boolean)
okhttp3.HttpUrl: java.net.URL url()
com.dropbox.core.v2.sharing.ListFolderMembersContinueErrorException
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
org.webrtc.SurfaceTextureHelper: android.os.Handler getHandler()
org.jitsi.meet.R$attr: int activityChooserViewStyle
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
org.jitsi.meet.sdk.R$id: int action_mode_bar
com.horcrux.svg.R$bool: int abc_allow_stacked_button_bar
org.webrtc.EglBase10Impl$1FakeSurfaceHolder: void setFixedSize(int,int)
com.facebook.react.views.view.ReactViewGroup: void updateClippingRect()
com.facebook.react.bridge.JavaScriptContextHolder
okio.RealBufferedSource: void readFully(byte[])
org.webrtc.NetworkChangeDetector$NetworkInformation: java.lang.String name
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarWidgetTheme
com.horcrux.svg.R$styleable: int MenuItem_android_enabled
com.facebook.react.devsupport.JSCHeapCapture: void captureHeap(java.lang.String,com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback)
org.webrtc.EncodedImage$Builder: java.nio.ByteBuffer buffer
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder pingInterval(long,java.util.concurrent.TimeUnit)
org.webrtc.RendererCommon$GlDrawer
com.facebook.react.devsupport.InspectorPackagerConnection: void sendEvent(java.lang.String,java.lang.Object)
com.horcrux.svg.R$attr: int color
okhttp3.internal.cache.DiskLruCache: java.util.LinkedHashMap lruEntries
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.measurement.zzcd$zzg: com.google.android.gms.internal.measurement.zzcd$zzh zzaq
org.webrtc.voiceengine.WebRtcAudioUtils: void logAudioStateBasic(java.lang.String,android.media.AudioManager)
org.jitsi.meet.sdk.R$style: int Base_ThemeOverlay_AppCompat_Dark
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_overlayImage
okio.ForwardingTimeout: ForwardingTimeout(okio.Timeout)
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.TurnCustomizer turnCustomizer
okhttp3.Response$Builder: long sentRequestAtMillis
org.webrtc.NetworkMonitorAutoDetect$NetworkState: boolean isConnected()
okhttp3.internal.http2.Http2Connection$1: Http2Connection$1(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode)
com.horcrux.svg.R$attr: int spinnerDropDownItemStyle
org.jitsi.meet.sdk.ParticipantInfo: java.lang.String displayName
org.jitsi.meet.sdk.AudioModeModule$4: com.facebook.react.bridge.Promise val$promise
org.webrtc.HardwareVideoEncoderFactory: boolean isH264HighProfileSupported(android.media.MediaCodecInfo)
okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)
org.jitsi.meet.sdk.R$id: int submenuarrow
org.webrtc.ScreenCapturerAndroid: android.hardware.display.VirtualDisplay virtualDisplay
org.jitsi.meet.R$style: int SpinnerDatePickerDialog
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_ListPopupWindow
org.webrtc.RtpSender: org.webrtc.RtpParameters getParameters()
com.facebook.react.bridge.JavaMethodWrapper$9: JavaMethodWrapper$9()
okhttp3.Protocol: okhttp3.Protocol HTTP_1_0
androidx.fragment.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
com.facebook.react.devsupport.RedBoxDialog: boolean access$002(com.facebook.react.devsupport.RedBoxDialog,boolean)
org.webrtc.EglBase10Impl$1FakeSurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)
com.horcrux.svg.RenderableViewManager$CircleViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.modules.share.ShareModule: java.lang.String ACTION_SHARED
okhttp3.internal.cache2.Relay: boolean complete
com.horcrux.svg.RenderableViewManager: void setMarkerStart(com.horcrux.svg.VirtualView,java.lang.String)
org.webrtc.VideoFrame: int getRotation()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.facebook.react.views.view.ReactViewGroup: int getZIndexMappedChildIndex(int)
okhttp3.internal.Util: java.lang.AssertionError assertionError(java.lang.String,java.lang.Exception)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: android.os.Bundle access$602(org.jitsi.meet.sdk.JitsiMeetConferenceOptions,android.os.Bundle)
org.jitsi.meet.sdk.AudioModeModule$3: java.lang.String val$device
org.webrtc.CameraEnumerationAndroid$1: int MAX_FPS_HIGH_DIFF_WEIGHT
com.facebook.react.fabric.events.EventEmitterWrapper: com.facebook.jni.HybridData initHybrid()
org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode: org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode AUDIO_TRACK_START_EXCEPTION
okhttp3.internal.http2.Http2Connection$5
okhttp3.HttpUrl: java.util.List pathSegments
org.webrtc.ScreenCapturerAndroid: org.webrtc.CapturerObserver capturerObserver
org.webrtc.VideoCodecInfo: java.lang.String H264_FMTP_LEVEL_ASYMMETRY_ALLOWED
com.facebook.react.fabric.events.EventBeatManager: void beat()
org.webrtc.ScreenCapturerAndroid: void access$500(org.webrtc.ScreenCapturerAndroid)
com.facebook.react.modules.appstate.AppStateModule: void onHostResume()
org.webrtc.HardwareVideoEncoder: void releaseCodecOnOutputThread()
org.jitsi.meet.R$attr: int listMenuViewStyle
okio.BufferedSink: okio.BufferedSink writeDecimalLong(long)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: java.lang.String getName()
org.jitsi.meet.R$dimen: int abc_action_bar_default_padding_start_material
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setOverScrollMode(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
org.jitsi.meet.R$styleable: int MenuItem_iconTint
org.jitsi.meet.sdk.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_0
org.webrtc.CryptoOptions$Srtp: boolean enableGcmCryptoSuites
org.jitsi.meet.sdk.R$dimen: int abc_text_size_body_2_material
org.webrtc.EncodedImage$Builder: org.webrtc.EncodedImage$Builder setCaptureTimeNs(long)
org.jitsi.meet.R$attr: int firstBaselineToTopHeight
com.facebook.react.bridge.CatalystInstanceImpl$4
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
com.facebook.react.uimanager.LayoutShadowNode: void setFlex(float)
org.jitsi.meet.R$attr: int titleMargin
com.facebook.react.fabric.events.FabricEventEmitter: com.facebook.react.bridge.WritableMap getWritableMap(com.facebook.react.bridge.ReadableMap)
okio.ByteString: byte[] toByteArray()
com.calendarevents.CalendarEvents: java.lang.String createRecurrenceRule(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,com.facebook.react.bridge.ReadableArray,java.lang.String,java.lang.Integer)
org.jitsi.meet.R$styleable: int[] AppCompatTextHelper
com.facebook.react.devsupport.DevSupportManagerImpl$25: com.facebook.react.devsupport.DevSupportManagerImpl this$0
com.horcrux.svg.R$styleable: int AppCompatTheme_checkedTextViewStyle
org.jitsi.meet.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
org.webrtc.DataChannel: java.lang.String nativeLabel()
androidx.activity.ComponentActivity$3
okhttp3.EventListener: void requestBodyEnd(okhttp3.Call,long)
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
org.webrtc.JavaI420Buffer: java.nio.ByteBuffer dataY
org.webrtc.PeerConnection$IceTransportsType: org.webrtc.PeerConnection$IceTransportsType valueOf(java.lang.String)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderStyle(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String)
org.jitsi.meet.sdk.R$attr: int overlapAnchor
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_RC4_40_MD5
org.webrtc.VideoFrameDrawer: float[] dstPoints
org.webrtc.CandidatePairChangeEvent: org.webrtc.IceCandidate local
com.facebook.react.bridge.JavaMethodWrapper$6: JavaMethodWrapper$6()
org.jitsi.meet.R$dimen: int tooltip_margin
org.jitsi.meet.R$raw: int lang_mainfr
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.facebook.react.bridge.GuardedRunnable: void run()
com.facebook.react.bridge.CatalystInstanceImpl: void jniLoadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_homeAsUpIndicator
com.facebook.react.uimanager.BaseViewManager: void setBorderBottomLeftRadius(android.view.View,float)
org.webrtc.PeerConnectionFactory$Options: int ADAPTER_TYPE_ETHERNET
org.jitsi.meet.sdk.R$style: int Animation_AppCompat_Dialog
com.facebook.react.bridge.JSApplicationIllegalArgumentException: JSApplicationIllegalArgumentException(java.lang.String,java.lang.Throwable)
okhttp3.Response: okhttp3.ResponseBody peekBody(long)
okhttp3.internal.ws.RealWebSocket: okhttp3.Call call
com.facebook.drawee.view.SimpleDraweeView: void setActualImageResource(int)
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: StackTraceHelper$StackFrameImpl(java.lang.String,java.lang.String,java.lang.String,int,int)
org.webrtc.RtpTransceiver: void nativeStopStandard(long)
com.facebook.react.bridge.ModuleSpec: java.lang.String getName()
org.jitsi.meet.sdk.R$styleable: int[] AppCompatTextHelper
org.jitsi.meet.sdk.R$drawable: int abc_list_divider_mtrl_alpha
com.horcrux.svg.VirtualView: android.graphics.Path mMarkerPath
org.jitsi.meet.sdk.R$styleable: int Toolbar_maxButtonHeight
org.webrtc.CryptoOptions$SFrame: CryptoOptions$SFrame(org.webrtc.CryptoOptions,boolean,org.webrtc.CryptoOptions$1)
org.jitsi.meet.sdk.R$styleable: int SwitchCompat_thumbTint
org.webrtc.Camera2Session$SessionState: Camera2Session$SessionState(java.lang.String,int)
okhttp3.ResponseBody$BomAwareReader: ResponseBody$BomAwareReader(okio.BufferedSource,java.nio.charset.Charset)
org.webrtc.DynamicBitrateAdjuster: int bitrateAdjustmentScaleExp
org.jitsi.meet.R$styleable: int[] AnimatedStateListDrawableItem
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService: int access$202(org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService,int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA256
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Title_Inverse
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_Light_DarkActionBar
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_END
okhttp3.internal.huc.OkHttpsURLConnection: void setDoInput(boolean)
org.jitsi.meet.sdk.ConnectionService$ConnectionImpl: void onAbort()
org.jitsi.meet.R$styleable: int ActionBar_backgroundStacked
androidx.appcompat.widget.AppCompatRadioButton
org.jitsi.meet.sdk.R$anim: int abc_slide_in_bottom
org.webrtc.VideoSource: org.webrtc.CapturerObserver getCapturerObserver()
okhttp3.internal.ws.WebSocketWriter: void writeClose(int,okio.ByteString)
org.webrtc.RTCStatsCollectorCallback
org.webrtc.PeerConnection$AdapterType: PeerConnection$AdapterType(java.lang.String,int,java.lang.Integer)
androidx.fragment.app.FragmentActivity: void onLowMemory()
org.jitsi.meet.sdk.R$string: int abc_searchview_description_submit
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder setFeatureFlag(java.lang.String,int)
okhttp3.internal.tls.DistinguishedNameParser
org.jitsi.meet.R$attr: int actionModeStyle
org.webrtc.VideoCodecStatus: org.webrtc.VideoCodecStatus valueOf(java.lang.String)
org.jitsi.meet.sdk.net.NAT64AddrInfoModule: java.lang.String TAG
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.dropbox.core.v2.team.TeamFolderPermanentlyDeleteErrorException
okhttp3.Connection: okhttp3.Handshake handshake()
okio.DeflaterSink: DeflaterSink(okio.Sink,java.util.zip.Deflater)
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_roundBottomEnd
org.jitsi.meet.R$styleable: int CompoundButton_android_button
com.facebook.react.bridge.DynamicFromMap$1
com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter: void emit(java.lang.String,java.lang.Object)
com.facebook.react.uimanager.ViewGroupManager: void addView(android.view.ViewGroup,android.view.View,int)
org.webrtc.Camera2Session: java.lang.String cameraId
okhttp3.internal.http2.PushObserver
com.horcrux.svg.R$attr: int roundAsCircle
org.webrtc.WrappedNativeI420Buffer: int getWidth()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.reactnativecommunity.webview.RNCWebViewManager: com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView createRNCWebViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.devsupport.StackTraceHelper: java.lang.String formatStackTrace(java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[])
com.facebook.react.uimanager.BaseViewManager: void logUnsupportedPropertyWarning(java.lang.String)
com.facebook.react.bridge.NativeModule: boolean canOverrideExistingModule()
org.jitsi.meet.R$raw: int lang_languagesvi
com.facebook.react.devsupport.DisabledDevSupportManager: void addCustomDevOption(java.lang.String,com.facebook.react.devsupport.interfaces.DevOptionHandler)
okhttp3.WebSocket: boolean send(java.lang.String)
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream$InvalidStreamException: MemoryPooledByteBufferOutputStream$InvalidStreamException()
org.webrtc.EglBase14$Context: android.opengl.EGLContext getRawContext()
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzac
org.jitsi.meet.R$dimen: int abc_list_item_height_small_material
com.horcrux.svg.SvgViewManager: void updateExtraData(android.view.View,java.lang.Object)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.facebook.react.modules.camera.CameraRollManager: java.lang.String ERROR_UNABLE_TO_LOAD
org.webrtc.H264Utils: boolean nativeIsSameH264Profile(java.util.Map,java.util.Map)
org.webrtc.VideoFrame: int getRotatedWidth()
com.facebook.react.devsupport.ViewHierarchyUtil: android.util.Pair getDeepestLeaf(android.view.View)
com.facebook.react.devsupport.BundleDownloader: BundleDownloader(okhttp3.OkHttpClient)
org.jitsi.meet.R$id: int ifRoom
org.webrtc.NetworkChangeDetector$Observer: void onNetworkDisconnect(long)
org.jitsi.meet.sdk.R$styleable: int SearchView_voiceIcon
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: boolean mClosed
okhttp3.JavaNetAuthenticator: JavaNetAuthenticator()
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundBottomLeft
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
org.jitsi.meet.R$styleable: int AnimatedStateListDrawableItem_android_drawable
okhttp3.internal.http1.Http1Codec$FixedLengthSink: void flush()
com.horcrux.svg.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
com.facebook.imagepipeline.memory.BasePool$PoolSizeViolationException
com.facebook.react.bridge.JavaModuleWrapper: java.util.ArrayList mDescs
org.webrtc.CameraCapturer$3: CameraCapturer$3(org.webrtc.CameraCapturer)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.horcrux.svg.VirtualView: android.graphics.Matrix mTransform
org.jitsi.meet.R$integer: int react_native_dev_server_port
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMaxHeight(long,float)
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Call call
org.webrtc.MediaStreamTrack: boolean nativeGetEnabled(long)
org.jitsi.meet.sdk.R$attr: int submitBackground
org.jitsi.meet.R$attr: int iconifiedByDefault
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback: void decrementPendingJSCalls()
org.jitsi.meet.R$attr: int switchMinWidth
okhttp3.Cookie: boolean secure()
okhttp3.Cookie: long parseExpires(java.lang.String,int,int)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.horcrux.svg.R$styleable: int[] Spinner
com.facebook.react.bridge.DynamicFromMap: boolean isNull()
okhttp3.internal.ws.WebSocketWriter: java.util.Random random
okhttp3.package-info
com.rnimmersive.RNImmersiveModule: com.rnimmersive.RNImmersiveModule SINGLETON
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants REGISTER_JS_SEGMENT_START
com.oney.WebRTCModule.WebRTCModule: java.util.Map localStreams
okhttp3.Cache: void evictAll()
org.webrtc.voiceengine.WebRtcAudioTrack: boolean stopPlayout()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_DES_CBC_SHA
com.horcrux.svg.RenderableViewManager$MarkerManager
org.jitsi.meet.R$id: int accessibility_custom_action_6
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler: CatalystInstanceImpl$NativeExceptionHandler(com.facebook.react.bridge.CatalystInstanceImpl)
com.facebook.react.devsupport.interfaces.DevSupportManager: void toggleElementInspector()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: boolean mActive
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion
org.webrtc.JavaI420Buffer: int getHeight()
okhttp3.Cookie: java.lang.String domain()
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: ProxyJavaScriptExecutor$Factory(com.facebook.react.bridge.JavaJSExecutor$Factory)
org.jitsi.meet.R$styleable: int AppCompatTheme_windowActionModeOverlay
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)
org.jitsi.meet.sdk.R$color: int foreground_material_light
com.dropbox.core.v2.common.PathRootError$Tag: com.dropbox.core.v2.common.PathRootError$Tag[] values()
org.webrtc.CameraEnumerationAndroid: org.webrtc.Size getClosestSupportedSize(java.util.List,int,int)
com.facebook.react.modules.timepicker.TimePickerDialogModule: java.lang.String ARG_HOUR
com.facebook.react.bridge.Inspector$Page
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl: StackTraceHelper$StackFrameImpl(java.lang.String,java.lang.String,int,int)
org.jitsi.meet.sdk.R$drawable: int abc_ic_star_half_black_48dp
com.horcrux.svg.GroupView: void setFont(com.facebook.react.bridge.ReadableMap)
okhttp3.internal.http1.Http1Codec$FixedLengthSink: Http1Codec$FixedLengthSink(okhttp3.internal.http1.Http1Codec,long)
org.webrtc.PeerConnection$PeerConnectionState
org.jitsi.meet.R$id: int focusCrop
org.jitsi.meet.sdk.R$drawable: int abc_vector_test
com.horcrux.svg.VirtualView: android.graphics.Region mRegion
org.jitsi.meet.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
okio.RealBufferedSource: long indexOf(okio.ByteString,long)
org.jitsi.meet.sdk.R$attr: int spinnerDropDownItemStyle
okhttp3.CacheControl$Builder: int maxAgeSeconds
org.webrtc.Metrics$HistogramInfo: void addSample(int,int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_NULL_SHA
okio.AsyncTimeout: okio.AsyncTimeout head
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.facebook.react.bridge.JavaOnlyMap$2: int[] $SwitchMap$com$facebook$react$bridge$ReadableType
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.facebook.react.views.viewpager.ReactViewPager: void setViews(java.util.List)
org.webrtc.audio.WebRtcAudioUtils: WebRtcAudioUtils()
org.webrtc.NetworkChangeDetector$Observer: void onNetworkPreference(java.util.List,int)
org.jitsi.meet.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
org.jitsi.meet.sdk.R$attr: int indeterminateProgressStyle
org.webrtc.ScreenCapturerAndroid: android.media.projection.MediaProjection mediaProjection
okhttp3.internal.ws.RealWebSocket$2
com.reactnativecommunity.webview.RNCWebViewManager: void setAllowsFullscreenVideo(android.webkit.WebView,java.lang.Boolean)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder query(java.lang.String)
com.horcrux.svg.R$styleable: int ActionBar_progressBarStyle
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
okhttp3.MultipartBody$Builder: MultipartBody$Builder()
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Caption
okio.ByteString: byte getByte(int)
org.jitsi.meet.R$style: int Widget_AppCompat_ActionBar_Solid
okhttp3.internal.http2.Http2Stream$FramingSink: boolean finished
com.horcrux.svg.R$dimen: int hint_pressed_alpha_material_light
androidx.fragment.app.Fragment$2
org.jitsi.meet.sdk.R$anim: int fragment_close_enter
org.jitsi.meet.R$styleable: int MenuView_preserveIconSpacing
com.horcrux.svg.R$anim: int abc_fade_out
org.jitsi.meet.R$color: int bright_foreground_material_dark
org.jitsi.meet.sdk.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
com.facebook.react.bridge.JSBundleLoader$4: JSBundleLoader$4(java.lang.String,com.facebook.react.bridge.NativeDeltaClient)
okio.Buffer: okio.ByteString sha256()
org.webrtc.GlGenericDrawer: void release()
com.horcrux.svg.R$styleable: int AppCompatTheme_controlBackground
org.jitsi.meet.sdk.log.JitsiMeetLogger: void i(java.lang.String,java.lang.Object[])
com.horcrux.svg.R$drawable: int abc_list_longpressed_holo
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
org.webrtc.voiceengine.WebRtcAudioManager: boolean lowLatencyInput
org.jitsi.meet.sdk.R$styleable: int SearchView_closeIcon
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants INITIALIZE_MODULE_END
org.webrtc.voiceengine.WebRtcAudioRecord$AudioSamples: int channelCount
com.learnium.RNDeviceInfo.RNDeviceModule: void getTags(com.facebook.react.bridge.Promise)
com.facebook.react.uimanager.BaseViewManager: float CAMERA_DISTANCE_NORMALIZATION_MULTIPLIER
com.horcrux.svg.R$styleable: int[] ListPopupWindow
com.google.android.gms.internal.measurement.zzbv$zzc: int zzc
com.dropbox.core.v2.files.SaveCopyReferenceErrorException
okhttp3.internal.connection.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)
okio.ByteString: okio.ByteString sha512()
org.webrtc.CameraCapturer$1: org.webrtc.CameraCapturer this$0
org.webrtc.NetworkChangeDetector$ConnectionType: org.webrtc.NetworkChangeDetector$ConnectionType CONNECTION_3G
org.webrtc.AndroidVideoDecoder: void deliverByteFrame(int,android.media.MediaCodec$BufferInfo,int,java.lang.Integer)
org.jitsi.meet.sdk.R$attr: int showText
com.calendarevents.CalendarEvents: java.util.HashMap permissionsPromises
kotlin.NoWhenBranchMatchedException
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.util.Map getExportedViewConstants()
com.facebook.react.bridge.ReactContext$1: com.facebook.react.bridge.ReactContext this$0
org.webrtc.EncodedImage: java.nio.ByteBuffer getBuffer()
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String getResponseMessage()
org.webrtc.ThreadUtils$1: java.lang.Thread val$thread
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action: org.jitsi.meet.sdk.JitsiMeetOngoingConferenceService$Action START
org.jitsi.meet.sdk.R$string: int state_on_description
com.horcrux.svg.R$attr: int alertDialogTheme
okhttp3.internal.huc.OkHttpsURLConnection: java.lang.String toString()
okio.Timeout: okio.Timeout clearDeadline()
com.horcrux.svg.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
okhttp3.EventListener
okio.HashingSource: okio.HashingSource hmacSha256(okio.Source,okio.ByteString)
com.facebook.react.uimanager.events.ReactEventEmitter: com.facebook.react.bridge.ReactApplicationContext mReactContext
com.facebook.react.devsupport.interfaces.DevSupportManager: void reloadJSFromServer(java.lang.String)
okhttp3.internal.tls.DistinguishedNameParser: DistinguishedNameParser(javax.security.auth.x500.X500Principal)
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$ContinualGatheringPolicy getContinualGatheringPolicy()
org.webrtc.CameraCapturer$4
org.webrtc.voiceengine.WebRtcAudioRecord: void reportWebRtcAudioRecordError(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long)
org.jitsi.meet.R$id: int accessibility_custom_action_24
okio.GzipSink: void close()
org.webrtc.PeerConnectionFactory: org.webrtc.PeerConnectionFactory$ThreadInfo staticNetworkThread
org.jitsi.meet.sdk.AudioDeviceHandlerConnectionService: void onCallAudioStateChange(android.telecom.CallAudioState)
org.jitsi.meet.R$id: int info
org.jitsi.meet.sdk.R$id: R$id()
org.webrtc.AndroidVideoDecoder: java.lang.Thread outputThread
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getGmpAppId(com.google.android.gms.internal.measurement.zzw)
okhttp3.internal.http1.Http1Codec$1
com.horcrux.svg.RenderableViewManager$RadialGradientManager: RenderableViewManager$RadialGradientManager()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void priority(int,int,int,boolean)
com.facebook.react.bridge.queue.MessageQueueThreadHandler: MessageQueueThreadHandler(android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
org.jitsi.meet.R$styleable: int SearchView_queryBackground
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_MD5
com.facebook.react.devsupport.DevSupportManagerImpl: java.lang.String getSourceMapUrl()
okhttp3.internal.http2.Http2Codec: okio.Sink createRequestBody(okhttp3.Request,long)
org.webrtc.CameraCapturer$SwitchState: CameraCapturer$SwitchState(java.lang.String,int)
org.jitsi.meet.sdk.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_1
com.horcrux.svg.R$style: int TextAppearance_AppCompat_SearchResult_Title
org.webrtc.EglRenderer: android.os.Handler access$300(org.webrtc.EglRenderer)
com.horcrux.svg.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
org.webrtc.audio.WebRtcAudioTrack$AudioTrackThread
okio.Buffer$2: okio.Buffer this$0
org.webrtc.VideoDecoder$DecodeInfo: boolean isMissingFrames
com.facebook.react.devsupport.BundleDownloader: void processMultipartResponse(java.lang.String,okhttp3.Response,java.lang.String,java.io.File,com.facebook.react.devsupport.BundleDownloader$BundleInfo,com.facebook.react.devsupport.BundleDeltaClient$ClientType,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener)
com.facebook.react.views.view.ReactViewGroup: void onSizeChanged(int,int,int,int)
com.facebook.react.devsupport.RedBoxHandler$ReportCompletedListener: void onReportError(android.text.SpannedString)
com.facebook.react.views.image.ReactImageView: void setShouldNotifyLoadEvents(boolean)
com.facebook.react.views.textinput.ReactTextInputManager: java.util.Map getExportedViewConstants()
com.facebook.react.bridge.WritableArray: void pushNull()
org.jitsi.meet.R$raw: int lang_languageshr
com.facebook.react.views.view.ReactViewManager: void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.JSBundleLoader$1: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
org.webrtc.NetworkChangeDetector$IPAddress: byte[] getAddress()
org.webrtc.audio.WebRtcAudioEffects: boolean isEffectTypeAvailable(java.util.UUID,java.util.UUID)
org.jitsi.meet.sdk.R$attr: int windowActionBarOverlay
com.horcrux.svg.SvgView: void defineTemplate(com.horcrux.svg.VirtualView,java.lang.String)
org.webrtc.NetworkMonitor: void notifyObserversOfNetworkConnect(org.webrtc.NetworkChangeDetector$NetworkInformation)
com.reactnativecommunity.webview.RNCWebViewManager$RNCWebView: void setMessagingModuleName(java.lang.String)
okhttp3.internal.connection.RealConnection$1: okhttp3.internal.connection.StreamAllocation val$streamAllocation
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(int,boolean,okio.Buffer)
com.facebook.react.bridge.JavaOnlyMap: java.util.Iterator getEntryIterator()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
okhttp3.internal.http1.Http1Codec: okhttp3.internal.connection.StreamAllocation streamAllocation
org.webrtc.RtpSender: boolean ownsTrack
com.facebook.react.modules.storage.AsyncStorageModule: void initialize()
org.jitsi.meet.sdk.R$id: int spacer
okhttp3.ConnectionPool: java.util.concurrent.Executor executor
okhttp3.internal.http2.Http2Reader$Handler: void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString)
com.horcrux.svg.R$attr: R$attr()
com.facebook.react.views.textinput.ReactTextInputShadowNode: void setSelection(com.facebook.react.bridge.ReadableMap)
org.webrtc.audio.LowLatencyAudioBufferManager: int ticksUntilNextDecrease
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: java.net.URL serverURL
com.horcrux.svg.SvgPackage: java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext)
com.horcrux.svg.R$styleable: int AlertDialog_listLayout
com.horcrux.svg.RenderableView: int CAP_BUTT
okio.RealBufferedSource: java.lang.String readUtf8Line()
okhttp3.internal.tls.BasicTrustRootIndex: java.util.Map subjectToCaCerts
org.webrtc.MediaStreamTrack: org.webrtc.MediaStreamTrack$State nativeGetState(long)
com.facebook.react.devsupport.StackTraceHelper: java.lang.String LINE_NUMBER_KEY
org.webrtc.MediaSource: long getNativeMediaSource()
org.jitsi.meet.R$attr: int listPreferredItemPaddingLeft
org.jitsi.meet.R$color: int ripple_material_light
okhttp3.internal.http2.Hpack
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.facebook.react.devsupport.DevServerHelper: void attachDebugger(android.content.Context,java.lang.String)
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.interfaces.DevBundleDownloadListener access$2100(com.facebook.react.devsupport.DevSupportManagerImpl)
com.facebook.react.devsupport.DevSupportManagerImpl$14: void onOptionSelected()
okhttp3.internal.ws.WebSocketProtocol: long PAYLOAD_BYTE_MAX
com.horcrux.svg.R$style: int Widget_AppCompat_ActivityChooserView
org.jitsi.meet.R$attr: int collapseIcon
com.facebook.react.bridge.JSBundleLoader$5: java.lang.String val$realSourceURL
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ExecutorService access$100()
com.horcrux.svg.R$styleable: int[] AlertDialog
com.facebook.react.bridge.queue.MessageQueueThreadSpec: long DEFAULT_STACK_SIZE_BYTES
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSnapToOffsets(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableArray)
org.webrtc.PeerConnectionFactory$InitializationOptions: PeerConnectionFactory$InitializationOptions(android.content.Context,java.lang.String,boolean,org.webrtc.NativeLibraryLoader,java.lang.String,org.webrtc.Loggable,org.webrtc.Logging$Severity)
org.jitsi.meet.sdk.R$attr: int actionBarStyle
com.facebook.react.views.slider.ReactSliderManager: void setEnabled(com.facebook.react.views.slider.ReactSlider,boolean)
org.webrtc.SurfaceTextureHelper$2: void onRelease(org.webrtc.TextureBufferImpl)
com.horcrux.svg.R$attr: int listPreferredItemPaddingRight
com.facebook.react.modules.blob.FileReaderModule: void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise)
okio.BufferedSink: long writeAll(okio.Source)
org.jitsi.meet.sdk.net.NAT64AddrInfo: java.lang.String bytesToHexString(byte[])
org.webrtc.audio.JavaAudioDeviceModule$AudioSamples
org.jitsi.meet.R$style: int Base_Theme_AppCompat_Light_Dialog
org.jitsi.meet.R$id: int accessibility_custom_action_27
com.facebook.react.modules.core.ExceptionsManagerModule: void dismissRedbox()
org.webrtc.Camera2Session$SessionState: org.webrtc.Camera2Session$SessionState[] $VALUES
okhttp3.Request$Builder: java.lang.String method
org.webrtc.CameraCapturer$5
com.horcrux.svg.R$style: int Theme_Catalyst
org.webrtc.RtpSender
androidx.fragment.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode errorCode
com.google.gson.stream.MalformedJsonException
com.horcrux.svg.R$dimen: int abc_select_dialog_padding_start_material
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_retryImageScaleType
okio.Buffer$1
okhttp3.Cache$Entry: Cache$Entry(okhttp3.Response)
com.facebook.jni.NativeRunnable: NativeRunnable(com.facebook.jni.HybridData)
com.facebook.react.bridge.WritableNativeMap: void putNativeArray(java.lang.String,com.facebook.react.bridge.WritableNativeArray)
org.jitsi.meet.R$styleable: int AnimatedStateListDrawableTransition_android_toId
okio.Buffer: void readFully(okio.Buffer,long)
okhttp3.Request$Builder: okhttp3.Request$Builder delete()
okio.Okio$1: okio.Timeout val$timeout
com.horcrux.svg.R$styleable: int SearchView_android_focusable
com.calendarevents.CalendarEvents: boolean removeCalendar(java.lang.String)
com.facebook.react.views.slider.ReactSliderManager
com.horcrux.svg.RenderableViewManager$CircleViewManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
org.webrtc.VideoDecoder
org.jitsi.meet.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
com.facebook.react.bridge.GuardedRunnable: void runGuarded()
com.google.android.gms.internal.measurement.zzci$zza: com.google.android.gms.internal.measurement.zzjp zze
org.webrtc.CameraSession$FailureType: CameraSession$FailureType(java.lang.String,int)
org.jitsi.meet.sdk.R$styleable: int ActionBar_homeAsUpIndicator
org.jitsi.meet.sdk.log.JitsiMeetLogger: void d(java.lang.String,java.lang.Object[])
org.webrtc.PeerConnection$BundlePolicy: org.webrtc.PeerConnection$BundlePolicy valueOf(java.lang.String)
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ActivityChooserView
org.jitsi.meet.R$id: int multiply
androidx.fragment.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)
org.jitsi.meet.R$styleable: int AppCompatTextView_drawableEndCompat
com.horcrux.svg.R$id: int default_activity_button
com.horcrux.svg.R$style: int ThemeOverlay_AppCompat_ActionBar
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.horcrux.svg.R$layout: int abc_cascading_menu_item_layout
com.horcrux.svg.R$styleable: int DrawerArrowToggle_color
org.jitsi.meet.R$styleable: int Toolbar_navigationIcon
com.horcrux.svg.R$styleable: int SimpleDraweeView_roundTopLeft
org.webrtc.VideoEncoder$ScalingSettings: java.lang.Integer low
okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)
org.jitsi.meet.R$styleable: int AppCompatSeekBar_tickMark
com.horcrux.svg.R$string: int catalyst_debug_nuclide
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: okhttp3.WebSocket mWebSocket
org.jitsi.meet.R$dimen: int abc_switch_padding
org.webrtc.voiceengine.WebRtcAudioUtils: void logAudioStateVolume(java.lang.String,android.media.AudioManager)
org.webrtc.FramerateBitrateAdjuster: int INITIAL_FPS
org.webrtc.RtpSender: org.webrtc.DtmfSender dtmfSender
okhttp3.internal.platform.ConscryptPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
org.webrtc.RtpParameters: java.util.List codecs
com.facebook.yoga.YogaNodeJNIBase
org.jitsi.meet.R$id: int title
okhttp3.ResponseBody: void close()
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_roundingBorderColor
okhttp3.internal.ws.RealWebSocket$2: RealWebSocket$2(okhttp3.internal.ws.RealWebSocket,okhttp3.Request)
com.facebook.react.bridge.JSCJavaScriptExecutor: com.facebook.jni.HybridData initHybrid(com.facebook.react.bridge.ReadableNativeMap)
com.facebook.react.modules.permissions.PermissionsModule: java.lang.String NAME
org.jitsi.meet.sdk.R$layout: int abc_alert_dialog_title_material
com.facebook.react.devsupport.ReactInstanceManagerDevHelper: android.app.Activity getCurrentActivity()
org.webrtc.audio.JavaAudioDeviceModule$AudioRecordErrorCallback: void onWebRtcAudioRecordInitError(java.lang.String)
okio.RealBufferedSource$1: int read()
org.jitsi.meet.R$string: int catalyst_debug
com.facebook.react.bridge.CxxModuleWrapper
com.horcrux.svg.R$attr: int autoCompleteTextViewStyle
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetMinWidth(long,float)
com.facebook.react.views.view.ReactViewManager: void setNativeBackground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap)
okhttp3.RequestBody$2
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.horcrux.svg.R$dimen: int abc_text_size_caption_material
org.jitsi.meet.sdk.R$styleable: int View_android_focusable
com.google.android.gms.auth.api.signin.RevocationBoundService
com.facebook.react.bridge.DynamicFromArray: DynamicFromArray()
okhttp3.internal.platform.Platform: int WARN
org.jitsi.meet.sdk.R$color: int abc_tint_default
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_SHA
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setBorderWidth(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float)
com.horcrux.svg.R$id: int text
org.jitsi.meet.R$attr: int alertDialogStyle
com.facebook.react.devsupport.InspectorPackagerConnection$Connection$1
androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)
okio.Options: void buildTrieRecursive(long,okio.Buffer,int,java.util.List,int,int,java.util.List)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_editTextBackground
org.webrtc.Camera2Session$CameraStateCallback: void onClosed(android.hardware.camera2.CameraDevice)
okio.RealBufferedSource: long readHexadecimalUnsignedLong()
org.jitsi.meet.sdk.R$attr: int lineHeight
org.jitsi.meet.sdk.R$attr: int actionModeCopyDrawable
org.webrtc.SurfaceTextureHelper: int oesTextureId
okhttp3.CacheControl: boolean noStore()
com.dropbox.core.v2.sharing.UnmountFolderErrorException
org.jitsi.meet.sdk.R$styleable: int PopupWindowBackgroundState_state_above_anchor
org.jitsi.meet.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate: NetworkMonitorAutoDetect$ConnectivityManagerDelegate(android.content.Context)
com.facebook.react.uimanager.RootViewManager: java.lang.String getName()
org.jitsi.meet.sdk.R$attr: int paddingStart
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.io.OutputStream getOutputStream()
org.webrtc.VideoSource: void setIsScreencast(boolean)
okhttp3.Route: okhttp3.Address address()
okhttp3.internal.proxy.NullProxySelector
org.webrtc.HardwareVideoEncoder: boolean running
com.facebook.react.devsupport.BundleDownloader$2: java.lang.String val$url
org.webrtc.Logging$TraceLevel: org.webrtc.Logging$TraceLevel TRACE_CRITICAL
org.webrtc.GlTextureFrameBuffer: int frameBufferId
org.jitsi.meet.sdk.R$raw: int lang_mainaf
org.jitsi.meet.R$string: int common_signin_button_text
com.horcrux.svg.R$styleable: int ViewStubCompat_android_id
org.webrtc.SurfaceEglRenderer: void init(org.webrtc.EglBase$Context,org.webrtc.RendererCommon$RendererEvents,int[],org.webrtc.RendererCommon$GlDrawer)
com.facebook.imagepipeline.platform.PreverificationHelper: PreverificationHelper()
com.horcrux.svg.R$attr: int homeAsUpIndicator
okhttp3.Cookie
org.jitsi.meet.R$styleable: int AppCompatTheme_windowActionBar
com.facebook.react.modules.permissions.PermissionsModule: int mRequestCode
org.webrtc.NetworkPreference: int NOT_PREFERRED
com.google.android.gms.internal.measurement.zzcd$zzd: int zzc
com.google.android.gms.internal.measurement.zzca$zzc: com.google.android.gms.internal.measurement.zzca$zzc zzf
okhttp3.RealCall: java.io.IOException timeoutExit(java.io.IOException)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
okhttp3.CacheControl: boolean onlyIfCached
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder setWelcomePageEnabled(boolean)
com.horcrux.svg.R$dimen: int notification_right_icon_size
com.kevinresol.react_native_default_preference.RNDefaultPreferenceModule: void clear(java.lang.String,com.facebook.react.bridge.Promise)
com.facebook.react.views.view.ReactViewGroup: java.lang.String mBackfaceVisibility
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
okio.BufferedSource: int readUtf8CodePoint()
org.webrtc.NetworkMonitorAutoDetect$SimpleNetworkCallback: void onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities)
org.jitsi.meet.R$color: int material_grey_900
org.webrtc.HardwareVideoEncoder: int VIDEO_AVC_LEVEL_3
org.jitsi.meet.sdk.R$style: int Base_Animation_AppCompat_Dialog
okhttp3.Handshake: java.security.Principal peerPrincipal()
org.jitsi.meet.sdk.log.JitsiMeetLogger: void e(java.lang.Throwable)
okhttp3.CertificatePinner$Builder
org.jitsi.meet.R$drawable: int abc_cab_background_top_material
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
org.jitsi.meet.R$attr: int listChoiceIndicatorSingleAnimated
com.horcrux.svg.R$drawable: int abc_action_bar_item_background_material
org.webrtc.CameraEnumerator: java.util.List getSupportedFormats(java.lang.String)
okhttp3.internal.http2.Hpack$Writer: int headerTableSizeSetting
org.jitsi.meet.R$id: int action_mode_bar_stub
com.horcrux.svg.R$id: int accessibility_hint
org.webrtc.MediaSource$State: org.webrtc.MediaSource$State[] values()
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: void stop()
com.facebook.react.bridge.CatalystInstanceImpl: boolean isDestroyed()
com.facebook.react.devsupport.DevSupportManagerImpl$24$1: com.facebook.react.devsupport.DevSupportManagerImpl$24 this$1
org.jitsi.meet.R$styleable: int[] FontFamilyFont
com.oney.WebRTCModule.WebRTCModule: void peerConnectionInitAsync(org.webrtc.PeerConnection$RTCConfiguration,int)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableArray getArray(int)
com.horcrux.svg.R$attr: int expandActivityOverflowButtonDrawable
com.horcrux.svg.SvgView$Events
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_autoSizeMinTextSize
com.facebook.react.bridge.JavaOnlyArray: JavaOnlyArray(java.lang.Object[])
com.facebook.react.views.picker.ReactPicker: void setStagedItems(java.util.List)
okhttp3.internal.http2.Http2Reader$Handler
co.apptailor.googlesignin.RNGoogleSigninModule: co.apptailor.googlesignin.PendingAuthRecovery pendingAuthRecovery
okhttp3.internal.http2.Hpack$Writer: int maxDynamicTableByteCount
com.facebook.react.bridge.ReactContext: void assertOnJSQueueThread()
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants NATIVE_MODULE_SETUP_END
org.jitsi.meet.sdk.R$dimen: int abc_dialog_padding_material
com.facebook.react.devsupport.DevServerHelper: java.lang.String getInspectorDeviceUrl()
com.facebook.drawee.view.DraweeView: void setImageResource(int)
org.webrtc.SoftwareVideoEncoderFactory: org.webrtc.VideoCodecInfo[] getSupportedCodecs()
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.audio.AudioDeviceModule audioDeviceModule
org.webrtc.SurfaceTextureHelper$3: void run()
com.facebook.react.devsupport.DevSupportManagerImpl$28: com.facebook.react.devsupport.DevSupportManagerImpl this$0
org.webrtc.PeerConnectionFactory$Options: int ADAPTER_TYPE_VPN
com.facebook.react.bridge.ModuleHolder
okhttp3.internal.huc.OutputStreamRequestBody: java.io.OutputStream outputStream()
org.webrtc.EglRenderer: void removeFrameListener(org.webrtc.EglRenderer$FrameListener)
com.horcrux.svg.R$id: int rn_redbox_report_label
com.facebook.react.fabric.Binding: void setPixelDensity(float)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1
org.jitsi.meet.R$color: int material_deep_teal_500
org.webrtc.NativeLibrary$DefaultLoader: boolean load(java.lang.String)
com.horcrux.svg.R$styleable: int ActionBar_title
com.horcrux.svg.R$color: int error_color_material_dark
com.facebook.drawee.view.DraweeView: android.graphics.drawable.Drawable getTopLevelDrawable()
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_30
org.jitsi.meet.sdk.net.NAT64AddrInfoModule: void getIPv6Address(java.lang.String,com.facebook.react.bridge.Promise)
org.webrtc.NetworkMonitorAutoDetect$NetworkState: int getUnderlyingNetworkSubtypeForVpn()
org.jitsi.meet.sdk.R$layout
org.jitsi.meet.R$layout: int activity_jitsi_meet
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: java.util.List getComponents()
okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)
org.jitsi.meet.sdk.RNConnectionService
com.facebook.react.devsupport.DevServerHelper$10: void onFailure(okhttp3.Call,java.io.IOException)
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundTopRight
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ActionBar_TabText
co.apptailor.googlesignin.RNGoogleSigninButtonViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.horcrux.svg.R$id: int title_template
com.horcrux.svg.RenderableView: void setStrokeDasharray(com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.sdk.R$dimen: int abc_action_bar_content_inset_material
com.facebook.react.devsupport.DevServerHelper: java.lang.String DEBUGGER_MSG_DISABLE
com.horcrux.svg.R$styleable: int DrawerArrowToggle_thickness
okhttp3.internal.http2.Http2Connection: boolean isShutdown()
org.webrtc.audio.WebRtcAudioRecord: boolean logActiveRecordingConfigs(int,java.util.List)
org.webrtc.ThreadUtils$2: void run()
com.facebook.common.references.SharedReference$NullReferenceException
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
okhttp3.Cache$Entry: void writeTo(okhttp3.internal.cache.DiskLruCache$Editor)
com.facebook.imagepipeline.memory.NativeMemoryChunk: byte nativeReadByte(long)
okio.Segment: okio.Segment push(okio.Segment)
com.facebook.react.devsupport.DevServerHelper: okhttp3.OkHttpClient mClient
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType EXS
org.jitsi.meet.R$drawable: int common_google_signin_btn_icon_dark_normal_background
org.webrtc.AndroidVideoDecoder$FrameInfo
com.facebook.react.devsupport.BundleDownloader$2: okhttp3.Response val$response
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: void stopSamplingProfiler(java.lang.String)
com.horcrux.svg.R$dimen: int notification_main_column_padding_top
com.facebook.react.bridge.ModuleHolder: ModuleHolder(com.facebook.react.module.model.ReactModuleInfo,javax.inject.Provider)
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void getAllKeys(com.facebook.react.bridge.Callback)
com.facebook.react.modules.blob.BlobModule
com.horcrux.svg.RenderableViewManager$RadialGradientManager: void onDropViewInstance(android.view.View)
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String access$300()
org.webrtc.NetworkMonitor: org.webrtc.NetworkMonitor getInstance()
org.webrtc.audio.WebRtcAudioTrack: void assertTrue(boolean)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString)
org.webrtc.NetworkMonitor: int androidSdkInt()
org.jitsi.meet.sdk.ConnectionService: ConnectionService()
com.reactnativecommunity.asyncstorage.AsyncStorageModule: void onHostDestroy()
kotlin.io.AccessDeniedException
com.horcrux.svg.VirtualView: android.graphics.RectF mClientRect
org.webrtc.PeerConnectionFactory: org.webrtc.PeerConnection createPeerConnection(java.util.List,org.webrtc.PeerConnection$Observer)
com.facebook.react.modules.core.Timing: void maybeSetChoreographerIdleCallback()
okio.RealBufferedSink: okio.BufferedSink writeUtf8(java.lang.String,int,int)
org.jitsi.meet.sdk.R$styleable: int MenuGroup_android_checkableBehavior
okhttp3.MultipartBody: long writeOrCountBytes(okio.BufferedSink,boolean)
org.webrtc.RtpTransceiver$RtpTransceiverDirection: RtpTransceiver$RtpTransceiverDirection(java.lang.String,int,int)
com.facebook.react.bridge.ReadableNativeMap: java.util.HashMap getLocalTypeMap()
org.webrtc.DataChannel$Observer: void onBufferedAmountChange(long)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ListView
org.jitsi.meet.R$raw: int lang_languagesru
org.webrtc.GlGenericDrawer$ShaderType: org.webrtc.GlGenericDrawer$ShaderType valueOf(java.lang.String)
okio.Okio$1: void close()
org.jitsi.meet.sdk.R$drawable: int abc_scrubber_primary_mtrl_alpha
org.jitsi.meet.sdk.R$attr: int roundedCornerRadius
org.jitsi.meet.R$attr: int seekBarStyle
org.jitsi.meet.sdk.R$styleable: int Toolbar_collapseIcon
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Small
org.webrtc.SurfaceTextureHelper: int textureHeight
org.webrtc.EglBase$ConfigBuilder: int openGlesVersion
com.horcrux.svg.R$style: int Theme_AppCompat_DayNight_NoActionBar
org.jitsi.meet.sdk.R$color: int abc_background_cache_hint_selector_material_light
okio.ByteString: int codePointIndexToCharIndex(java.lang.String,int)
org.jitsi.meet.sdk.JitsiMeetActivity: void onParticipantJoined(java.util.HashMap)
org.webrtc.MediaCodecWrapperFactory: org.webrtc.MediaCodecWrapper createByCodecName(java.lang.String)
com.horcrux.svg.R$anim: R$anim()
org.webrtc.EglRenderer$HandlerWithExceptionCallback: java.lang.Runnable exceptionCallback
com.horcrux.svg.PatternView: void setMinX(float)
com.facebook.react.modules.camera.ImageEditingManager: java.io.File getFileFromUri(android.content.Context,android.net.Uri)
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
okhttp3.Headers: java.lang.String get(java.lang.String)
org.jitsi.meet.R$attr: int retryImage
okhttp3.internal.http2.Settings: int[] values
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.NativeModuleCallExceptionHandler mNativeModuleCallExceptionHandler
org.webrtc.PeerConnection$ContinualGatheringPolicy: org.webrtc.PeerConnection$ContinualGatheringPolicy GATHER_CONTINUALLY
org.webrtc.RtpParameters$Codec: java.lang.Integer clockRate
com.horcrux.svg.PatternView: void setAlign(java.lang.String)
org.jitsi.meet.sdk.R$id: int info
org.webrtc.MediaConstraints: java.lang.String toString()
okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String,int,int)
com.facebook.react.views.view.ReactViewManager: java.lang.String getName()
com.google.android.gms.internal.measurement.zzcd$zzg: long zzl
com.facebook.react.devsupport.DevServerHelper: java.lang.String access$300(com.facebook.react.devsupport.DevServerHelper)
okio.ByteString: java.lang.String hex()
org.jitsi.meet.sdk.BroadcastAction: org.jitsi.meet.sdk.BroadcastAction$Type getType()
com.horcrux.svg.VirtualView: android.graphics.RectF mFillBounds
androidx.fragment.app.Fragment: void setReturnTransition(java.lang.Object)
com.google.android.gms.internal.measurement.zzcd$zzf: com.google.android.gms.internal.measurement.zzid zzc
org.webrtc.WrappedNativeI420Buffer: org.webrtc.VideoFrame$Buffer cropAndScale(int,int,int,int,int,int)
com.horcrux.svg.SvgViewManager: android.util.SparseArray mTagToSvgView
org.webrtc.EncodedImage: EncodedImage(java.nio.ByteBuffer,java.lang.Runnable,int,int,long,org.webrtc.EncodedImage$FrameType,int,java.lang.Integer)
com.horcrux.svg.RenderableViewManager$LineViewManager: RenderableViewManager$LineViewManager()
org.webrtc.VideoFileRenderer: void onFrame(org.webrtc.VideoFrame)
com.facebook.react.bridge.CatalystInstanceImpl: java.util.Collection getNativeModules()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)
com.google.android.gms.internal.measurement.zzcd$zzh: com.google.android.gms.internal.measurement.zzjp zzg
org.jitsi.meet.R$styleable: int SimpleDraweeView_progressBarImageScaleType
com.horcrux.svg.R$styleable: int AppCompatTheme_homeAsUpIndicator
org.jitsi.meet.R$drawable: int notification_bg_low_normal
org.jitsi.meet.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
org.jitsi.meet.R$styleable: int[] Spinner
org.webrtc.PeerConnection$PeerConnectionState: org.webrtc.PeerConnection$PeerConnectionState CONNECTING
org.webrtc.MediaStreamTrack$State: MediaStreamTrack$State(java.lang.String,int)
okio.AsyncTimeout: void timedOut()
com.facebook.react.devsupport.DevSupportManagerImpl$27: com.facebook.react.devsupport.DevSupportManagerImpl this$0
org.webrtc.PeerConnection: java.util.List nativeGetReceivers()
com.facebook.react.modules.intent.IntentModule: void getInitialURL(com.facebook.react.bridge.Promise)
org.jitsi.meet.R$attr: int buttonGravity
okhttp3.RealCall: okhttp3.Request request()
com.facebook.react.views.switchview.ReactSwitchManager: com.facebook.react.views.switchview.ReactSwitch createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.bridge.CatalystInstanceImpl$2: CatalystInstanceImpl$2(com.facebook.react.bridge.CatalystInstanceImpl)
okhttp3.Request$Builder: okhttp3.Request$Builder head()
org.webrtc.HardwareVideoEncoder: void requestKeyFrame(long)
org.jitsi.meet.R$anim: int abc_slide_in_bottom
org.webrtc.Camera2Session$CameraCaptureCallback: Camera2Session$CameraCaptureCallback(org.webrtc.Camera2Session$1)
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlexBasisAuto(long)
org.webrtc.GlShader: void release()
com.horcrux.svg.R$styleable: int SimpleDraweeView_progressBarImage
okhttp3.internal.ws.WebSocketReader: okio.Buffer messageFrameBuffer
org.webrtc.VideoFrame$TextureBuffer$Type: VideoFrame$TextureBuffer$Type(java.lang.String,int,int)
com.horcrux.svg.VirtualView: android.graphics.Matrix mCTM
com.horcrux.svg.SvgView: java.util.Map mDefinedMasks
com.horcrux.svg.TSpanView: void setContent(java.lang.String)
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorCallbackFuture: java.lang.String mResponse
com.facebook.react.devsupport.interfaces.DevSupportManager: void handleReloadJS()
org.webrtc.CryptoOptions$Builder: org.webrtc.CryptoOptions$Builder setEnableGcmCryptoSuites(boolean)
org.webrtc.ThreadUtils$1
org.webrtc.PeerConnectionFactory$ThreadInfo: org.webrtc.PeerConnectionFactory$ThreadInfo getCurrent()
okhttp3.internal.huc.OutputStreamRequestBody: void initOutputStream(okio.BufferedSink,long)
org.webrtc.PeerConnection: boolean startRtcEventLog(int,int)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Call call()
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: void setSendMomentumEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean)
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater()
org.jitsi.meet.sdk.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
org.jitsi.meet.sdk.R$attr: int tickMarkTint
com.horcrux.svg.R$dimen: int abc_text_size_display_2_material
com.facebook.react.modules.statusbar.StatusBarModule: java.util.Map getConstants()
org.jitsi.meet.R$id: int view_tag_native_id
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ListPopupWindow
com.horcrux.svg.R$id: int wrap_content
org.jitsi.meet.R$color: int abc_background_cache_hint_selector_material_light
okio.BufferedSource: long readLongLe()
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Tooltip
org.webrtc.VideoEncoderWrapper: boolean getScalingSettingsOn(org.webrtc.VideoEncoder$ScalingSettings)
org.jitsi.meet.sdk.R$drawable: int btn_checkbox_checked_to_unchecked_mtrl_animation
com.horcrux.svg.UseView: void setX(com.facebook.react.bridge.Dynamic)
org.webrtc.SurfaceViewRenderer: void setScalingType(org.webrtc.RendererCommon$ScalingType)
org.webrtc.SurfaceEglRenderer: int rotatedFrameWidth
org.jitsi.meet.R$styleable: int AppCompatTheme_alertDialogCenterButtons
com.dropbox.core.v2.sharing.ShareFolderErrorException
org.jitsi.meet.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
org.jitsi.meet.sdk.R$attr: int navigationIcon
org.jitsi.meet.sdk.R$id: int search_close_btn
timber.log.Timber$Tree: void w(java.lang.Throwable,java.lang.String,java.lang.Object[])
org.jitsi.meet.sdk.R$styleable: int DrawerArrowToggle_thickness
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_retryImage
org.jitsi.meet.sdk.R$dimen: int abc_action_bar_overflow_padding_start_material
okio.Buffer: okio.ByteString md5()
org.webrtc.VideoDecoder$Settings: int numberOfCores
org.webrtc.MediaStream: java.lang.String toString()
com.horcrux.svg.R$id: int src_in
com.horcrux.svg.R$dimen: int tooltip_precise_anchor_threshold
com.facebook.react.uimanager.ViewManager: java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper)
org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode
com.horcrux.svg.R$drawable: int abc_text_select_handle_left_mtrl_dark
androidx.appcompat.widget.ButtonBarLayout
com.horcrux.svg.R$color: int abc_tint_switch_track
com.horcrux.svg.R$string: int imagebutton_description
okhttp3.internal.http2.Http2Codec: void flushRequest()
org.webrtc.PeerConnectionFactory: void initializeFieldTrials(java.lang.String)
org.jitsi.meet.R$styleable: int MenuItem_actionViewClass
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA256
org.jitsi.meet.R$styleable: int ActionBar_contentInsetEnd
com.facebook.yoga.YogaNative: void jni_YGConfigSetLogger(long,java.lang.Object)
org.jitsi.meet.R$attr: int selectableItemBackgroundBorderless
com.horcrux.svg.R$layout: int abc_screen_toolbar
com.horcrux.svg.R$attr: int allowStacking
okhttp3.internal.huc.OkHttpsURLConnection: boolean getDoOutput()
org.jitsi.meet.sdk.R$attr: int iconifiedByDefault
com.facebook.react.bridge.ReactContext: com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class)
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
com.horcrux.svg.LineView: void setY1(com.facebook.react.bridge.Dynamic)
okhttp3.internal.connection.StreamAllocation: java.net.Socket releaseIfNoNewStreams()
androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)
org.webrtc.PeerConnection$AdapterType: org.webrtc.PeerConnection$AdapterType ADAPTER_TYPE_ANY
org.jitsi.meet.R$styleable: int SimpleDraweeView_fadeDuration
com.facebook.react.bridge.WritableNativeMap: void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray)
com.facebook.react.bridge.ReactMarker: void logMarker(java.lang.String,java.lang.String)
org.webrtc.WrappedNativeI420Buffer: int width
org.webrtc.GlGenericDrawer$ShaderType: GlGenericDrawer$ShaderType(java.lang.String,int)
com.facebook.react.modules.deviceinfo.DeviceInfoModule: void onHostPause()
com.horcrux.svg.R$layout: int abc_select_dialog_material
org.webrtc.EglBase14Impl: boolean hasSurface()
okhttp3.internal.http2.Hpack$Writer: int SETTINGS_HEADER_TABLE_SIZE
com.horcrux.svg.R$attr: int actionBarTabTextStyle
okhttp3.CipherSuite$1
org.jitsi.meet.sdk.DropboxModule
com.horcrux.svg.RenderableViewManager$LinearGradientManager: void setGradient(com.horcrux.svg.LinearGradientView,com.facebook.react.bridge.ReadableArray)
org.jitsi.meet.sdk.R$drawable: int abc_list_selector_background_transition_holo_dark
okhttp3.Headers: void checkValue(java.lang.String,java.lang.String)
com.facebook.react.views.textinput.ReactTextInputManager: void setTextAlignVertical(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder httpOnly()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ImageButton
org.jitsi.meet.R$styleable: int TextAppearance_fontFamily
com.horcrux.svg.R$styleable: int GradientColor_android_startX
com.dropbox.core.v2.auth.InvalidAccountTypeError: com.dropbox.core.v2.auth.InvalidAccountTypeError[] values()
com.horcrux.svg.R$styleable: int ActionBar_backgroundSplit
okhttp3.internal.http.CallServerInterceptor$CountingSink: void write(okio.Buffer,long)
org.webrtc.Histogram: Histogram(long)
com.facebook.react.devsupport.DisabledDevSupportManager: void setFpsDebugEnabled(boolean)
com.horcrux.svg.R$styleable: int GradientColor_android_startY
org.webrtc.EncodedImage$FrameType: org.webrtc.EncodedImage$FrameType VideoFrameDelta
org.webrtc.Logging$Severity: org.webrtc.Logging$Severity[] values()
com.reactnativecommunity.webview.RNCWebViewManager: void setupWebChromeClient(com.facebook.react.bridge.ReactContext,android.webkit.WebView)
org.webrtc.VideoFileRenderer: java.nio.ByteBuffer outputFrameBuffer
com.facebook.react.bridge.CatalystInstance: void destroy()
org.jitsi.meet.sdk.BroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorViewAlpha(int)
org.jitsi.meet.R$attr: int autoCompleteTextViewStyle
com.facebook.jni.MapIteratorHelper: java.util.Iterator mIterator
com.dropbox.core.v2.team.MembersSendWelcomeErrorException
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.security.Principal getLocalPrincipal()
androidx.fragment.app.Fragment: void unregisterForContextMenu(android.view.View)
org.jitsi.meet.R$string: int state_expanded_description
org.webrtc.PeerConnectionFactory: long nativeCreateLocalMediaStream(long,java.lang.String)
com.facebook.yoga.YogaNative: void jni_YGNodeClearChildren(long)
com.facebook.react.uimanager.NativeKind: com.facebook.react.uimanager.NativeKind[] values()
okhttp3.internal.connection.RealConnection
com.horcrux.svg.R$style: int Theme_ReactNative_AppCompat_Light_NoActionBar_FullScreen
okhttp3.internal.http2.Http2Connection$6: okhttp3.internal.http2.ErrorCode val$errorCode
org.webrtc.NetworkMonitorAutoDetect: org.webrtc.NetworkChangeDetector$Observer access$100(org.webrtc.NetworkMonitorAutoDetect)
com.facebook.react.bridge.DynamicFromArray: boolean isNull()
org.jitsi.meet.sdk.R$id: int async
com.horcrux.svg.R$anim: int abc_popup_exit
com.facebook.react.bridge.ReadableNativeArray
com.facebook.react.modules.share.ShareModule: void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void pushPromise(int,int,java.util.List)
com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void setListBytes(byte[],byte[])
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate
okio.Buffer: int readUtf8CodePoint()
org.jitsi.meet.R$styleable: int[] SwipeRefreshLayout
okhttp3.JavaNetCookieJar: JavaNetCookieJar(java.net.CookieHandler)
com.facebook.react.modules.i18nmanager.I18nManagerModule: void allowRTL(boolean)
com.horcrux.svg.R$styleable: int SwitchCompat_track
okhttp3.Cache: void update(okhttp3.Response,okhttp3.Response)
okhttp3.internal.huc.OkHttpURLConnection: void setRequestMethod(java.lang.String)
com.horcrux.svg.RenderableViewManager$PatternManager
androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)
okhttp3.Dispatcher: java.util.Deque runningAsyncCalls
com.horcrux.svg.R$dimen: int abc_dropdownitem_text_padding_right
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_actualImageScaleType
org.webrtc.RtpParameters$Codec
org.jitsi.meet.R$string: int abc_shareactionprovider_share_with
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.RealConnection connection
okio.GzipSink: okio.DeflaterSink deflaterSink
org.jitsi.meet.R$string: int app_name
com.facebook.react.modules.core.Timing: com.facebook.react.modules.core.Timing$IdleCallbackRunnable mCurrentIdleCallbackRunnable
org.webrtc.audio.WebRtcAudioTrack: int BITS_PER_SAMPLE
com.horcrux.svg.R$attr: int measureWithLargestChild
org.jitsi.meet.R$styleable: int SimpleDraweeView_progressBarAutoRotateInterval
com.facebook.soloader.SysUtil$LollipopSysdeps: void fallocateIfSupported(java.io.FileDescriptor,long)
org.webrtc.NV12Buffer: org.webrtc.RefCountDelegate refCountDelegate
org.jitsi.meet.R$raw: int lang_maineo
com.horcrux.svg.RenderableViewManager$MaskManager: void setMaskTransform(com.horcrux.svg.MaskView,com.facebook.react.bridge.ReadableArray)
com.facebook.react.devsupport.MultipartStreamReader
org.jitsi.meet.sdk.R: R()
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2: WebsocketJavaScriptExecutor$2(com.facebook.react.devsupport.WebsocketJavaScriptExecutor,com.facebook.react.devsupport.JSDebuggerWebSocketClient,android.os.Handler,com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback)
com.facebook.react.views.scroll.ReactScrollViewManager: void setSnapToStart(com.facebook.react.views.scroll.ReactScrollView,boolean)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] getLocalArray()
okio.Segment: void compact()
okhttp3.Route
com.facebook.react.views.viewpager.ReactViewPagerManager: java.lang.String getName()
androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)
com.facebook.react.modules.storage.AsyncStorageModule: com.facebook.react.modules.storage.ReactDatabaseSupplier access$100(com.facebook.react.modules.storage.AsyncStorageModule)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadImpl createForMainThread(java.lang.String,com.facebook.react.bridge.queue.QueueThreadExceptionHandler)
org.jitsi.meet.sdk.BroadcastEmitter: BroadcastEmitter(android.content.Context)
okhttp3.internal.http2.Http2Connection: Http2Connection(okhttp3.internal.http2.Http2Connection$Builder)
com.facebook.yoga.YogaNative
org.webrtc.ThreadUtils$4: java.lang.Void call()
org.webrtc.voiceengine.WebRtcAudioUtils: java.lang.String[] BLACKLISTED_NS_MODELS
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableMap asMap()
com.horcrux.svg.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
org.jitsi.meet.R$color: int abc_tint_edittext
org.jitsi.meet.R$id: int src_over
org.webrtc.SurfaceTextureHelper: org.webrtc.SurfaceTextureHelper create(java.lang.String,org.webrtc.EglBase$Context,boolean,org.webrtc.YuvConverter,org.webrtc.SurfaceTextureHelper$FrameRefMonitor)
okio.SegmentedByteString: okio.ByteString sha1()
okhttp3.internal.huc.OkHttpsURLConnection: long getDate()
com.horcrux.svg.R$id: int blocking
org.webrtc.GlGenericDrawer: org.webrtc.GlGenericDrawer$ShaderType currentShaderType
org.jitsi.meet.R$raw: int lang_mainzhtw
com.horcrux.svg.R$string: int radiogroup_description
org.webrtc.Camera2Session: boolean isCameraFrontFacing
okhttp3.internal.cache.DiskLruCache$Snapshot: okio.Source getSource(int)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: JitsiMeetConferenceOptions$Builder()
com.facebook.react.bridge.Arguments: com.facebook.react.bridge.WritableMap createMap()
androidx.fragment.app.Fragment: void onPause()
com.facebook.react.bridge.JSIModuleRegistry: com.facebook.react.bridge.JSIModule getModule(com.facebook.react.bridge.JSIModuleType)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_EMPTY_RENEGOTIATION_INFO_SCSV
com.facebook.react.bridge.Dynamic: com.facebook.react.bridge.ReadableType getType()
org.webrtc.Predicate$2
org.webrtc.DynamicBitrateAdjuster: void reportEncodedFrame(int)
org.webrtc.NetworkMonitorAutoDetect$WifiManagerDelegate: java.lang.String getWifiSSID()
com.horcrux.svg.R$attr: int ttcIndex
com.reactnativecommunity.asyncstorage.AsyncStorageModule: com.reactnativecommunity.asyncstorage.AsyncStorageModule$SerialExecutor executor
org.webrtc.PeerConnection: void setRemoteDescription(org.webrtc.SdpObserver,org.webrtc.SessionDescription)
com.horcrux.svg.R$styleable: int Toolbar_titleMargin
com.facebook.react.uimanager.BaseViewManager
org.jitsi.meet.R$id: int rn_frame_file
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
okhttp3.OkUrlFactory: java.lang.Object clone()
org.webrtc.EglRenderer$2: void run()
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_RC4_128_SHA
okhttp3.Address: int hashCode()
org.jitsi.meet.sdk.R$styleable: int ActionBar_title
com.facebook.react.bridge.ReadableNativeMap: void checkInstance(java.lang.String,java.lang.Object,java.lang.Class)
okhttp3.FormBody: okhttp3.MediaType CONTENT_TYPE
com.horcrux.svg.R$style: int Widget_AppCompat_ActionBar_TabBar
com.facebook.react.devsupport.JSDevSupport: JSDevSupport(com.facebook.react.bridge.ReactApplicationContext)
org.webrtc.PeerConnection$IceServer$Builder: java.lang.String password
com.facebook.react.devsupport.RedBoxDialog$4
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.facebook.react.bridge.ReadableNativeArray: int hashCode()
org.webrtc.EncodedImage$Builder: java.lang.Integer qp
com.facebook.react.modules.network.NetworkingModule: void removeRequest(int)
com.horcrux.svg.R$attr: int spinBars
com.oney.WebRTCModule.WebRTCModule: void peerConnectionSetLocalDescription(com.facebook.react.bridge.ReadableMap,int,com.facebook.react.bridge.Callback)
com.dropbox.core.v2.team.RevokeDeviceSessionErrorException
androidx.versionedparcelable.CustomVersionedParcelable
com.facebook.react.views.image.ReactImageView: void setTileMode(android.graphics.Shader$TileMode)
org.jitsi.meet.sdk.R$styleable: int FontFamilyFont_ttcIndex
okio.ByteString: java.lang.String base64()
com.facebook.react.views.slider.ReactSliderManager: java.lang.Class getShadowNodeClass()
com.horcrux.svg.R$string: int state_off_description
okhttp3.Cache$CacheRequestImpl: okhttp3.Cache this$0
org.jitsi.meet.R$style: int Base_Widget_AppCompat_ActionButton
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_Button
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.OkHttpClient client
org.webrtc.SessionDescription$Type: org.webrtc.SessionDescription$Type ANSWER
org.webrtc.GlShader: void useProgram()
org.jitsi.meet.sdk.BroadcastAction$Type: org.jitsi.meet.sdk.BroadcastAction$Type valueOf(java.lang.String)
co.apptailor.googlesignin.RNGoogleSigninModule: int REQUEST_CODE_RECOVER_AUTH
org.jitsi.meet.sdk.R$drawable: int abc_list_selector_disabled_holo_light
org.jitsi.meet.R$color: int background_material_dark
okhttp3.internal.http2.PushObserver$1: boolean onHeaders(int,java.util.List,boolean)
com.horcrux.svg.R$attr: int fontProviderAuthority
org.webrtc.PeerConnection$RTCConfiguration: boolean presumeWritableWhenFullyRelayed
org.jitsi.meet.sdk.R$style: int Base_Animation_AppCompat_DropDownUp
com.horcrux.svg.R$string: int abc_searchview_description_search
com.facebook.react.devsupport.DevSupportManagerImpl: void onReactInstanceDestroyed(com.facebook.react.bridge.ReactContext)
org.webrtc.VideoCodecStatus: org.webrtc.VideoCodecStatus UNINITIALIZED
com.horcrux.svg.R$id: int progress_horizontal
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_progressBarImage
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority valueOf(java.lang.String)
com.facebook.react.bridge.UiThreadUtil
org.jitsi.meet.sdk.R$styleable: int LoadingImageView_circleCrop
okhttp3.RequestBody$3: void writeTo(okio.BufferedSink)
okhttp3.internal.JavaNetHeaders$1: int compare(java.lang.String,java.lang.String)
com.facebook.react.views.slider.ReactSlider: void setMaxValue(double)
com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature[] values()
org.webrtc.GlShader
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
com.facebook.common.file.FileUtils$RenameException
org.jitsi.meet.sdk.AudioModeModule: java.lang.String userSelectedDevice
com.facebook.react.devsupport.DevSupportManagerImpl: void reload()
com.horcrux.svg.R$style: int Theme_AppCompat_DialogWhenLarge
org.webrtc.VideoFrameDrawer: VideoFrameDrawer()
com.google.android.gms.internal.measurement.zzca$zzb: com.google.android.gms.internal.measurement.zzid zzl
org.jitsi.meet.sdk.R$styleable: int Toolbar_collapseContentDescription
org.webrtc.AudioProcessingFactory: long createNative()
org.webrtc.PeerConnection$BundlePolicy: PeerConnection$BundlePolicy(java.lang.String,int)
com.horcrux.svg.R$styleable: int MenuItem_actionLayout
org.jitsi.meet.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
com.facebook.react.devsupport.DevSupportManagerImpl$2: com.facebook.react.devsupport.DevSupportManagerImpl this$0
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_drawableEnd
com.dropbox.core.RateLimitException
org.webrtc.ThreadUtils$ThreadChecker: ThreadUtils$ThreadChecker()
org.jitsi.meet.sdk.R$string: int menu_description
com.facebook.react.bridge.ReactMarker: void clearFabricMarkerListeners()
okhttp3.internal.http2.StreamResetException: okhttp3.internal.http2.ErrorCode errorCode
com.dropbox.core.v2.files.ListRevisionsErrorException
com.facebook.react.devsupport.InspectorPackagerConnection$Connection: boolean mSuppressConnectionErrors
com.facebook.yoga.YogaExperimentalFeature: com.facebook.yoga.YogaExperimentalFeature[] values()
com.facebook.react.bridge.ReadableType: com.facebook.react.bridge.ReadableType Array
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_RatingBar_Small
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
org.jitsi.meet.R$drawable: int common_google_signin_btn_text_dark
com.facebook.react.modules.core.Timing: android.util.SparseArray access$800(com.facebook.react.modules.core.Timing)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode getErrorCode()
org.jitsi.meet.R$string: int common_google_play_services_install_button
okhttp3.Cache: void abortQuietly(okhttp3.internal.cache.DiskLruCache$Editor)
okhttp3.CacheControl: okhttp3.CacheControl FORCE_NETWORK
org.jitsi.meet.sdk.R$styleable: int SwitchCompat_switchTextAppearance
org.jitsi.meet.sdk.R$id: int action_context_bar
okhttp3.Protocol: Protocol(java.lang.String,int,java.lang.String)
org.webrtc.PeerConnectionFactory$InitializationOptions: org.webrtc.NativeLibraryLoader nativeLibraryLoader
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
org.webrtc.VideoEncoder$CodecSpecificInfoVP9: VideoEncoder$CodecSpecificInfoVP9()
com.facebook.react.devsupport.DevSupportManagerImpl$JSExceptionLogger: DevSupportManagerImpl$JSExceptionLogger(com.facebook.react.devsupport.DevSupportManagerImpl)
org.jitsi.meet.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
com.google.android.gms.internal.measurement.zzbv$zze: boolean zzi
org.webrtc.Camera1Capturer
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_roundTopEnd
com.horcrux.svg.VirtualView: double fontSize
org.jitsi.meet.sdk.R$string: R$string()
com.horcrux.svg.R$id: int none
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule: java.lang.String getName()
org.webrtc.CameraCapturer: void switchCamera(org.webrtc.CameraVideoCapturer$CameraSwitchHandler)
okhttp3.RealCall: okhttp3.Request originalRequest
com.horcrux.svg.R$styleable: int MenuGroup_android_checkableBehavior
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.reflect.Method putMethod
org.jitsi.meet.sdk.R$dimen: int abc_button_padding_horizontal_material
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()
org.webrtc.VideoFrame: int rotation
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants DESTROY_CATALYST_INSTANCE_END
org.jitsi.meet.sdk.R$styleable: int[] ActionBarLayout
org.webrtc.SurfaceViewRenderer: void setFpsReduction(float)
org.jitsi.meet.sdk.R$dimen: int abc_edit_text_inset_top_material
org.webrtc.EglBase14Impl$Context: android.opengl.EGLContext egl14Context
org.webrtc.Camera1Session$2: void onPreviewFrame(byte[],android.hardware.Camera)
org.webrtc.NetworkMonitor: void removeNetworkObserver(org.webrtc.NetworkMonitor$NetworkObserver)
androidx.fragment.app.Fragment: float mPostponedAlpha
com.horcrux.svg.R$string: int abc_menu_meta_shortcut_label
com.horcrux.svg.RenderableViewManager$ImageViewManager: void setOpacity(android.view.View,float)
com.facebook.react.modules.core.ExceptionsManagerModule: java.lang.String NAME
com.facebook.react.devsupport.DevSupportManagerImpl: void showNewJSError(java.lang.String,com.facebook.react.bridge.ReadableArray,int)
org.webrtc.Camera2Enumerator
androidx.viewpager.widget.ViewPager: void setScrollState(int)
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)
okhttp3.HttpUrl: java.lang.String queryParameterValue(int)
org.webrtc.PeerConnectionFactory: void printInternalStackTraces(boolean)
org.webrtc.SurfaceViewRenderer: org.webrtc.RendererCommon$RendererEvents rendererEvents
org.jitsi.meet.R$styleable: int AppCompatTextView_drawableLeftCompat
com.facebook.yoga.YogaNative: int jni_YGNodeStyleGetDisplay(long)
com.facebook.react.modules.core.Timing: java.util.PriorityQueue mTimers
org.jitsi.meet.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
com.reactnativecommunity.webview.RNCWebViewManager: java.util.Map getExportedCustomDirectEventTypeConstants()
org.jitsi.meet.R$drawable: int notification_bg_low
org.jitsi.meet.sdk.ParticipantsService: void onReceive(android.content.Context,android.content.Intent)
org.webrtc.PeerConnectionFactory$Options: int ADAPTER_TYPE_CELLULAR
com.horcrux.svg.SvgViewManager: void setColor(com.horcrux.svg.SvgView,java.lang.Integer)
okio.Buffer$UnsafeCursor: boolean readWrite
org.jitsi.meet.R$attr: int numericModifiers
org.jitsi.meet.R$styleable: int MenuItem_android_titleCondensed
com.horcrux.svg.R$styleable: int PopupWindow_android_popupAnimationStyle
okhttp3.internal.huc.OkHttpsURLConnection: void setInstanceFollowRedirects(boolean)
org.webrtc.audio.WebRtcAudioRecord: java.lang.String audioStateToString(int)
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
com.horcrux.svg.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
com.facebook.react.modules.appregistry.AppRegistry: void runApplication(java.lang.String,com.facebook.react.bridge.WritableMap)
org.webrtc.EglBase: void release()
org.webrtc.YuvHelper: void nativeI420ToNV12(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int)
com.facebook.react.devsupport.DevSupportManagerImpl$26: boolean val$isRemoteJSDebugEnabled
com.facebook.react.bridge.ReadableArray: int size()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_ListView_DropDown
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String[] findMatchingRule(java.lang.String[])
com.facebook.react.views.modal.ReactModalHostView: android.app.Dialog getDialog()
okhttp3.OkHttpClient$Builder: okhttp3.Dns dns
okhttp3.RealCall: boolean isCanceled()
okhttp3.internal.cache.CacheStrategy$Factory: long receivedResponseMillis
com.horcrux.svg.R$string: int abc_shareactionprovider_share_with_application
com.facebook.react.devsupport.BundleDownloader$BundleInfo: java.lang.String access$302(com.facebook.react.devsupport.BundleDownloader$BundleInfo,java.lang.String)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_textAppearanceListItem
com.facebook.react.modules.camera.ImageStoreManager: void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.bridge.ProxyJavaScriptExecutor: java.lang.String getName()
org.webrtc.HardwareVideoEncoder$BusyCount: void decrement()
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
org.webrtc.NativeAndroidVideoTrackSource: org.webrtc.VideoProcessor$FrameAdaptationParameters createFrameAdaptationParameters(int,int,int,int,int,int,long,boolean)
org.jitsi.meet.sdk.R$interpolator
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
okhttp3.internal.http2.Hpack$Reader: int nextHeaderIndex
com.facebook.react.bridge.ReadableNativeMap: com.facebook.react.bridge.ReadableMap getMap(java.lang.String)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.facebook.react.bridge.queue.NativeRunnable
org.jitsi.meet.sdk.ConnectionService: java.lang.String EXTRA_PHONE_ACCOUNT_HANDLE
okhttp3.internal.cache.DiskLruCache: boolean mostRecentRebuildFailed
org.webrtc.PeerConnection$KeyType: PeerConnection$KeyType(java.lang.String,int)
okio.RealBufferedSink: void flush()
org.jitsi.meet.R$styleable: int Toolbar_buttonGravity
org.jitsi.meet.R$color: int accent_material_dark
org.webrtc.audio.WebRtcAudioTrack: int initialBufferSizeInFrames
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_FLAG_CONTROL
com.facebook.react.bridge.queue.MessageQueueThreadImpl: void access$100(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long)
org.webrtc.voiceengine.WebRtcAudioUtils: boolean useWebRtcBasedNoiseSuppressor()
okhttp3.Request: okhttp3.CacheControl cacheControl()
com.facebook.react.devsupport.WebsocketJavaScriptExecutor: void access$000(com.facebook.react.devsupport.WebsocketJavaScriptExecutor,java.lang.String,com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback)
org.jitsi.meet.R$integer: int cancel_button_image_alpha
com.facebook.react.devsupport.DevSupportManagerImpl$4: com.facebook.react.bridge.ReadableArray val$details
org.jitsi.meet.sdk.R$drawable: int abc_ratingbar_material
com.facebook.react.modules.core.Timing: java.lang.Object mTimerGuard
org.webrtc.PeerConnection$PeerConnectionState: org.webrtc.PeerConnection$PeerConnectionState valueOf(java.lang.String)
com.facebook.react.bridge.JavaOnlyArray: com.facebook.react.bridge.ReadableType getType(int)
org.jitsi.meet.R$style: int Theme_ReactNative_AppCompat_Light_NoActionBar_FullScreen
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_toolbarStyle
org.webrtc.SurfaceTextureHelper: boolean hasPendingTexture
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JavaScriptModuleRegistry mJSModuleRegistry
org.webrtc.GlRectDrawer$ShaderCallbacks: void onNewShader(org.webrtc.GlShader)
com.facebook.react.devsupport.DevServerHelper$7: DevServerHelper$7(com.facebook.react.devsupport.DevServerHelper)
org.webrtc.PeerConnectionFactory: long nativeCreatePeerConnection(long,org.webrtc.PeerConnection$RTCConfiguration,org.webrtc.MediaConstraints,long,org.webrtc.SSLCertificateVerifier)
org.jitsi.meet.sdk.R$attr: int windowNoTitle
okhttp3.EventListener: EventListener()
org.webrtc.CameraCapturer$SwitchState: org.webrtc.CameraCapturer$SwitchState IDLE
org.webrtc.EglRenderer: void setMirror(boolean)
org.jitsi.meet.R$id: int tag_screen_reader_focusable
okhttp3.internal.platform.Jdk9Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
org.webrtc.EglBase14Impl: EglBase14Impl(android.opengl.EGLContext,int[])
org.jitsi.meet.R$string: int catalyst_inspector
okhttp3.Call: void cancel()
org.webrtc.Camera1Session: android.os.Handler access$1000(org.webrtc.Camera1Session)
com.google.android.gms.internal.measurement.zzcd$zzg: int zzag
com.horcrux.svg.R$attr: int tint
com.facebook.yoga.YogaNative: boolean jni_YGNodeIsDirty(long)
com.google.android.gms.internal.measurement.zzcd$zzk: int zzc
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
org.webrtc.PeerConnection$IceTransportsType: org.webrtc.PeerConnection$IceTransportsType NOHOST
com.oney.WebRTCModule.WebRTCModule: void mediaStreamTrackSetEnabled(java.lang.String,boolean)
org.webrtc.PeerConnectionFactory: long getNativePeerConnectionFactory()
org.jitsi.meet.R$style: int Base_Theme_AppCompat_DialogWhenLarge
com.facebook.react.modules.core.Timing: void maybeIdleCallback()
org.jitsi.meet.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
androidx.fragment.app.Fragment: void performDestroyView()
org.jitsi.meet.sdk.R$style: int Platform_V25_AppCompat_Light
com.facebook.react.modules.storage.AsyncStorageModule: com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor executor
org.webrtc.VideoFileRenderer
com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatusProvider: com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatus getBundleStatus()
okio.Sink: void flush()
okhttp3.CertificatePinner$Builder: java.util.List pins
org.webrtc.EncodedImage$FrameType: int getNative()
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
com.facebook.react.bridge.JavaMethodWrapper$9: com.facebook.react.bridge.Callback extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
com.facebook.react.devsupport.DevSupportManagerImpl$JSExceptionLogger: DevSupportManagerImpl$JSExceptionLogger(com.facebook.react.devsupport.DevSupportManagerImpl,com.facebook.react.devsupport.DevSupportManagerImpl$1)
org.jitsi.meet.sdk.PictureInPictureModule: java.util.Map getConstants()
org.jitsi.meet.sdk.WiFiStatsModule: void getWiFiStats(com.facebook.react.bridge.Promise)
com.facebook.react.modules.permissions.PermissionsModule: PermissionsModule(com.facebook.react.bridge.ReactApplicationContext)
org.webrtc.PeerConnection$RTCConfiguration: java.lang.String turnLoggingId
com.facebook.react.bridge.CatalystInstanceImpl$1: CatalystInstanceImpl$1(com.facebook.react.bridge.CatalystInstanceImpl)
com.horcrux.svg.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request
okhttp3.Cache$2
org.jitsi.meet.sdk.R$color: int abc_search_url_text
com.facebook.yoga.YogaNative: void jni_YGNodeStyleSetFlex(long,float)
com.dropbox.core.v2.sharing.GetSharedLinkFileErrorException
com.facebook.react.uimanager.LayoutShadowNode: void setMargins(int,com.facebook.react.bridge.Dynamic)
okhttp3.internal.Util: java.lang.String canonicalizeHost(java.lang.String)
com.calendarevents.CalendarEvents: android.net.Uri eventUriAsSyncAdapter(android.net.Uri,java.lang.String,java.lang.String)
androidx.fragment.app.Fragment: java.lang.Object getSharedElementEnterTransition()
okhttp3.internal.huc.OutputStreamRequestBody: okhttp3.Request prepareToSendRequest(okhttp3.Request)
androidx.fragment.app.Fragment: java.lang.Object USE_DEFAULT_TRANSITION
com.facebook.react.devsupport.DevSupportManagerImpl$20
org.jitsi.meet.sdk.R$attr: int actionModeWebSearchDrawable
com.facebook.react.bridge.ReadableNativeMap$1
com.horcrux.svg.R$drawable: int abc_text_select_handle_right_mtrl_light
org.jitsi.meet.R$style: int TextAppearance_AppCompat_SearchResult_Title
org.jitsi.meet.R$id: int dialog_button
com.horcrux.svg.R$dimen: int abc_control_corner_material
com.facebook.react.modules.core.HeadlessJsTaskSupportModule: void notifyTaskFinished(int)
com.facebook.react.bridge.queue.MessageQueueThreadImpl: java.lang.String mAssertionErrorMessage
com.facebook.react.devsupport.BundleDownloader$2: void onChunkComplete(java.util.Map,okio.Buffer,boolean)
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_SearchResult
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ListView_Menu
com.horcrux.svg.SvgViewManager: void setBbHeight(com.horcrux.svg.SvgView,com.facebook.react.bridge.Dynamic)
org.jitsi.meet.R$attr: int roundTopRight
com.horcrux.svg.R$attr: int roundBottomEnd
com.facebook.react.uimanager.LayoutShadowNode: void setOverflow(java.lang.String)
com.dropbox.core.v2.sharing.RemoveFolderMemberErrorException
org.jitsi.meet.sdk.JavaScriptSandboxModule
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getAndroidIdSync()
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setRy(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
org.jitsi.meet.sdk.ReactPackageAdapter: java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext)
com.facebook.react.bridge.JavaOnlyArray: java.util.List mBackingList
org.webrtc.FileVideoCapturer: void startCapture(int,int,int)
okhttp3.ResponseBody$BomAwareReader: java.nio.charset.Charset charset
com.ocetnik.timer.BackgroundTimerModule: android.os.PowerManager$WakeLock wakeLock
com.facebook.react.bridge.JSIModuleProvider
com.facebook.react.modules.core.Timing: void onHostPause()
okhttp3.internal.http2.Http2Stream$FramingSource: Http2Stream$FramingSource(okhttp3.internal.http2.Http2Stream,long)
com.zmxv.RNSound.RNSoundModule: java.lang.Boolean wasPlayingBeforeFocusChange
okio.Buffer: void skip(long)
org.webrtc.RtpTransceiver$RtpTransceiverDirection: int getNativeIndex()
com.google.gson.reflect.TypeToken: int hashCode
org.jitsi.meet.R$styleable: int AlertDialog_showTitle
org.jitsi.meet.sdk.AndroidSettingsModule: void open(com.facebook.react.bridge.Promise)
org.jitsi.meet.sdk.R$styleable: int SearchView_searchHintIcon
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.NetEqFactoryFactory neteqFactoryFactory
com.facebook.react.bridge.Inspector$RemoteConnection: void onMessage(java.lang.String)
okhttp3.internal.connection.ConnectionSpecSelector
org.webrtc.EncodedImage: java.lang.Integer qp
org.jitsi.meet.R$attr: int dropDownListViewStyle
org.jitsi.meet.R$bool
com.facebook.react.devsupport.DevServerHelper: java.lang.String mPackageName
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzn
org.jitsi.meet.sdk.R$layout: int abc_action_mode_bar
okhttp3.Cookie: java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionButtonStyle
org.webrtc.PeerConnectionFactory: void dispose()
com.facebook.react.views.view.ReactViewManager: void handleSetPressed(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray)
okio.GzipSource: void consumeTrailer()
org.jitsi.meet.sdk.R$raw: int lang_languagessk
org.jitsi.meet.sdk.R$attr: int windowActionModeOverlay
com.facebook.react.views.textinput.ReactTextInputManager: void setSecureTextEntry(com.facebook.react.views.textinput.ReactEditText,boolean)
org.jitsi.meet.sdk.R$styleable: int SwitchCompat_track
com.horcrux.svg.R$styleable: int AppCompatTheme_colorButtonNormal
okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)
org.webrtc.audio.WebRtcAudioRecord: boolean enableBuiltInNS(boolean)
com.facebook.react.views.view.ReactViewManager: void nextFocusUp(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator
okhttp3.Response: okhttp3.ResponseBody body()
org.jitsi.meet.sdk.R$style: int SplashScreen_Fullscreen
org.jitsi.meet.sdk.R$color: int abc_secondary_text_material_dark
org.webrtc.CameraCapturer$9
com.facebook.react.bridge.JavaMethodWrapper$8: com.facebook.react.bridge.ReadableMap extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ActivityChooserView
com.facebook.react.views.scroll.ReactScrollViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.jitsi.meet.sdk.ParticipantsService: void retrieveParticipantsInfo(org.jitsi.meet.sdk.ParticipantsService$ParticipantsInfoCallback)
com.facebook.react.modules.toast.ToastModule: java.lang.String DURATION_SHORT_KEY
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants JAVASCRIPT_EXECUTOR_FACTORY_INJECT_START
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getInstallerPackageNameSync()
org.webrtc.RtpTransceiver: void checkRtpTransceiverExists()
org.webrtc.PeerConnectionFactory: PeerConnectionFactory(long)
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActivityChooserView
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler: java.lang.Class mModuleInterface
com.facebook.react.bridge.JavaOnlyMap: void putDouble(java.lang.String,double)
com.facebook.react.uimanager.UIManagerModule: void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager: int[] SPACING_TYPES
okhttp3.internal.http2.Http2Reader$ContinuationSource: long read(okio.Buffer,long)
com.facebook.react.bridge.JSBundleLoader$2
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.jni.HybridData initHybrid()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder certificatePinner(okhttp3.CertificatePinner)
org.jitsi.meet.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
org.webrtc.CameraCapturer: void createCameraSession(org.webrtc.CameraSession$CreateSessionCallback,org.webrtc.CameraSession$Events,android.content.Context,org.webrtc.SurfaceTextureHelper,java.lang.String,int,int,int)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
com.horcrux.svg.MarkerView
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_MD5
okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()
com.horcrux.svg.R$style: int SpinnerDatePickerDialog
org.webrtc.JniHelper: java.lang.Object getStringClass()
org.webrtc.YuvConverter$1
com.facebook.react.bridge.GuardedAsyncTask: GuardedAsyncTask(com.facebook.react.bridge.ReactContext)
okhttp3.internal.cache.DiskLruCache: java.io.File getDirectory()
org.webrtc.WrappedNativeVideoDecoder: long createNativeVideoDecoder()
org.webrtc.ThreadUtils
org.jitsi.meet.sdk.R$string: int alert_description
org.jitsi.meet.sdk.JitsiMeetActivityInterface: void requestPermissions(java.lang.String[],int,com.facebook.react.modules.core.PermissionListener)
com.facebook.react.bridge.ReadableNativeArray: java.lang.Object[] importArray()
okhttp3.internal.io.FileSystem$1: FileSystem$1()
com.facebook.react.views.viewpager.ReactViewPagerManager: void setPeekEnabled(com.facebook.react.views.viewpager.ReactViewPager,boolean)
org.webrtc.CapturerObserver: void onFrameCaptured(org.webrtc.VideoFrame)
com.horcrux.svg.SvgView: int reactTagForTouch(float,float)
org.webrtc.EglRenderer$FrameListenerAndParams
com.ocetnik.timer.BackgroundTimerModule: java.lang.Runnable runnable
okhttp3.internal.huc.OkHttpURLConnection: void connect()
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
com.learnium.RNDeviceInfo.RNDeviceModule: void getPhoneNumber(com.facebook.react.bridge.Promise)
okhttp3.Cookie: long expiresAt()
org.jitsi.meet.R$id: int withText
org.jitsi.meet.R$id: int buttonPanel
com.facebook.react.modules.network.NetworkingModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.JSCallInvokerHolderImpl getJSCallInvokerHolder()
com.horcrux.svg.R$attr: int actionMenuTextColor
okhttp3.FormBody: java.util.List encodedNames
okhttp3.Cache$Entry: okhttp3.Headers responseHeaders
org.webrtc.EglBase10Impl: void checkIsNotReleased()
com.horcrux.svg.R$dimen: int notification_large_icon_height
com.horcrux.svg.R$styleable: int FontFamilyFont_ttcIndex
org.webrtc.audio.WebRtcAudioRecord: byte[] emptyBytes
org.webrtc.FileVideoCapturer$VideoReader: void close()
com.horcrux.svg.TextProperties$TextPathMidLine: com.horcrux.svg.TextProperties$TextPathMidLine valueOf(java.lang.String)
org.webrtc.VideoEncoderFactory: org.webrtc.VideoEncoder createEncoder(org.webrtc.VideoCodecInfo)
org.jitsi.meet.R$dimen: int abc_control_inset_material
org.jitsi.meet.R$attr: int fontProviderFetchTimeout
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
org.jitsi.meet.R$id: int uniform
com.facebook.react.bridge.JSCJavaScriptExecutorFactory: java.lang.String mDeviceName
org.jitsi.meet.R$id: int search_voice_btn
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter getAdapter()
org.webrtc.PeerConnectionDependencies$Builder: PeerConnectionDependencies$Builder(org.webrtc.PeerConnection$Observer)
okhttp3.internal.huc.DelegatingHttpsURLConnection: void setReadTimeout(int)
org.jitsi.meet.R$drawable: int abc_seekbar_thumb_material
org.webrtc.voiceengine.WebRtcAudioTrack
okhttp3.MultipartBody$Part: MultipartBody$Part(okhttp3.Headers,okhttp3.RequestBody)
org.jitsi.meet.R$id: int action_bar_spinner
com.learnium.RNDeviceInfo.RNDeviceModule: com.learnium.RNDeviceInfo.RNInstallReferrerClient installReferrerClient
okhttp3.internal.cache.DiskLruCache: DiskLruCache(okhttp3.internal.io.FileSystem,java.io.File,int,int,long,java.util.concurrent.Executor)
org.jitsi.meet.R$styleable: int FontFamilyFont_android_font
org.webrtc.EglRenderer: org.webrtc.RendererCommon$GlDrawer drawer
org.jitsi.meet.sdk.R$styleable: int SimpleDraweeView_roundWithOverlayColor
com.horcrux.svg.R$layout: int abc_list_menu_item_checkbox
com.facebook.react.devsupport.DevInternalSettings: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)
okhttp3.CacheControl: boolean mustRevalidate
org.webrtc.StatsReport$Value: StatsReport$Value(java.lang.String,java.lang.String)
org.jitsi.meet.sdk.JitsiMeetFragment
com.horcrux.svg.TextProperties$AlignmentBaseline: com.horcrux.svg.TextProperties$AlignmentBaseline valueOf(java.lang.String)
androidx.lifecycle.SavedStateHandleController$OnRecreation: SavedStateHandleController$OnRecreation()
com.horcrux.svg.R$attr: int progressBarImage
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
org.webrtc.CameraCapturer$9: org.webrtc.CameraCapturer this$0
okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0
com.reactnativecommunity.webview.RNCWebViewManager: void setApplicationNameForUserAgent(android.webkit.WebView,java.lang.String)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
okio.GzipSource: java.util.zip.CRC32 crc
org.jitsi.meet.R$layout: int notification_template_part_time
com.facebook.react.modules.network.NetworkingModule: java.lang.String NAME
org.jitsi.meet.R$dimen: int abc_control_corner_material
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
org.webrtc.SurfaceViewRenderer: void release()
com.horcrux.svg.R$styleable: int[] MenuGroup
org.webrtc.VideoEncoder$ScalingSettings: VideoEncoder$ScalingSettings()
org.webrtc.VideoSource: void adaptOutputFormat(int,int,int)
com.facebook.react.uimanager.BaseViewManager: void setBorderRadius(android.view.View,float)
org.webrtc.IceCandidate: java.lang.String sdpMid
org.webrtc.NetworkMonitorAutoDetect: void destroy()
org.jitsi.meet.R$styleable: int GenericDraweeHierarchy_roundTopRight
com.facebook.react.modules.core.ExceptionsManagerModule
org.jitsi.meet.R$styleable: int[] SimpleDraweeView
com.horcrux.svg.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
org.webrtc.DataChannel: long nativeRegisterObserver(org.webrtc.DataChannel$Observer)
com.horcrux.svg.RenderableViewManager$ImageViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: java.lang.Runnable onAudioDeviceChangeRunner
org.webrtc.audio.VolumeLogger$LogVolumeTask: int maxRingVolume
org.webrtc.VideoDecoderWrapper
androidx.fragment.app.Fragment: void setMenuVisibility(boolean)
okio.BufferedSource: void require(long)
org.webrtc.CallSessionFileRotatingLogSink: void nativeDeleteSink(long)
org.jitsi.meet.R$id: int accessibility_custom_action_9
org.jitsi.meet.sdk.AudioModeModule$5: AudioModeModule$5(org.jitsi.meet.sdk.AudioModeModule,boolean)
okhttp3.internal.ws.RealWebSocket: boolean close(int,java.lang.String)
androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)
okhttp3.internal.cache.DiskLruCache$Snapshot: DiskLruCache$Snapshot(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,okio.Source[],long[])
org.jitsi.meet.sdk.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
org.webrtc.WrappedNativeVideoEncoder: boolean isHardwareEncoder()
org.webrtc.PeerConnectionFactory$Builder: org.webrtc.PeerConnectionFactory$Builder setFecControllerFactoryFactoryInterface(org.webrtc.FecControllerFactoryFactoryInterface)
org.webrtc.FecControllerFactoryFactoryInterface
com.facebook.react.uimanager.LayoutShadowNode: void setFlexDirection(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
okhttp3.ConnectionPool$1: ConnectionPool$1(okhttp3.ConnectionPool)
com.horcrux.svg.R$drawable: int abc_dialog_material_background
org.webrtc.JavaI420Buffer: int strideY
com.facebook.react.bridge.JavaMethodWrapper: com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] mArgumentExtractors
org.jitsi.meet.R$attr: int listPreferredItemPaddingStart
org.webrtc.RTCStatsReport: double getTimestampUs()
com.oney.WebRTCModule.WebRTCModule
org.webrtc.PeerConnection$IceGatheringState: org.webrtc.PeerConnection$IceGatheringState valueOf(java.lang.String)
org.jitsi.meet.R$attr: int expandActivityOverflowButtonDrawable
com.facebook.react.views.image.ReactImageView: void setControllerListener(com.facebook.drawee.controller.ControllerListener)
org.webrtc.EglBase10Impl: void swapBuffers(long)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String)
org.webrtc.HardwareVideoEncoderFactory: org.webrtc.VideoEncoder createEncoder(org.webrtc.VideoCodecInfo)
org.webrtc.GlTextureFrameBuffer: int pixelFormat
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
org.jitsi.meet.sdk.R$dimen: int compat_button_padding_vertical_material
com.horcrux.svg.R$layout: int redbox_view
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part)
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
androidx.activity.ComponentActivity: void access$001(androidx.activity.ComponentActivity)
com.horcrux.svg.R$attr: int contentInsetEnd
org.jitsi.meet.R$styleable: int[] LinearLayoutCompat
org.webrtc.AndroidVideoDecoder: java.lang.Object dimensionLock
com.facebook.react.devsupport.DevSupportManagerImpl$15
com.facebook.react.bridge.ReadableNativeArray: boolean getBoolean(int)
com.horcrux.svg.R$style: int Base_Widget_AppCompat_SeekBar
org.jitsi.meet.R$styleable: int AlertDialog_buttonIconDimen
com.facebook.react.bridge.JSIModuleHolder: JSIModuleHolder(com.facebook.react.bridge.JSIModuleSpec)
com.facebook.react.bridge.CatalystInstance: void runJSBundle()
okhttp3.MultipartBody: okhttp3.MediaType PARALLEL
org.jitsi.meet.sdk.R$color: int ripple_material_dark
org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStateCallback: void onWebRtcAudioTrackStart()
okhttp3.internal.ws.WebSocketWriter
org.webrtc.CameraCapturer$2: void onCameraClosed(org.webrtc.CameraSession)
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_backgroundImage
org.webrtc.GlGenericDrawer: java.lang.String genericFragmentSource
org.jitsi.meet.sdk.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
okhttp3.OkHttpClient: java.util.List networkInterceptors()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggerTimeout
org.jitsi.meet.sdk.R$styleable: int AppCompatTextHelper_android_drawableEnd
com.facebook.react.views.drawer.ReactDrawerLayoutManager: java.lang.String REACT_CLASS
org.webrtc.StatsReport: java.lang.String toString()
com.horcrux.svg.R$attr: int searchIcon
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
org.webrtc.audio.WebRtcAudioTrack: void access$800(org.webrtc.audio.WebRtcAudioTrack,java.lang.String)
org.webrtc.PeerConnection: java.util.List localStreams
okio.ByteString: void readObject(java.io.ObjectInputStream)
com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode
com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener: void onPackagerReloadCommand()
okhttp3.FormBody$Builder: FormBody$Builder(java.nio.charset.Charset)
org.webrtc.FileVideoCapturer$VideoReaderY4M: int frameHeight
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_pressedStateOverlayImage
org.webrtc.AndroidVideoDecoder: void deliverDecodedFrame()
org.webrtc.audio.WebRtcAudioRecord: boolean access$400(org.webrtc.audio.WebRtcAudioRecord)
okhttp3.WebSocketListener: void onClosing(okhttp3.WebSocket,int,java.lang.String)
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.DevLoadingViewController mDevLoadingViewController
com.google.android.gms.measurement.AppMeasurement: java.util.Map getUserProperties(java.lang.String,java.lang.String,boolean)
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule create()
org.jitsi.meet.sdk.incoming_call.IncomingCallViewListener: void onIncomingCallDeclined(java.util.Map)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
com.facebook.react.bridge.JavaMethodWrapper: java.lang.String getSignature()
org.jitsi.meet.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
okhttp3.internal.http2.Hpack$Reader: boolean isStaticHeader(int)
com.horcrux.svg.R$styleable: int MenuItem_android_onClick
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Button
org.webrtc.PeerConnection$SdpSemantics: org.webrtc.PeerConnection$SdpSemantics PLAN_B
org.webrtc.HardwareVideoEncoder: int keyFrameIntervalSec
org.webrtc.AndroidVideoDecoder: java.lang.String MEDIA_FORMAT_KEY_SLICE_HEIGHT
com.facebook.react.bridge.CallbackImpl: boolean mInvoked
org.webrtc.AndroidVideoDecoder: org.webrtc.EglBase$Context sharedContext
okhttp3.internal.http2.Http2Codec: Http2Codec(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http2.Http2Connection)
org.jitsi.meet.R$dimen: int abc_alert_dialog_button_bar_height
com.facebook.yoga.YogaNodeJNIBase: float[] arr
com.facebook.react.bridge.JavaOnlyMap$1: boolean hasNextKey()
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key
org.webrtc.Camera2Session$CameraCaptureCallback
org.jitsi.meet.sdk.R$id: int message
org.webrtc.ThreadUtils$1CaughtException
com.google.android.gms.internal.measurement.zzca$zza
com.horcrux.svg.R$color: int abc_btn_colored_text_material
org.webrtc.PeerConnectionFactory$InitializationOptions$Builder: java.lang.String nativeLibraryName
okhttp3.internal.huc.DelegatingHttpsURLConnection: java.net.URL getURL()
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_CompoundButton_CheckBox
com.facebook.react.ReactRootView: void setAppProperties(android.os.Bundle)
org.jitsi.meet.R$attr: int elevation
com.facebook.react.views.view.ReactViewManager: void nextFocusLeft(com.facebook.react.views.view.ReactViewGroup,int)
com.facebook.react.devsupport.JSCHeapCapture
okhttp3.internal.http1.Http1Codec$AbstractSource: long read(okio.Buffer,long)
org.jitsi.meet.R$styleable: int FontFamilyFont_android_fontVariationSettings
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Body2
com.facebook.react.modules.datepicker.DatePickerDialogModule: java.lang.String ACTION_DATE_SET
org.jitsi.meet.sdk.AudioModeModule: void setMode(int,com.facebook.react.bridge.Promise)
com.horcrux.svg.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
org.jitsi.meet.R$styleable: int MenuItem_actionLayout
org.jitsi.meet.sdk.R$styleable: int AppCompatTextView_drawableRightCompat
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager: java.lang.Object mCallerContext
org.webrtc.EglRenderer$HandlerWithExceptionCallback
org.webrtc.RtpParameters$DegradationPreference: org.webrtc.RtpParameters$DegradationPreference[] values()
org.jitsi.meet.R$styleable: int PopupWindow_android_popupBackground
com.facebook.react.modules.dialog.DialogModule: java.lang.String NAME
com.horcrux.svg.R$attr: int divider
org.jitsi.meet.R$id: int top
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_PACKAGES_START
com.horcrux.svg.R$attr: int colorPrimary
org.webrtc.CameraCapturer: boolean access$602(org.webrtc.CameraCapturer,boolean)
com.horcrux.svg.RenderableViewManager$SymbolManager: void setAlign(com.horcrux.svg.SymbolView,java.lang.String)
com.zmxv.RNSound.RNSoundModule: void release(java.lang.Double)
org.webrtc.RendererCommon$VideoLayoutMeasure
org.webrtc.RtpTransceiver$RtpTransceiverInit
org.jitsi.meet.R$style: int Theme_AppCompat_Light_DialogWhenLarge
com.calendarevents.CalendarEvents: void removeCalendar(java.lang.String,com.facebook.react.bridge.Promise)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.horcrux.svg.R$attr: int thumbTextPadding
com.facebook.react.modules.toast.ToastModule: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.toast.ToastModule)
org.webrtc.CameraSession$FailureType: org.webrtc.CameraSession$FailureType[] values()
org.jitsi.meet.R$attr: int trackTint
com.horcrux.svg.RenderableViewManager$UseViewManager: RenderableViewManager$UseViewManager()
org.jitsi.meet.sdk.R$styleable: int ActionBar_height
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_256_CBC_SHA
com.google.firebase.encoders.EncodingException
com.facebook.react.views.viewpager.ReactViewPagerManager: com.facebook.react.views.viewpager.ReactViewPager createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
com.facebook.react.views.textinput.ReactTextInputManager: void setFontWeight(com.facebook.react.views.textinput.ReactEditText,java.lang.String)
com.facebook.react.views.slider.ReactSliderManager: java.lang.String getName()
okhttp3.FormBody: java.util.List encodedValues
com.facebook.react.uimanager.BaseViewManager: double[] sTransformDecompositionArray
org.jitsi.meet.sdk.R$id: int adjust_width
org.jitsi.meet.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
com.facebook.react.devsupport.DevSupportManagerImpl$28: DevSupportManagerImpl$28(com.facebook.react.devsupport.DevSupportManagerImpl,boolean)
com.horcrux.svg.R$color: int material_deep_teal_200
com.facebook.react.views.text.ReactTextViewManager: boolean needsCustomLayoutForChildren()
org.webrtc.BuiltinAudioEncoderFactoryFactory: long nativeCreateBuiltinAudioEncoderFactory()
org.jitsi.meet.R$attr: int roundTopEnd
org.webrtc.Camera2Session: android.hardware.camera2.CameraDevice access$700(org.webrtc.Camera2Session)
org.jitsi.meet.sdk.R$styleable: int StateListDrawable_android_enterFadeDuration
com.facebook.react.modules.camera.ImageEditingManager: int COMPRESS_QUALITY
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
org.webrtc.VideoEncoderFallback: long nativeCreateEncoder(org.webrtc.VideoEncoder,org.webrtc.VideoEncoder)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.horcrux.svg.R$styleable: int ActionBar_height
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants PROCESS_CORE_REACT_PACKAGE_END
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorCallbackFuture: java.lang.String get()
org.jitsi.meet.sdk.R$id: int action_divider
org.jitsi.meet.R$styleable: int ActionBar_navigationMode
com.google.android.gms.common.SignInButton: void setSize(int)
com.facebook.react.common.futures.SimpleSettableFuture
com.horcrux.svg.R$styleable: int View_android_focusable
com.facebook.react.views.picker.ReactDropdownPickerManager: ReactDropdownPickerManager()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)
org.webrtc.PeerConnectionDependencies: org.webrtc.SSLCertificateVerifier sslCertificateVerifier
org.webrtc.Camera2Session$CameraCaptureCallback: Camera2Session$CameraCaptureCallback()
com.learnium.RNDeviceInfo.RNDeviceModule: void getPreviewSdkInt(com.facebook.react.bridge.Promise)
okhttp3.internal.huc.OkHttpURLConnection: java.io.IOException propagate(java.lang.Throwable)
org.webrtc.SurfaceTextureHelper$FrameRefMonitor: void onReleaseBuffer(org.webrtc.VideoFrame$TextureBuffer)
com.horcrux.svg.R$dimen: int abc_search_view_preferred_width
androidx.appcompat.widget.ViewStubCompat
com.rnimmersive.RNImmersiveModule: void emitImmersiveStateChangeEvent()
org.webrtc.EglBase14Impl: void release()
okio.Timeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
org.jitsi.meet.sdk.R$id: int accessibility_custom_action_26
org.jitsi.meet.sdk.WiFiStatsModule: java.util.concurrent.ExecutorService executor
com.facebook.react.modules.network.NetworkingModule: void sendRequest(java.lang.String,java.lang.String,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,int,boolean)
org.jitsi.meet.R$attr: int subMenuArrow
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Headline
org.webrtc.SurfaceTextureHelper: org.webrtc.SurfaceTextureHelper create(java.lang.String,org.webrtc.EglBase$Context,boolean)
com.learnium.RNDeviceInfo.RNDeviceModule: void getAvailableLocationProviders(com.facebook.react.bridge.Promise)
org.webrtc.CameraCapturer: org.webrtc.CameraCapturer$SwitchState access$100(org.webrtc.CameraCapturer)
org.webrtc.VideoFrame$I420Buffer: java.nio.ByteBuffer getDataV()
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
com.facebook.react.views.slider.ReactSliderManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder: org.jitsi.meet.sdk.JitsiMeetConferenceOptions$Builder setVideoMuted(boolean)
com.dropbox.core.v2.sharing.UpdateFolderPolicyErrorException
com.facebook.react.views.viewpager.ReactViewPagerManager: int getChildCount(com.facebook.react.views.viewpager.ReactViewPager)
org.jitsi.meet.R$id: int src_in
okhttp3.internal.cache2.Relay$RelaySource
com.google.android.gms.internal.measurement.zzci$zzb$zzb: com.google.android.gms.internal.measurement.zzci$zzb$zzb[] values()
com.facebook.react.views.view.ReactViewGroup: void dispatchSetPressed(boolean)
okhttp3.OkHttpClient: OkHttpClient()
okhttp3.internal.http2.Settings: int getHeaderTableSize()
okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.internal.http1.Http1Codec: okio.Sink createRequestBody(okhttp3.Request,long)
com.facebook.react.devsupport.DevServerHelper$4: com.facebook.react.devsupport.DevServerHelper this$0
okhttp3.Cache$CacheRequestImpl$1
com.horcrux.svg.R$attr: int fontVariationSettings
com.horcrux.svg.R$styleable: int Toolbar_collapseIcon
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
org.jitsi.meet.sdk.R$styleable: int Toolbar_contentInsetStartWithNavigation
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String[] PREVAILING_RULE
com.facebook.react.bridge.DynamicFromArray
org.jitsi.meet.sdk.R$styleable: int SearchView_queryHint
com.horcrux.svg.R$string: int state_expanded_description
com.horcrux.svg.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
okio.BufferedSink: okio.BufferedSink write(byte[])
okhttp3.internal.Util: java.util.Map immutableMap(java.util.Map)
com.dropbox.core.v2.team.MembersListContinueErrorException
okio.BufferedSink: okio.BufferedSink writeHexadecimalUnsignedLong(long)
okhttp3.internal.huc.OkHttpURLConnection
org.webrtc.CameraCapturer: void access$1800(org.webrtc.CameraCapturer,int)
com.google.android.gms.internal.measurement.zzci$zzb: java.lang.String zze
org.webrtc.YuvConverter$ShaderCallbacks: YuvConverter$ShaderCallbacks(org.webrtc.YuvConverter$1)
okio.BufferedSource: long indexOfElement(okio.ByteString)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_actionModeStyle
org.jitsi.meet.sdk.R$raw: int lang_mainsc
okhttp3.internal.http2.Http2Codec: java.lang.String CONNECTION
com.facebook.jni.CpuCapabilitiesJni: boolean nativeDeviceSupportsVFPFP16()
okhttp3.internal.connection.RouteDatabase: RouteDatabase()
org.jitsi.meet.R$string: int catalyst_hot_reloading_auto_enable
com.horcrux.svg.R$styleable: int Toolbar_popupTheme
org.webrtc.PlatformSoftwareVideoDecoderFactory$1
okhttp3.internal.http2.Http2: byte TYPE_GOAWAY
org.jitsi.meet.sdk.R$styleable: int ActionBar_customNavigationLayout
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder value(java.lang.String)
org.webrtc.PeerConnection: boolean nativeAddIceCandidate(java.lang.String,int,java.lang.String)
com.horcrux.svg.R$styleable: int AppCompatTheme_borderlessButtonStyle
com.oney.WebRTCModule.WebRTCModule: void peerConnectionCreateOfferAsync(int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback)
org.webrtc.NetworkMonitorAutoDetect$SimpleNetworkCallback
org.webrtc.PeerConnection: void setAudioRecording(boolean)
com.facebook.react.views.text.ReactRawTextManager: com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance()
okio.SegmentedByteString: okio.ByteString hmacSha256(okio.ByteString)
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()
com.facebook.react.bridge.queue.MessageQueueThreadImpl: com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats()
com.horcrux.svg.MarkerView: void setVbWidth(float)
okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String)
com.horcrux.svg.R$styleable: int AppCompatTextView_drawableBottomCompat
org.webrtc.Camera1Capturer: void stopCapture()
okio.BufferedSink: okio.BufferedSink writeIntLe(int)
org.jitsi.meet.sdk.R$styleable: int ActionBar_contentInsetEndWithActions
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
okio.HashingSink: okio.HashingSink sha256(okio.Sink)
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_UPDATE_UI_MAIN_THREAD_END
com.facebook.react.devsupport.DevServerHelper$9: com.facebook.react.devsupport.DevServerHelper this$0
com.horcrux.svg.R$drawable: int abc_textfield_search_activated_mtrl_alpha
org.webrtc.audio.VolumeLogger: int TIMER_PERIOD_IN_SECONDS
com.facebook.react.modules.websocket.WebSocketModule: com.facebook.react.modules.network.ForwardingCookieHandler mCookieHandler
org.jitsi.meet.sdk.log.JitsiMeetLogger: void i(java.lang.Throwable)
org.jitsi.meet.R$attr: int fontVariationSettings
okhttp3.internal.http2.Http2Writer: int maxDataLength()
org.jitsi.meet.R$styleable: int AppCompatTheme_ratingBarStyleSmall
org.jitsi.meet.R$id: int unchecked
okhttp3.internal.cache.DiskLruCache: void readJournalLine(java.lang.String)
org.jitsi.meet.R$layout: int support_simple_spinner_dropdown_item
okhttp3.EventListener$1
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
okhttp3.Challenge: Challenge(java.lang.String,java.util.Map)
org.jitsi.meet.R$layout: int select_dialog_singlechoice_material
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Headers$Builder requestHeaders
com.facebook.react.devsupport.DevSupportManagerImpl$9
com.oney.WebRTCModule.WebRTCModule: WebRTCModule(com.facebook.react.bridge.ReactApplicationContext,com.oney.WebRTCModule.WebRTCModule$Options)
org.jitsi.meet.R$styleable: int ActionBar_displayOptions
com.facebook.react.views.switchview.ReactSwitchManager: void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
okhttp3.MultipartBody$Part: okhttp3.RequestBody body()
org.webrtc.Logging: boolean loggingEnabled
com.facebook.react.modules.deviceinfo.DeviceInfoModule: DeviceInfoModule(android.content.Context)
com.horcrux.svg.R$color: int bright_foreground_inverse_material_light
com.facebook.react.modules.fresco.FrescoModule: void onHostResume()
okhttp3.internal.http2.Header$Listener
com.facebook.react.devsupport.DevServerHelper: java.lang.String getSourceUrl(java.lang.String)
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory: void stopSamplingProfiler(java.lang.String)
okhttp3.Cookie: java.util.regex.Pattern MONTH_PATTERN
com.horcrux.svg.R$styleable: int GenericDraweeHierarchy_roundedCornerRadius
com.facebook.react.modules.camera.ImageStoreManager: com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.camera.ImageStoreManager)
org.webrtc.DataChannel: void close()
org.jitsi.meet.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
com.horcrux.svg.R$style: int TextAppearance_AppCompat_Title
org.jitsi.meet.R$style: int Widget_AppCompat_Button_Small
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants FABRIC_FINISH_TRANSACTION_START
org.jitsi.meet.sdk.net.NAT64AddrInfo: java.lang.String prefix
org.jitsi.meet.sdk.R$attr: int swipeRefreshLayoutProgressSpinnerBackgroundColor
com.google.android.gms.auth.GoogleAuthException: GoogleAuthException()
org.webrtc.VideoTrack: long getNativeVideoTrack()
com.horcrux.svg.SVGLength$UnitType: com.horcrux.svg.SVGLength$UnitType MM
com.google.android.gms.internal.measurement.zzcd$zzg: java.lang.String zzav
org.jitsi.meet.sdk.R$drawable: int abc_tab_indicator_mtrl_alpha
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
org.webrtc.EglRenderer$1: void run()
org.webrtc.NetworkChangeDetector$ConnectionType: NetworkChangeDetector$ConnectionType(java.lang.String,int)
com.horcrux.svg.RenderableViewManager$LineViewManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
okhttp3.RealCall$AsyncCall: java.lang.String host()
org.webrtc.PeerConnection$IceGatheringState: PeerConnection$IceGatheringState(java.lang.String,int)
com.facebook.react.bridge.queue.ReactQueueConfiguration: void destroy()
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.internal.URLFilter urlFilter
com.dropbox.core.json.JsonReader$FileLoadException
androidx.core.app.ComponentActivity: ComponentActivity()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserId(java.lang.String,long)
com.google.android.gms.internal.measurement.zzcd$zzg
org.webrtc.voiceengine.WebRtcAudioRecord: boolean microphoneMute
com.facebook.react.views.picker.ReactPickerManager: void onAfterUpdateTransaction(android.view.View)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
okhttp3.internal.NamedRunnable: NamedRunnable(java.lang.String,java.lang.Object[])
org.webrtc.ThreadUtils$4
org.jitsi.meet.R$styleable: int TextAppearance_android_shadowDx
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.turbomodule.core.interfaces.JSCallInvokerHolder getJSCallInvokerHolder()
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.horcrux.svg.R$drawable: int abc_ic_clear_material
org.webrtc.ScreenCapturerAndroid
org.jitsi.meet.sdk.R$color: int primary_material_light
com.horcrux.svg.R$id: int action_bar_spinner
com.facebook.react.devsupport.StackTraceHelper: java.util.regex.Pattern STACK_FRAME_PATTERN1
org.jitsi.meet.R$style: int TextAppearance_AppCompat_Small_Inverse
org.webrtc.PeerConnection$AdapterType: org.webrtc.PeerConnection$AdapterType UNKNOWN
com.horcrux.svg.R$string: int catalyst_perf_monitor
com.dropbox.core.DbxWebAuth$NotApprovedException
org.jitsi.meet.sdk.R$style: int Base_Widget_AppCompat_Toolbar
com.horcrux.svg.R$styleable: int AppCompatTextHelper_android_textAppearance
org.webrtc.PeerConnectionDependencies$Builder: org.webrtc.PeerConnection$Observer observer
org.jitsi.meet.sdk.R$attr: int seekBarStyle
com.google.android.gms.internal.measurement.zzcd$zzi: com.google.android.gms.internal.measurement.zzie zzc
org.webrtc.audio.WebRtcAudioRecord: int channelCountToConfiguration(int)
org.jitsi.meet.sdk.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_1
com.facebook.react.modules.network.NetworkingModule: void addRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler)
org.jitsi.meet.sdk.R$color: int abc_decor_view_status_guard_light
org.jitsi.meet.sdk.R$attr: int actionModeCutDrawable
com.facebook.react.modules.blob.BlobModule: com.facebook.react.modules.websocket.WebSocketModule getWebSocketModule()
com.horcrux.svg.R$id: int scrollIndicatorDown
okhttp3.internal.cache.InternalCache: void update(okhttp3.Response,okhttp3.Response)
org.webrtc.Camera1Session: org.webrtc.Histogram camera1StopTimeMsHistogram
org.jitsi.meet.sdk.ReactInstanceManagerHolder: java.util.List access$100(com.facebook.react.bridge.ReactApplicationContext)
org.jitsi.meet.R$styleable: int AppCompatImageView_tintMode
org.webrtc.Logging$Severity: org.webrtc.Logging$Severity LS_NONE
com.oney.WebRTCModule.WebRTCModule: void peerConnectionAddStream(java.lang.String,int)
com.google.android.gms.internal.measurement.zzlh: com.google.android.gms.internal.measurement.zzlh[] values()
org.jitsi.meet.sdk.R$attr: int homeLayout
org.webrtc.SurfaceTextureHelper: org.webrtc.SurfaceTextureHelper create(java.lang.String,org.webrtc.EglBase$Context)
org.webrtc.CameraEnumerationAndroid$CaptureFormat$FramerateRange: CameraEnumerationAndroid$CaptureFormat$FramerateRange(int,int)
org.jitsi.meet.sdk.R$style: int Base_V22_Theme_AppCompat_Light
okhttp3.Address: java.util.List protocols
androidx.fragment.app.FragmentActivity: void onResume()
com.facebook.react.views.modal.ReactModalHostManager: void onAfterUpdateTransaction(android.view.View)
org.jitsi.meet.sdk.R$layout: int abc_popup_menu_header_item_layout
com.facebook.react.devsupport.BundleDownloader$2: com.facebook.react.devsupport.interfaces.DevBundleDownloadListener val$callback
com.learnium.RNDeviceInfo.RNDeviceModule: java.lang.String getIpAddressSync()
okio.Sink: okio.Timeout timeout()
org.webrtc.RtpTransceiver$RtpTransceiverDirection: int nativeIndex
com.horcrux.svg.R$color: int abc_tint_edittext
org.jitsi.meet.sdk.R$color: int highlighted_text_material_dark
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
com.facebook.react.bridge.ReactBridge: boolean sDidInit
com.facebook.react.views.scroll.ReactScrollViewManager: void setShowsVerticalScrollIndicator(com.facebook.react.views.scroll.ReactScrollView,boolean)
androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
org.webrtc.NetworkPreference
com.facebook.react.bridge.ReactContext: boolean hasNativeModule(java.lang.Class)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder password(java.lang.String)
com.facebook.react.devsupport.RedBoxHandler: boolean isReportEnabled()
com.facebook.react.bridge.ModuleHolder: boolean isCxxModule()
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants GET_REACT_INSTANCE_MANAGER_START
androidx.fragment.app.Fragment: void onResume()
org.jitsi.meet.sdk.R$style: int Base_Theme_AppCompat_DialogWhenLarge
com.facebook.react.views.text.ReactTextAnchorViewManager: int[] SPACING_TYPES
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
org.jitsi.meet.sdk.R$drawable: int abc_seekbar_tick_mark_material
org.webrtc.audio.WebRtcAudioRecord: org.webrtc.audio.JavaAudioDeviceModule$SamplesReadyCallback audioSamplesReadyCallback
org.webrtc.VideoProcessor$FrameAdaptationParameters: int cropHeight
bolts.AggregateException
org.webrtc.voiceengine.WebRtcAudioEffects: boolean isNoiseSuppressorEffectAvailable()
okhttp3.Address: java.net.Proxy proxy
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Button_Colored
org.webrtc.RtpParameters$Codec: java.lang.Integer getClockRate()
com.facebook.react.modules.appstate.AppStateModule: void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback)
org.webrtc.VideoEncoderFactory: org.webrtc.VideoCodecInfo[] getImplementations()
org.webrtc.Camera2Capturer: boolean isScreencast()
org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate: void registerNetworkCallback(android.net.ConnectivityManager$NetworkCallback)
com.facebook.react.views.slider.ReactSliderManager: void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper)
com.horcrux.svg.R$styleable: int Toolbar_logo
okhttp3.internal.connection.StreamAllocation: boolean reportedAcquired
org.jitsi.meet.sdk.R$attr: int colorBackgroundFloating
com.dropbox.core.v2.files.UploadErrorException
com.horcrux.svg.RenderableViewManager$ImageViewManager: void onAfterUpdateTransaction(android.view.View)
okhttp3.RequestBody$2: byte[] val$content
okhttp3.internal.ws.RealWebSocket$Close: RealWebSocket$Close(int,okio.ByteString,long)
org.webrtc.CameraVideoCapturer$CameraStatistics: int CAMERA_OBSERVER_PERIOD_MS
com.horcrux.svg.R$dimen: int abc_button_padding_vertical_material
com.facebook.react.devsupport.InspectorPackagerConnection$Connection$1: void run()
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Title
com.facebook.react.uimanager.UIManagerModule: int resolveRootTagFromReactTag(int)
okhttp3.internal.huc.OkHttpURLConnection: java.lang.String getRequestProperty(java.lang.String)
okhttp3.CertificatePinner$Pin: java.lang.String canonicalHostname
org.jitsi.meet.sdk.AudioModeModule$AudioDeviceHandlerInterface: void setAudioRoute(java.lang.String)
com.horcrux.svg.R$style: int SpinnerTimePickerStyle
org.webrtc.Camera2Session: org.webrtc.CameraEnumerationAndroid$CaptureFormat access$800(org.webrtc.Camera2Session)
okhttp3.Cache: void flush()
com.horcrux.svg.R$dimen: int abc_action_bar_icon_vertical_padding_material
com.horcrux.svg.R$string: int image_description
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_ratingBarStyleSmall
okio.BufferedSource: okio.Buffer buffer()
com.facebook.react.devsupport.DevServerHelper: int HTTP_CONNECT_TIMEOUT_MS
com.horcrux.svg.RenderableViewManager$EllipseViewManager: void setCy(com.horcrux.svg.EllipseView,com.facebook.react.bridge.Dynamic)
com.facebook.react.bridge.WritableArray: void pushMap(com.facebook.react.bridge.ReadableMap)
org.webrtc.PeerConnectionFactory: void onNetworkThreadReady()
com.facebook.react.uimanager.ViewManager: ViewManager()
org.jitsi.meet.R$dimen: int abc_edit_text_inset_top_material
org.jitsi.meet.R$interpolator: int btn_radio_to_on_mtrl_animation_interpolator_0
com.facebook.react.devsupport.DevSupportManagerImpl$27: boolean val$isReloadOnJSChangeEnabled
org.webrtc.YuvConverter$ShaderCallbacks: void setPlaneY()
com.facebook.react.modules.statusbar.StatusBarModule: void setHidden(boolean)
okio.ByteString: int hashCode()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
okio.Buffer: void close()
com.facebook.react.views.text.ReactVirtualTextViewManager: void updateExtraData(android.view.View,java.lang.Object)
org.jitsi.meet.sdk.R$integer: int abc_config_activityShortDur
okhttp3.CertificatePinner: okio.ByteString sha1(java.security.cert.X509Certificate)
com.horcrux.svg.RenderableViewManager$PatternManager: void setHeight(com.horcrux.svg.PatternView,com.facebook.react.bridge.Dynamic)
org.jitsi.meet.R$style: int Widget_AppCompat_Light_ListView_DropDown
com.facebook.react.views.switchview.ReactSwitchManager: void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_NULL_SHA
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String,boolean)
org.jitsi.meet.sdk.R$styleable: int MenuView_android_itemIconDisabledAlpha
com.facebook.react.bridge.CatalystInstanceImpl: com.facebook.react.bridge.JSIModuleRegistry mJSIModuleRegistry
com.facebook.react.devsupport.interfaces.DevSupportManager: com.facebook.react.modules.debug.interfaces.DeveloperSettings getDevSettings()
org.webrtc.audio.WebRtcAudioUtils: boolean isVolumeFixed(android.media.AudioManager)
org.jitsi.meet.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
com.facebook.react.devsupport.DevSupportManagerImpl$17: DevSupportManagerImpl$17(com.facebook.react.devsupport.DevSupportManagerImpl)
com.google.android.gms.internal.measurement.zzcd$zzd: com.google.android.gms.internal.measurement.zzjp zzg
com.horcrux.svg.R$style: int Widget_AppCompat_Light_ActionBar_TabView
okio.Pipe$PipeSink: Pipe$PipeSink(okio.Pipe)
com.facebook.react.views.text.ReactRawTextManager: void updateExtraData(android.view.View,java.lang.Object)
org.jitsi.meet.sdk.AudioModeModule: java.lang.String DEVICE_HEADPHONES
org.jitsi.meet.sdk.JitsiMeetConferenceOptions: org.jitsi.meet.sdk.JitsiMeetUserInfo userInfo
com.oney.WebRTCModule.WebRTCModule: void createDataChannel(int,java.lang.String,com.facebook.react.bridge.ReadableMap)
okhttp3.Cookie$Builder: boolean secure
org.jitsi.meet.R$style: int Base_Widget_AppCompat_PopupMenu
org.webrtc.PeerConnection: void nativeCreateOffer(org.webrtc.SdpObserver,org.webrtc.MediaConstraints)
org.webrtc.PeerConnection$CandidateNetworkPolicy: org.webrtc.PeerConnection$CandidateNetworkPolicy ALL
org.jitsi.meet.sdk.ProximityModule$1
com.oney.WebRTCModule.WebRTCModule: void dataChannelSendAsync(int,int,java.lang.String,java.lang.String)
org.jitsi.meet.sdk.R$attr: int menu
org.jitsi.meet.sdk.R$id: int list_item
com.reactnativecommunity.webview.RNCWebViewManager: java.lang.String HTTP_METHOD_POST
org.jitsi.meet.R$drawable: int images_iconusers
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteDatabase routeDatabase
okio.AsyncTimeout$1: void close()
timber.log.Timber$Tree: void d(java.lang.String,java.lang.Object[])
org.webrtc.audio.WebRtcAudioRecord: void scheduleLogRecordingConfigurationsTask(android.media.AudioRecord)
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.packagerconnection.JSPackagerClient access$000(com.facebook.react.devsupport.DevServerHelper)
org.webrtc.CameraVideoCapturer$CameraEventsHandler: void onCameraClosed()
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink journalWriter
org.webrtc.EglBase$ConfigBuilder: boolean hasAlphaChannel
com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType
org.jitsi.meet.sdk.R$styleable: int GenericDraweeHierarchy_roundWithOverlayColor
com.horcrux.svg.R$attr: int queryBackground
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
okio.Buffer: java.lang.String readUtf8()
okhttp3.internal.http2.Http2Connection: java.util.Map streams
org.webrtc.VideoFrameDrawer: org.webrtc.VideoFrame lastI420Frame
org.webrtc.VideoEncoder$CodecSpecificInfoVP8
org.webrtc.CameraCapturer$1
org.jitsi.meet.sdk.R$id: int tag_transition_group
org.webrtc.MediaConstraints$KeyValuePair: boolean equals(java.lang.Object)
com.facebook.react.bridge.queue.MessageQueueThreadSpec: com.facebook.react.bridge.queue.MessageQueueThreadSpec MAIN_UI_SPEC
com.horcrux.svg.R$string: int catalyst_loading_from_url
okio.Source: okio.Timeout timeout()
com.facebook.react.bridge.WritableNativeArray: void pushNull()
com.facebook.react.devsupport.DevInternalSettings: java.lang.String PREFS_FPS_DEBUG_KEY
org.webrtc.SurfaceViewRenderer: void addFrameListener(org.webrtc.EglRenderer$FrameListener,float)
org.webrtc.audio.WebRtcAudioManager: int BITS_PER_SAMPLE
org.webrtc.RendererCommon$1
org.jitsi.meet.R$id: int italic
okhttp3.CertificatePinner: okio.ByteString sha256(java.security.cert.X509Certificate)
okhttp3.internal.http1.Http1Codec$ChunkedSource
co.apptailor.googlesignin.RNGoogleSigninModule: java.lang.String ERROR_USER_RECOVERABLE_AUTH
com.horcrux.svg.R$string: int abc_searchview_description_clear
org.jitsi.meet.sdk.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
okhttp3.HttpUrl$Builder: java.lang.String encodedPassword
org.jitsi.meet.sdk.R$styleable: int Toolbar_contentInsetEndWithActions
com.horcrux.svg.RenderableView: int VECTOR_EFFECT_NON_SCALING_STROKE
com.facebook.react.modules.image.ImageLoaderModule: void getSize(java.lang.String,com.facebook.react.bridge.Promise)
okhttp3.Cookie$Builder: java.lang.String name
org.webrtc.CryptoOptions$SFrame: org.webrtc.CryptoOptions this$0
org.webrtc.StatsReport: java.lang.String type
com.facebook.react.devsupport.DevSupportManagerImpl$24$1: void run()
com.facebook.react.views.picker.ReactPicker
okio.Buffer: okio.BufferedSink write(okio.Source,long)
com.horcrux.svg.R$attr: int failureImage
com.facebook.react.modules.core.Timing: void setChoreographerIdleCallback()
com.facebook.react.devsupport.DevServerHelper$8: void onResponse(okhttp3.Call,okhttp3.Response)
okio.Buffer: long readHexadecimalUnsignedLong()
org.jitsi.meet.R$style: int Widget_AppCompat_CompoundButton_Switch
org.jitsi.meet.sdk.R$dimen: int abc_cascading_menus_min_smallest_width
okhttp3.internal.huc.OkHttpURLConnection: okhttp3.Call buildCall()
com.facebook.react.devsupport.RedBoxDialog$StackAdapter$FrameViewHolder: RedBoxDialog$StackAdapter$FrameViewHolder(android.view.View,com.facebook.react.devsupport.RedBoxDialog$1)
com.horcrux.svg.RenderableViewManager$PatternManager: void setMinY(com.horcrux.svg.PatternView,float)
okhttp3.Request: boolean isHttps()
org.jitsi.meet.sdk.R$string: int catalyst_debug_chrome
org.jitsi.meet.R$styleable: int MenuGroup_android_orderInCategory
com.facebook.react.bridge.JavaMethodWrapper$10: int getJSArgumentsNeeded()
com.facebook.react.bridge.JSBundleLoader$4: java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate)
org.webrtc.EglBase: void createSurface(android.view.Surface)
org.jitsi.meet.sdk.R$style: int Theme_AppCompat_CompactMenu
okio.Buffer: okio.Buffer writeIntLe(int)
androidx.fragment.app.FragmentActivity: void onPostResume()
com.facebook.react.devsupport.DevServerHelper: com.facebook.react.devsupport.DevInternalSettings access$100(com.facebook.react.devsupport.DevServerHelper)
com.facebook.react.modules.dialog.DialogModule: void onHostPause()
androidx.fragment.app.Fragment: void callStartTransitionListener()
org.jitsi.meet.sdk.R$styleable: int MenuItem_actionLayout
org.jitsi.meet.sdk.R$style: int CalendarDatePickerDialog
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
okhttp3.internal.huc.OkHttpURLConnection: boolean executed
okio.Buffer: boolean isOpen()
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable: int mTotalFramesDropped
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder onlyIfCached()
com.horcrux.svg.R$styleable: int ActionBar_titleTextStyle
org.webrtc.voiceengine.WebRtcAudioTrack: boolean isVolumeFixed()
com.horcrux.svg.PatternView: void setMinY(float)
okhttp3.internal.http2.Http2Writer: boolean client
okhttp3.internal.tls.DistinguishedNameParser: char getUTF8()
org.webrtc.audio.WebRtcAudioEffects: java.util.UUID AOSP_ACOUSTIC_ECHO_CANCELER
okhttp3.internal.ws.WebSocketProtocol: int B1_FLAG_MASK
com.horcrux.svg.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.calendarevents.CalendarEvents: com.facebook.react.bridge.WritableNativeArray access$000(com.calendarevents.CalendarEvents)
okhttp3.internal.http1.Http1Codec$ChunkedSink: Http1Codec$ChunkedSink(okhttp3.internal.http1.Http1Codec)
org.jitsi.meet.sdk.R$style: int Theme_FullScreenDialog
org.webrtc.EncodedImage: long captureTimeNs
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])
org.webrtc.BaseBitrateAdjuster: int targetBitrateBps
com.facebook.react.bridge.WritableMap: void putDouble(java.lang.String,double)
com.facebook.react.devsupport.DevServerHelper$6: DevServerHelper$6(com.facebook.react.devsupport.DevServerHelper,com.facebook.react.devsupport.DevServerHelper$SymbolicationListener)
com.facebook.react.modules.appstate.AppStateModule: java.lang.String INITIAL_STATE
okhttp3.internal.http2.Http2Connection$3
com.horcrux.svg.VirtualView: java.lang.String mClipPath
com.horcrux.svg.R$styleable: int AlertDialog_listItemLayout
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1: com.facebook.react.common.futures.SimpleSettableFuture val$future
org.jitsi.meet.sdk.AudioDeviceHandlerGeneric: android.media.AudioDeviceCallback audioDeviceCallback
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
com.dropbox.core.DbxWebAuth$BadRequestException
com.google.android.gms.internal.measurement.zzbv$zzd
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_3DES_EDE_CBC_SHA
org.jitsi.meet.R$string: int catalyst_debug_chrome_stop
org.webrtc.HardwareVideoEncoderFactory$1: int[] $SwitchMap$org$webrtc$VideoCodecMimeType
org.jitsi.meet.R$dimen: int abc_action_button_min_height_material
com.dropbox.core.v2.team.ExcludedUsersListErrorException
okhttp3.internal.huc.OkHttpsURLConnection: void disconnect()
org.jitsi.meet.sdk.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
com.google.android.gms.internal.measurement.zzcd$zze: int zzc
com.horcrux.svg.R$styleable: int[] AppCompatTextHelper
com.facebook.yoga.YogaUnit: com.facebook.yoga.YogaUnit valueOf(java.lang.String)
okhttp3.internal.ws.WebSocketReader: boolean isControlFrame
org.jitsi.meet.sdk.OngoingNotification: void resetStartingtime()
com.facebook.react.devsupport.FpsView: int UPDATE_INTERVAL_MS
org.webrtc.Camera1Session: int NUMBER_OF_CAPTURE_BUFFERS
org.jitsi.meet.sdk.R$styleable: int Toolbar_contentInsetStart
okhttp3.FormBody
org.jitsi.meet.sdk.R$style: int Widget_AppCompat_Button
com.dropbox.core.v2.team.GroupsGetInfoErrorException
org.jitsi.meet.sdk.R$attr: int textAppearanceListItemSmall
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
okhttp3.internal.http1.Http1Codec$AbstractSource: long bytesRead
okio.Okio
com.facebook.react.bridge.ModuleHolder: com.facebook.react.bridge.NativeModule mModule
org.webrtc.CameraCapturer: org.webrtc.CapturerObserver access$500(org.webrtc.CameraCapturer)
org.jitsi.meet.R$styleable: int SearchView_goIcon
org.webrtc.PeerConnectionFactory: long nativeFactory
com.horcrux.svg.VirtualView: void clearParentCache()
org.jitsi.meet.sdk.R$styleable: int ActionBar_contentInsetRight
com.horcrux.svg.R$color: int abc_search_url_text_pressed
com.google.android.gms.internal.measurement.zzcd$zzj: com.google.android.gms.internal.measurement.zzjp zzg
okhttp3.internal.http2.Http2Stream: long bytesLeftInWriteWindow
okhttp3.internal.http2.Settings: int HEADER_TABLE_SIZE
com.facebook.react.devsupport.FpsView: void setCurrentFPS(double,double,int,int)
org.jitsi.meet.R$mipmap: int ic_launcher
com.facebook.react.devsupport.BundleDeltaClient$BundleDeltaNativeClient: BundleDeltaClient$BundleDeltaNativeClient(com.facebook.react.devsupport.BundleDeltaClient$1)
org.webrtc.audio.WebRtcAudioTrack: boolean access$600(org.webrtc.audio.WebRtcAudioTrack)
com.facebook.react.views.view.ReactViewGroup: float mBackfaceOpacity
com.horcrux.svg.R$style
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
com.facebook.react.uimanager.BaseViewManager: java.lang.String STATE_EXPANDED
com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener: void onPackagerDisconnected()
org.jitsi.meet.R$style: int Base_Animation_AppCompat_DropDownUp
okhttp3.internal.http2.Http2Connection$4: boolean val$inFinished
org.webrtc.DefaultVideoDecoderFactory
com.facebook.react.devsupport.interfaces.PackagerStatusCallback
org.jitsi.meet.sdk.R$styleable: int StateListDrawable_android_dither
org.webrtc.PeerConnection$RTCConfiguration: org.webrtc.PeerConnection$TcpCandidatePolicy tcpCandidatePolicy
com.horcrux.svg.R$styleable: int AppCompatTheme_actionBarTabTextStyle
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants CREATE_CATALYST_INSTANCE_START
com.horcrux.svg.R$id: int action_bar_activity_content
org.webrtc.WrappedNativeI420Buffer: java.nio.ByteBuffer getDataY()
com.horcrux.svg.RenderableViewManager$RectViewManager: void setX(com.horcrux.svg.RectView,com.facebook.react.bridge.Dynamic)
com.facebook.react.devsupport.interfaces.DevSupportManager: void isPackagerRunning(com.facebook.react.devsupport.interfaces.PackagerStatusCallback)
org.jitsi.meet.R$style: int Theme_Catalyst_RedBox
org.jitsi.meet.R$attr: int fontProviderPackage
com.facebook.react.modules.blob.FileReaderModule: java.lang.String getName()
com.facebook.react.views.drawer.ReactDrawerLayoutManager: ReactDrawerLayoutManager()
com.oney.WebRTCModule.RTCVideoViewManager: void setObjectFit(com.oney.WebRTCModule.WebRTCView,java.lang.String)
com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior: com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior[] values()
org.webrtc.SessionDescription$Type: org.webrtc.SessionDescription$Type PRANSWER
org.webrtc.Size: java.lang.String toString()
com.facebook.react.devsupport.DevSupportManagerImpl: com.facebook.react.devsupport.DevInternalSettings mDevSettings
okhttp3.internal.http2.Settings: int COUNT
okio.RealBufferedSink: okio.BufferedSink write(okio.ByteString)
org.jitsi.meet.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
com.google.android.gms.internal.measurement.zzif
org.jitsi.meet.R$dimen: int abc_disabled_alpha_material_dark
com.horcrux.svg.R$attr: int title
com.facebook.yoga.YogaNative: long jni_YGConfigNew()
okio.Sink: void write(okio.Buffer,long)
okhttp3.internal.ws.WebSocketProtocol: int PAYLOAD_SHORT
com.facebook.react.uimanager.RootViewManager: android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext)
org.jitsi.meet.sdk.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
org.webrtc.voiceengine.WebRtcAudioTrack: void reportWebRtcAudioTrackStartError(org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode,java.lang.String)
okhttp3.internal.Util: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)
com.facebook.react.devsupport.DevLoadingViewController: boolean sEnabled
org.jitsi.meet.sdk.R$styleable: int FontFamily_fontProviderQuery
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$1
org.jitsi.meet.sdk.R$color: int tooltip_background_dark
org.webrtc.MediaConstraints$KeyValuePair: java.lang.String key
org.jitsi.meet.sdk.R$style: int Base_TextAppearance_AppCompat_Subhead
org.jitsi.meet.R$string: int catalyst_reload
com.facebook.react.bridge.WritableMap
com.google.android.gms.common.api.UnsupportedApiCallException
com.horcrux.svg.R$style: int Widget_AppCompat_TextView_SpinnerItem
com.facebook.react.bridge.ReactMarkerConstants: com.facebook.react.bridge.ReactMarkerConstants SETUP_REACT_CONTEXT_END
com.facebook.react.bridge.JavaScriptModuleRegistry: com.facebook.react.bridge.JavaScriptModule getJavaScriptModule(com.facebook.react.bridge.CatalystInstance,java.lang.Class)
